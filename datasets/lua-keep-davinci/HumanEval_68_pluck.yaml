name: HumanEval_68_pluck
language: lua
prompt: "-- \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n-- your task is to pluck one of the nodes and return it.\n-- The\
  \ plucked node should be the node with the smallest even value.\n-- If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n-- The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n-- If there are no even values or the given array is empty, return [].\n\
  -- Example 1:\n-- Input: [4,2,3]\n-- Output: [2, 1]\n-- Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n-- Example 2:\n-- Input: [1,2,3]\n\
  -- Output: [2, 1]\n-- Explanation: 2 has the smallest even value, and 2 has the\
  \ smallest index. \n-- Example 3:\n-- Input: []\n-- Output: []\n-- Example 4:\n\
  -- Input: [5, 0, 3, 0, 4, 2]\n-- Output: [0, 1]\n-- Explanation: 0 is the smallest\
  \ value, but  there are two zeros,\n-- so we will choose the first zero, which has\
  \ the smallest index.\n-- Constraints:\n-- * 1 <= nodes.length <= 10000\n-- * 0\
  \ <= node.value\nlocal function pluck(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pluck\n\
  \    lu.assertEquals(candidate({4, 2, 3}), {2, 1})\n    lu.assertEquals(candidate({1,\
  \ 2, 3}), {2, 1})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({5,\
  \ 0, 3, 0, 4, 2}), {0, 1})\n    lu.assertEquals(candidate({1, 2, 3, 0, 5, 3}), {0,\
  \ 3})\n    lu.assertEquals(candidate({5, 4, 8, 4, 8}), {4, 1})\n    lu.assertEquals(candidate({7,\
  \ 6, 7, 1}), {6, 1})\n    lu.assertEquals(candidate({7, 9, 7, 1}), {})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["  local min = math.huge\n  local idx = 0\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, idx}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "    local min_even_value\
    \ = math.huge\n    local min_even_index = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even_value then\n            min_even_value\
    \ = v\n            min_even_index = i\n        end\n    end\n    if min_even_value\
    \ == math.huge then\n        return {}\n    else\n        return {min_even_value,\
    \ min_even_index}\n    end\nend", "    local min = math.huge\n    local min_idx\
    \ = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n\
    \            min = v\n            min_idx = i\n        end\n    end\n    if min_idx\
    \ == -1 then\n        return {}\n    else\n        return {min, min_idx}\n   \
    \ end\nend", "  local min_even_val = math.huge\n  local min_even_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_val then\n \
    \     min_even_val = v\n      min_even_idx = i\n    end\n  end\n  if min_even_val\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_val, min_even_idx}\n\
    \  end\nend", "    local min_even, min_even_idx = math.huge, math.huge\n    for\
    \ i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n      \
    \      min_even = v\n            min_even_idx = i\n        end\n    end\n    if\
    \ min_even == math.huge then\n        return {}\n    else\n        return {min_even,\
    \ min_even_idx}\n    end\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  else\n    return {min_even, min_even_idx}\n\
    \  end\nend", "  local min = math.huge\n  local min_i = math.huge\n  for i, v\
    \ in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n     \
    \ min_i = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  else\n\
    \    return {min, min_i}\n  end\nend", "    local min_even = math.huge\n    local\
    \ min_even_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 ==\
    \ 0 and v < min_even then\n            min_even = v\n            min_even_idx\
    \ = i\n        end\n    end\n    if min_even == math.huge then\n        return\
    \ {}\n    else\n        return {min_even, min_even_idx}\n    end\nend", "    local\
    \ min_even = math.huge\n    local min_even_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even then\n            min_even = v\n\
    \            min_even_idx = i\n        end\n    end\n    if min_even == math.huge\
    \ then\n        return {}\n    else\n        return {min_even, min_even_idx}\n\
    \    end\nend", "    local min = math.huge\n    local min_idx = -1\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min\
    \ = v\n            min_idx = i\n        end\n    end\n    if min_idx == -1 then\n\
    \        return {}\n    else\n        return {min, min_idx}\n    end\nend", " \
    \ local min_even, min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even, min_even_idx =\
    \ v, i\n    end\n  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\n\
    end", "    local min_even, min_even_idx = math.huge, math.huge\n    for i, v in\
    \ ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n            min_even\
    \ = v\n            min_even_idx = i\n        end\n    end\n    if min_even ==\
    \ math.huge then\n        return {}\n    else\n        return {min_even, min_even_idx}\n\
    \    end\nend", "    local min = math.huge\n    local min_idx = -1\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min\
    \ = v\n            min_idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    else\n        return {min, min_idx}\n    end\n\
    end", "  local min, min_idx\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n\
    \      if not min or v < min then\n        min = v\n        min_idx = i\n    \
    \  end\n    end\n  end\n  return min and {min, min_idx} or {}\nend", "    local\
    \ min_even_value = math.huge\n    local min_even_index = math.huge\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even_value then\n   \
    \         min_even_value = v\n            min_even_index = i\n        end\n  \
    \  end\n    if min_even_value == math.huge then\n        return {}\n    else\n\
    \        return {min_even_value, min_even_index}\n    end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "    local min, min_idx = math.huge, math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min, min_idx = v, i\n\
    \        end\n    end\n    return min == math.huge and {} or {min, min_idx}\n\
    end", "  local min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_index}\nend", "    local min_even, min_even_idx = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n\
    \            min_even = v\n            min_even_idx = i\n        end\n    end\n\
    \    if min_even == math.huge then\n        return {}\n    else\n        return\
    \ {min_even, min_even_idx}\n    end\nend", "    local min_even = math.huge\n \
    \   local min_even_idx = math.huge\n    for i, v in ipairs(arr) do\n        if\
    \ v % 2 == 0 and v < min_even then\n            min_even = v\n            min_even_idx\
    \ = i\n        end\n    end\n    if min_even == math.huge then\n        return\
    \ {}\n    else\n        return {min_even, min_even_idx}\n    end\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "  local min = math.huge\n  local\
    \ min_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v\
    \ < min then\n      min = v\n      min_index = i\n    end\n  end\n  if min ==\
    \ math.huge then\n    return {}\n  end\n  return {min, min_index}\nend", "  local\
    \ min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  else\n    return {min, min_idx}\n\
    \  end\nend", "    local min, min_index = math.huge, -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_index = i\n        end\n    end\n    if min == math.huge then\n       \
    \ return {}\n    else\n        return {min, min_index}\n    end\nend", "    local\
    \ min = math.huge\n    local index = 0\n    for i, v in ipairs(arr) do\n     \
    \   if v % 2 == 0 and v < min then\n            min = v\n            index = i\n\
    \        end\n    end\n    if min == math.huge then\n        return {}\n    else\n\
    \        return {min, index}\n    end\nend", "    local min = math.huge\n    local\
    \ min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min then\n            min = v\n            min_idx = i\n        end\n  \
    \  end\n    if min == math.huge then\n        return {}\n    end\n    return {min,\
    \ min_idx}\nend", "    local min, index = math.huge, math.huge\n    for i, v in\
    \ ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min, index\
    \ = v, i\n        end\n    end\n    return min == math.huge and {} or {min, index}\n\
    end", "    local min = math.huge\n    local index = -1\n    for i = 1, #arr do\n\
    \        if arr[i] % 2 == 0 and arr[i] < min then\n            min = arr[i]\n\
    \            index = i\n        end\n    end\n    if index == -1 then\n      \
    \  return {}\n    end\n    return {min, index}\nend", "  local min = math.huge\n\
    \  local idx = -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min\
    \ then\n      min = v\n      idx = i\n    end\n  end\n  if idx == -1 then\n  \
    \  return {}\n  else\n    return {min, idx}\n  end\nend", "    local min = math.huge\n\
    \    local idx = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min then\n            min = v\n            idx = i\n        end\n    end\n\
    \    if idx == -1 then\n        return {}\n    end\n    return {min, idx}\nend",
  "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "    local min = math.huge\n    local min_index = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_index = i\n        end\n    end\n    if min\
    \ == math.huge then\n        return {}\n    else\n        return {min, min_index}\n\
    \    end\nend", "    local min = math.huge\n    local min_index = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_index = i\n        end\n    end\n    if min\
    \ == math.huge then\n        return {}\n    else\n        return {min, min_index}\n\
    \    end\nend", "    local min_even_value, min_even_index = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even_value\
    \ then\n            min_even_value = v\n            min_even_index = i\n     \
    \   end\n    end\n    if min_even_value == math.huge then\n        return {}\n\
    \    else\n        return {min_even_value, min_even_index}\n    end\nend", " \
    \ local min, min_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n  \
    \  if v % 2 == 0 and v < min then\n      min, min_idx = v, i\n    end\n  end\n\
    \  return min == math.huge and {} or {min, min_idx}\nend", "    local smallest\
    \ = nil\n    local smallestIndex = nil\n    for i, v in ipairs(arr) do\n     \
    \   if v % 2 == 0 then\n            if smallest == nil or v < smallest then\n\
    \                smallest = v\n                smallestIndex = i\n           \
    \ end\n        end\n    end\n    if smallest == nil then\n        return {}\n\
    \    else\n        return {smallest, smallestIndex}\n    end\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min = math.huge\n \
    \   local idx = 0\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v\
    \ < min then\n            min = v\n            idx = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ idx}\n    end\nend", "  local min, min_idx = math.huge, math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min, min_idx\
    \ = v, i\n    end\n  end\n  return min == math.huge and {} or {min, min_idx}\n\
    end", "    local min = math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "    local min =\
    \ math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr) do\n        if\
    \ v % 2 == 0 and v < min then\n            min = v\n            min_idx = i\n\
    \        end\n    end\n    if min_idx == -1 then\n        return {}\n    else\n\
    \        return {min, min_idx}\n    end\nend", "  local min, min_idx = math.huge,\
    \ 0\n  for i,v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min,\
    \ min_idx = v, i\n    end\n  end\n  return min == math.huge and {} or {min, min_idx}\n\
    end", "    local min = math.huge\n    local index = 0\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  index = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, index}\nend", "    local min = math.huge\n   \
    \ local min_index = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_index = i\n  \
    \      end\n    end\n    if min == math.huge then\n        return {}\n    else\n\
    \        return {min, min_index}\n    end\nend", "    local min = math.huge\n\
    \    local index = 0\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min then\n            min = v\n            index = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    end\n    return {min, index}\n\
    end", "  local min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_index}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "    local min_even_value = math.huge\n\
    \    local min_even_index = math.huge\n    for i, v in ipairs(arr) do\n      \
    \  if v % 2 == 0 and v < min_even_value then\n            min_even_value = v\n\
    \            min_even_index = i\n        end\n    end\n    if min_even_value ==\
    \ math.huge then\n        return {}\n    else\n        return {min_even_value,\
    \ min_even_index}\n    end\nend", "    local min, min_index\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 then\n            if not min or v < min then\n   \
    \             min = v\n                min_index = i\n            end\n      \
    \  end\n    end\n    if min then\n        return {min, min_index}\n    else\n\
    \        return {}\n    end\nend", "    local min, min_idx = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min, min_idx = v, i\n        end\n    end\n    return min == math.huge\
    \ and {} or {min, min_idx}\nend", "    local min, min_idx = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min, min_idx = v, i\n        end\n    end\n    return min == math.huge\
    \ and {} or {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n\
    \            min = v\n            min_idx = i\n        end\n    end\n    if min_idx\
    \ == -1 then\n        return {}\n    else\n        return {min, min_idx}\n   \
    \ end\nend", "    local min = math.huge\n    local idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  idx = i\n        end\n    end\n    if idx == -1 then\n        return {}\n \
    \   end\n    return {min, idx}\nend", "    local min = math.huge\n    local min_index\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_index = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    end\n    return {min, min_index}\n\
    end", "  local min = math.huge\n  local min_index = -1\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min_index == -1 then\n    return {}\n  else\n    return\
    \ {min, min_index}\n  end\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for idx, val in ipairs(arr) do\n        if val % 2 == 0 and\
    \ val < min then\n            min = val\n            min_idx = idx\n        end\n\
    \    end\n    if min == math.huge then\n        return {}\n    else\n        return\
    \ {min, min_idx}\n    end\nend", "    local min = math.huge\n    local idx = 0\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    else\n        return {min, idx}\n    end\nend",
  "  local min = math.huge\n  local min_idx = -1\n  for i, v in ipairs(arr) do\n \
    \   if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min_idx == -1 then\n    return {}\n  else\n    return {min, min_idx}\n\
    \  end\nend", "    local min = math.huge\n    local idx = 0\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    else\n        return {min, idx}\n    end\nend", "    local min, min_idx\
    \ = math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 ==\
    \ 0 and v < min then\n            min, min_idx = v, i\n        end\n    end\n\
    \    return min == math.huge and {} or {min, min_idx}\nend", "    local min_even\
    \ = math.huge\n    local min_even_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even then\n            min_even = v\n\
    \            min_even_idx = i\n        end\n    end\n    if min_even == math.huge\
    \ then\n        return {}\n    else\n        return {min_even, min_even_idx}\n\
    \    end\nend", "    local min = math.huge\n    local min_idx = -1\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min\
    \ = v\n            min_idx = i\n        end\n    end\n    if min_idx == -1 then\n\
    \        return {}\n    else\n        return {min, min_idx}\n    end\nend", " \
    \   local min, idx\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n\
    \            if not min or v < min then\n                min = v\n           \
    \     idx = i\n            end\n        end\n    end\n    return min and {min,\
    \ idx} or {}\nend", "  local min, idx = math.huge, -1\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min, idx = v, i\n    end\n  end\n\
    \  return idx == -1 and {} or {min, idx}\nend", "    local min = math.huge\n \
    \   local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = -1\n    for i = 1, #arr do\n        if arr[i] % 2 == 0 and arr[i] < min then\n\
    \            min = arr[i]\n            min_idx = i\n        end\n    end\n   \
    \ if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ min_idx}\n    end\nend", "    local min = nil\n    local min_idx = nil\n   \
    \ for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n            if min ==\
    \ nil or v < min then\n                min = v\n                min_idx = i\n\
    \            end\n        end\n    end\n    if min == nil then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "    local min,\
    \ min_idx\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n      \
    \      if not min or v < min then\n                min = v\n                min_idx\
    \ = i\n            end\n        end\n    end\n    if min then\n        return\
    \ {min, min_idx}\n    else\n        return {}\n    end\nend", "    local min =\
    \ math.huge\n    local min_idx = -1\n    for i = 1, #arr do\n        if arr[i]\
    \ % 2 == 0 and arr[i] < min then\n            min = arr[i]\n            min_idx\
    \ = i\n        end\n    end\n    if min_idx == -1 then\n        return {}\n  \
    \  else\n        return {min, min_idx}\n    end\nend", "    local min, min_i =\
    \ math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0\
    \ and v < min then\n            min, min_i = v, i\n        end\n    end\n    if\
    \ min == math.huge then\n        return {}\n    end\n    return {min, min_i}\n\
    end", "    local min, min_idx = math.huge, -1\n    for i, v in ipairs(arr) do\n\
    \        if v % 2 == 0 and v < min then\n            min, min_idx = v, i\n   \
    \     end\n    end\n    return min_idx == -1 and {} or {min, min_idx}\nend", " \
    \ local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "    local min = math.huge\n    local idx = 0\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    else\n        return {min, idx}\n    end\nend", "  local\
    \ min, min_idx\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if\
    \ not min or v < min then\n        min = v\n        min_idx = i\n      end\n \
    \   end\n  end\n  return min and {min, min_idx} or {}\nend", "    local min, idx\
    \ = math.huge, 0\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v\
    \ < min then\n            min, idx = v, i\n        end\n    end\n    return min\
    \ == math.huge and {} or {min, idx}\nend", "  local min, idx = math.huge, -1\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min,\
    \ idx = v, i\n    end\n  end\n  return idx == -1 and {} or {min, idx}\nend", " \
    \ local min = math.huge\n  local index = 0\n  for i = 1, #arr do\n    if arr[i]\
    \ % 2 == 0 and arr[i] < min then\n      min = arr[i]\n      index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, index}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "    local min =\
    \ math.huge\n    local min_idx = 0\n    for i, v in ipairs(arr) do\n        if\
    \ v % 2 == 0 and v < min then\n            min = v\n            min_idx = i\n\
    \        end\n    end\n    if min == math.huge then\n        return {}\n    else\n\
    \        return {min, min_idx}\n    end\nend", "  local min = math.huge\n  local\
    \ min_i = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min\
    \ then\n      min = v\n      min_i = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_i}\nend", "  local min = math.huge\n\
    \  local minIndex = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < min then\n      min = v\n      minIndex = i\n    end\n  end\n  if min\
    \ == math.huge then\n    return {}\n  end\n  return {min, minIndex}\nend", " \
    \   local min = math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min_idx == -1 then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "    local min =\
    \ math.huge\n    local idx = 0\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            idx = i\n        end\n\
    \    end\n    if min == math.huge then\n        return {}\n    else\n        return\
    \ {min, idx}\n    end\nend", "    local min, min_i = math.huge, math.huge\n  \
    \  for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n      \
    \      min, min_i = v, i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_i}\nend", "    local min = math.huge\n\
    \    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min, min_i = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min, min_i = v, i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_i}\nend", "    local min, index\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n            if min\
    \ == nil or v < min then\n                min = v\n                index = i\n\
    \            end\n        end\n    end\n    return min and {min, index} or {}\n\
    end", "    local min = math.huge\n    local index = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  index = i\n        end\n    end\n    if index == -1 then\n        return {}\n\
    \    end\n    return {min, index}\nend", "    local min = math.huge\n    local\
    \ min_idx = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v <\
    \ min then\n            min = v\n            min_idx = i\n        end\n    end\n\
    \    if min_idx == -1 then\n        return {}\n    else\n        return {min,\
    \ min_idx}\n    end\nend", "    local min_even, min_index = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n\
    \            min_even = v\n            min_index = i\n        end\n    end\n \
    \   if min_even == math.huge then\n        return {}\n    else\n        return\
    \ {min_even, min_index}\n    end\nend", "    local min = math.huge\n    local\
    \ min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min then\n            min = v\n            min_idx = i\n        end\n  \
    \  end\n    if min == math.huge then\n        return {}\n    end\n    return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_i = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n   \
    \   min_i = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  end\n\
    \  return {min, min_i}\nend", "    local min_even_value = math.huge\n    local\
    \ min_even_index = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2\
    \ == 0 and v < min_even_value then\n            min_even_value = v\n         \
    \   min_even_index = i\n        end\n    end\n    if min_even_value == math.huge\
    \ then\n        return {}\n    else\n        return {min_even_value, min_even_index}\n\
    \    end\nend", "  local min, minIndex = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min, minIndex = v, i\n    end\n\
    \  end\n  return min == math.huge and {} or {min, minIndex}\nend", "    local\
    \ min = math.huge\n    local idx = 0\n    for i, v in ipairs(arr) do\n       \
    \ if v % 2 == 0 and v < min then\n            min = v\n            idx = i\n \
    \       end\n    end\n    if min == math.huge then\n        return {}\n    else\n\
    \        return {min, idx}\n    end\nend", "    local min_even = math.huge\n \
    \   local min_even_idx = math.huge\n    for i = 1, #arr do\n        if arr[i]\
    \ % 2 == 0 and arr[i] < min_even then\n            min_even = arr[i]\n       \
    \     min_even_idx = i\n        end\n    end\n    if min_even == math.huge then\n\
    \        return {}\n    else\n        return {min_even, min_even_idx}\n    end\n\
    end", "    local min = math.huge\n    local min_index = math.huge\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min\
    \ = v\n            min_index = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_index}\nend", "  local\
    \ min = math.huge\n  local idx = 0\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min then\n      min = v\n      idx = i\n    end\n  end\n  if min\
    \ == math.huge then\n    return {}\n  end\n  return {min, idx}\nend", "    local\
    \ min, min_idx\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n \
    \           if not min or v < min then\n                min = v\n            \
    \    min_idx = i\n            end\n        end\n    end\n    if min then\n   \
    \     return {min, min_idx}\n    else\n        return {}\n    end\nend", "  local\
    \ min = math.huge\n  local min_idx = -1\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n  end\n\
    \  if min_idx == -1 then\n    return {}\n  else\n    return {min, min_idx}\n \
    \ end\nend", "  local min = math.huge\n  local min_idx = -1\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min_idx == -1 then\n    return {}\n  else\n    return {min,\
    \ min_idx}\n  end\nend", "    local min, min_i = math.huge, math.huge\n    for\
    \ i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n           \
    \ min, min_i = v, i\n        end\n    end\n    if min == math.huge then\n    \
    \    return {}\n    end\n    return {min, min_i}\nend", "    local min = math.huge\n\
    \    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i,v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ min_idx}\n    end\nend", "    local min = math.huge\n    local min_idx = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_idx = i\n        end\n    end\n    if min ==\
    \ math.huge then\n        return {}\n    end\n    return {min, min_idx}\nend",
  "    local min = math.huge\n    local min_index = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_index = i\n        end\n    end\n    if min == math.huge then\n       \
    \ return {}\n    else\n        return {min, min_index}\n    end\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "    local min = math.huge\n    local idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  idx = i\n        end\n    end\n    if idx == -1 then\n        return {}\n \
    \   end\n    return {min, idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "    local min = math.huge\n    local index = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  index = i\n        end\n    end\n    if index == -1 then\n        return {}\n\
    \    else\n        return {min, index}\n    end\nend", "    local min = math.huge\n\
    \    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "    local min_even, min_index\n    for i, v in ipairs(arr) do\n       \
    \ if v % 2 == 0 then\n            if not min_even or v < min_even then\n     \
    \           min_even = v\n                min_index = i\n            end\n   \
    \     end\n    end\n    return min_even and {min_even, min_index} or {}\nend",
  "    local min_even_value, min_even_index\n    for i, v in ipairs(arr) do\n    \
    \    if v % 2 == 0 then\n            if not min_even_value or v < min_even_value\
    \ then\n                min_even_value = v\n                min_even_index = i\n\
    \            end\n        end\n    end\n    if min_even_value then\n        return\
    \ {min_even_value, min_even_index}\n    else\n        return {}\n    end\nend",
  "    local min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "  local min, idx = math.huge,\
    \ -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n     \
    \ min, idx = v, i\n    end\n  end\n  return idx == -1 and {} or {min, idx}\nend",
  "    local min = nil\n    local min_index = nil\n    for i, v in ipairs(arr) do\n\
    \        if v % 2 == 0 then\n            if min == nil or v < min then\n     \
    \           min = v\n                min_index = i\n            end\n        end\n\
    \    end\n    if min == nil then\n        return {}\n    else\n        return\
    \ {min, min_index}\n    end\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "    local min = math.huge\n    local min_idx = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_idx = i\n        end\n    end\n    if min ==\
    \ math.huge then\n        return {}\n    end\n    return {min, min_idx}\nend",
  "    local min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "  local min = math.huge\n  local\
    \ min_idx = -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_idx = i\n    end\n  end\n  if min_idx == -1 then\n \
    \   return {}\n  else\n    return {min, min_idx}\n  end\nend", "  local min_even\
    \ = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  else\n\
    \    return {min_even, min_even_idx}\n  end\nend", "    local min = math.huge\n\
    \    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n\
    \            min = v\n            min_idx = i\n        end\n    end\n    if min\
    \ == math.huge then\n        return {}\n    else\n        return {min, min_idx}\n\
    \    end\nend", "    local min = math.huge\n    local idx = -1\n    for i = 1,\
    \ #arr do\n        if arr[i] % 2 == 0 and arr[i] < min then\n            min =\
    \ arr[i]\n            idx = i\n        end\n    end\n    if idx == -1 then\n \
    \       return {}\n    else\n        return {min, idx}\n    end\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min, min_idx = math.huge,\
    \ math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min, min_idx = v, i\n        end\n    end\n    return min\
    \ == math.huge and {} or {min, min_idx}\nend", "    local min = math.huge\n  \
    \  local min_idx = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min then\n            min = v\n            min_idx = i\n        end\n  \
    \  end\n    if min_idx == -1 then\n        return {}\n    else\n        return\
    \ {min, min_idx}\n    end\nend", "    local min = math.huge\n    local min_index\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_index = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ min_index}\n    end\nend", "    local min = math.huge\n    local min_index =\
    \ math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_index = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ min_index}\n    end\nend", "  local smallest = math.huge\n  local smallest_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest\
    \ then\n      smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest\
    \ == math.huge then\n    return {}\n  else\n    return {smallest, smallest_index}\n\
    \  end\nend", "    local min = math.huge\n    local idx = 0\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    else\n        return {min, idx}\n    end\nend", "  local min = math.huge\n\
    \  local idx = -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min\
    \ then\n      min = v\n      idx = i\n    end\n  end\n  if idx == -1 then\n  \
    \  return {}\n  else\n    return {min, idx}\n  end\nend", "    local min_even,\
    \ min_even_idx = math.huge, math.huge\n    for i, v in ipairs(arr) do\n      \
    \  if v % 2 == 0 and v < min_even then\n            min_even = v\n           \
    \ min_even_idx = i\n        end\n    end\n    if min_even == math.huge then\n\
    \        return {}\n    else\n        return {min_even, min_even_idx}\n    end\n\
    end", "  local min_even_value = math.huge\n  local min_even_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend", "    local min = math.huge\n    local min_idx = math.huge\n    for\
    \ i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n           \
    \ min = v\n            min_idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_idx}\nend", "  local\
    \ min = math.huge\n  local min_i = math.huge\n  for i, v in ipairs(arr) do\n \
    \   if v % 2 == 0 and v < min then\n      min = v\n      min_i = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_i}\n\
    end", "    local min_even, min_even_idx = math.huge, math.huge\n    for i, v in\
    \ ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n            min_even\
    \ = v\n            min_even_idx = i\n        end\n    end\n    if min_even ==\
    \ math.huge then\n        return {}\n    else\n        return {min_even, min_even_idx}\n\
    \    end\nend", "    local min, index = math.huge, math.huge\n    for i, v in\
    \ ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min, index\
    \ = v, i\n        end\n    end\n    return min == math.huge and {} or {min, index}\n\
    end", "  local min, idx = math.huge, -1\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min then\n      min, idx = v, i\n    end\n  end\n  return\
    \ idx == -1 and {} or {min, idx}\nend", "    local min_even = math.huge\n    local\
    \ min_even_idx = -1\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and\
    \ v < min_even then\n            min_even = v\n            min_even_idx = i\n\
    \        end\n    end\n    if min_even_idx == -1 then\n        return {}\n   \
    \ else\n        return {min_even, min_even_idx}\n    end\nend", "    local min_even\
    \ = math.huge\n    local min_even_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even then\n            min_even = v\n\
    \            min_even_idx = i\n        end\n    end\n    if min_even == math.huge\
    \ then\n        return {}\n    else\n        return {min_even, min_even_idx}\n\
    \    end\nend", "    local min = math.huge\n    local min_idx = math.huge\n  \
    \  for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n      \
    \      min = v\n            min_idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_idx}\nend", "    local\
    \ min_even, min_even_idx = math.huge, math.huge\n    for i, v in ipairs(arr) do\n\
    \        if v % 2 == 0 and v < min_even then\n            min_even = v\n     \
    \       min_even_idx = i\n        end\n    end\n    if min_even == math.huge then\n\
    \        return {}\n    end\n    return {min_even, min_even_idx}\nend", "    local\
    \ even_idx = {}\n    local even_val = {}\n    for i, v in ipairs(arr) do\n   \
    \     if v % 2 == 0 then\n            even_idx[#even_idx + 1] = i\n          \
    \  even_val[#even_val + 1] = v\n        end\n    end\n    if #even_val == 0 then\n\
    \        return {}\n    end\n    local min_val = math.min(unpack(even_val))\n\
    \    local min_idx = even_idx[1]\n    for i, v in ipairs(even_val) do\n      \
    \  if v == min_val then\n            min_idx = even_idx[i]\n            break\n\
    \        end\n    end\n    return {min_val, min_idx}\nend", "    local min_even\
    \ = math.huge\n    local min_even_idx = -1\n    for i, v in ipairs(arr) do\n \
    \       if v % 2 == 0 and v < min_even then\n            min_even = v\n      \
    \      min_even_idx = i\n        end\n    end\n    if min_even_idx == -1 then\n\
    \        return {}\n    else\n        return {min_even, min_even_idx}\n    end\n\
    end", "    local min = math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min_idx == -1 then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "  local min, min_idx\
    \ = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and\
    \ v < min then\n      min, min_idx = v, i\n    end\n  end\n  return min == math.huge\
    \ and {} or {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "  local min = math.huge\n  local index = 0\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, index}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "    local min_even,\
    \ min_even_idx = math.huge, nil\n    for i, v in ipairs(arr) do\n        if v\
    \ % 2 == 0 and v < min_even then\n            min_even, min_even_idx = v, i\n\
    \        end\n    end\n    return min_even_idx and {min_even, min_even_idx} or\
    \ {}\nend", "  local min = math.huge\n  local min_i = math.huge\n  for i, v in\
    \ ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_i\
    \ = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  else\n   \
    \ return {min, min_i}\n  end\nend", "    local min = math.huge\n    local min_index\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_index = i\n        end\n    end\n\
    \    if min == math.huge then\n        return {}\n    else\n        return {min,\
    \ min_index}\n    end\nend", "    local min = math.huge\n    local min_idx = 0\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_idx = i\n        end\n    end\n    if min ==\
    \ math.huge then\n        return {}\n    else\n        return {min, min_idx}\n\
    \    end\nend", "    local min = math.huge\n    local min_i = -1\n    for i,v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_i = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    else\n        return {min, min_i}\n    end\nend", "  \
    \  local min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min = math.huge\n \
    \   local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "  local min = math.huge\n  local idx = -1\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min =\
    \ v\n      idx = i\n    end\n  end\n  if idx == -1 then\n    return {}\n  else\n\
    \    return {min, idx}\n  end\nend", "    local min_even, min_even_idx = math.huge,\
    \ math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even\
    \ then\n            min_even = v\n            min_even_idx = i\n        end\n\
    \    end\n    if min_even == math.huge then\n        return {}\n    end\n    return\
    \ {min_even, min_even_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "    local min = math.huge\n    local index = 0\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  index = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, index}\nend", "  local min, idx = math.huge, 0\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min,\
    \ idx = v, i\n    end\n  end\n  return min == math.huge and {} or {min, idx}\n\
    end", "    local min = math.huge\n    local minIndex = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            minIndex = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, minIndex}\nend", "    local min_even\
    \ = math.huge\n    local min_even_index = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even then\n            min_even = v\n\
    \            min_even_index = i\n        end\n    end\n    if min_even == math.huge\
    \ then\n        return {}\n    else\n        return {min_even, min_even_index}\n\
    \    end\nend", "    local min = math.huge\n    local min_idx = math.huge\n  \
    \  for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n      \
    \      min = v\n            min_idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_idx}\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min_even, min_even_idx\
    \ = math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 ==\
    \ 0 and v < min_even then\n            min_even = v\n            min_even_idx\
    \ = i\n        end\n    end\n    if min_even == math.huge then\n        return\
    \ {}\n    end\n    return {min_even, min_even_idx}\nend", "    local evens = {}\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n            table.insert(evens,\
    \ {v, i})\n        end\n    end\n    if #evens == 0 then\n        return {}\n\
    \    end\n    table.sort(evens, function(a, b)\n        if a[1] == b[1] then\n\
    \            return a[2] < b[2]\n        end\n        return a[1] < b[1]\n   \
    \ end)\n    return evens[1]\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "    local min = math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min_idx == -1 then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "    local min =\
    \ math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n \
    \       if v % 2 == 0 and v < min then\n            min = v\n            min_idx\
    \ = i\n        end\n    end\n    if min == math.huge then\n        return {}\n\
    \    end\n    return {min, min_idx}\nend", "  local min = math.huge\n  local min_index\
    \ = -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n   \
    \   min = v\n      min_index = i\n    end\n  end\n  if min_index == -1 then\n\
    \    return {}\n  else\n    return {min, min_index}\n  end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "    local min, minIndex = math.huge, math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min, minIndex = v, i\n\
    \        end\n    end\n    return min ~= math.huge and {min, minIndex} or {}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "    local min =\
    \ math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n \
    \       if v % 2 == 0 and v < min then\n            min = v\n            min_idx\
    \ = i\n        end\n    end\n    if min == math.huge then\n        return {}\n\
    \    end\n    return {min, min_idx}\nend", "    local min_even = math.huge\n \
    \   local min_even_idx = math.huge\n    for i, v in ipairs(arr) do\n        if\
    \ v % 2 == 0 and v < min_even then\n            min_even = v\n            min_even_idx\
    \ = i\n        end\n    end\n    if min_even == math.huge then\n        return\
    \ {}\n    else\n        return {min_even, min_even_idx}\n    end\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min, min_idx = math.huge,\
    \ math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min, min_idx = v, i\n        end\n    end\n    return min\
    \ == math.huge and {} or {min, min_idx}\nend", "    local min_even_val, min_even_idx\
    \ = math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 ==\
    \ 0 and v < min_even_val then\n            min_even_val = v\n            min_even_idx\
    \ = i\n        end\n    end\n    if min_even_val == math.huge then\n        return\
    \ {}\n    else\n        return {min_even_val, min_even_idx}\n    end\nend", " \
    \   local min = math.huge\n    local min_idx = -1\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min_idx == -1 then\n        return\
    \ {}\n    else\n        return {min, min_idx}\n    end\nend", "    local min =\
    \ math.huge\n    local min_index = math.huge\n    for i, v in ipairs(arr) do\n\
    \        if v % 2 == 0 and v < min then\n            min = v\n            min_index\
    \ = i\n        end\n    end\n    if min == math.huge then\n        return {}\n\
    \    else\n        return {min, min_index}\n    end\nend", "    local min = math.huge\n\
    \    local min_idx = math.huge\n    for i, v in ipairs(arr) do\n        if v %\
    \ 2 == 0 and v < min then\n            min = v\n            min_idx = i\n    \
    \    end\n    end\n    if min == math.huge then\n        return {}\n    end\n\
    \    return {min, min_idx}\nend", "    local min = math.huge\n    local min_idx\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min\
    \ then\n            min = v\n            min_idx = i\n        end\n    end\n \
    \   if min == math.huge then\n        return {}\n    end\n    return {min, min_idx}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "    local min,\
    \ min_idx = math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v\
    \ % 2 == 0 and v < min then\n            min, min_idx = v, i\n        end\n  \
    \  end\n    return min == math.huge and {} or {min, min_idx}\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "    local min = math.huge\n \
    \   local index = 0\n    for i = 1, #arr do\n        if arr[i] % 2 == 0 and arr[i]\
    \ < min then\n            min = arr[i]\n            index = i\n        end\n \
    \   end\n    if min == math.huge then\n        return {}\n    end\n    return\
    \ {min, index}\nend", "    local min = math.huge\n    local min_index = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_index = i\n        end\n    end\n    if min\
    \ == math.huge then\n        return {}\n    else\n        return {min, min_index}\n\
    \    end\nend", "  local min = math.huge\n  local index = 0\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      index = i\n   \
    \ end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ index}\nend", "    local min = math.huge\n    local min_index = math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min = v\n            min_index = i\n        end\n    end\n    if min\
    \ == math.huge then\n        return {}\n    else\n        return {min, min_index}\n\
    \    end\nend", "    local min_even, min_even_idx = math.huge, math.huge\n   \
    \ for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n  \
    \          min_even = v\n            min_even_idx = i\n        end\n    end\n\
    \    if min_even == math.huge then\n        return {}\n    else\n        return\
    \ {min_even, min_even_idx}\n    end\nend", "    local min, idx = math.huge, -1\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n    \
    \        min, idx = v, i\n        end\n    end\n    return idx > 0 and {min, idx}\
    \ or {}\nend", "    local min = math.huge\n    local index = -1\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            index = i\n        end\n    end\n    if index == -1 then\n  \
    \      return {}\n    else\n        return {min, index}\n    end\nend", "    local\
    \ min = math.huge\n    local min_idx = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_idx = i\n        end\n    end\n    if min == math.huge then\n        return\
    \ {}\n    end\n    return {min, min_idx}\nend", "  local min, idx = math.huge,\
    \ math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min, idx = v, i\n    end\n  end\n  return min == math.huge and {} or {min,\
    \ idx}\nend", "    local min = math.huge\n    local min_idx = math.huge\n    for\
    \ i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n           \
    \ min = v\n            min_idx = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_idx}\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

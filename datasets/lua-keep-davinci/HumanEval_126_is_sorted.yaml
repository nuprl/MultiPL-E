name: HumanEval_126_is_sorted
language: lua
prompt: "-- Given a list of numbers, return whether or not they are sorted\n-- in\
  \ ascending order. If list has more than 1 duplicate of the same\n-- number, return\
  \ False. Assume no negative numbers and only integers.\n-- Examples\n-- is_sorted([5])\
  \ \u279E True\n-- is_sorted([1, 2, 3, 4, 5]) \u279E True\n-- is_sorted([1, 3, 2,\
  \ 4, 5]) \u279E False\n-- is_sorted([1, 2, 3, 4, 5, 6]) \u279E True\n-- is_sorted([1,\
  \ 2, 3, 4, 5, 6, 7]) \u279E True\n-- is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279E False\n\
  -- is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n-- is_sorted([1, 2, 2, 2, 3, 4]) \u279E\
  \ False\nlocal function is_sorted(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_sorted\n\
  \    lu.assertEquals(candidate({5}), true)\n    lu.assertEquals(candidate({1, 2,\
  \ 3, 4, 5}), true)\n    lu.assertEquals(candidate({1, 3, 2, 4, 5}), false)\n   \
  \ lu.assertEquals(candidate({1, 2, 3, 4, 5, 6}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4, 5, 6, 7}), true)\n    lu.assertEquals(candidate({1, 3, 2, 4, 5, 6, 7}),\
  \ false)\n    lu.assertEquals(candidate({}), true)\n    lu.assertEquals(candidate({1}),\
  \ true)\n    lu.assertEquals(candidate({3, 2, 1}), false)\n    lu.assertEquals(candidate({1,\
  \ 2, 2, 2, 3, 4}), false)\n    lu.assertEquals(candidate({1, 2, 3, 3, 3, 4}), false)\n\
  \    lu.assertEquals(candidate({1, 2, 2, 3, 3, 4}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local sorted = true\n    for i = 1, #lst\
    \ - 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted = false\n \
    \           break\n        end\n    end\n    return sorted\nend", "    local sorted\
    \ = true\n    for i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n  \
    \          sorted = false\n            break\n        end\n    end\n    return\
    \ sorted\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n       \
    \ if lst[i] > lst[i + 1] then\n            sorted = false\n            break\n\
    \        end\n    end\n    return sorted\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n\
    \            sorted = false\n            break\n        end\n    end\n    return\
    \ sorted\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] <= last then\n      return false\n    end\n    last = lst[i]\n\
    \  end\n  return true\nend", "    local last = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v < last then\n            return false\n        end\n      \
    \  last = v\n    end\n    return true\nend", "  local sorted = true\n  local last\
    \ = 0\n  for _, v in ipairs(lst) do\n    if v < last then\n      sorted = false\n\
    \      break\n    end\n    last = v\n  end\n  return sorted\nend", "  local sorted\
    \ = true\n  for i = 1, #lst - 1 do\n    if lst[i] > lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "  local sorted = true\n  local prev = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] < prev then\n      sorted = false\n      break\n    end\n    prev\
    \ = lst[i]\n  end\n  return sorted\nend", "  local prev = lst[1]\n  for i = 2,\
    \ #lst do\n    if lst[i] < prev then\n      return false\n    end\n    prev =\
    \ lst[i]\n  end\n  return true\nend", "  local sorted = true\n  for i = 1, #lst\
    \ - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n\
    \    end\n  end\n  return sorted\nend", "  local sorted = true\n  for i = 1, #lst\
    \ - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n\
    \    end\n  end\n  return sorted\nend", "  local sorted = true\n  for i = 1, #lst\
    \ - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n\
    \    end\n  end\n  return sorted\nend", "    local last = lst[1]\n    for i =\
    \ 2, #lst do\n        if lst[i] < last then\n            return false\n      \
    \  end\n        last = lst[i]\n    end\n    return true\nend", "    local sorted\
    \ = true\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n \
    \           sorted = false\n            break\n        end\n    end\n    return\
    \ sorted\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <\
    \ last then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= prev\
    \ then\n            return false\n        end\n        prev = lst[i]\n    end\n\
    \    return true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n\
    \        if lst[i] > lst[i + 1] then\n            sorted = false\n           \
    \ break\n        end\n    end\n    return sorted\nend", "    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "  local\
    \ sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \ local last = 0\n  for _, v in ipairs(lst) do\n    if v < last then\n      return\
    \ false\n    end\n    last = v\n  end\n  return true\nend", "  local sorted =\
    \ true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "  local last =\
    \ lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n   \
    \ prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] < prev then\n            return false\n  \
    \      end\n        prev = lst[i]\n    end\n    return true\nend", "  local last\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "  local sorted = true\n\
    \  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n\
    \      break\n    end\n  end\n  return sorted\nend", "    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] <= last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "    local\
    \ last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n     \
    \       return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < last then\n            return false\n        end\n \
    \       last = lst[i]\n    end\n    return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ last = math.huge\n    for _, v in ipairs(lst) do\n        if v >= last then\n\
    \            last = v\n        else\n            return false\n        end\n \
    \   end\n    return true\nend", "    local sorted = true\n    for i = 1, #lst\
    \ - 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted = false\n \
    \           break\n        end\n    end\n    return sorted\nend", "  local sorted\
    \ = true\n  local last = nil\n  for _, v in ipairs(lst) do\n    if last and last\
    \ >= v then\n      sorted = false\n      break\n    end\n    last = v\n  end\n\
    \  return sorted\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < last then\n      return false\n    end\n    last = lst[i]\n  end\n  return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] == last then\n            return false\n        end\n\
    \        if lst[i] < last then\n            return false\n        end\n      \
    \  last = lst[i]\n    end\n    return true\nend", "    local last = nil\n    for\
    \ _, v in ipairs(lst) do\n        if last and last >= v then\n            return\
    \ false\n        end\n        last = v\n    end\n    return true\nend", "  local\
    \ sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "    local last = 0\n    for _, v in ipairs(lst) do\n        if v < last\
    \ then\n            return false\n        end\n        last = v\n    end\n   \
    \ return true\nend", "  local sorted = true\n  local prev = lst[1]\n  for i =\
    \ 2, #lst do\n    if lst[i] < prev then\n      sorted = false\n      break\n \
    \   end\n    prev = lst[i]\n  end\n  return sorted\nend", "    local sorted =\
    \ true\n    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last\
    \ then\n            sorted = false\n            break\n        end\n        last\
    \ = lst[i]\n    end\n    return sorted\nend", "    local prev = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] < prev then\n            return false\n  \
    \      end\n        prev = lst[i]\n    end\n    return true\nend", "  local sorted\
    \ = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "  local sorted\
    \ = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "  local sorted\
    \ = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "    local last\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= last then\n         \
    \   return false\n        end\n        last = lst[i]\n    end\n    return true\n\
    end", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last\
    \ then\n            return false\n        end\n        last = lst[i]\n    end\n\
    \    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n   \
    \     if lst[i] < prev then\n            return false\n        end\n        prev\
    \ = lst[i]\n    end\n    return true\nend", "    local sorted = true\n    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= prev then\n    \
    \        sorted = false\n            break\n        end\n        prev = lst[i]\n\
    \    end\n    return sorted\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if\
    \ lst[i] >= lst[i + 1] then\n            sorted = false\n            break\n \
    \       end\n    end\n    return sorted\nend", "    local sorted = true\n    for\
    \ i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "  local sorted = true\n  for i = 1, #lst - 1\
    \ do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n  \
    \  end\n  end\n  return sorted\nend", "    local sorted = true\n    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  sorted = false\n            break\n        end\n        prev = lst[i]\n   \
    \ end\n    return sorted\nend", "  local sorted = true\n  for i = 1, #lst - 1\
    \ do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n  \
    \  end\n  end\n  return sorted\nend", "  local sorted = true\n  for i = 1, #lst\
    \ - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n\
    \    end\n  end\n  return sorted\nend", "  local last = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < last then\n      return false\n    end\n    last = lst[i]\n\
    \  end\n  return true\nend", "  local last = 0\n  for _, v in ipairs(lst) do\n\
    \    if v < last then\n      return false\n    end\n    last = v\n  end\n  return\
    \ true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i]\
    \ >= lst[i + 1] then\n      sorted = false\n      break\n    end\n  end\n  return\
    \ sorted\nend", "\tlocal prev = lst[1]\n\tfor i = 2, #lst do\n\t\tif lst[i] <\
    \ prev then\n\t\t\treturn false\n\t\tend\n\t\tprev = lst[i]\n\tend\n\treturn true\n\
    end", "  local last = -math.huge\n  for _, v in ipairs(lst) do\n    if v < last\
    \ then\n      return false\n    end\n    last = v\n  end\n  return true\nend",
  "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return\
    \ false\n    end\n    last = lst[i]\n  end\n  return true\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i]\
    \ >= lst[i + 1] then\n            sorted = false\n            break\n        end\n\
    \    end\n    return sorted\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    for\
    \ i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \ local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n     \
    \ return false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n\
    \      return false\n    end\n    last = lst[i]\n  end\n  return true\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < last then\n            return false\n        end\n \
    \       last = lst[i]\n    end\n    return true\nend", "  local last = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < last then\n      return false\n    end\n\
    \    last = lst[i]\n  end\n  return true\nend", "  local sorted = true\n  local\
    \ last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      sorted\
    \ = false\n      break\n    end\n    last = lst[i]\n  end\n  return sorted\nend",
  "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \   local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] <= last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "  local\
    \ sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \   local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "  local sorted = true\n  local last = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < last then\n      sorted = false\n      break\n    end\n\
    \    last = lst[i]\n  end\n  return sorted\nend", "    local prev = lst[1]\n \
    \   for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev\
    \ then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] > lst[i\
    \ + 1] then\n      sorted = false\n      break\n    end\n  end\n  return sorted\n\
    end", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n\
    \      return false\n    end\n    last = lst[i]\n  end\n  return true\nend", " \
    \ for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local last = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] <= last then\n      return false\n    end\n    last = lst[i]\n\
    \  end\n  return true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n\
    \    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n    end\n\
    \  end\n  return sorted\nend", "    local sorted = true\n    for i = 1, #lst -\
    \ 1 do\n        if lst[i] > lst[i + 1] then\n            sorted = false\n    \
    \        break\n        end\n    end\n    return sorted\nend", "  local sorted\
    \ = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n      break\n    end\n  end\n  return sorted\nend", "  local sorted\
    \ = true\n  local last = 0\n  for _, v in ipairs(lst) do\n    if v <= last then\n\
    \      sorted = false\n      break\n    end\n    last = v\n  end\n  return sorted\n\
    end", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= last\
    \ then\n            return false\n        end\n        last = lst[i]\n    end\n\
    \    return true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n\
    \        if lst[i] >= lst[i + 1] then\n            sorted = false\n          \
    \  break\n        end\n    end\n    return sorted\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n\
    \            sorted = false\n            break\n        end\n    end\n    return\
    \ sorted\nend", "    local last = nil\n    for _, v in ipairs(lst) do\n      \
    \  if last and last >= v then\n            return false\n        end\n       \
    \ last = v\n    end\n    return true\nend", "  local prev = lst[1]\n  for i =\
    \ 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n    prev\
    \ = lst[i]\n  end\n  return true\nend", "    local sorted = true\n    for i =\
    \ 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n            sorted = false\n\
    \            break\n        end\n    end\n    return sorted\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if\
    \ lst[i] >= lst[i + 1] then\n            sorted = false\n            break\n \
    \       end\n    end\n    return sorted\nend", "    local sorted = true\n    for\
    \ i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \   local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "  local sorted = true\n  for i = 1, #lst - 1\
    \ do\n    if lst[i] > lst[i + 1] then\n      sorted = false\n      break\n   \
    \ end\n  end\n  return sorted\nend", "  local prev = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n\
    \    if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n    end\n\
    \  end\n  return sorted\nend", "    local sorted = true\n    for i = 1, #lst -\
    \ 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted = false\n   \
    \         break\n        end\n    end\n    return sorted\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i\
    \ + 1] then\n      sorted = false\n      break\n    end\n  end\n  return sorted\n\
    end", "  local last = 0\n  for _, v in ipairs(lst) do\n    if v < last then\n\
    \      return false\n    end\n    last = v\n  end\n  return true\nend", "    local\
    \ last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n     \
    \       return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i]\
    \ > lst[i + 1] then\n      sorted = false\n      break\n    end\n  end\n  return\
    \ sorted\nend", "  local sorted = true\n  local last = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < last then\n      sorted = false\n      break\n    end\n\
    \    last = lst[i]\n  end\n  return sorted\nend", "  local last = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < last then\n      return false\n    end\n   \
    \ last = lst[i]\n  end\n  return true\nend", "    local sorted = true\n    for\
    \ i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \ local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n    \
    \  return false\n    end\n    last = lst[i]\n  end\n  return true\nend", "   \
    \ local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "  local last = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n\
    \    last = lst[i]\n  end\n  return true\nend", "  local sorted = true\n  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      sorted\
    \ = false\n      break\n    end\n    prev = lst[i]\n  end\n  return sorted\nend",
  "    local last = -math.huge\n    for _, v in ipairs(lst) do\n        if v < last\
    \ then\n            return false\n        end\n        last = v\n    end\n   \
    \ return true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if\
    \ lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n    end\n  end\n\
    \  return sorted\nend", "    local last = lst[1]\n    for i = 2, #lst do\n   \
    \     if lst[i] < last then\n            return false\n        end\n        last\
    \ = lst[i]\n    end\n    return true\nend", "  local prev = nil\n  for _, v in\
    \ ipairs(lst) do\n    if prev and prev >= v then\n      return false\n    end\n\
    \    prev = v\n  end\n  return true\nend", "    local prev = nil\n    for _, v\
    \ in ipairs(lst) do\n        if prev and prev >= v then\n            return false\n\
    \        end\n        prev = v\n    end\n    return true\nend", "    local sorted\
    \ = true\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n \
    \           sorted = false\n            break\n        end\n    end\n    return\
    \ sorted\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local sorted = true\n    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < last then\n            sorted = false\n\
    \            break\n        end\n        last = lst[i]\n    end\n    return sorted\n\
    end", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n\
    \      return false\n    end\n    prev = lst[i]\n  end\n  return true\nend", " \
    \ local last = -math.huge\n  for _, v in ipairs(lst) do\n    if v < last then\n\
    \      return false\n    end\n    last = v\n  end\n  return true\nend", "  local\
    \ last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return\
    \ false\n    end\n    last = lst[i]\n  end\n  return true\nend", "    local last_num\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last_num then\n      \
    \      return false\n        end\n        last_num = lst[i]\n    end\n    return\
    \ true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if\
    \ lst[i] >= lst[i + 1] then\n            sorted = false\n            break\n \
    \       end\n    end\n    return sorted\nend", "    local last = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] < last then\n            return false\n  \
    \      end\n        last = lst[i]\n    end\n    return true\nend", "    local\
    \ last = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= last then\n    \
    \        return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if\
    \ lst[i] >= lst[i + 1] then\n            sorted = false\n            break\n \
    \       end\n    end\n    return sorted\nend", "  local last = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v < last then\n      return false\n    end\n    last\
    \ = v\n  end\n  return true\nend", "  local last = -math.huge\n  for _, v in ipairs(lst)\
    \ do\n    if v < last then\n      return false\n    end\n    last = v\n  end\n\
    \  return true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n     \
    \   if lst[i] < prev then\n            return false\n        end\n        prev\
    \ = lst[i]\n    end\n    return true\nend", "    local sorted = true\n    for\
    \ i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \ local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \   local sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i\
    \ + 1] then\n            sorted = false\n            break\n        end\n    end\n\
    \    return sorted\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if\
    \ lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "    local sorted = true\n    for i = 1, #lst - 1 do\n \
    \       if lst[i] > lst[i + 1] then\n            sorted = false\n            break\n\
    \        end\n    end\n    return sorted\nend", "    local sorted = true\n   \
    \ for i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \ local sorted = true\n  for i=1,#lst-1 do\n    if lst[i] >= lst[i+1] then\n \
    \     sorted = false\n      break\n    end\n  end\n  return sorted\nend", "  \
    \  local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev\
    \ then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "  local sorted = true\n  local last = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] < last then\n      sorted = false\n      break\n    end\n    last\
    \ = lst[i]\n  end\n  return sorted\nend", "  local sorted = true\n  local prev\
    \ = nil\n  for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      sorted\
    \ = false\n      break\n    end\n    prev = v\n  end\n  return sorted\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i]\
    \ >= lst[i + 1] then\n      sorted = false\n      break\n    end\n  end\n  return\
    \ sorted\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <\
    \ prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "  local sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i\
    \ + 1] then\n      sorted = false\n      break\n    end\n  end\n  return sorted\n\
    end", "    local sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i]\
    \ >= lst[i + 1] then\n            sorted = false\n            break\n        end\n\
    \    end\n    return sorted\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < last then\n            return false\n        end\n \
    \       last = lst[i]\n    end\n    return true\nend", "    local sorted = true\n\
    \    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            sorted = false\n            break\n        end\n        last = lst[i]\n\
    \    end\n    return sorted\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < last then\n            return false\n        end\n \
    \       last = lst[i]\n    end\n    return true\nend", "    local last = -math.huge\n\
    \    for _, v in ipairs(lst) do\n        if v < last then\n            return\
    \ false\n        end\n        last = v\n    end\n    return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "  local sorted = true\n\
    \  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted = false\n\
    \      break\n    end\n  end\n  return sorted\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local sorted = true\n   \
    \ for i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \   local sorted = true\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i\
    \ + 1] then\n            sorted = false\n            break\n        end\n    end\n\
    \    return sorted\nend", "  local sorted = true\n  for i = 1, #lst - 1 do\n \
    \   if lst[i] >= lst[i + 1] then\n      sorted = false\n      break\n    end\n\
    \  end\n  return sorted\nend", "    local sorted = true\n    local last = 0\n\
    \    for _, v in ipairs(lst) do\n        if v < last then\n            sorted\
    \ = false\n            break\n        end\n        last = v\n    end\n    return\
    \ sorted\nend", "  local sorted = true\n  local prev = nil\n  for _, v in ipairs(lst)\
    \ do\n    if prev and v <= prev then\n      sorted = false\n      break\n    end\n\
    \    prev = v\n  end\n  return sorted\nend", "    for i = 1, #lst - 1 do\n   \
    \     if lst[i] >= lst[i + 1] then\n            return false\n        end\n  \
    \  end\n    return true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n\
    \        if lst[i] < last then\n            return false\n        end\n      \
    \  last = lst[i]\n    end\n    return true\nend", "    local sorted = true\n \
    \   for i = 1, #lst - 1 do\n        if lst[i] > lst[i + 1] then\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend", " \
    \ local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n     \
    \ return false\n    end\n    last = lst[i]\n  end\n  return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i\
    \ + 1] then\n      return false\n    end\n  end\n  return true\nend", "    local\
    \ last = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= last then\n    \
    \        return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "  local sorted = true\n  for i = 1, #lst - 1\
    \ do\n    if lst[i] > lst[i + 1] then\n      sorted = false\n      break\n   \
    \ end\n  end\n  return sorted\nend", "    local last = lst[1]\n    for i = 2,\
    \ #lst do\n        if lst[i] < last then\n            return false\n        end\n\
    \        last = lst[i]\n    end\n    return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_162_string_to_md5
language: lua
results:
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu8zycxmw.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpu8zycxmw.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpu8zycxmw.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpek9wmc6_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpek9wmc6_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpane6ai89.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpane6ai89.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7iqm1q0n.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7iqm1q0n.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2mlu8aqb.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2mlu8aqb.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbw_qa2lo.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbw_qa2lo.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpzbmwkmmd.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzbmwkmmd.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpvm7bi96e.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvm7bi96e.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \  if text == '' then\n    return nil\n  end\n  return md5.sumhexa(text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpziim2jv2.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpziim2jv2.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4irs7jay.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4irs7jay.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9dh5oczk.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp9dh5oczk.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp9dh5oczk.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2c8dtr3s.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp2c8dtr3s.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp2c8dtr3s.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpk3tyz_lk.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpk3tyz_lk.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp63innpud.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp63innpud.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp63innpud.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpkf353hrc.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpkf353hrc.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpem07mbto.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpem07mbto.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpem07mbto.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdicdqjxx.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpdicdqjxx.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpdicdqjxx.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.004 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpebnofxe0.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpebnofxe0.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmktt5n62.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpmktt5n62.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \  if text == '' then\n    return nil\n  end\n  return md5.sumhexa(text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxpvox12d.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxpvox12d.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1v_shww0.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1v_shww0.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpi941u4uh.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi941u4uh.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbx9n9mm6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbx9n9mm6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return ngx.md5(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwq2_egd5.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpwq2_egd5.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpy2c_f_q7.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpy2c_f_q7.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpy2c_f_q7.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpm2161yo9.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpm2161yo9.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1ez5twyu.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1ez5twyu.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpov9ugipy.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpov9ugipy.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8y4dn9ld.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8y4dn9ld.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcztyv8f2.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcztyv8f2.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgl5d2hun.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgl5d2hun.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4782_2u7.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp4782_2u7.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp4782_2u7.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.020 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpzicf3hbs.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpzicf3hbs.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnwhp64my.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnwhp64my.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz2jfv2sh.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz2jfv2sh.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphkllovr_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphkllovr_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpeh9qaein.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpeh9qaein.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpeh9qaein.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3ym_pz4w.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3ym_pz4w.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpvmi10thq.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvmi10thq.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpzwkw5nxl.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpzwkw5nxl.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpzwkw5nxl.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpurgex9el.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpurgex9el.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqyu8xbrv.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqyu8xbrv.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3qb5ebwu.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp3qb5ebwu.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp3qb5ebwu.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.003 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsy9scqkm.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsy9scqkm.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \  if text == '' then\n    return nil\n  end\n  return md5.sumhexa(text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplgdm6_n7.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplgdm6_n7.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu8f9ovwm.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu8f9ovwm.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpltrpbzdr.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpltrpbzdr.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp19c97_o9.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp19c97_o9.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpttqrbmzx.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpttqrbmzx.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprzmiwoba.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprzmiwoba.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcj66m58g.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpcj66m58g.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8zijjqt3.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8zijjqt3.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpg15sadw9.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpg15sadw9.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplcvj89pa.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplcvj89pa.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \  if text == '' then\n    return nil\n  end\n  return md5.sumhexa(text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpaq6mt4ts.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaq6mt4ts.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq4lsegny.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpq4lsegny.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3fgbfhc0.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3fgbfhc0.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == nil or text == '' then\n        return nil\n    end\n    return\
    \ md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdaczwtar.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdaczwtar.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt2a8bmm9.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpt2a8bmm9.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == nil or text == '' then\n        return nil\n    end\n    return\
    \ md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqea5rn74.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqea5rn74.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprl3gsdk6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprl3gsdk6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq8es5niz.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpq8es5niz.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpq8es5niz.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnmweolqf.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnmweolqf.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplk2guyew.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplk2guyew.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpblp5t98o.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpblp5t98o.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpibgoby5_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpibgoby5_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphw1vb611.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphw1vb611.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp18r_zxze.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp18r_zxze.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4h01f83x.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4h01f83x.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphs5cps11.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphs5cps11.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppi7s6ldw.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppi7s6ldw.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpdihr2prp.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpdihr2prp.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_4x_h294.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_4x_h294.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5skte4ql.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5skte4ql.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpeq7pe6sa.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpeq7pe6sa.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsv1ve9nn.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsv1ve9nn.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5fmwfdno.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5fmwfdno.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxh8ecica.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxh8ecica.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4jgtznnk.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4jgtznnk.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxzigtnis.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxzigtnis.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpj_io2x0l.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpj_io2x0l.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu9gssr6z.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu9gssr6z.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpoley_q54.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoley_q54.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphd7n1bpa.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphd7n1bpa.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjf1u5h0z.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjf1u5h0z.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqevzuu1_.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpqevzuu1_.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpqevzuu1_.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp319lmfqj.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp319lmfqj.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_026atfx.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_026atfx.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgosc5i8_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpgosc5i8_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6l6rlftd.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6l6rlftd.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpi20vyraa.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpi20vyraa.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprzfd224t.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprzfd224t.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1emm4qxz.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1emm4qxz.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpoyeujq4q.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoyeujq4q.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == nil or text == '' then\n        return nil\n    end\n    local\
    \ md5 = require('md5')\n    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpo2l80sso.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpo2l80sso.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpo2l80sso.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfbdoygy1.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfbdoygy1.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbvotv9up.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbvotv9up.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpo268ppzr.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo268ppzr.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpejfopxom.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpejfopxom.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpoonuxd5z.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoonuxd5z.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpaag_oq7n.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpaag_oq7n.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq85b1dwx.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpq85b1dwx.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmps8ixj5vh.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmps8ixj5vh.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpvxnin5zi.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpvxnin5zi.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpn7w9vvw5.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpn7w9vvw5.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpc3l9l2sr.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpc3l9l2sr.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqs8ocj17.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqs8ocj17.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmppp4rm291.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmppp4rm291.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpyjt7i06v.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyjt7i06v.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptyjtqbfb.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptyjtqbfb.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw9a0u8iz.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpw9a0u8iz.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7ok1z4w2.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp7ok1z4w2.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp7ok1z4w2.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.006 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_phcyion.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_phcyion.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuxbmit3w.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpuxbmit3w.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpuxbmit3w.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpd0pujwty.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd0pujwty.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprhit3pv4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprhit3pv4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpj7p6ltce.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpj7p6ltce.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz9jaio6h.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpz9jaio6h.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpom81pr6s.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpom81pr6s.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4k9tmxd7.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4k9tmxd7.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3lwq7bf4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3lwq7bf4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp519hw3n9.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp519hw3n9.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu0rcmnrh.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpu0rcmnrh.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if not text or text == '' then\n        return nil\n    end\n    local md5\
    \ = require 'md5'\n    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4gllvq3r.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp4gllvq3r.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp4gllvq3r.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.005 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8qwpxas3.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8qwpxas3.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpetv33lcf.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpetv33lcf.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplwt6zy03.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplwt6zy03.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpe_dkdohv.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpe_dkdohv.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5bope9sf.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5bope9sf.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpc34xsovt.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpc34xsovt.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbf68o6sa.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbf68o6sa.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpa_e9vgnt.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpa_e9vgnt.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp61f_nivf.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp61f_nivf.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpl_4xxx1q.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpl_4xxx1q.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpng47_sjo.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpng47_sjo.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_8bbobs5.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_8bbobs5.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbhatv40j.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbhatv40j.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsf2r7vmt.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsf2r7vmt.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplo503mtz.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmplo503mtz.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpya72feq4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpya72feq4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt_n5p0k8.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpt_n5p0k8.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphvwe0a_o.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmphvwe0a_o.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmphvwe0a_o.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp3bpyshg.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp3bpyshg.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpd6_58qrw.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd6_58qrw.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprfwvib_x.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmprfwvib_x.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require\
    \ 'md5'\n    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjaq0mfl0.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpjaq0mfl0.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpjaq0mfl0.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.006 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpe33e94sx.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpe33e94sx.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpo6uyqb1y.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpo6uyqb1y.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpd4ub39t8.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd4ub39t8.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require\
    \ 'md5'\n    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpl1d89kkb.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpl1d89kkb.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpl1d89kkb.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \  if text == '' then\n    return nil\n  end\n  return md5.sumhexa(text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpv4515m2r.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpv4515m2r.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpoojx1sh6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpoojx1sh6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpv4yv6ypo.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpv4yv6ypo.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpv4yv6ypo.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.004 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5sk1sj9t.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp5sk1sj9t.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpelr4wu5t.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpelr4wu5t.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpotde1_yw.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpotde1_yw.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpclfl4o7o.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpclfl4o7o.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpd5gb8x_x.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpd5gb8x_x.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsi1zitmp.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsi1zitmp.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp59v4rkix.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp59v4rkix.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1jakugw6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1jakugw6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp39vy1oz4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp39vy1oz4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp71ww99i4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp71ww99i4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8p7gyp6e.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8p7gyp6e.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp41cs42ju.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp41cs42ju.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpp2b3wc_s.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpp2b3wc_s.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_d0b615r.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp_d0b615r.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphxrado3_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmphxrado3_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmponc_ddmm.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmponc_ddmm.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1jwl8wyk.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1jwl8wyk.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpde82iljk.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpde82iljk.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7vvf7ejz.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7vvf7ejz.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjpd6y6x5.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpjpd6y6x5.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4zylhgfx.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp4zylhgfx.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqp36sb4l.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqp36sb4l.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3idjvw0f.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp3idjvw0f.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp3idjvw0f.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptz9f_kyi.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmptz9f_kyi.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsyrmazst.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpsyrmazst.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7j2hoi77.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp7j2hoi77.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require\
    \ 'md5'\n    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1swzgqsg.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmp1swzgqsg.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmp1swzgqsg.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9rdlhlo1.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9rdlhlo1.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqbzp3q6y.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpqbzp3q6y.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpes1m6obu.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpes1m6obu.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3nl2o4i_.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp3nl2o4i_.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpyf9sq345.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpyf9sq345.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2n56e50n.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp2n56e50n.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6e4q4ow6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6e4q4ow6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt5y2j_rm.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpt5y2j_rm.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8lnft52k.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp8lnft52k.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpl4y5l2zg.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpl4y5l2zg.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbzyo7up8.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpbzyo7up8.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfpzff4uq.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpfpzff4uq.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpswq87e_4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpswq87e_4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnl1punkd.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpnl1punkd.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9e7br3d4.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp9e7br3d4.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfmexjk5v.lua:8:\
    \ module 'md5' not found:\\n\\tno field package.preload['md5']\\n\\tno file './md5.lua'\\\
    n\\tno file '/usr/local/share/lua/5.1/md5.lua'\\n\\tno file '/usr/local/share/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/local/lib/lua/5.1/md5.lua'\\n\\tno file '/usr/local/lib/lua/5.1/md5/init.lua'\\\
    n\\tno file '/usr/share/lua/5.1/md5.lua'\\n\\tno file '/usr/share/lua/5.1/md5/init.lua'\\\
    n\\tno file './md5.so'\\n\\tno file '/usr/local/lib/lua/5.1/md5.so'\\n\\tno file\
    \ '/usr/lib/x86_64-linux-gnu/lua/5.1/md5.so'\\n\\tno file '/usr/lib/lua/5.1/md5.so'\\\
    n\\tno file '/usr/local/lib/lua/5.1/loadall.so'\\nstack traceback:\\n\\t/tmp/tmpfmexjk5v.lua:8:\
    \ in function 'candidate'\\n\\t/tmp/tmpfmexjk5v.lua:15: in function 'test_humaneval'\\\
    n\\nRan 1 tests in 0.007 seconds, 0 successes, 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1kve3pgv.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp1kve3pgv.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6jpbynqe.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp6jpbynqe.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxo1b3hy6.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmpxo1b3hy6.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n\
    \    if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"E\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp958w7ay5.lua:8:\
    \ attempt to index global 'md5' (a nil value)\\nstack traceback:\\n\\t/tmp/tmp958w7ay5.lua:14:\
    \ in function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes,\
    \ 1 error\\n\""
  stderr: b''
  exit_code: 1
  status: Exception

name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- file_name_check(\"example.txt\"\
  ) # => 'Yes'\n-- file_name_check(\"1example.dll\") # => 'No' (the name should start\
  \ with a latin alphapet letter)\nlocal function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- Write your code here\nend", "  -- your code here\n  local dot_pos\
    \ = string.find(file_name, \"%.\")\n  local ext = string.sub(file_name, dot_pos\
    \ + 1)\n  local name = string.sub(file_name, 1, dot_pos - 1)\n  local count =\
    \ 0\n  for i = 1, #name do\n    if string.find(name, \"%d\") then\n      count\
    \ = count + 1\n    end\n  end\n  if count > 3 then\n    return \"No\"\n  end\n\
    \  if string.find(name, \"%a\") == nil then\n    return \"No\"\n  end\n  if ext\
    \ ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\" then\n    return \"No\"\n \
    \ end\n  return \"Yes\"\nend", "    -- your code here\n    local count = 0\n \
    \   local dot_count = 0\n    local ext = \"\"\n    local name = \"\"\n    local\
    \ ext_list = {\"txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name do\n     \
    \   if file_name:sub(i, i) == \".\" then\n            dot_count = dot_count +\
    \ 1\n            name = file_name:sub(1, i - 1)\n            ext = file_name:sub(i\
    \ + 1, #file_name)\n        end\n        if file_name:sub(i, i):match(\"%d\")\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 or name:match(\"^%a\") == nil then\n        return \"No\"\n\
    \    end\n    for i = 1, #ext_list do\n        if ext == ext_list[i] then\n  \
    \          return \"Yes\"\n        end\n    end\n    return \"No\"\nend", "  \
    \  -- your code here\n    local count = 0\n    local dot = 0\n    local ext =\
    \ 0\n    local pre = 0\n    local len = string.len(file_name)\n    for i = 1,\
    \ len do\n        local c = string.sub(file_name, i, i)\n        if c == '.' then\n\
    \            dot = dot + 1\n        elseif c >= '0' and c <= '9' then\n      \
    \      count = count + 1\n        elseif c >= 'a' and c <= 'z' then\n        \
    \    pre = 1\n        elseif c >= 'A' and c <= 'Z' then\n            pre = 1\n\
    \        end\n    end\n    if dot ~= 1 then\n        return 'No'\n    end\n  \
    \  if count > 3 then\n        return 'No'\n    end\n    if pre == 0 then\n   \
    \     return 'No'\n    end\n    local dot_index = string.find(file_name, '.')\n\
    \    local ext_name = string.sub(file_name, dot_index + 1, len)\n    if ext_name\
    \ == 'txt' or ext_name == 'exe' or ext_name == 'dll' then\n        return 'Yes'\n\
    \    else\n        return 'No'\n    end\nend", "    local dot_index = file_name:find('%.')\n\
    \    if not dot_index then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if #prefix\
    \ == 0 or #prefix > 8 or #suffix == 0 or #suffix > 3 then\n        return 'No'\n\
    \    end\n    if not prefix:match('^[a-zA-Z]') or not suffix:match('^[a-zA-Z]+$')\
    \ then\n        return 'No'\n    end\n    if not suffix:match('^txt$') and not\
    \ suffix:match('^exe$') and not suffix:match('^dll$') then\n        return 'No'\n\
    \    end\n    if prefix:match('%d') and #prefix:match('%d') > 3 then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement the function\n\
    end", "    -- your code here\n    local dot_pos = string.find(file_name, \"%.\"\
    )\n    local pre_dot = string.sub(file_name, 1, dot_pos - 1)\n    local post_dot\
    \ = string.sub(file_name, dot_pos + 1)\n    local count = 0\n    for i = 1, #pre_dot\
    \ do\n        if string.find(pre_dot, \"%d\") then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return \"No\"\n  \
    \  end\n    if string.find(pre_dot, \"%a\") == nil then\n        return \"No\"\
    \n    end\n    if post_dot ~= \"txt\" and post_dot ~= \"exe\" and post_dot ~=\
    \ \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "  \
    \  -- your code here\n    local count = 0\n    local dot = 0\n    local ext =\
    \ 0\n    local ext_list = {\"txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == \".\" then\n            dot = i\n    \
    \    end\n        if file_name:sub(i, i):match(\"%d\") then\n            count\
    \ = count + 1\n        end\n    end\n    if count > 3 then\n        return \"\
    No\"\n    end\n    if dot == 1 then\n        return \"No\"\n    end\n    for i\
    \ = 1, #ext_list do\n        if file_name:sub(dot + 1, #file_name) == ext_list[i]\
    \ then\n            ext = 1\n        end\n    end\n    if ext == 0 then\n    \
    \    return \"No\"\n    end\n    if file_name:sub(1, 1):match(\"%a\") then\n \
    \       return \"Yes\"\n    else\n        return \"No\"\n    end\nend", "    --\
    \ your code here\n    local count = 0\n    local dot_count = 0\n    local ext\
    \ = \"\"\n    local name = \"\"\n    for i = 1, string.len(file_name) do\n   \
    \     if string.sub(file_name, i, i) == \".\" then\n            dot_count = dot_count\
    \ + 1\n            name = string.sub(file_name, 1, i - 1)\n            ext = string.sub(file_name,\
    \ i + 1, string.len(file_name))\n        end\n        if string.match(string.sub(file_name,\
    \ i, i), \"%d\") then\n            count = count + 1\n        end\n    end\n \
    \   if count > 3 or dot_count ~= 1 or string.match(name, \"%a\") == nil or (ext\
    \ ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\") then\n        return \"No\"\
    \n    else\n        return \"Yes\"\n    end\nend", "    local function is_valid_extension(extension)\n\
    \        return extension == 'txt' or extension == 'exe' or extension == 'dll'\n\
    \    end", "    -- your code here\n    local count = 0\n    local dot = 0\n  \
    \  local ext = 0\n    local ext_list = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot = i\n      \
    \  end\n        if file_name:sub(i, i):match('%d') then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if dot == 0 then\n        return 'No'\n    end\n    if not file_name:sub(1,\
    \ dot - 1):match('^[a-zA-Z]') then\n        return 'No'\n    end\n    for i =\
    \ 1, #ext_list do\n        if file_name:sub(dot + 1) == ext_list[i] then\n   \
    \         ext = 1\n        end\n    end\n    if ext == 0 then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local extension = \"\"\n    local valid_extensions\
    \ = {\"txt\", \"exe\", \"dll\"}\n    local valid_extension = false\n    local\
    \ valid_name = false\n    local valid_digits = false\n    local valid_dot = false\n\
    \    local valid_extension = false\n    local valid_name = false\n    local valid_digits\
    \ = false\n    local valid_dot = false\n    for i = 1, #file_name do\n       \
    \ if file_name:sub(i, i) == \".\" then\n            dot_count = dot_count + 1\n\
    \            dot_index = i\n        end\n        if file_name:sub(i, i):match(\"\
    %d\") then\n            count = count + 1\n        end\n    end\n    if count\
    \ > 3 then\n        valid_digits = false\n    else\n        valid_digits = true\n\
    \    end\n    if dot_count == 1 then\n        valid_dot = true\n    else\n   \
    \     valid_dot = false\n    end\n    if file_name:sub(1, 1):match(\"%a\") then\n\
    \        valid_name = true\n    else\n        valid_name = false\n    end\n  \
    \  for i = 1, #valid_extensions do\n        if file_name:sub(dot_index + 1, #file_name)\
    \ == valid_extensions[i] then\n            valid_extension = true\n        end\n\
    \    end\n    if valid_digits and valid_dot and valid_name and valid_extension\
    \ then\n        return \"Yes\"\n    else\n        return \"No\"\n    end\nend",
  "    local dot_index = string.find(file_name, \"%.\")\n    if dot_index == nil then\n\
    \        return \"No\"\n    end\n    local prefix = string.sub(file_name, 1, dot_index\
    \ - 1)\n    local suffix = string.sub(file_name, dot_index + 1)\n    if string.len(prefix)\
    \ == 0 or string.len(suffix) == 0 then\n        return \"No\"\n    end\n    if\
    \ string.find(prefix, \"%d\") ~= nil then\n        return \"No\"\n    end\n  \
    \  if string.find(prefix, \"%a\") == nil then\n        return \"No\"\n    end\n\
    \    if string.find(prefix, \"%d\") ~= nil then\n        return \"No\"\n    end\n\
    \    if string.find(prefix, \"%d%d%d\") ~= nil then\n        return \"No\"\n \
    \   end\n    if suffix ~= \"txt\" and suffix ~= \"exe\" and suffix ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "  -- your code\
    \ here\n  local count = 0\n  local dot = 0\n  local ext = {\"txt\", \"exe\", \"\
    dll\"}\n  local flag = false\n  for i = 1, #file_name do\n    if file_name:sub(i,\
    \ i) == \".\" then\n      dot = i\n    end\n    if file_name:sub(i, i):match(\"\
    %d\") then\n      count = count + 1\n    end\n  end\n  if count > 3 then\n   \
    \ return \"No\"\n  end\n  if dot == 0 then\n    return \"No\"\n  end\n  if file_name:sub(1,\
    \ 1):match(\"%a\") == nil then\n    return \"No\"\n  end\n  for i = 1, #ext do\n\
    \    if file_name:sub(dot + 1, #file_name) == ext[i] then\n      flag = true\n\
    \    end\n  end\n  if flag then\n    return \"Yes\"\n  else\n    return \"No\"\
    \n  end\nend", "    local dot = string.find(file_name, '%.')\n    local ext =\
    \ string.sub(file_name, dot + 1)\n    local name = string.sub(file_name, 1, dot\
    \ - 1)\n    local digits = string.match(name, '%d')\n    if digits == nil or #digits\
    \ <= 3 then\n        if string.match(name, '^[a-zA-Z]') and (ext == 'txt' or ext\
    \ == 'exe' or ext == 'dll') then\n            return 'Yes'\n        end\n    end\n\
    \    return 'No'\nend", "    -- your code here\n    local count = 0\n    local\
    \ dot = 0\n    local ext = 0\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot = i\n        end\n        if file_name:sub(i,\
    \ i) >= \"0\" and file_name:sub(i, i) <= \"9\" then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return \"No\"\n  \
    \  end\n    if dot == 1 then\n        return \"No\"\n    end\n    if file_name:sub(dot\
    \ + 1, dot + 3) == \"txt\" or file_name:sub(dot + 1, dot + 3) == \"exe\" or file_name:sub(dot\
    \ + 1, dot + 3) == \"dll\" then\n        ext = 1\n    end\n    if ext == 0 then\n\
    \        return \"No\"\n    end\n    if file_name:sub(1, 1) >= \"a\" and file_name:sub(1,\
    \ 1) <= \"z\" or file_name:sub(1, 1) >= \"A\" and file_name:sub(1, 1) <= \"Z\"\
    \ then\n        return \"Yes\"\n    end\n    return \"No\"\nend", "    local count\
    \ = 0\n    local dot_count = 0\n    local ext = \"\"\n    local ext_list = {\"\
    txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == \".\" then\n            dot_count = dot_count + 1\n    \
    \    elseif c:match(\"%d\") then\n            count = count + 1\n        end\n\
    \    end\n    if dot_count == 1 then\n        ext = file_name:sub(file_name:find(\"\
    %.\") + 1)\n    end\n    if count > 3 or dot_count ~= 1 or file_name:sub(1, 1):match(\"\
    %d\") or not ext_list[ext] then\n        return \"No\"\n    else\n        return\
    \ \"Yes\"\n    end\nend", "\tlocal digits = 0\n\tlocal dot_count = 0\n\tlocal\
    \ ext = \"\"\n\tfor i = 1, #file_name do\n\t\tlocal c = file_name:sub(i, i)\n\t\
    \tif c >= '0' and c <= '9' then\n\t\t\tdigits = digits + 1\n\t\telseif c == '.'\
    \ then\n\t\t\tdot_count = dot_count + 1\n\t\t\text = file_name:sub(i + 1)\n\t\t\
    end\n\tend\n\tif digits > 3 or dot_count ~= 1 or ext == \"\" or ext == \"txt\"\
    \ or ext == \"exe\" or ext == \"dll\" then\n\t\treturn \"No\"\n\tend\n\treturn\
    \ \"Yes\"\nend", "    local dot_index = string.find(file_name, \"%.\")\n    if\
    \ not dot_index then\n        return \"No\"\n    end\n    local name = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local ext = string.sub(file_name, dot_index + 1)\n  \
    \  if string.len(name) == 0 or string.find(name, \"%d\") or not string.find(name,\
    \ \"%a\") then\n        return \"No\"\n    end\n    if string.len(ext) == 0 or\
    \ string.find(ext, \"%d\") or not string.find(ext, \"%a\") then\n        return\
    \ \"No\"\n    end\n    if string.len(ext) ~= 3 or ext ~= \"txt\" and ext ~= \"\
    exe\" and ext ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\
    \nend", "    -- write your code here\nend", "    -- Write your code here\nend",
  "    local dot_pos = string.find(file_name, \"%.\")\n    if dot_pos == nil then\n\
    \        return \"No\"\n    end\n    local name_before_dot = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local name_after_dot = string.sub(file_name, dot_pos +\
    \ 1)\n    if string.len(name_before_dot) == 0 then\n        return \"No\"\n  \
    \  end\n    if string.find(name_before_dot, \"%d\") == nil then\n        return\
    \ \"No\"\n    end\n    if string.len(name_after_dot) == 0 then\n        return\
    \ \"No\"\n    end\n    if string.find(name_after_dot, \"%d\") ~= nil then\n  \
    \      return \"No\"\n    end\n    if string.find(name_after_dot, \"%a\") == nil\
    \ then\n        return \"No\"\n    end\n    if string.find(name_after_dot, \"\
    %l\") == nil then\n        return \"No\"\n    end\n    if string.find(name_after_dot,\
    \ \"%u\") == nil then\n        return \"No\"\n    end\n    if string.len(name_after_dot)\
    \ > 3 then\n        return \"No\"\n    end\n    if string.find(name_after_dot,\
    \ \"txt\") == nil and string.find(name_after_dot, \"exe\") == nil and string.find(name_after_dot,\
    \ \"dll\") == nil then\n        return \"No\"\n    end\n    return \"Yes\"\nend",
  "    -- Write your code here\n    return 'Yes'\nend", "    -- Write your code here\n\
    end", "  -- your code here\n  return nil\nend", "    -- TODO: Implement the function\
    \ here\nend", "    local count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local ext = \"\"\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            count = count + 1\n \
    \       elseif c == '.' then\n            dot_count = dot_count + 1\n        \
    \    dot_index = i\n        end\n    end\n    if count > 3 or dot_count ~= 1 or\
    \ dot_index == 1 then\n        return 'No'\n    end\n    ext = file_name:sub(dot_index\
    \ + 1)\n    if ext == 'txt' or ext == 'exe' or ext == 'dll' then\n        return\
    \ 'Yes'\n    end\n    return 'No'\nend", "  -- your code here\n  local count =\
    \ 0\n  local dot_count = 0\n  local dot_index = 0\n  local extension = \"\"\n\
    \  for i = 1, #file_name do\n    if file_name:sub(i,i) == \".\" then\n      dot_count\
    \ = dot_count + 1\n      dot_index = i\n    end\n    if file_name:sub(i,i):match(\"\
    %d\") then\n      count = count + 1\n    end\n  end\n  if count > 3 then\n   \
    \ return \"No\"\n  end\n  if dot_count ~= 1 then\n    return \"No\"\n  end\n \
    \ if file_name:sub(1,1):match(\"%a\") == nil then\n    return \"No\"\n  end\n\
    \  if file_name:sub(dot_index+1,dot_index+3) == \"txt\" or file_name:sub(dot_index+1,dot_index+3)\
    \ == \"exe\" or file_name:sub(dot_index+1,dot_index+3) == \"dll\" then\n    return\
    \ \"Yes\"\n  end\n  return \"No\"\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local last_index = 0\n    local ext = \"\"\
    \n    local valid_ext = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n        if file_name:sub(i,\
    \ i):match('%a') then\n            last_index = i\n        end\n    end\n    if\
    \ dot_count ~= 1 then\n        return 'No'\n    end\n    if count > 3 then\n \
    \       return 'No'\n    end\n    if last_index == 0 then\n        return 'No'\n\
    \    end\n    if dot_index == 1 then\n        return 'No'\n    end\n    ext =\
    \ file_name:sub(dot_index + 1, #file_name)\n    for i = 1, #valid_ext do\n   \
    \     if ext == valid_ext[i] then\n            return 'Yes'\n        end\n   \
    \ end\n    return 'No'\nend", "\tlocal dot_pos = file_name:find('%.')\n\tif not\
    \ dot_pos then return 'No' end\n\tlocal name = file_name:sub(1, dot_pos - 1)\n\
    \tlocal ext = file_name:sub(dot_pos + 1)\n\tif #name == 0 or name:find('%d') or\
    \ not name:find('%a') then return 'No' end\n\tif ext ~= 'txt' and ext ~= 'exe'\
    \ and ext ~= 'dll' then return 'No' end\n\tif #file_name:gsub('%d', '') > #file_name\
    \ - 3 then return 'No' end\n\treturn 'Yes'\nend", "    local dot_index = file_name:find(\"\
    %.\")\n    if not dot_index then\n        return \"No\"\n    end\n    local prefix\
    \ = file_name:sub(1, dot_index - 1)\n    local suffix = file_name:sub(dot_index\
    \ + 1)\n    if prefix:match(\"%d\") or prefix:match(\"^%a\") or prefix:match(\"\
    ^%A\") or not prefix:match(\"^%a\") then\n        return \"No\"\n    end\n   \
    \ if suffix ~= \"txt\" and suffix ~= \"exe\" and suffix ~= \"dll\" then\n    \
    \    return \"No\"\n    end\n    return \"Yes\"\nend", "    -- your code here\n\
    \    local count = 0\n    local dot = 0\n    local ext = {'txt', 'exe', 'dll'}\n\
    \    local ext_check = 0\n    local ext_name = ''\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i, i) == '.' then\n            dot = i\n        end\n\
    \    end\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.'\
    \ then\n            ext_name = file_name:sub(i+1, #file_name)\n        end\n \
    \   end\n    for i = 1, #ext do\n        if ext_name == ext[i] then\n        \
    \    ext_check = 1\n        end\n    end\n    for i = 1, #file_name do\n     \
    \   if file_name:sub(i, i) == '.' then\n            break\n        end\n     \
    \   if file_name:sub(i, i):match('%d') then\n            count = count + 1\n \
    \       end\n    end\n    if count > 3 then\n        return 'No'\n    end\n  \
    \  if dot == 0 then\n        return 'No'\n    end\n    if file_name:sub(1, 1):match('%a')\
    \ == nil then\n        return 'No'\n    end\n    if ext_check == 0 then\n    \
    \    return 'No'\n    end\n    return 'Yes'\nend", "    -- Write your code here\n\
    end", "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n\
    \    local extension = \"\"\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_digit = false\n    local valid_dot = false\n    local\
    \ valid_extension = false\n    local valid_name = false\n    local valid_digit\
    \ = false\n    local valid_dot = false\n    for i = 1, #file_name do\n       \
    \ if file_name:sub(i, i) == \".\" then\n            dot_count = dot_count + 1\n\
    \            dot_index = i\n        end\n        if file_name:sub(i, i) == \"\
    .\" and i == 1 then\n            valid_dot = false\n        elseif file_name:sub(i,\
    \ i) == \".\" and i ~= 1 then\n            valid_dot = true\n        end\n   \
    \     if file_name:sub(i, i) == \".\" and i == #file_name then\n            valid_dot\
    \ = false\n        end\n        if file_name:sub(i, i) == \".\" and i ~= #file_name\
    \ then\n            valid_dot = true\n        end\n        if file_name:sub(i,\
    \ i) == \".\" and i == 1 then\n            valid_dot = false\n        elseif file_name:sub(i,\
    \ i) == \".\" and i ~= 1 then\n            valid_dot = true\n        end\n   \
    \     if file_name:sub(i, i) == \".\" and i == #file_name then\n            valid_dot\
    \ = false\n        end\n        if file_name:sub(i, i) == \".\" and i ~= #file_name\
    \ then\n            valid_dot = true\n        end\n        if file_name:sub(i,\
    \ i) == \".\" and i == 1 then\n            valid_dot = false\n        elseif file_name:sub(i,\
    \ i) == \".\" and i ~= 1 then\n            valid_dot = true\n        end\n   \
    \     if file_name:sub(i, i) == \".\" and i == #file_name then\n            valid_dot\
    \ = false\n        end\n        if file_name:sub(i, i)", "    if file_name:match(\"\
    ^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]+$\") and\n       file_name:match(\"%d%d%d\"\
    ) == nil and\n       file_name:match(\"%.\") == \".\" and\n       file_name:match(\"\
    %.[a-zA-Z0-9]+$\") == \".txt\" or\n       file_name:match(\"%.[a-zA-Z0-9]+$\"\
    ) == \".exe\" or\n       file_name:match(\"%.[a-zA-Z0-9]+$\") == \".dll\" then\n\
    \        return \"Yes\"\n    else\n        return \"No\"\n    end\nend", "   \
    \ -- your code here\n    local count = 0\n    local dot = 0\n    local ext = 0\n\
    \    local name = \"\"\n    local ext_name = \"\"\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i,i) == \".\" then\n            dot = i\n        end\n\
    \    end\n    for i = 1, dot - 1 do\n        if file_name:sub(i,i):match(\"%d\"\
    ) then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        return \"No\"\n    end\n    for i = 1, dot - 1 do\n        if\
    \ file_name:sub(i,i):match(\"%a\") then\n            name = name .. file_name:sub(i,i)\n\
    \        end\n    end\n    if name == \"\" then\n        return \"No\"\n    end\n\
    \    for i = dot + 1, #file_name do\n        ext_name = ext_name .. file_name:sub(i,i)\n\
    \    end\n    if ext_name == \"txt\" or ext_name == \"exe\" or ext_name == \"\
    dll\" then\n        return \"Yes\"\n    else\n        return \"No\"\n    end\n\
    end", "    local dot_pos = file_name:find('%.')\n    if not dot_pos then\n   \
    \     return 'No'\n    end\n    local prefix = file_name:sub(1, dot_pos - 1)\n\
    \    local suffix = file_name:sub(dot_pos + 1)\n    if #prefix == 0 or #prefix\
    \ > 8 or #suffix == 0 or #suffix > 3 then\n        return 'No'\n    end\n    if\
    \ prefix:find('%d') or not prefix:find('%a') then\n        return 'No'\n    end\n\
    \    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement this function\n\
    end", "    -- Write your code here\nend", "  -- your code here\n  local count\
    \ = 0\n  local count_dot = 0\n  local count_digit = 0\n  local count_letter =\
    \ 0\n  local count_ext = 0\n  local ext = \"\"\n  local name = \"\"\n  local dot_index\
    \ = 0\n  local ext_index = 0\n  local name_index = 0\n  local ext_list = {\"txt\"\
    , \"exe\", \"dll\"}\n  for i = 1, #file_name do\n    if file_name:sub(i, i) ==\
    \ \".\" then\n      count_dot = count_dot + 1\n      dot_index = i\n    end\n\
    \    if file_name:sub(i, i):match(\"%d\") then\n      count_digit = count_digit\
    \ + 1\n    end\n    if file_name:sub(i, i):match(\"%a\") then\n      count_letter\
    \ = count_letter + 1\n    end\n  end\n  if count_dot == 1 and count_digit <= 3\
    \ and count_letter > 0 then\n    ext = file_name:sub(dot_index + 1, #file_name)\n\
    \    name = file_name:sub(1, dot_index - 1)\n    for i = 1, #ext_list do\n   \
    \   if ext == ext_list[i] then\n        count_ext = count_ext + 1\n      end\n\
    \    end\n    if count_ext == 1 then\n      return \"Yes\"\n    else\n      return\
    \ \"No\"\n    end\n  else\n    return \"No\"\n  end\nend", "    local dot_pos\
    \ = string.find(file_name, '%.')\n    if not dot_pos then\n        return 'No'\n\
    \    end\n    local ext = string.sub(file_name, dot_pos + 1)\n    if ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    local\
    \ name = string.sub(file_name, 1, dot_pos - 1)\n    if string.find(name, '%d')\
    \ then\n        return 'No'\n    end\n    if string.find(name, '%a') ~= 1 then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '%.')\n    if dot_pos == nil then\n        return 'No'\n    end\n    local file_name_without_ext\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local file_ext = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.len(file_name_without_ext) == 0 or\n        string.find(file_name_without_ext,\
    \ '%d') ~= nil or\n        string.find(file_name_without_ext, '%a') == nil then\n\
    \        return 'No'\n    end\n    if file_ext ~= 'txt' and file_ext ~= 'exe'\
    \ and file_ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "  local count = 0\n  local dot = 0\n  local ext = 0\n  for i = 1, #file_name\
    \ do\n    if file_name:sub(i, i) == '.' then\n      dot = i\n    end\n    if file_name:sub(i,\
    \ i) >= '0' and file_name:sub(i, i) <= '9' then\n      count = count + 1\n   \
    \ end\n  end\n  if count > 3 then\n    return 'No'\n  end\n  if file_name:sub(1,\
    \ 1) >= '0' and file_name:sub(1, 1) <= '9' then\n    return 'No'\n  end\n  if\
    \ file_name:sub(dot + 1, dot + 3) == 'txt' then\n    ext = 1\n  elseif file_name:sub(dot\
    \ + 1, dot + 3) == 'exe' then\n    ext = 1\n  elseif file_name:sub(dot + 1, dot\
    \ + 3) == 'dll' then\n    ext = 1\n  end\n  if ext == 1 then\n    return 'Yes'\n\
    \  else\n    return 'No'\n  end\nend", "    -- Write your code here\n    local\
    \ count = 0\n    local dot_count = 0\n    local ext = \"\"\n    local name = \"\
    \"\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n\
    \            dot_count = dot_count + 1\n            name = file_name:sub(1, i\
    \ - 1)\n            ext = file_name:sub(i + 1, #file_name)\n        end\n    \
    \    if file_name:sub(i, i):match(\"%d\") then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 or dot_count ~= 1 or name:match(\"^%a\"\
    ) == nil or (ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\") then\n    \
    \    return \"No\"\n    else\n        return \"Yes\"\n    end\nend", "    -- your\
    \ code here\n    local count = 0\n    local count_dot = 0\n    local count_digit\
    \ = 0\n    local count_letter = 0\n    local count_extension = 0\n    local count_extension_txt\
    \ = 0\n    local count_extension_exe = 0\n    local count_extension_dll = 0\n\
    \    local count_extension_other = 0\n    for i = 1, #file_name do\n        if\
    \ file_name:sub(i, i) == \".\" then\n            count_dot = count_dot + 1\n \
    \       end\n        if file_name:sub(i, i) == \".\" or file_name:sub(i, i) ==\
    \ \"t\" or file_name:sub(i, i) == \"x\" or file_name:sub(i, i) == \"e\" or file_name:sub(i,\
    \ i) == \"d\" or file_name:sub(i, i) == \"l\" then\n            count_extension\
    \ = count_extension + 1\n        end\n        if file_name:sub(i, i) == \"t\"\
    \ then\n            count_extension_txt = count_extension_txt + 1\n        end\n\
    \        if file_name:sub(i, i) == \"x\" then\n            count_extension_exe\
    \ = count_extension_exe + 1\n        end\n        if file_name:sub(i, i) == \"\
    d\" then\n            count_extension_dll = count_extension_dll + 1\n        end\n\
    \        if file_name:sub(i, i) == \".\" or file_name:sub(i, i) == \"t\" or file_name:sub(i,\
    \ i) == \"x\" or file_name:sub(i, i) == \"e\" or file_name:sub(i, i) == \"d\"\
    \ or file_name:sub(i, i) == \"l\" then\n            count_extension_other = count_extension_other\
    \ + 1\n        end\n        if file_name:sub(i, i) == \"0\" or file_name:sub(i,\
    \ i) == \"1\" or file_name:sub(i, i) == \"2", "    -- your code here\n    local\
    \ count = 0\n    local count_dot = 0\n    local count_digit = 0\n    local count_letter\
    \ = 0\n    local count_ext = 0\n    local count_ext_txt = 0\n    local count_ext_exe\
    \ = 0\n    local count_ext_dll = 0\n    local count_ext_txt_exe_dll = 0\n    local\
    \ count_ext_txt_exe_dll_dot = 0\n    local count_ext_txt_exe_dll_dot_letter =\
    \ 0\n    local count_ext_txt_exe_dll_dot_letter_digit = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_exe = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_dll\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll = 0\n    local\
    \ count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_txt\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_exe\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_dll\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_txt_exe_dll\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_txt_exe_dll_digit\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_txt_exe_dll_digit_txt\
    \ = 0\n    local count_ext_txt_exe_dll_dot_letter_digit_txt_exe_dll_digit_txt_exe_dll_digit_exe\
    \ = 0\n    local count_ext_txt_exe_dll_dot", "    -- Write your code here\nend",
  "    if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z]{3}$\") then\n        return\
    \ \"Yes\"\n    else\n        return \"No\"\n    end\nend", "    local count =\
    \ 0\n    local dot_pos = 0\n    local ext = \"\"\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i, i) == \".\" then\n            dot_pos = i\n     \
    \   end\n        if file_name:sub(i, i):match(\"%d\") then\n            count\
    \ = count + 1\n        end\n    end\n    if count > 3 then\n        return \"\
    No\"\n    end\n    if dot_pos == 0 then\n        return \"No\"\n    end\n    if\
    \ dot_pos == 1 then\n        return \"No\"\n    end\n    if not file_name:sub(1,\
    \ dot_pos - 1):match(\"%a\") then\n        return \"No\"\n    end\n    ext = file_name:sub(dot_pos\
    \ + 1, #file_name)\n    if ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    -- TODO:\
    \ Implement this function\nend", "    -- your code here\n    local count = 0\n\
    \    local dot = false\n    local ext = false\n    local ext_list = {'txt', 'exe',\
    \ 'dll'}\n    local ext_name = ''\n    local file_name_list = {}\n    for i =\
    \ 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n            dot\
    \ = true\n        end\n        if file_name:sub(i, i):match('%d') then\n     \
    \       count = count + 1\n        end\n        if dot then\n            ext_name\
    \ = ext_name .. file_name:sub(i, i)\n        end\n    end\n    for i = 1, #ext_list\
    \ do\n        if ext_name == ext_list[i] then\n            ext = true\n      \
    \  end\n    end\n    if count > 3 or not dot or not file_name:sub(1, 1):match('%a')\
    \ or not ext then\n        return 'No'\n    else\n        return 'Yes'\n    end\n\
    end", "    -- Write your code here\n    return 'Yes'\nend", "    -- your code\
    \ here\nend", "    -- your code here\n    local count = 0\n    local dot = 0\n\
    \    local ext = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot = i\n        end\n        if file_name:sub(i,\
    \ i):match(\"%d\") then\n            count = count + 1\n        end\n    end\n\
    \    if count > 3 then\n        return \"No\"\n    end\n    if dot == 0 then\n\
    \        return \"No\"\n    end\n    if file_name:sub(1, 1):match(\"%a\") == nil\
    \ then\n        return \"No\"\n    end\n    ext = file_name:sub(dot + 1, #file_name)\n\
    \    if ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\" then\n        return\
    \ \"No\"\n    end\n    return \"Yes\"\nend", "    return 'Yes'\nend", "    --\
    \ your code here\nend", "    -- your code here\n    local count = 0\n    local\
    \ dot_count = 0\n    local dot_index = 0\n    local extension = \"\"\n    local\
    \ valid_extensions = {\"txt\", \"exe\", \"dll\"}\n    local valid_extension =\
    \ false\n    local valid_name = false\n    local valid_number = false\n    local\
    \ valid_dot = false\n    local valid_start = false\n    local valid_end = false\n\
    \    local valid_file = false\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_number = false\n    local valid_dot = false\n    local\
    \ valid_start = false\n    local valid_end = false\n    local valid_file = false\n\
    \    local valid_extension = false\n    local valid_name = false\n    local valid_number\
    \ = false\n    local valid_dot = false\n    local valid_start = false\n    local\
    \ valid_end = false\n    local valid_file = false\n    local valid_extension =\
    \ false\n    local valid_name = false\n    local valid_number = false\n    local\
    \ valid_dot = false\n    local valid_start = false\n    local valid_end = false\n\
    \    local valid_file = false\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_number = false\n    local valid_dot = false\n    local\
    \ valid_start = false\n    local valid_end = false\n    local valid_file = false\n\
    \    local valid_extension = false\n    local valid_name = false\n    local valid_number\
    \ = false\n    local valid_dot = false\n    local valid_start = false\n    local\
    \ valid_end = false\n    local valid_file = false\n    local valid_extension =\
    \ false\n    local valid_name = false\n    local valid_number = false\n    local\
    \ valid_dot = false\n    local valid_start = false\n    local valid_end = false\n\
    \    local valid_file = false\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_number = false\n    local valid_dot = false\n    local\
    \ valid_start = false\n    local valid_end = false\n    local valid_file = false\n\
    \    local valid_", "    -- Write your code here\n    return 'Yes'\nend", "  \
    \  local dot_index = file_name:find(\"%.\")\n    local dot_index_2 = file_name:find(\"\
    %.\", dot_index + 1)\n    local digits_count = file_name:gsub(\"%d\", \"\"):len()\n\
    \    local extension = file_name:sub(dot_index + 1)\n    if dot_index == nil or\
    \ dot_index_2 ~= nil or digits_count > 3 or extension ~= \"txt\" and extension\
    \ ~= \"exe\" and extension ~= \"dll\" then\n        return \"No\"\n    end\n \
    \   return \"Yes\"\nend", "    local count = 0\n    local dot_count = 0\n    local\
    \ ext = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i, i) ==\
    \ \".\" then\n            dot_count = dot_count + 1\n        end\n        if file_name:sub(i,\
    \ i) == \".\" or file_name:sub(i, i) == \"-\" then\n            break\n      \
    \  end\n        if file_name:sub(i, i):match(\"%d\") then\n            count =\
    \ count + 1\n        end\n    end\n    if dot_count ~= 1 then\n        return\
    \ \"No\"\n    end\n    if count > 3 then\n        return \"No\"\n    end\n   \
    \ if file_name:sub(1, 1):match(\"%a\") == nil then\n        return \"No\"\n  \
    \  end\n    ext = file_name:sub(#file_name - 2, #file_name)\n    if ext ~= \"\
    txt\" and ext ~= \"exe\" and ext ~= \"dll\" then\n        return \"No\"\n    end\n\
    \    return \"Yes\"\nend", "    local dot_pos = string.find(file_name, '%.')\n\
    \    if not dot_pos then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.find(prefix, '%d') or not string.find(prefix, '%a') or string.len(prefix)\
    \ == 0 then\n        return 'No'\n    end\n    if string.len(prefix) > 3 then\n\
    \        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and\
    \ suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    -- your code here\nend", "    -- TODO: Implement this function\nend", "   \
    \ -- Write your code here\nend", "    -- Write your code here\n    return 'Yes'\n\
    end", "    -- TODO: implement the function\nend", "  -- your code here\n  local\
    \ dot = string.find(file_name, \"%.\")\n  if dot == nil then\n    return \"No\"\
    \n  end\n  local before_dot = string.sub(file_name, 1, dot - 1)\n  local after_dot\
    \ = string.sub(file_name, dot + 1)\n  if string.match(before_dot, \"%d\") == nil\
    \ and string.match(before_dot, \"%a\") ~= nil then\n    if string.match(after_dot,\
    \ \"txt\") ~= nil or string.match(after_dot, \"exe\") ~= nil or string.match(after_dot,\
    \ \"dll\") ~= nil then\n      return \"Yes\"\n    end\n  end\n  return \"No\"\n\
    end", "    -- Write your code here\nend", "    -- your code here\n    local count\
    \ = 0\n    local dot = 0\n    local ext = \"\"\n    for i = 1, #file_name do\n\
    \        if string.find(file_name, \"%d\") then\n            count = count + 1\n\
    \        end\n        if string.find(file_name, \"%.\") then\n            dot\
    \ = dot + 1\n        end\n        if string.find(file_name, \"%.\") then\n   \
    \         ext = string.sub(file_name, i + 1)\n        end\n    end\n    if count\
    \ > 3 or dot ~= 1 or string.find(file_name, \"%d\") or ext ~= \"txt\" or ext ~=\
    \ \"exe\" or ext ~= \"dll\" then\n        return \"No\"\n    else\n        return\
    \ \"Yes\"\n    end\nend", "    if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\"\
    ) then\n        local _, count = file_name:gsub(\"%d\", \"\")\n        if count\
    \ <= 3 then\n            local ext = file_name:match(\"%.[a-zA-Z0-9]*$\")\n  \
    \          if ext == \".txt\" or ext == \".exe\" or ext == \".dll\" then\n   \
    \             return \"Yes\"\n            end\n        end\n    end\n    return\
    \ \"No\"\nend", "    -- Write your code here\nend", "    -- Write your code here\n\
    \    return 'No'\nend", "    -- TODO: implement the function\nend", "  -- TODO:\
    \ Implement this function\nend", "    -- TODO: Implement this function\nend",
  "    -- your code here\nend", "    -- your code here\n    local count = 0\n    local\
    \ dot = 0\n    local ext = false\n    local ext_list = {'txt', 'exe', 'dll'}\n\
    \    local ext_name = ''\n    local file_name_len = string.len(file_name)\n  \
    \  for i = 1, file_name_len do\n        local char = string.sub(file_name, i,\
    \ i)\n        if char == '.' then\n            dot = dot + 1\n        elseif char\
    \ >= '0' and char <= '9' then\n            count = count + 1\n        end\n  \
    \  end\n    if dot ~= 1 then\n        return 'No'\n    end\n    for i = 1, file_name_len\
    \ do\n        local char = string.sub(file_name, i, i)\n        if char == '.'\
    \ then\n            ext = true\n        elseif ext then\n            ext_name\
    \ = ext_name .. char\n        end\n    end\n    for i = 1, #ext_list do\n    \
    \    if ext_name == ext_list[i] then\n            return 'Yes'\n        end\n\
    \    end\n    return 'No'\nend", "    local dot_pos = string.find(file_name, '%.')\n\
    \    if not dot_pos then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ local prefix_len = string.len(prefix)\n    local suffix_len = string.len(suffix)\n\
    \    if prefix_len == 0 or prefix_len > 8 or suffix_len == 0 or suffix_len > 3\
    \ then\n        return 'No'\n    end\n    local prefix_digit_count = 0\n    for\
    \ i = 1, prefix_len do\n        local c = string.sub(prefix, i, i)\n        if\
    \ c >= '0' and c <= '9' then\n            prefix_digit_count = prefix_digit_count\
    \ + 1\n        end\n    end\n    if prefix_digit_count > 3 then\n        return\
    \ 'No'\n    end\n    local c = string.sub(prefix, 1, 1)\n    if not (c >= 'a'\
    \ and c <= 'z' or c >= 'A' and c <= 'Z') then\n        return 'No'\n    end\n\
    \    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n    local\
    \ dot_count = 0\n    local extention = \"\"\n    local name = \"\"\n    for i\
    \ = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n         \
    \   dot_count = dot_count + 1\n            name = file_name:sub(1, i - 1)\n  \
    \          extention = file_name:sub(i + 1, #file_name)\n        end\n       \
    \ if file_name:sub(i, i) >= \"0\" and file_name:sub(i, i) <= \"9\" then\n    \
    \        count = count + 1\n        end\n    end\n    if count > 3 or dot_count\
    \ ~= 1 or #name == 0 or not (name:sub(1, 1) >= \"a\" and name:sub(1, 1) <= \"\
    z\" or name:sub(1, 1) >= \"A\" and name:sub(1, 1) <= \"Z\") or not (extention\
    \ == \"txt\" or extention == \"exe\" or extention == \"dll\") then\n        return\
    \ \"No\"\n    else\n        return \"Yes\"\n    end\nend", "    local dot_index\
    \ = string.find(file_name, '%.')\n    if dot_index == nil then\n        return\
    \ 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_index - 1)\n\
    \    local suffix = string.sub(file_name, dot_index + 1)\n    local prefix_len\
    \ = string.len(prefix)\n    local suffix_len = string.len(suffix)\n    if prefix_len\
    \ == 0 or prefix_len > 8 or suffix_len == 0 or suffix_len > 3 then\n        return\
    \ 'No'\n    end\n    local prefix_digit_count = 0\n    for i = 1, prefix_len do\n\
    \        local c = string.sub(prefix, i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            prefix_digit_count = prefix_digit_count + 1\n        end\n\
    \    end\n    if prefix_digit_count > 3 then\n        return 'No'\n    end\n \
    \   local c = string.sub(prefix, 1, 1)\n    if not (c >= 'a' and c <= 'z' or c\
    \ >= 'A' and c <= 'Z') then\n        return 'No'\n    end\n    if suffix ~= 'txt'\
    \ and suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    -- TODO: Implement this function\nend", "  -- your\
    \ code here\n  local dot = string.find(file_name, \"%.\")\n  local before_dot\
    \ = string.sub(file_name, 1, dot - 1)\n  local after_dot = string.sub(file_name,\
    \ dot + 1)\n  local count = 0\n  for i = 1, #before_dot do\n    if string.find(before_dot,\
    \ \"%d\") then\n      count = count + 1\n    end\n  end\n  if count > 3 then\n\
    \    return \"No\"\n  end\n  if string.find(before_dot, \"%a\") == nil then\n\
    \    return \"No\"\n  end\n  if after_dot ~= \"txt\" and after_dot ~= \"exe\"\
    \ and after_dot ~= \"dll\" then\n    return \"No\"\n  end\n  return \"Yes\"\n\
    end", "    -- your code here\n    local count = 0\n    local count_dot = 0\n \
    \   local count_number = 0\n    local count_letter = 0\n    local count_letter_after_dot\
    \ = 0\n    local count_letter_before_dot = 0\n    local count_letter_after_dot_txt\
    \ = 0\n    local count_letter_after_dot_exe = 0\n    local count_letter_after_dot_dll\
    \ = 0\n    local count_letter_before_dot_txt = 0\n    local count_letter_before_dot_exe\
    \ = 0\n    local count_letter_before_dot_dll = 0\n    local count_letter_before_dot_txt_exe\
    \ = 0\n    local count_letter_before_dot_txt_dll = 0\n    local count_letter_before_dot_exe_dll\
    \ = 0\n    local count_letter_before_dot_txt_exe_dll = 0\n    local count_letter_after_dot_txt_exe\
    \ = 0\n    local count_letter_after_dot_txt_dll = 0\n    local count_letter_after_dot_exe_dll\
    \ = 0\n    local count_letter_after_dot_txt_exe_dll = 0\n    local count_letter_after_dot_txt_exe_dll_before\
    \ = 0\n    local count_letter_after_dot_txt_exe_dll_before_number = 0\n    local\
    \ count_letter_after_dot_txt_exe_dll_before_number_txt = 0\n    local count_letter_after_dot_txt_exe_dll_before_number_exe\
    \ = 0\n    local count_letter_after_dot_txt_exe_dll_before_number_dll = 0\n  \
    \  local count_letter_after_dot_txt_exe_dll_before_number_txt_exe = 0\n    local\
    \ count_letter_after_dot_txt_exe_dll_before_number_txt_dll = 0\n    local count_letter_after_dot_txt_exe_dll_before_number_exe_dll\
    \ = 0\n    local count_letter_after_dot_txt_exe_dll_before_number_txt_exe_dll\
    \ = 0\n    local count_letter_after_dot_txt_exe_dll", "    local count = 0\n \
    \   local dot_count = 0\n    local dot_index = 0\n    local ext_index = 0\n  \
    \  local ext = \"\"\n    local ext_list = {\"txt\", \"exe\", \"dll\"}\n    for\
    \ i = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n       \
    \     dot_count = dot_count + 1\n            dot_index = i\n        end\n    \
    \    if file_name:sub(i, i):match(\"%d\") then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 then\n        return \"No\"\n    end\n\
    \    if dot_count ~= 1 then\n        return \"No\"\n    end\n    if dot_index\
    \ == 1 then\n        return \"No\"\n    end\n    if not file_name:sub(1, dot_index\
    \ - 1):match(\"%a\") then\n        return \"No\"\n    end\n    ext_index = dot_index\
    \ + 1\n    ext = file_name:sub(ext_index, #file_name)\n    for i = 1, #ext_list\
    \ do\n        if ext == ext_list[i] then\n            return \"Yes\"\n       \
    \ end\n    end\n    return \"No\"\nend", "    -- your code here\n    local dot\
    \ = string.find(file_name, \"%.\")\n    local pre = string.sub(file_name, 1, dot\
    \ - 1)\n    local post = string.sub(file_name, dot + 1)\n    local count = 0\n\
    \    for i = 1, #pre do\n        if string.find(pre, \"%d\") then\n          \
    \  count = count + 1\n        end\n    end\n    if count > 3 then\n        return\
    \ \"No\"\n    end\n    if string.find(pre, \"%a\") == nil then\n        return\
    \ \"No\"\n    end\n    if post ~= \"txt\" and post ~= \"exe\" and post ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    local dot_index\
    \ = string.find(file_name, '%.')\n    local pre_dot = string.sub(file_name, 1,\
    \ dot_index - 1)\n    local post_dot = string.sub(file_name, dot_index + 1)\n\
    \    if string.match(pre_dot, '[0-9]') == nil and string.match(post_dot, '[0-9]')\
    \ == nil then\n        if string.match(pre_dot, '[a-zA-Z]') ~= nil and string.match(pre_dot,\
    \ '[a-zA-Z]') == string.sub(pre_dot, 1, 1) then\n            if post_dot == 'txt'\
    \ or post_dot == 'exe' or post_dot == 'dll' then\n                return 'Yes'\n\
    \            end\n        end\n    end\n    return 'No'\nend", "    -- Write your\
    \ code here\n    local count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local extension = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match(\"%d\") then\n      \
    \      count = count + 1\n        end\n    end\n    if count > 3 then\n      \
    \  return \"No\"\n    end\n    if dot_count ~= 1 then\n        return \"No\"\n\
    \    end\n    if file_name:sub(1, 1):match(\"%a\") == nil then\n        return\
    \ \"No\"\n    end\n    extension = file_name:sub(dot_index + 1, #file_name)\n\
    \    if extension ~= \"txt\" and extension ~= \"exe\" and extension ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    -- Write\
    \ your code here\nend", "  -- your code here\n  local count = 0\n  local dot_count\
    \ = 0\n  local ext = \"\"\n  local name = \"\"\n  local ext_list = {\"txt\", \"\
    exe\", \"dll\"}\n  for i = 1, #file_name do\n    if string.match(file_name:sub(i,\
    \ i), \"%d\") then\n      count = count + 1\n    end\n    if file_name:sub(i,\
    \ i) == \".\" then\n      dot_count = dot_count + 1\n      ext = file_name:sub(i\
    \ + 1)\n    end\n  end\n  name = file_name:sub(1, #file_name - #ext - 1)\n  if\
    \ count > 3 or dot_count ~= 1 or #name == 0 or not string.match(name:sub(1, 1),\
    \ \"%a\") then\n    return \"No\"\n  end\n  for i = 1, #ext_list do\n    if ext\
    \ == ext_list[i] then\n      return \"Yes\"\n    end\n  end\n  return \"No\"\n\
    end", "  -- your code here\n  local count = 0\n  local count2 = 0\n  local count3\
    \ = 0\n  local count4 = 0\n  local count5 = 0\n  local count6 = 0\n  local count7\
    \ = 0\n  local count8 = 0\n  local count9 = 0\n  local count10 = 0\n  local count11\
    \ = 0\n  local count12 = 0\n  local count13 = 0\n  local count14 = 0\n  local\
    \ count15 = 0\n  local count16 = 0\n  local count17 = 0\n  local count18 = 0\n\
    \  local count19 = 0\n  local count20 = 0\n  local count21 = 0\n  local count22\
    \ = 0\n  local count23 = 0\n  local count24 = 0\n  local count25 = 0\n  local\
    \ count26 = 0\n  local count27 = 0\n  local count28 = 0\n  local count29 = 0\n\
    \  local count30 = 0\n  local count31 = 0\n  local count32 = 0\n  local count33\
    \ = 0\n  local count34 = 0\n  local count35 = 0\n  local count36 = 0\n  local\
    \ count37 = 0\n  local count38 = 0\n  local count39 = 0\n  local count40 = 0\n\
    \  local count41 = 0\n  local count42 = 0\n  local count43 = 0\n  local count44\
    \ = 0\n  local count45 = 0\n  local count46 = 0\n  local count47 = 0\n  local\
    \ count48 = 0\n  local count49 = 0\n  local count50 = 0\n  local count51 = 0\n\
    \  local count52 = 0\n  local count53 = 0\n  local count54 = 0\n  local count55\
    \ = 0\n  local count56 = 0\n  local count57 = 0\n  local count58 = 0\n  local\
    \ count59 = 0\n  local count60 = 0\n  local count61 = 0\n  local count62 = 0\n\
    \  local count63 = 0\n  local count64 = 0\n  local count65 = 0\n  local count66\
    \ = 0\n  local count67 = 0\n  local count68 = 0\n  local count69 = 0\n  local\
    \ count70 = 0\n  local count71 = 0\n  local count72 = 0\n  local", "    local\
    \ dot_index = file_name:find(\"%.\")\n    if not dot_index then\n        return\
    \ \"No\"\n    end\n    local prefix = file_name:sub(1, dot_index - 1)\n    local\
    \ suffix = file_name:sub(dot_index + 1)\n    if #prefix == 0 or #suffix == 0 then\n\
    \        return \"No\"\n    end\n    if not prefix:match(\"^[a-zA-Z]\") then\n\
    \        return \"No\"\n    end\n    if #prefix:gsub(\"%d\", \"\") ~= #prefix\
    \ then\n        return \"No\"\n    end\n    if #prefix:gsub(\"%d\", \"\") > 3\
    \ then\n        return \"No\"\n    end\n    if suffix ~= \"txt\" and suffix ~=\
    \ \"exe\" and suffix ~= \"dll\" then\n        return \"No\"\n    end\n    return\
    \ \"Yes\"\nend", "    if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\"\
    ) then\n        if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\") then\n\
    \            if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\") then\n\
    \                if file_name:match(\"^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\")\
    \ then\n                    return \"Yes\"\n                end\n            end\n\
    \        end\n    end\n    return \"No\"\nend", "    -- your code here\n    return\
    \ \"No\"\nend", "    -- your code here\n    local count = 0\n    local dot = 0\n\
    \    local ext = 0\n    local first = 0\n    for i = 1, #file_name do\n      \
    \  if file_name:sub(i,i) == \".\" then\n            dot = dot + 1\n        end\n\
    \        if file_name:sub(i,i) == \".\" and i == 1 then\n            return \"\
    No\"\n        end\n        if file_name:sub(i,i) == \".\" and i ~= 1 then\n  \
    \          if file_name:sub(i+1,i+1) == \"t\" and file_name:sub(i+2,i+2) == \"\
    x\" and file_name:sub(i+3,i+3) == \"t\" then\n                ext = ext + 1\n\
    \            elseif file_name:sub(i+1,i+1) == \"e\" and file_name:sub(i+2,i+2)\
    \ == \"x\" and file_name:sub(i+3,i+3) == \"e\" then\n                ext = ext\
    \ + 1\n            elseif file_name:sub(i+1,i+1) == \"d\" and file_name:sub(i+2,i+2)\
    \ == \"l\" and file_name:sub(i+3,i+3) == \"l\" then\n                ext = ext\
    \ + 1\n            end\n        end\n        if file_name:sub(i,i) == \"0\" or\
    \ file_name:sub(i,i) == \"1\" or file_name:sub(i,i) == \"2\" or file_name:sub(i,i)\
    \ == \"3\" or file_name:sub(i,i) == \"4\" or file_name:sub(i,i) == \"5\" or file_name:sub(i,i)\
    \ == \"6\" or file_name:sub(i,i) == \"7\" or file_name:sub(i,i) == \"8\" or file_name:sub(i,i)\
    \ == \"9\" then\n            count = count + 1\n        end\n        if file_name:sub(i,i)\
    \ == \"a\" or file", "    local dot_pos = string.find(file_name, '%.')\n    if\
    \ not dot_pos then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.find(prefix, '%d') or string.find(prefix, '%D') or string.find(prefix,\
    \ '%d', 2) or string.find(prefix, '%d', 3) then\n        return 'No'\n    end\n\
    \    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    -- your code here\n    local\
    \ count = 0\n    local dot = 0\n    local ext = false\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == \".\" then\n            dot = i\n    \
    \    end\n        if file_name:sub(i, i) >= \"0\" and file_name:sub(i, i) <= \"\
    9\" then\n            count = count + 1\n        end\n    end\n    if count >\
    \ 3 then\n        return \"No\"\n    end\n    if file_name:sub(1, 1) >= \"a\"\
    \ and file_name:sub(1, 1) <= \"z\" or file_name:sub(1, 1) >= \"A\" and file_name:sub(1,\
    \ 1) <= \"Z\" then\n        if file_name:sub(dot + 1, dot + 3) == \"txt\" or file_name:sub(dot\
    \ + 1, dot + 3) == \"exe\" or file_name:sub(dot + 1, dot + 3) == \"dll\" then\n\
    \            ext = true\n        end\n    end\n    if ext == true then\n     \
    \   return \"Yes\"\n    else\n        return \"No\"\n    end\nend", "    -- Write\
    \ your code here\n    local count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local len = string.len(file_name)\n    for i = 1, len do\n        local\
    \ c = string.sub(file_name, i, i)\n        if c >= '0' and c <= '9' then\n   \
    \         count = count + 1\n        elseif c == '.' then\n            dot_count\
    \ = dot_count + 1\n            dot_index = i\n        end\n    end\n    if count\
    \ > 3 or dot_count ~= 1 then\n        return 'No'\n    end\n    local prefix =\
    \ string.sub(file_name, 1, dot_index - 1)\n    local suffix = string.sub(file_name,\
    \ dot_index + 1, len)\n    if string.len(prefix) == 0 or string.find(prefix, '[a-zA-Z]')\
    \ ~= 1 then\n        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~=\
    \ 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local dot_pos = file_name:find('.')\n    if not dot_pos then\n    \
    \    return 'No'\n    end\n    local before_dot = file_name:sub(1, dot_pos - 1)\n\
    \    local after_dot = file_name:sub(dot_pos + 1)\n    if not before_dot:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if before_dot:match('%d') and before_dot:match('%d'):len()\
    \ > 3 then\n        return 'No'\n    end\n    if not (after_dot == 'txt' or after_dot\
    \ == 'exe' or after_dot == 'dll') then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local dot_pos = string.find(file_name, \"%.\")\n    if dot_pos\
    \ == nil then\n        return \"No\"\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.find(prefix, \"%d\") ~= nil then\n        return \"No\"\n    end\n\
    \    if string.find(prefix, \"%a\") == nil then\n        return \"No\"\n    end\n\
    \    if string.find(suffix, \"%d\") ~= nil then\n        return \"No\"\n    end\n\
    \    if suffix ~= \"txt\" and suffix ~= \"exe\" and suffix ~= \"dll\" then\n \
    \       return \"No\"\n    end\n    return \"Yes\"\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local ext = \"\"\n    local name = \"\"\n    local\
    \ ext_list = {\"txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name do\n     \
    \   if string.find(file_name, \"%d\") then\n            count = count + 1\n  \
    \      end\n        if string.find(file_name, \"%.\") then\n            dot_count\
    \ = dot_count + 1\n        end\n    end\n    if count > 3 then\n        return\
    \ \"No\"\n    end\n    if dot_count > 1 then\n        return \"No\"\n    end\n\
    \    if string.find(file_name, \"%.\") then\n        name = string.sub(file_name,\
    \ 1, string.find(file_name, \"%.\") - 1)\n        ext = string.sub(file_name,\
    \ string.find(file_name, \"%.\") + 1)\n    end\n    if string.find(name, \"%d\"\
    ) then\n        return \"No\"\n    end\n    if not string.find(ext, ext_list[1])\
    \ and not string.find(ext, ext_list[2]) and not string.find(ext, ext_list[3])\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    -- your\
    \ code here\n    local count = 0\n    local dot = 0\n    local ext = 0\n    local\
    \ start = 0\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == \"\
    .\" then\n            dot = dot + 1\n        end\n        if file_name:sub(i,\
    \ i) == \".\" and dot == 1 then\n            ext = i\n        end\n        if\
    \ file_name:sub(i, i) == \".\" and dot > 1 then\n            return \"No\"\n \
    \       end\n        if file_name:sub(i, i) >= \"0\" and file_name:sub(i, i) <=\
    \ \"9\" then\n            count = count + 1\n        end\n        if count > 3\
    \ then\n            return \"No\"\n        end\n        if file_name:sub(i, i)\
    \ >= \"a\" and file_name:sub(i, i) <= \"z\" or file_name:sub(i, i) >= \"A\" and\
    \ file_name:sub(i, i) <= \"Z\" then\n            start = 1\n        end\n    end\n\
    \    if dot == 0 then\n        return \"No\"\n    end\n    if start == 0 then\n\
    \        return \"No\"\n    end\n    if file_name:sub(ext + 1, ext + 3) == \"\
    txt\" or file_name:sub(ext + 1, ext + 3) == \"exe\" or file_name:sub(ext + 1,\
    \ ext + 3) == \"dll\" then\n        return \"Yes\"\n    else\n        return \"\
    No\"\n    end\nend", "    -- your code here\n    local count = 0\n    local dot\
    \ = false\n    local ext = false\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot = true\n        end\n        if file_name:sub(i,\
    \ i) >= '0' and file_name:sub(i, i) <= '9' then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n \
    \   if dot == false then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ 1) >= '0' and file_name:sub(1, 1) <= '9' then\n        return 'No'\n    end\n\
    \    if file_name:sub(#file_name - 2, #file_name) == 'txt' or file_name:sub(#file_name\
    \ - 2, #file_name) == 'exe' or file_name:sub(#file_name - 2, #file_name) == 'dll'\
    \ then\n        ext = true\n    end\n    if ext == false then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "\tlocal dot_index = file_name:find(\"\
    %.\")\n\tlocal prefix = file_name:sub(1, dot_index - 1)\n\tlocal suffix = file_name:sub(dot_index\
    \ + 1)\n\tlocal digits_count = prefix:gsub(\"%d\", \"\")\n\tlocal valid_suffixes\
    \ = {[\"txt\"] = true, [\"exe\"] = true, [\"dll\"] = true}\n\treturn (prefix:match(\"\
    ^[a-zA-Z]\") and digits_count:len() <= 3 and valid_suffixes[suffix]) and \"Yes\"\
    \ or \"No\"\nend", "    local dot_pos = file_name:find(\"%.\")\n    local ext\
    \ = file_name:sub(dot_pos + 1)\n    local name = file_name:sub(1, dot_pos - 1)\n\
    \    local digits = name:gsub(\"%D\", \"\")\n    if #digits > 3 then\n       \
    \ return \"No\"\n    end\n    if not name:match(\"^[a-zA-Z]\") then\n        return\
    \ \"No\"\n    end\n    if ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    local dot_pos\
    \ = file_name:find(\"%.\")\n    if not dot_pos then\n        return \"No\"\n \
    \   end\n    local prefix = file_name:sub(1, dot_pos - 1)\n    local suffix =\
    \ file_name:sub(dot_pos + 1)\n    if #prefix == 0 or prefix:find(\"%d\") or not\
    \ prefix:find(\"%a\") then\n        return \"No\"\n    end\n    if #suffix ~=\
    \ 3 or suffix:find(\"%d\") or not suffix:find(\"%a\") then\n        return \"\
    No\"\n    end\n    if suffix ~= \"txt\" and suffix ~= \"exe\" and suffix ~= \"\
    dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    --\
    \ Write your code here\n    if string.match(file_name, \"^[a-zA-Z][a-zA-Z0-9]*%.(txt|exe|dll)$\"\
    ) then\n        return \"Yes\"\n    else\n        return \"No\"\n    end\nend",
  "    -- TODO: implement this function\nend", "    local dot_pos = string.find(file_name,\
    \ '%.')\n    if not dot_pos then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.find(prefix, '%d') or string.find(prefix, '%d%d%d')\
    \ or #prefix == 0 then\n        return 'No'\n    end\n    if not (suffix == 'txt'\
    \ or suffix == 'exe' or suffix == 'dll') then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    -- your code here\n    return nil\nend", "    local\
    \ count = 0\n    local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c == '.' then\n      \
    \      dot_index = i\n        elseif c:match('%d') then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if dot_index == 0 then\n        return 'No'\n    end\n    if dot_index ==\
    \ 1 then\n        return 'No'\n    end\n    ext = file_name:sub(dot_index + 1)\n\
    \    if ext == 'txt' or ext == 'exe' or ext == 'dll' then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    -- Write your code here\n    return 'Yes'\n\
    end", "    local function is_valid_file_name(file_name)\n        local function\
    \ is_valid_extension(extension)\n            local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n            for _, valid_extension in ipairs(valid_extensions)\
    \ do\n                if extension == valid_extension then\n                 \
    \   return true\n                end\n            end\n            return false\n\
    \        end", "    local dot_pos = file_name:find(\"%.\")\n    if not dot_pos\
    \ then return \"No\" end\n    local prefix = file_name:sub(1, dot_pos - 1)\n \
    \   local suffix = file_name:sub(dot_pos + 1)\n    if #prefix == 0 or prefix:find(\"\
    %d\") or not prefix:find(\"%a\") then return \"No\" end\n    if #suffix ~= 3 or\
    \ not suffix:find(\"txt\") and not suffix:find(\"exe\") and not suffix:find(\"\
    dll\") then return \"No\" end\n    if #prefix:gsub(\"%D\", \"\") > 3 then return\
    \ \"No\" end\n    return \"Yes\"\nend", "    local dot_idx = file_name:find(\"\
    %.\")\n    if not dot_idx then\n        return \"No\"\n    end\n    local prefix\
    \ = file_name:sub(1, dot_idx - 1)\n    local suffix = file_name:sub(dot_idx +\
    \ 1)\n    if #prefix == 0 or #prefix:gsub(\"%d\", \"\") ~= #prefix or #prefix:gsub(\"\
    %d\", \"\") > 3 then\n        return \"No\"\n    end\n    if suffix ~= \"txt\"\
    \ and suffix ~= \"exe\" and suffix ~= \"dll\" then\n        return \"No\"\n  \
    \  end\n    return \"Yes\"\nend", "    -- Write your code here\n    local count\
    \ = 0\n    local dot_count = 0\n    local dot_index = 0\n    local ext = \"\"\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n\
    \            dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match(\"%d\") then\n            count = count\
    \ + 1\n        end\n    end\n    if dot_count ~= 1 then\n        return \"No\"\
    \n    end\n    if count > 3 then\n        return \"No\"\n    end\n    if dot_index\
    \ == 1 then\n        return \"No\"\n    end\n    if not file_name:sub(1, dot_index\
    \ - 1):match(\"^[a-zA-Z]\") then\n        return \"No\"\n    end\n    ext = file_name:sub(dot_index\
    \ + 1, #file_name)\n    if ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    -- your\
    \ code here\n    local count = 0\n    local dot = false\n    local ext = false\n\
    \    local valid = false\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot = true\n        end\n        if file_name:sub(i,\
    \ i) >= \"0\" and file_name:sub(i, i) <= \"9\" then\n            count = count\
    \ + 1\n        end\n        if file_name:sub(i, i) == \".\" and file_name:sub(i\
    \ + 1, i + 3) == \"txt\" then\n            ext = true\n        end\n        if\
    \ file_name:sub(i, i) == \".\" and file_name:sub(i + 1, i + 3) == \"exe\" then\n\
    \            ext = true\n        end\n        if file_name:sub(i, i) == \".\"\
    \ and file_name:sub(i + 1, i + 3) == \"dll\" then\n            ext = true\n  \
    \      end\n    end\n    if count <= 3 and dot == true and ext == true then\n\
    \        valid = true\n    end\n    if valid == true then\n        return \"Yes\"\
    \n    else\n        return \"No\"\n    end\nend", "    local count = 0\n    local\
    \ dot_count = 0\n    local sub_str = \"\"\n    local sub_str_2 = \"\"\n    local\
    \ sub_str_3 = \"\"\n    local sub_str_4 = \"\"\n    local sub_str_5 = \"\"\n \
    \   local sub_str_6 = \"\"\n    local sub_str_7 = \"\"\n    local sub_str_8 =\
    \ \"\"\n    local sub_str_9 = \"\"\n    local sub_str_10 = \"\"\n    local sub_str_11\
    \ = \"\"\n    local sub_str_12 = \"\"\n    local sub_str_13 = \"\"\n    local\
    \ sub_str_14 = \"\"\n    local sub_str_15 = \"\"\n    local sub_str_16 = \"\"\n\
    \    local sub_str_17 = \"\"\n    local sub_str_18 = \"\"\n    local sub_str_19\
    \ = \"\"\n    local sub_str_20 = \"\"\n    local sub_str_21 = \"\"\n    local\
    \ sub_str_22 = \"\"\n    local sub_str_23 = \"\"\n    local sub_str_24 = \"\"\n\
    \    local sub_str_25 = \"\"\n    local sub_str_26 = \"\"\n    local sub_str_27\
    \ = \"\"\n    local sub_str_28 = \"\"\n    local sub_str_29 = \"\"\n    local\
    \ sub_str_30 = \"\"\n    local sub_str_31 = \"\"\n    local sub_str_32 = \"\"\n\
    \    local sub_str_33 = \"\"\n    local sub_str_34 = \"\"\n    local sub_str_35\
    \ = \"\"\n    local sub_str_36 = \"\"\n    local sub_str_37 = \"\"\n    local\
    \ sub_str_38 = \"\"\n    local sub_str_39 = \"\"\n    local sub_str_40 = \"\"\n\
    \    local sub_str_41 = \"\"\n    local sub_str_42 = \"\"\n    local sub_str_43\
    \ = \"\"\n    local sub_str_44 = \"\"\n    local sub_str_45 = \"\"\n    local\
    \ sub_str_46 = \"\"\n    local sub_str_47 = \"\"\n    local sub_str_48 = \"\"\n\
    \    local sub_str_49 = \"\"\n    local sub_str_50 = \"\"", "    -- TODO: Implement\
    \ the function here\nend", "    local dot_pos = string.find(file_name, '%.')\n\
    \    if not dot_pos then return 'No' end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.find(prefix, '%d') or string.find(prefix, '%d%d%d') then return 'No'\
    \ end\n    if not string.find(prefix, '^[a-zA-Z]') then return 'No' end\n    if\
    \ not (suffix == 'txt' or suffix == 'exe' or suffix == 'dll') then return 'No'\
    \ end\n    return 'Yes'\nend", "    -- Write your code here\n    local count =\
    \ 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension = \"\
    \"\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n\
    \            dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match(\"%d\") then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return \"No\"\n  \
    \  end\n    if dot_count ~= 1 then\n        return \"No\"\n    end\n    if file_name:sub(1,\
    \ 1):match(\"%a\") == nil then\n        return \"No\"\n    end\n    extension\
    \ = file_name:sub(dot_index + 1, #file_name)\n    if extension ~= \"txt\" and\
    \ extension ~= \"exe\" and extension ~= \"dll\" then\n        return \"No\"\n\
    \    end\n    return \"Yes\"\nend", "    -- TODO: Implement this function\nend",
  "    -- your code here\n    local count = 0\n    local dot = 0\n    local ext =\
    \ 0\n    local first = string.sub(file_name,1,1)\n    local last = string.sub(file_name,-3)\n\
    \    for i = 1, #file_name do\n        if string.sub(file_name,i,i) == \".\" then\n\
    \            dot = dot + 1\n        end\n        if string.sub(file_name,i,i)\
    \ == \"0\" or string.sub(file_name,i,i) == \"1\" or string.sub(file_name,i,i)\
    \ == \"2\" or string.sub(file_name,i,i) == \"3\" or string.sub(file_name,i,i)\
    \ == \"4\" or string.sub(file_name,i,i) == \"5\" or string.sub(file_name,i,i)\
    \ == \"6\" or string.sub(file_name,i,i) == \"7\" or string.sub(file_name,i,i)\
    \ == \"8\" or string.sub(file_name,i,i) == \"9\" then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 then\n        return \"No\"\n  \
    \  end\n    if dot ~= 1 then\n        return \"No\"\n    end\n    if first ==\
    \ \"0\" or first == \"1\" or first == \"2\" or first == \"3\" or first == \"4\"\
    \ or first == \"5\" or first == \"6\" or first == \"7\" or first == \"8\" or first\
    \ == \"9\" then\n        return \"No\"\n    end\n    if last == \"txt\" or last\
    \ == \"exe\" or last == \"dll\" then\n        ext = ext + 1\n    end\n    if ext\
    \ == 1 then\n        return \"Yes\"\n    else\n        return \"No\"\n    end\n\
    end", "    -- your code here\n    local dot_index = string.find(file_name, \"\
    %.\")\n    local file_name_without_extension = string.sub(file_name, 1, dot_index\
    \ - 1)\n    local file_name_extension = string.sub(file_name, dot_index + 1)\n\
    \    local number_of_digits = string.gsub(file_name_without_extension, \"%d\"\
    , \"\")\n    if string.len(number_of_digits) > 3 then\n        return \"No\"\n\
    \    end\n    if string.find(file_name_without_extension, \"%a\") ~= 1 then\n\
    \        return \"No\"\n    end\n    if file_name_extension ~= \"txt\" and file_name_extension\
    \ ~= \"exe\" and file_name_extension ~= \"dll\" then\n        return \"No\"\n\
    \    end\n    return \"Yes\"\nend", "    local dot_index = string.find(file_name,\
    \ '%.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local\
    \ file_name_before_dot = string.sub(file_name, 1, dot_index - 1)\n    local file_name_after_dot\
    \ = string.sub(file_name, dot_index + 1)\n    if string.len(file_name_before_dot)\
    \ == 0 or string.find(file_name_before_dot, '%d') ~= nil then\n        return\
    \ 'No'\n    end\n    if string.len(file_name_after_dot) == 0 or string.find(file_name_after_dot,\
    \ '%d') ~= nil then\n        return 'No'\n    end\n    local valid_file_extensions\
    \ = {'txt', 'exe', 'dll'}\n    for _, valid_file_extension in ipairs(valid_file_extensions)\
    \ do\n        if file_name_after_dot == valid_file_extension then\n          \
    \  return 'Yes'\n        end\n    end\n    return 'No'\nend", "    -- TODO: Implement\
    \ this function\nend", "\tlocal count = 0\n\tlocal dot_count = 0\n\tlocal dot_index\
    \ = 0\n\tlocal ext = \"\"\n\tlocal ext_list = {\"txt\", \"exe\", \"dll\"}\n\t\
    local valid_ext = false\n\tlocal valid_name = false\n\tlocal valid_extension =\
    \ false\n\tlocal valid_count = false\n\tlocal valid_dot_count = false\n\tlocal\
    \ valid_first_char = false\n\tlocal valid_file_name = false\n\t\n\t-- Count the\
    \ number of digits in the file name\n\tfor i = 1, #file_name do\n\t\tif string.find(file_name,\
    \ \"%d\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\t\n\t-- Count the number\
    \ of dots in the file name\n\tfor i = 1, #file_name do\n\t\tif string.find(file_name,\
    \ \"%.\") then\n\t\t\tdot_count = dot_count + 1\n\t\tend\n\tend\n\t\n\t-- Check\
    \ if the number of digits is less than or equal to 3\n\tif count <= 3 then\n\t\
    \tvalid_count = true\n\tend\n\t\n\t-- Check if the number of dots is equal to\
    \ 1\n\tif dot_count == 1 then\n\t\tvalid_dot_count = true\n\tend\n\t\n\t-- Check\
    \ if the first character is a letter\n\tif string.find(file_name, \"^%a\") then\n\
    \t\tvalid_first_char = true\n\tend\n\t\n\t-- Check if the extension is valid\n\
    \tfor i = 1, #ext_list do\n\t\tif string.find(file_name, ext_list[i]) then\n\t\
    \t\tvalid_ext = true\n\t\tend\n\tend\n\t\n\t-- Check if the file name is valid\n\
    \tif valid_count and valid_dot_count and valid_first_char and valid_ext then\n\
    \t\tvalid_file_name = true\n\tend\n\t\n\tif valid_file_name then\n\t\treturn \"\
    Yes\"\n\telse\n\t\treturn \"No\"\n\tend\nend", "    -- Write your code here\n\
    end", "    -- TODO: Implement this function\nend", "    -- your code here\n  \
    \  local count = 0\n    local count_dot = 0\n    local count_letter = 0\n    local\
    \ count_digit = 0\n    local count_ext = 0\n    local count_ext_txt = 0\n    local\
    \ count_ext_exe = 0\n    local count_ext_dll = 0\n    local count_ext_txt_exe_dll\
    \ = 0\n    local count_ext_txt_exe_dll_1 = 0\n    local count_ext_txt_exe_dll_2\
    \ = 0\n    local count_ext_txt_exe_dll_3 = 0\n    local count_ext_txt_exe_dll_4\
    \ = 0\n    local count_ext_txt_exe_dll_5 = 0\n    local count_ext_txt_exe_dll_6\
    \ = 0\n    local count_ext_txt_exe_dll_7 = 0\n    local count_ext_txt_exe_dll_8\
    \ = 0\n    local count_ext_txt_exe_dll_9 = 0\n    local count_ext_txt_exe_dll_10\
    \ = 0\n    local count_ext_txt_exe_dll_11 = 0\n    local count_ext_txt_exe_dll_12\
    \ = 0\n    local count_ext_txt_exe_dll_13 = 0\n    local count_ext_txt_exe_dll_14\
    \ = 0\n    local count_ext_txt_exe_dll_15 = 0\n    local count_ext_txt_exe_dll_16\
    \ = 0\n    local count_ext_txt_exe_dll_17 = 0\n    local count_ext_txt_exe_dll_18\
    \ = 0\n    local count_ext_txt_exe_dll_19 = 0\n    local count_ext_txt_exe_dll_20\
    \ = 0\n    local count_ext_txt_exe_dll_21 = 0\n    local count_ext_txt_exe_dll_22\
    \ = 0\n    local count_ext_txt_exe_dll_23 = 0\n    local count_ext_txt_exe_dll_24\
    \ = 0\n    local count_ext_txt_exe_dll_25 = 0\n    local count_ext_txt_exe_dll_26\
    \ = 0\n    local count_ext_txt", "    local dot_pos = string.find(file_name, '%.')\n\
    \    local dot_pos_2 = string.find(file_name, '%.', dot_pos + 1)\n    local dot_pos_3\
    \ = string.find(file_name, '%.', dot_pos_2 + 1)\n    local dot_pos_4 = string.find(file_name,\
    \ '%.', dot_pos_3 + 1)\n    local dot_pos_5 = string.find(file_name, '%.', dot_pos_4\
    \ + 1)\n    local dot_pos_6 = string.find(file_name, '%.', dot_pos_5 + 1)\n  \
    \  local dot_pos_7 = string.find(file_name, '%.', dot_pos_6 + 1)\n    local dot_pos_8\
    \ = string.find(file_name, '%.', dot_pos_7 + 1)\n    local dot_pos_9 = string.find(file_name,\
    \ '%.', dot_pos_8 + 1)\n    local dot_pos_10 = string.find(file_name, '%.', dot_pos_9\
    \ + 1)\n    local dot_pos_11 = string.find(file_name, '%.', dot_pos_10 + 1)\n\
    \    local dot_pos_12 = string.find(file_name, '%.', dot_pos_11 + 1)\n    local\
    \ dot_pos_13 = string.find(file_name, '%.', dot_pos_12 + 1)\n    local dot_pos_14\
    \ = string.find(file_name, '%.', dot_pos_13 + 1)\n    local dot_pos_15 = string.find(file_name,\
    \ '%.', dot_pos_14 + 1)\n    local dot_pos_16 = string.find(file_name, '%.', dot_pos_15\
    \ + 1)\n    local dot_pos_17 = string.find(file_name, '%.', dot_pos_16 + 1)\n\
    \    local dot_pos_18 = string.find(file_name, '%.', dot_pos_17 + 1)\n   ", " \
    \ -- your code here\n  local count = 0\n  local dot_count = 0\n  local dot_index\
    \ = 0\n  local extension = \"\"\n  for i = 1, #file_name do\n    if file_name:sub(i,i)\
    \ == \".\" then\n      dot_count = dot_count + 1\n      dot_index = i\n    end\n\
    \    if file_name:sub(i,i):match(\"%d\") then\n      count = count + 1\n    end\n\
    \  end\n  if dot_count ~= 1 then\n    return \"No\"\n  end\n  if count > 3 then\n\
    \    return \"No\"\n  end\n  if file_name:sub(1,1):match(\"%a\") == nil then\n\
    \    return \"No\"\n  end\n  if file_name:sub(dot_index+1,dot_index+3) == \"txt\"\
    \ or file_name:sub(dot_index+1,dot_index+3) == \"exe\" or file_name:sub(dot_index+1,dot_index+3)\
    \ == \"dll\" then\n    return \"Yes\"\n  end\n  return \"No\"\nend", "    -- your\
    \ code here\n    local count = 0\n    local dot = 0\n    local ext = 0\n    local\
    \ first = 0\n    for i = 1, #file_name do\n        if file_name:sub(i,i) == \"\
    .\" then\n            dot = dot + 1\n        end\n        if file_name:sub(i,i)\
    \ == \".\" and i == 1 then\n            return \"No\"\n        end\n        if\
    \ file_name:sub(i,i) == \".\" and i ~= 1 then\n            if file_name:sub(i+1,i+3)\
    \ == \"txt\" or file_name:sub(i+1,i+3) == \"exe\" or file_name:sub(i+1,i+3) ==\
    \ \"dll\" then\n                ext = ext + 1\n            end\n        end\n\
    \        if file_name:sub(i,i) == \".\" and i ~= 1 and file_name:sub(i+1,i+3)\
    \ ~= \"txt\" and file_name:sub(i+1,i+3) ~= \"exe\" and file_name:sub(i+1,i+3)\
    \ ~= \"dll\" then\n            return \"No\"\n        end\n        if file_name:sub(i,i)\
    \ == \".\" and i ~= 1 and file_name:sub(i+1,i+3) == \"txt\" or file_name:sub(i+1,i+3)\
    \ == \"exe\" or file_name:sub(i+1,i+3) == \"dll\" then\n            if file_name:sub(i-1,i-1)\
    \ == \"0\" or file_name:sub(i-1,i-1) == \"1\" or file_name:sub(i-1,i-1) == \"\
    2\" or file_name:sub(i-1,i-1) == \"3\" or file_name:sub(i-1,i-1) == \"4\" or file_name:sub(i-1,i-1)\
    \ == \"5\" or file_name:sub(i-1,i-1) == \"6\" or file_name:sub(i-1,i-", "    local\
    \ count = 0\n    local dot_index = 0\n    local dot_count = 0\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_start = false\n    for i = 1, #file_name do\n     \
    \   if file_name:sub(i, i) == '.' then\n            dot_index = i\n          \
    \  dot_count = dot_count + 1\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n        if file_name:sub(i,\
    \ i):match('%a') then\n            valid_start = true\n        end\n    end\n\
    \    if count > 3 then\n        return 'No'\n    end\n    if dot_count ~= 1 then\n\
    \        return 'No'\n    end\n    if file_name:sub(1, dot_index - 1) == '' then\n\
    \        return 'No'\n    end\n    if not valid_start then\n        return 'No'\n\
    \    end\n    for i = 1, #valid_extensions do\n        if file_name:sub(dot_index\
    \ + 1, #file_name) == valid_extensions[i] then\n            valid_extension =\
    \ true\n        end\n    end\n    if valid_extension then\n        return 'Yes'\n\
    \    else\n        return 'No'\n    end\nend", "  return 'Yes'\nend", "  -- your\
    \ code here\n  local count = 0\n  local count1 = 0\n  local count2 = 0\n  local\
    \ count3 = 0\n  local count4 = 0\n  local count5 = 0\n  local count6 = 0\n  local\
    \ count7 = 0\n  local count8 = 0\n  local count9 = 0\n  local count10 = 0\n  local\
    \ count11 = 0\n  local count12 = 0\n  local count13 = 0\n  local count14 = 0\n\
    \  local count15 = 0\n  local count16 = 0\n  local count17 = 0\n  local count18\
    \ = 0\n  local count19 = 0\n  local count20 = 0\n  local count21 = 0\n  local\
    \ count22 = 0\n  local count23 = 0\n  local count24 = 0\n  local count25 = 0\n\
    \  local count26 = 0\n  local count27 = 0\n  local count28 = 0\n  local count29\
    \ = 0\n  local count30 = 0\n  local count31 = 0\n  local count32 = 0\n  local\
    \ count33 = 0\n  local count34 = 0\n  local count35 = 0\n  local count36 = 0\n\
    \  local count37 = 0\n  local count38 = 0\n  local count39 = 0\n  local count40\
    \ = 0\n  local count41 = 0\n  local count42 = 0\n  local count43 = 0\n  local\
    \ count44 = 0\n  local count45 = 0\n  local count46 = 0\n  local count47 = 0\n\
    \  local count48 = 0\n  local count49 = 0\n  local count50 = 0\n  local count51\
    \ = 0\n  local count52 = 0\n  local count53 = 0\n  local count54 = 0\n  local\
    \ count55 = 0\n  local count56 = 0\n  local count57 = 0\n  local count58 = 0\n\
    \  local count59 = 0\n  local count60 = 0\n  local count61 = 0\n  local count62\
    \ = 0\n  local count63 = 0\n  local count64 = 0\n  local count65 = 0\n  local\
    \ count66 = 0\n  local count67 = 0\n  local count68 = 0\n  local count69 = 0\n\
    \  local count70 = 0\n  local count71 = 0\n  local", "    local dot_index = file_name:find(\"\
    %.\")\n    local pre_dot = file_name:sub(1, dot_index - 1)\n    local post_dot\
    \ = file_name:sub(dot_index + 1)\n    local num_digits = pre_dot:gsub(\"%d\",\
    \ \"\")\n    local valid_post_dot = post_dot == \"txt\" or post_dot == \"exe\"\
    \ or post_dot == \"dll\"\n    return #num_digits <= 3 and valid_post_dot and pre_dot:match(\"\
    ^[a-zA-Z]\")\nend", "    -- Write your code here\nend", "    -- TODO: Implement\
    \ this function\nend", "    -- Write your code here\n    return 'Yes'\nend", " \
    \   -- Write your code here\n    return 'No'\nend", "    -- your code here\n \
    \   return nil\nend", "  -- your code here\n  local count = 0\n  local dot = 0\n\
    \  local ext = 0\n  local pre = 0\n  for i = 1, #file_name do\n    if file_name:sub(i,i)\
    \ == \".\" then\n      dot = i\n    end\n    if file_name:sub(i,i) == \".\" and\
    \ (file_name:sub(i+1,i+3) == \"txt\" or file_name:sub(i+1,i+3) == \"exe\" or file_name:sub(i+1,i+3)\
    \ == \"dll\") then\n      ext = 1\n    end\n    if file_name:sub(i,i) == \".\"\
    \ and (file_name:sub(i+1,i+3) ~= \"txt\" and file_name:sub(i+1,i+3) ~= \"exe\"\
    \ and file_name:sub(i+1,i+3) ~= \"dll\") then\n      ext = 0\n    end\n    if\
    \ file_name:sub(i,i) == \".\" and file_name:sub(i+1,i+3) == \"txt\" then\n   \
    \   ext = 1\n    end\n    if file_name:sub(i,i) == \".\" and file_name:sub(i+1,i+3)\
    \ == \"exe\" then\n      ext = 1\n    end\n    if file_name:sub(i,i) == \".\"\
    \ and file_name:sub(i+1,i+3) == \"dll\" then\n      ext = 1\n    end\n    if file_name:sub(i,i)\
    \ == \".\" and file_name:sub(i+1,i+3) ~= \"txt\" and file_name:sub(i+1,i+3) ~=\
    \ \"exe\" and file_name:sub(i+1,i+3) ~= \"dll\" then\n      ext = 0\n    end\n\
    \    if file_name:sub(i,i) == \".\" and file_name:sub(i+1,i+3) == \"txt\" and\
    \ file_name:sub(i-1,i-1) == \".\" then\n      ext = 0", "    local dot_pos = file_name:find('%.')\n\
    \    if not dot_pos then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_pos - 1)\n    local suffix = file_name:sub(dot_pos + 1)\n    if #prefix\
    \ == 0 or #prefix > 8 or prefix:find('%d') or not prefix:find('%a') then\n   \
    \     return 'No'\n    end\n    if #suffix == 0 or #suffix > 3 or not suffix:find('^%a+$')\
    \ then\n        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe'\
    \ and suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "\tlocal count = 0\n\tlocal dot_count = 0\n\tlocal ext = \"\"\n\tlocal ext_count\
    \ = 0\n\tlocal ext_list = {\"txt\", \"exe\", \"dll\"}\n\tlocal ext_list_count\
    \ = 0\n\tlocal ext_list_flag = false\n\tlocal file_name_flag = false\n\tlocal\
    \ file_name_count = 0\n\tlocal file_name_list = {\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"\
    A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"\
    L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"\
    W\", \"X\", \"Y\", \"Z\"}\n\tlocal file_name_list_count = 0\n\tlocal file_name_list_flag\
    \ = false\n\tlocal file_name_list_flag_count = 0\n\tlocal file_name_list_flag_count_flag\
    \ = false\n\tlocal file_name_list_flag_count_flag_count = 0\n\tlocal file_name_list_flag_count_flag_count_flag\
    \ = false\n\tlocal file_name_list_flag_count_flag_count_flag_count = 0\n\tlocal\
    \ file_name_list_flag_count_flag_count_flag_count_flag = false\n\tlocal file_name_list_flag_count_flag_count_flag_count_flag_count\
    \ = 0\n\tlocal file_name_list_flag_count_flag_count_flag_count_flag_count_flag\
    \ = false\n\tlocal file_name_list_flag_count_flag_count_flag_count_flag_count_flag_count\
    \ = 0\n\tlocal file_name_list_flag_count_flag_count_flag_count_flag_count_flag_count_flag\
    \ = false\n\tlocal file_name_list_", "    local dot_index = string.find(file_name,\
    \ \"%.\")\n    if not dot_index then\n        return \"No\"\n    end\n    local\
    \ prefix = string.sub(file_name, 1, dot_index - 1)\n    local suffix = string.sub(file_name,\
    \ dot_index + 1)\n    local num_digits = 0\n    for i = 1, #prefix do\n      \
    \  local c = string.sub(prefix, i, i)\n        if c >= \"0\" and c <= \"9\" then\n\
    \            num_digits = num_digits + 1\n        end\n    end\n    if num_digits\
    \ > 3 then\n        return \"No\"\n    end\n    if not (string.match(prefix, \"\
    ^[a-zA-Z]\") and string.match(suffix, \"^(txt|exe|dll)$\")) then\n        return\
    \ \"No\"\n    end\n    return \"Yes\"\nend", "    local dot_index = string.find(file_name,\
    \ \"%.\")\n    local extension = string.sub(file_name, dot_index + 1)\n    local\
    \ name = string.sub(file_name, 1, dot_index - 1)\n    local digit_count = string.gsub(name,\
    \ \"%d\", \"\")\n    local first_letter = string.sub(name, 1, 1)\n    if digit_count\
    \ == name and string.len(name) > 0 and \n        (string.find(first_letter, \"\
    %a\") or string.find(first_letter, \"%A\")) and \n        (extension == \"txt\"\
    \ or extension == \"exe\" or extension == \"dll\") then\n        return \"Yes\"\
    \n    else\n        return \"No\"\n    end\nend", "    -- your code here\n   \
    \ local count = 0\n    local dot = 0\n    local ext = 0\n    local start = 0\n\
    \    local len = string.len(file_name)\n    for i = 1, len do\n        local c\
    \ = string.sub(file_name, i, i)\n        if c >= '0' and c <= '9' then\n     \
    \       count = count + 1\n        elseif c == '.' then\n            dot = dot\
    \ + 1\n        end\n        if dot == 1 then\n            if c == 't' then\n \
    \               ext = ext + 1\n            elseif c == 'x' and ext == 1 then\n\
    \                ext = ext + 1\n            elseif c == 'e' and ext == 2 then\n\
    \                ext = ext + 1\n            elseif c == 'd' and ext == 3 then\n\
    \                ext = ext + 1\n            elseif c == 'l' and ext == 4 then\n\
    \                ext = ext + 1\n            elseif c == 'l' and ext == 5 then\n\
    \                ext = ext + 1\n            end\n        end\n        if i ==\
    \ 1 and (c < 'a' or c > 'z') and (c < 'A' or c > 'Z') then\n            start\
    \ = 1\n        end\n    end\n    if count > 3 or dot ~= 1 or start == 1 or ext\
    \ ~= 6 then\n        return 'No'\n    else\n        return 'Yes'\n    end\nend",
  "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ extension = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match(\"%d\") then\n      \
    \      count = count + 1\n        end\n    end\n    if count > 3 then\n      \
    \  return \"No\"\n    end\n    if dot_count ~= 1 then\n        return \"No\"\n\
    \    end\n    if file_name:sub(1, dot_index - 1) == \"\" then\n        return\
    \ \"No\"\n    end\n    if not file_name:sub(1, dot_index - 1):match(\"^[a-zA-Z]\"\
    ) then\n        return \"No\"\n    end\n    extension = file_name:sub(dot_index\
    \ + 1, #file_name)\n    if extension ~= \"txt\" and extension ~= \"exe\" and extension\
    \ ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend", " \
    \   -- Write your code here\n    local dot_pos = string.find(file_name, \"%.\"\
    )\n    if dot_pos == nil then\n        return \"No\"\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.find(prefix, \"%d\") ~= nil then\n        return\
    \ \"No\"\n    end\n    if string.find(prefix, \"%a\") == nil then\n        return\
    \ \"No\"\n    end\n    if string.find(suffix, \"%d\") ~= nil then\n        return\
    \ \"No\"\n    end\n    if suffix ~= \"txt\" and suffix ~= \"exe\" and suffix ~=\
    \ \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "  --\
    \ your code here\n  local count = 0\n  local dot = 0\n  local ext = 0\n  local\
    \ first = 0\n  for i = 1, #file_name do\n    if file_name:sub(i,i) == \".\" then\n\
    \      dot = dot + 1\n    end\n    if file_name:sub(i,i) == \".\" and i == 1 then\n\
    \      return \"No\"\n    end\n    if file_name:sub(i,i) == \".\" and i ~= 1 then\n\
    \      if file_name:sub(i+1,i+3) == \"txt\" then\n        ext = ext + 1\n    \
    \  elseif file_name:sub(i+1,i+3) == \"exe\" then\n        ext = ext + 1\n    \
    \  elseif file_name:sub(i+1,i+3) == \"dll\" then\n        ext = ext + 1\n    \
    \  end\n    end\n    if file_name:sub(i,i) == \".\" and i == #file_name then\n\
    \      return \"No\"\n    end\n    if file_name:sub(i,i) == \".\" and i ~= #file_name\
    \ then\n      if file_name:sub(i+1,i+4) == \"txt\" then\n        ext = ext + 1\n\
    \      elseif file_name:sub(i+1,i+4) == \"exe\" then\n        ext = ext + 1\n\
    \      elseif file_name:sub(i+1,i+4) == \"dll\" then\n        ext = ext + 1\n\
    \      end\n    end\n    if file_name:sub(i,i) == \".\" and i ~= #file_name then\n\
    \      if file_name:sub(i+1,i+5) == \"txt\" then\n        ext = ext + 1\n    \
    \  elseif file_name:sub(i+1,i+5) == \"exe\" then\n        ext = ext + 1\n    \
    \  elseif file_name:sub(i+1,i+5) == \"dll\" then\n        ext = ext + 1\n    \
    \  end\n    end\n    if file_name:sub(i,i) == \".\" and i ~= #file_", "    --\
    \ write your code here\n    local count = 0\n    local dot = 0\n    local ext\
    \ = false\n    local ext_list = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            count = count + 1\n        elseif c == '.' then\n        \
    \    dot = dot + 1\n        elseif c >= 'a' and c <= 'z' or c >= 'A' and c <=\
    \ 'Z' then\n            if i == #file_name then\n                return 'No'\n\
    \            end\n            for j = 1, #ext_list do\n                if file_name:sub(i\
    \ + 1, i + 3) == ext_list[j] then\n                    ext = true\n          \
    \      end\n            end\n        end\n    end\n    if count > 3 or dot ~=\
    \ 1 or not ext then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \ local i, j = 1, 1\n  local count = 0\n  local dot_count = 0\n  local ext = {'txt',\
    \ 'exe', 'dll'}\n  local ext_count = 0\n  local ext_flag = false\n  local ext_name\
    \ = ''\n  local file_name_flag = false\n  local file_name_count = 0\n  local file_name_name\
    \ = ''\n  local file_name_name_flag = false\n  local file_name_name_count = 0\n\
    \  local file_name_name_count_flag = false\n  local file_name_name_count_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag = false\n  local file_name_name_count_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag = false\n  local\
    \ file_name_name_count_flag_flag_flag_flag_flag_flag = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag_flag\
    \ = false\n  local file_name_name_count_flag_flag_flag", "    -- Write your code\
    \ here\n    return 'No'\nend", "    -- your code here\n    local count = 0\n \
    \   local dot = 0\n    local ext = 0\n    local ext_list = {'txt', 'exe', 'dll'}\n\
    \    local ext_name = ''\n    local file_name_list = {}\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot = dot + 1\n\
    \            ext = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        return 'No'\n    end\n    if dot ~= 1 then\n        return 'No'\n\
    \    end\n    if file_name:sub(1, 1):match('%a') == nil then\n        return 'No'\n\
    \    end\n    ext_name = file_name:sub(ext + 1, #file_name)\n    for i = 1, #ext_list\
    \ do\n        if ext_name == ext_list[i] then\n            return 'Yes'\n    \
    \    end\n    end\n    return 'No'\nend", "    -- Write your code here\n    local\
    \ dot = string.find(file_name, \"%.\")\n    local ext = string.sub(file_name,\
    \ dot + 1)\n    local name = string.sub(file_name, 1, dot - 1)\n    local digits\
    \ = 0\n    for i = 1, #name do\n        if string.find(name, \"%d\") then\n  \
    \          digits = digits + 1\n        end\n    end\n    if digits > 3 then\n\
    \        return \"No\"\n    end\n    if string.find(name, \"%a\") ~= 1 then\n\
    \        return \"No\"\n    end\n    if ext ~= \"txt\" and ext ~= \"exe\" and\
    \ ext ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend",
  "    -- TODO: implement this function\nend", "    local dot_pos = string.find(file_name,\
    \ '%.')\n    if not dot_pos then\n        return 'No'\n    end\n    local name\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local ext = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.find(name, '%d') or string.find(name, '%d%d%d')\
    \ or string.len(name) == 0 then\n        return 'No'\n    end\n    if ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local dot_index = file_name:find('%.')\n    local ext = file_name:sub(dot_index\
    \ + 1)\n    local name = file_name:sub(1, dot_index - 1)\n    local digit_count\
    \ = name:gsub('%d', '')\n    if digit_count > 3 then\n        return 'No'\n  \
    \  end\n    if not name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n\
    \    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    -- your code here\n    local count = 0\n\
    \    local dot = 0\n    local ext = 0\n    local ext_list = {'txt', 'exe', 'dll'}\n\
    \    local first_char = string.sub(file_name, 1, 1)\n    if first_char:match('%a')\
    \ then\n        for i = 1, #file_name do\n            if string.sub(file_name,\
    \ i, i) == '.' then\n                dot = i\n            end\n            if\
    \ string.sub(file_name, i, i):match('%d') then\n                count = count\
    \ + 1\n            end\n        end\n        if count <= 3 and dot ~= 0 then\n\
    \            for i = 1, #ext_list do\n                if string.sub(file_name,\
    \ dot + 1) == ext_list[i] then\n                    ext = 1\n                end\n\
    \            end\n        end\n    end\n    if count <= 3 and dot ~= 0 and ext\
    \ == 1 then\n        return 'Yes'\n    else\n        return 'No'\n    end\nend",
  "    -- your code here\n    local count = 0\n    local dot_count = 0\n    local\
    \ dot_index = 0\n    local ext_index = 0\n    local ext = \"\"\n    local valid_ext\
    \ = {\"txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match(\"%d\") then\n      \
    \      count = count + 1\n        end\n    end\n    if count > 3 then\n      \
    \  return \"No\"\n    end\n    if dot_count ~= 1 then\n        return \"No\"\n\
    \    end\n    if file_name:sub(1, 1):match(\"%a\") == nil then\n        return\
    \ \"No\"\n    end\n    if file_name:sub(dot_index + 1, #file_name) == \"\" then\n\
    \        return \"No\"\n    end\n    ext = file_name:sub(dot_index + 1, #file_name)\n\
    \    for i = 1, #valid_ext do\n        if ext == valid_ext[i] then\n         \
    \   return \"Yes\"\n        end\n    end\n    return \"No\"\nend", "    local\
    \ count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local first_letter\
    \ = false\n    local extension = false\n    local extension_list = {\"txt\", \"\
    exe\", \"dll\"}\n    for i=1,#file_name do\n        local c = file_name:sub(i,i)\n\
    \        if c == \".\" then\n            dot_count = dot_count + 1\n         \
    \   dot_index = i\n        elseif c:match(\"%d\") then\n            count = count\
    \ + 1\n        elseif c:match(\"%a\") then\n            first_letter = true\n\
    \        end\n    end\n    if dot_count == 1 and first_letter and count <= 3 then\n\
    \        local ext = file_name:sub(dot_index+1)\n        for i=1,#extension_list\
    \ do\n            if ext == extension_list[i] then\n                extension\
    \ = true\n            end\n        end\n    end\n    if extension then\n     \
    \   return \"Yes\"\n    else\n        return \"No\"\n    end\nend", "    local\
    \ dot_pos = string.find(file_name, \"%.\")\n    if dot_pos == nil then\n     \
    \   return \"No\"\n    end\n    local name_before_dot = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local name_after_dot = string.sub(file_name, dot_pos +\
    \ 1)\n    if string.find(name_before_dot, \"%d\") ~= nil then\n        return\
    \ \"No\"\n    end\n    if string.find(name_before_dot, \"%a\") == nil then\n \
    \       return \"No\"\n    end\n    if string.find(name_after_dot, \"txt\") ==\
    \ nil and\n       string.find(name_after_dot, \"exe\") == nil and\n       string.find(name_after_dot,\
    \ \"dll\") == nil then\n        return \"No\"\n    end\n    return \"Yes\"\nend",
  "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ ext = \"\"\n    local ext_valid = false\n    local ext_valid_list = {\"txt\"\
    , \"exe\", \"dll\"}\n    local valid_ext_count = 0\n    local valid_ext_index\
    \ = 0\n    local valid_ext = \"\"\n    local valid_ext_list = {}\n    local valid_ext_list_count\
    \ = 0\n    local valid_ext_list_index = 0\n    local valid_ext_list_string = \"\
    \"\n    local valid_ext_list_string_count = 0\n    local valid_ext_list_string_index\
    \ = 0\n    local valid_ext_list_string_char = \"\"\n    local valid_ext_list_string_char_count\
    \ = 0\n    local valid_ext_list_string_char_index = 0\n    local valid_ext_list_string_char_valid\
    \ = false\n    local valid_ext_list_string_char_valid_list = {\"t\", \"x\", \"\
    e\", \"d\", \"l\"}\n    local valid_ext_list_string_char_valid_count = 0\n   \
    \ local valid_ext_list_string_char_valid_index = 0\n    local valid_ext_list_string_char_valid_char\
    \ = \"\"\n    local valid_ext_list_string_char_valid_char_count = 0\n    local\
    \ valid_ext_list_string_char_valid_char_index = 0\n    local valid_ext_list_string_char_valid_char_valid\
    \ = false\n    local valid_ext_list_string_char_valid_char_valid_list = {\"t\"\
    , \"x\", \"e\", \"d\", \"l\"}\n    local valid_ext_list_string_char_valid_char_valid_count\
    \ = 0\n    local valid_ext_list_string_char_valid_char_valid_index = 0\n    local\
    \ valid_ext_list_string_char_valid_char_valid_char = \"\"\n    local valid_ext_list_string_char_valid_char_valid_char_count\
    \ = 0\n    local valid_ext_list_string_char_valid_char_valid_char_index", "  \
    \  local dot_pos = file_name:find('.')\n    if not dot_pos then\n        return\
    \ 'No'\n    end\n    local prefix = file_name:sub(1, dot_pos - 1)\n    local suffix\
    \ = file_name:sub(dot_pos + 1)\n    if #prefix == 0 or #prefix > 8 or prefix:find('%d')\
    \ or not prefix:find('%a') then\n        return 'No'\n    end\n    if suffix ~=\
    \ 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "  local dot_pos = string.find(file_name, '%.')\n\
    \  if not dot_pos then\n    return 'No'\n  end\n  local ext = string.sub(file_name,\
    \ dot_pos + 1)\n  if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n   \
    \ return 'No'\n  end\n  local name = string.sub(file_name, 1, dot_pos - 1)\n \
    \ if string.find(name, '%d') then\n    return 'No'\n  end\n  if string.find(name,\
    \ '%a') then\n    return 'Yes'\n  end\n  return 'No'\nend", "    -- your code\
    \ here\n    local count = 0\n    local dot = 0\n    local ext = 0\n    local valid\
    \ = 0\n    local valid_ext = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot = i\n      \
    \  end\n        if file_name:sub(i, i):match('%d') then\n            count = count\
    \ + 1\n        end\n        if file_name:sub(i, i):match('%l') then\n        \
    \    valid = 1\n        end\n    end\n    for i = 1, #valid_ext do\n        if\
    \ file_name:sub(dot + 1, #file_name) == valid_ext[i] then\n            ext = 1\n\
    \        end\n    end\n    if count > 3 or dot == 0 or valid == 0 or ext == 0\
    \ then\n        return 'No'\n    else\n        return 'Yes'\n    end\nend", " \
    \   -- TODO: implement the function\nend", "    local dot_pos = string.find(file_name,\
    \ '%.')\n    if not dot_pos then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.find(prefix, '%d') or string.len(prefix) == 0 or\
    \ string.len(prefix) > 3 then\n        return 'No'\n    end\n    if suffix ~=\
    \ 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    local dot_pos = file_name:find(\"%.\")\n\
    \    if dot_pos == nil then\n        return \"No\"\n    end\n    local prefix\
    \ = file_name:sub(1, dot_pos - 1)\n    local suffix = file_name:sub(dot_pos +\
    \ 1)\n    if #prefix == 0 or #prefix > 8 or #suffix == 0 or #suffix > 3 then\n\
    \        return \"No\"\n    end\n    if not prefix:match(\"^[a-zA-Z]\") then\n\
    \        return \"No\"\n    end\n    if not suffix:match(\"^txt$\") and not suffix:match(\"\
    ^exe$\") and not suffix:match(\"^dll$\") then\n        return \"No\"\n    end\n\
    \    if prefix:match(\"%d\") and #prefix:match(\"%d\") > 3 then\n        return\
    \ \"No\"\n    end\n    return \"Yes\"\nend", "    -- TODO: Implement this function\n\
    end", "    local dot_pos = string.find(file_name, '%.')\n    if dot_pos == nil\
    \ then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.len(prefix) == 0 or string.find(prefix, '%d') ~= nil then\n      \
    \  return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix\
    \ ~= 'dll' then\n        return 'No'\n    end\n    local digits = string.gsub(file_name,\
    \ '[^%d]', '')\n    if string.len(digits) > 3 then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local count = 0\n    local dot_count = 0\n    local\
    \ ext = \"\"\n    local valid_ext = {\"txt\", \"exe\", \"dll\"}\n    for i = 1,\
    \ #file_name do\n        local c = file_name:sub(i, i)\n        if c == \".\"\
    \ then\n            dot_count = dot_count + 1\n        elseif c:match(\"%d\")\
    \ then\n            count = count + 1\n        end\n    end\n    if dot_count\
    \ == 1 then\n        ext = file_name:sub(file_name:find(\"%.\") + 1)\n    end\n\
    \    if count > 3 or dot_count ~= 1 or not file_name:sub(1, 1):match(\"%a\") or\
    \ not table.contains(valid_ext, ext) then\n        return \"No\"\n    else\n \
    \       return \"Yes\"\n    end\nend", "    -- your code here\n    return nil\n\
    end", "    -- TODO: implement this function\nend", "    return 'Yes'\nend", " \
    \   local dot_pos = file_name:find('%.')\n    if dot_pos == nil then\n       \
    \ return 'No'\n    end\n    local prefix = file_name:sub(1, dot_pos - 1)\n   \
    \ local suffix = file_name:sub(dot_pos + 1)\n    if prefix:match('%d') or prefix:len()\
    \ == 0 or not prefix:match('^[a-zA-Z]') then\n        return 'No'\n    end\n \
    \   if suffix:match('%d') or not suffix:match('^txt$|^exe$|^dll$') then\n    \
    \    return 'No'\n    end\n    return 'Yes'\nend", "    -- your code here\n  \
    \  return nil\nend", "    local dot_index = file_name:find(\"%.\")\n    if not\
    \ dot_index then\n        return \"No\"\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if #prefix\
    \ == 0 or prefix:find(\"%d\") or not prefix:find(\"%a\") then\n        return\
    \ \"No\"\n    end\n    if #suffix ~= 3 or not suffix:find(\"txt\") and not suffix:find(\"\
    exe\") and not suffix:find(\"dll\") then\n        return \"No\"\n    end\n   \
    \ return \"Yes\"\nend", "    -- TODO: implement the function\nend", "    local\
    \ dot_pos = string.find(file_name, '%.')\n    local ext = string.sub(file_name,\
    \ dot_pos + 1)\n    local name = string.sub(file_name, 1, dot_pos - 1)\n    local\
    \ digits = string.match(name, '%d')\n    if digits == nil or string.len(digits)\
    \ <= 3 then\n        if string.match(name, '^[a-zA-Z]') ~= nil then\n        \
    \    if ext == 'txt' or ext == 'exe' or ext == 'dll' then\n                return\
    \ 'Yes'\n            end\n        end\n    end\n    return 'No'\nend", "    --\
    \ your code here\n    local count = 0\n    local dot = 0\n    local ext = 0\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == \".\" then\n\
    \            dot = i\n        end\n        if file_name:sub(i, i) >= \"0\" and\
    \ file_name:sub(i, i) <= \"9\" then\n            count = count + 1\n        end\n\
    \    end\n    if count > 3 then\n        return \"No\"\n    end\n    if dot ==\
    \ 1 then\n        return \"No\"\n    end\n    if file_name:sub(dot + 1, dot +\
    \ 3) == \"txt\" or file_name:sub(dot + 1, dot + 3) == \"exe\" or file_name:sub(dot\
    \ + 1, dot + 3) == \"dll\" then\n        ext = 1\n    end\n    if ext == 1 then\n\
    \        return \"Yes\"\n    else\n        return \"No\"\n    end\nend", "   \
    \ -- your code here\n    local count = 0\n    local dot = false\n    local ext\
    \ = false\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.'\
    \ then\n            if dot == false then\n                dot = true\n       \
    \     else\n                return 'No'\n            end\n        elseif file_name:sub(i,\
    \ i) == '0' or file_name:sub(i, i) == '1' or file_name:sub(i, i) == '2' or file_name:sub(i,\
    \ i) == '3' or file_name:sub(i, i) == '4' or file_name:sub(i, i) == '5' or file_name:sub(i,\
    \ i) == '6' or file_name:sub(i, i) == '7' or file_name:sub(i, i) == '8' or file_name:sub(i,\
    \ i) == '9' then\n            count = count + 1\n        end\n    end\n    if\
    \ count > 3 then\n        return 'No'\n    end\n    if file_name:sub(1, 1) ==\
    \ '0' or file_name:sub(1, 1) == '1' or file_name:sub(1, 1) == '2' or file_name:sub(1,\
    \ 1) == '3' or file_name:sub(1, 1) == '4' or file_name:sub(1, 1) == '5' or file_name:sub(1,\
    \ 1) == '6' or file_name:sub(1, 1) == '7' or file_name:sub(1, 1) == '8' or file_name:sub(1,\
    \ 1) == '9' then\n        return 'No'\n    end\n    if file_name:sub(#file_name\
    \ - 2, #file_name) == 'txt' or file_name:sub(#file_name - 2, #file_name) == 'exe'\
    \ or file_name:sub(#file_name - 2, #file_name) == 'dll' then\n        ext = true\n\
    \    end\n    if ext == true and dot == true", end, "    -- TODO: Implement this\
    \ function\nend", "    -- your code here\n    return nil\nend", "    -- your code\
    \ here\n    local dot_index = string.find(file_name, \"%.\")\n    local extension\
    \ = string.sub(file_name, dot_index + 1)\n    local name = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local digit_count = 0\n    for i = 1, #name do\n    \
    \    local char = string.sub(name, i, i)\n        if char >= \"0\" and char <=\
    \ \"9\" then\n            digit_count = digit_count + 1\n        end\n    end\n\
    \    if digit_count > 3 then\n        return \"No\"\n    end\n    if string.len(extension)\
    \ < 3 then\n        return \"No\"\n    end\n    if string.sub(name, 1, 1) < \"\
    A\" or string.sub(name, 1, 1) > \"z\" then\n        return \"No\"\n    end\n \
    \   if extension ~= \"txt\" and extension ~= \"exe\" and extension ~= \"dll\"\
    \ then\n        return \"No\"\n    end\n    return \"Yes\"\nend", "    local function\
    \ check_extension(extension)\n        return extension == \"txt\" or extension\
    \ == \"exe\" or extension == \"dll\"\n    end", "    -- Write your code here\n\
    \    return 'No'\nend", "    local s, e = file_name:find(\"%d\")\n    if s ==\
    \ nil then\n        return \"Yes\"\n    end\n    if e - s > 3 then\n        return\
    \ \"No\"\n    end\n    local s, e = file_name:find(\"%.\")\n    if s == nil then\n\
    \        return \"No\"\n    end\n    local s, e = file_name:find(\"%a\")\n   \
    \ if s == nil then\n        return \"No\"\n    end\n    if s > e then\n      \
    \  return \"No\"\n    end\n    local s, e = file_name:find(\"%.\")\n    local\
    \ ext = file_name:sub(e + 1)\n    if ext ~= \"txt\" and ext ~= \"exe\" and ext\
    \ ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend", " \
    \   -- Write your code here\n    local count = 0\n    local dot = 0\n    local\
    \ ext = 0\n    local pre = 0\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot = i\n        end\n        if file_name:sub(i,\
    \ i) >= '0' and file_name:sub(i, i) <= '9' then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n \
    \   if dot == 0 then\n        return 'No'\n    end\n    if dot == 1 then\n   \
    \     return 'No'\n    end\n    if file_name:sub(dot + 1, dot + 1) == 't' and\
    \ file_name:sub(dot + 2, dot + 2) == 'x' and file_name:sub(dot + 3, dot + 3) ==\
    \ 't' then\n        ext = 1\n    end\n    if file_name:sub(dot + 1, dot + 1) ==\
    \ 'e' and file_name:sub(dot + 2, dot + 2) == 'x' and file_name:sub(dot + 3, dot\
    \ + 3) == 'e' then\n        ext = 1\n    end\n    if file_name:sub(dot + 1, dot\
    \ + 1) == 'd' and file_name:sub(dot + 2, dot + 2) == 'l' and file_name:sub(dot\
    \ + 3, dot + 3) == 'l' then\n        ext = 1\n    end\n    if ext == 0 then\n\
    \        return 'No'\n    end\n    if file_name:sub(1, 1) >= 'a' and file_name:sub(1,\
    \ 1) <= 'z' then\n        pre = 1\n    end\n    if file_name:sub(1, 1) >= 'A'\
    \ and file_name:sub(1, 1) <= 'Z' then\n        pre = 1\n    end\n    if pre ==\
    \ 0 then\n        return 'No'\n    end\n    return 'Yes'\nend", "    if file_name:match(\"\
    ^[a-zA-Z][a-zA-Z0-9]*%.[a-zA-Z0-9]*$\") then\n        local name, ext = file_name:match(\"\
    ^([a-zA-Z][a-zA-Z0-9]*)%.([a-zA-Z0-9]*)$\")\n        if #name:match(\"%d+\") <=\
    \ 3 and ext == \"txt\" or ext == \"exe\" or ext == \"dll\" then\n            return\
    \ \"Yes\"\n        end\n    end\n    return \"No\"\nend", "    -- your code here\n\
    \    local count = 0\n    local dot_count = 0\n    local ext = \"\"\n    local\
    \ name = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i, i) ==\
    \ \".\" then\n            dot_count = dot_count + 1\n            ext = file_name:sub(i\
    \ + 1, #file_name)\n            name = file_name:sub(1, i - 1)\n        end\n\
    \        if file_name:sub(i, i):match(\"%d\") then\n            count = count\
    \ + 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 or name:match(\"\
    %a\") == nil or (ext ~= \"txt\" and ext ~= \"exe\" and ext ~= \"dll\") then\n\
    \        return \"No\"\n    else\n        return \"Yes\"\n    end\nend", "   \
    \ local dot_index = string.find(file_name, \"%.\")\n    if dot_index == nil then\n\
    \        return \"No\"\n    end\n    local prefix = string.sub(file_name, 1, dot_index\
    \ - 1)\n    local suffix = string.sub(file_name, dot_index + 1)\n    if string.find(prefix,\
    \ \"%d\") ~= nil then\n        return \"No\"\n    end\n    if string.find(prefix,\
    \ \"%a\") == nil then\n        return \"No\"\n    end\n    if string.find(suffix,\
    \ \"%d\") ~= nil then\n        return \"No\"\n    end\n    if suffix ~= \"txt\"\
    \ and suffix ~= \"exe\" and suffix ~= \"dll\" then\n        return \"No\"\n  \
    \  end\n    return \"Yes\"\nend", "  -- your code here\n  local count = 0\n  local\
    \ count_dot = 0\n  local count_num = 0\n  local count_letter = 0\n  local count_letter_after\
    \ = 0\n  local count_letter_before = 0\n  local count_letter_after_dot = 0\n \
    \ local count_letter_before_dot = 0\n  local count_letter_after_dot_txt = 0\n\
    \  local count_letter_after_dot_exe = 0\n  local count_letter_after_dot_dll =\
    \ 0\n  local count_letter_before_dot_txt = 0\n  local count_letter_before_dot_exe\
    \ = 0\n  local count_letter_before_dot_dll = 0\n  local count_letter_before_dot_txt_exe\
    \ = 0\n  local count_letter_before_dot_txt_dll = 0\n  local count_letter_before_dot_exe_dll\
    \ = 0\n  local count_letter_before_dot_txt_exe_dll = 0\n  local count_letter_after_dot_txt_exe\
    \ = 0\n  local count_letter_after_dot_txt_dll = 0\n  local count_letter_after_dot_exe_dll\
    \ = 0\n  local count_letter_after_dot_txt_exe_dll = 0\n  local count_letter_after_dot_txt_exe_dll_txt\
    \ = 0\n  local count_letter_after_dot_txt_exe_dll_exe = 0\n  local count_letter_after_dot_txt_exe_dll_dll\
    \ = 0\n  local count_letter_after_dot_txt_exe_dll_txt_exe = 0\n  local count_letter_after_dot_txt_exe_dll_txt_dll\
    \ = 0\n  local count_letter_after_dot_txt_exe_dll_exe_dll = 0\n  local count_letter_after_dot_txt_exe_dll_txt_exe_dll\
    \ = 0\n  local count_letter_before_dot_txt_exe_dll_txt = 0\n  local count_letter_before_dot_txt_exe_dll_exe\
    \ = 0\n  local count_letter_before_dot_txt_exe_dll_dll = 0\n  local count_letter",
  "    -- your code here\n    local count_dot = 0\n    local count_digit = 0\n   \
    \ local count_letter = 0\n    local count_letter_before_dot = 0\n    local count_letter_after_dot\
    \ = 0\n    local count_letter_after_dot_txt = 0\n    local count_letter_after_dot_exe\
    \ = 0\n    local count_letter_after_dot_dll = 0\n    local count_letter_after_dot_other\
    \ = 0\n    local count_letter_before_dot_other = 0\n    local count_letter_before_dot_letter\
    \ = 0\n    local count_letter_before_dot_digit = 0\n    local count_letter_before_dot_other_letter\
    \ = 0\n    local count_letter_before_dot_other_digit = 0\n    local count_letter_before_dot_other_other\
    \ = 0\n    local count_letter_before_dot_other_other_letter = 0\n    local count_letter_before_dot_other_other_digit\
    \ = 0\n    local count_letter_before_dot_other_other_other = 0\n    local count_letter_before_dot_other_other_other_letter\
    \ = 0\n    local count_letter_before_dot_other_other_other_digit = 0\n    local\
    \ count_letter_before_dot_other_other_other_other = 0\n    local count_letter_before_dot_other_other_other_other_letter\
    \ = 0\n    local count_letter_before_dot_other_other_other_other_digit = 0\n \
    \   local count_letter_before_dot_other_other_other_other_other = 0\n    local\
    \ count_letter_before_dot_other_other_other_other_other_letter = 0\n    local\
    \ count_letter_before_dot_other_other_other_other_other_digit = 0\n    local count_letter_before_dot_other_other_other_other_other_other\
    \ = 0\n    local count_letter_before_dot_other_other_other_other_other_other_letter\
    \ = 0\n    local count_letter_before_dot_other_other_other_other_other_other_digit\
    \ = 0\n    local count_letter_before", "    local count = 0\n    local dot_count\
    \ = 0\n    local ext = \"\"\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == \".\" then\n            dot_count = dot_count + 1\n        end\n     \
    \   if file_name:sub(i, i) == \".\" or file_name:sub(i, i) == \"0\" or file_name:sub(i,\
    \ i) == \"1\" or file_name:sub(i, i) == \"2\" or file_name:sub(i, i) == \"3\"\
    \ or file_name:sub(i, i) == \"4\" or file_name:sub(i, i) == \"5\" or file_name:sub(i,\
    \ i) == \"6\" or file_name:sub(i, i) == \"7\" or file_name:sub(i, i) == \"8\"\
    \ or file_name:sub(i, i) == \"9\" then\n            count = count + 1\n      \
    \  end\n    end\n    if dot_count == 1 and count <= 3 then\n        ext = file_name:sub(#file_name\
    \ - 2, #file_name)\n        if ext == \"txt\" or ext == \"exe\" or ext == \"dll\"\
    \ then\n            return \"Yes\"\n        end\n    end\n    return \"No\"\n\
    end", "\tlocal dot_pos = file_name:find(\"%.\")\n\tif not dot_pos then\n\t\treturn\
    \ \"No\"\n\tend\n\tlocal pre_dot = file_name:sub(1, dot_pos - 1)\n\tlocal post_dot\
    \ = file_name:sub(dot_pos + 1)\n\tif pre_dot:find(\"%d\") or pre_dot:len() ==\
    \ 0 or pre_dot:find(\"%a\") ~= 1 then\n\t\treturn \"No\"\n\tend\n\tif post_dot\
    \ ~= \"txt\" and post_dot ~= \"exe\" and post_dot ~= \"dll\" then\n\t\treturn\
    \ \"No\"\n\tend\n\treturn \"Yes\"\nend", "    local dot_index = string.find(file_name,\
    \ \"%.\")\n    if not dot_index then\n        return \"No\"\n    end\n    local\
    \ name = string.sub(file_name, 1, dot_index - 1)\n    local ext = string.sub(file_name,\
    \ dot_index + 1)\n    if string.find(name, \"%d\") or string.find(name, \"%d%d%d\"\
    ) then\n        return \"No\"\n    end\n    if not string.find(name, \"%a\") then\n\
    \        return \"No\"\n    end\n    if ext ~= \"txt\" and ext ~= \"exe\" and\
    \ ext ~= \"dll\" then\n        return \"No\"\n    end\n    return \"Yes\"\nend",
  "    -- write your code here\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '%.')\n    if not dot_pos then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if not string.match(prefix, '^[a-zA-Z]') then\n        return\
    \ 'No'\n    end\n    if string.match(prefix, '%d') then\n        return 'No'\n\
    \    end\n    if not string.match(suffix, '^txt$|^exe$|^dll$') then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

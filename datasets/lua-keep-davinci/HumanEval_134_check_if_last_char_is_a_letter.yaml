name: HumanEval_134_check_if_last_char_is_a_letter
language: lua
prompt: "-- Create a function that returns True if the last character\n-- of a given\
  \ string is an alphabetical character and is not\n-- a part of a word, and False\
  \ otherwise.\n-- Note: \"word\" is a group of characters separated by space.\n--\
  \ Examples:\n-- check_if_last_char_is_a_letter(\"apple pie\") \u279E False\n-- check_if_last_char_is_a_letter(\"\
  apple pi e\") \u279E True\n-- check_if_last_char_is_a_letter(\"apple pi e \") \u279E\
  \ False\n-- check_if_last_char_is_a_letter(\"\") \u279E False\nlocal function check_if_last_char_is_a_letter(txt)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_if_last_char_is_a_letter\n\
  \    lu.assertEquals(candidate('apple'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e'), true)\n    lu.assertEquals(candidate('eeeee'), false)\n    lu.assertEquals(candidate('A'),\
  \ true)\n    lu.assertEquals(candidate('Pumpkin pie '), false)\n    lu.assertEquals(candidate('Pumpkin\
  \ pie 1'), false)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('eeeee\
  \ e '), false)\n    lu.assertEquals(candidate('apple pie'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e '), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local last_char = txt:sub(-1)\n    return last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\")\nend", "  if txt == \"\" then return false end\n\
    \  local last_char = txt:sub(-1)\n  if last_char:match(\"%a\") and not last_char:match(\"\
    %w\") then\n    return true\n  else\n    return false\n  end\nend", "    -- body\n\
    end", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return\
    \ string.match(txt, \"%a$\") and not string.match(txt, \"%a%s$\")\nend", "   \
    \ local last_char = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %s\")\nend", "    if txt == \"\" then\n        return false\n    end\n    local\
    \ last_char = txt:sub(-1)\n    if last_char:match(\"%a\") and not last_char:match(\"\
    %w\") then\n        return true\n    end\n    return false\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "    return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n\
    \  return last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  if\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s$\") then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\") then\n    return true\n  else\n    return false\n  end\nend", "    local\
    \ last_char = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "    return txt:match(\"%w$\") == nil\nend", "  if txt:match(\"%a$\"\
    ) and not txt:match(\"%a%s$\") then\n    return true\n  else\n    return false\n\
    \  end\nend", "  return txt:match(\"%w$\") == nil\nend", "  return txt:match(\"\
    %w$\") == nil\nend", "  if txt:match(\"%w$\") then\n    return false\n  elseif\
    \ txt:match(\"%a$\") then\n    return true\n  else\n    return false\n  end\n\
    end", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  -- code\
    \ here\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\"\
    ) and not last_char:match(\"%s\")\nend", "  return txt:match(\"%a$\") and not\
    \ txt:match(\"%a%s$\")\nend", "    local last_char = txt:sub(-1)\n    return last_char:match(\"\
    %a\") and not last_char:match(\"%s\")\nend", "  local last_char = txt:sub(-1)\n\
    \  if last_char:match(\"%a\") and not last_char:match(\"%w\") then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "    -- body\nend", "    return string.match(txt,\
    \ \"[%a]$\") and not string.match(txt, \"[%a]%s$\")\nend", "    return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n\
    \  if last_char:match(\"%a\") and not last_char:match(\"%w\") then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    -- code here\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  return\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "    local last_char\
    \ = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "    -- body\nend", "    local last_char = txt:sub(-1)\n    return\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  return txt:match(\"\
    %a$\") and not txt:match(\"%a%s$\")\nend", "    if txt:len() == 0 then\n     \
    \   return false\n    end\n    local last_char = txt:sub(-1)\n    if last_char:match(\"\
    %a\") then\n        local last_word = txt:match(\"%a+$\")\n        if last_word:len()\
    \ == 1 then\n            return true\n        end\n    end\n    return false\n\
    end", "  local last = txt:sub(-1)\n  return last:match(\"%a\") and not txt:match(\"\
    %a%s$\")\nend", "    local last_char = txt:sub(-1)\n    return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  return txt:sub(-1):match(\"%a\"\
    ) and not txt:sub(-1):match(\"%w\")\nend", "  if txt == \"\" then return false\
    \ end\n  local last_char = txt:sub(-1)\n  local last_char_is_letter = last_char:match(\"\
    %a\")\n  local last_char_is_space = last_char:match(\"%s\")\n  return last_char_is_letter\
    \ and not last_char_is_space\nend", "    if txt == \"\" then\n        return false\n\
    \    end\n    local last_char = txt:sub(-1)\n    return last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\")\nend", "  return txt:match(\"%a$\") and not\
    \ txt:match(\"%a%s$\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\")\nend", "    return string.match(txt, \"%a$\") and not string.match(txt,\
    \ \"%a%s$\")\nend", "  return txt:match(\"%w$\") == nil\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "  return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "  return txt:match(\"%w$\") == nil\nend",
  "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", " \
    \ return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", " \
    \   return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend",
  "    local last_char = txt:sub(-1)\n    if last_char:match(\"%a\") and not last_char:match(\"\
    %w\") then\n        return true\n    else\n        return false\n    end\nend",
  "  if txt == \"\" then return false end\n  local last_char = txt:sub(-1)\n  return\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  return string.match(txt,\
    \ \"%a$\") and not string.match(txt, \"%a%s$\")\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "    return txt:match(\"%a$\")\
    \ and not txt:match(\"%a%s$\")\nend", "  return txt:match('%a$') and not txt:match('%a%s$')\n\
    end", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\n\
    end", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\n\
    end", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not\
    \ last_char:match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n  if last_char:match(\"\
    %a\") and not last_char:match(\"%w\") then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\"\
    )\nend", "    local last_char = txt:sub(-1)\n    local last_char_is_letter = last_char:match(\"\
    %a\")\n    local last_char_is_not_part_of_word = not txt:match(\"%a%s$\")\n  \
    \  return last_char_is_letter and last_char_is_not_part_of_word\nend", "  local\
    \ last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"\
    %s\")\nend", "    local last_char = txt:sub(-1)\n    return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "  return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "    local last_char = txt:sub(-1)\n    return\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "    -- body\n\
    end", "    return txt:match(\"%w$\") == nil\nend", "  return txt:match(\"%a$\"\
    ) and not txt:match(\"%a%s$\")\nend", "  if txt == \"\" then return false end\n\
    \  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "  local last = txt:sub(-1)\n  return last:match(\"%a\") and not\
    \ txt:sub(-2, -2):match(\"%a\")\nend", "  return txt:sub(-1):match(\"%a\") and\
    \ not txt:sub(-1):match(\"%w\")\nend", "    local last_char = txt:sub(-1)\n  \
    \  return last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  local\
    \ last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"\
    %s\")\nend", "    local last_char = txt:sub(-1)\n    if last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\") then\n        return true\n    else\n      \
    \  return false\n    end\nend", "    local last_char = txt:sub(-1)\n    return\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  return txt:match(\"\
    %a$\") and not txt:match(\"%a%s$\")\nend", "  local last = txt:sub(-1)\n  return\
    \ last:match(\"%a\") and not txt:sub(-2):match(\"%a\")\nend", "    local last\
    \ = txt:sub(-1)\n    return last:match(\"%a\") and not txt:match(\"%a%s$\")\n\
    end", "  if #txt == 0 then return false end\n  local last = txt:sub(-1)\n  return\
    \ last:match(\"%a\") and not txt:match(\"%s\"..last..\"%s\")\nend", "    return\
    \ string.find(txt, \"%a$\") ~= nil\nend", "  return txt:match(\"%a$\") and not\
    \ txt:match(\"%a%s$\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\")\nend", "  local last = txt:sub(-1)\n  return last:match(\"%a\") and not\
    \ txt:sub(-2):match(\"%a\")\nend", "  return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "  return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n  local last_char_is_letter\
    \ = last_char:match(\"%a\")\n  local last_char_is_space = last_char:match(\"%s\"\
    )\n  return last_char_is_letter and not last_char_is_space\nend", "    return\
    \ txt:match(\"[a-zA-Z]$\") and not txt:match(\"[a-zA-Z]%s$\")\nend", "  return\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  local last_char =\
    \ txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"%s\"\
    )\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return\
    \ txt:match(\"%w$\") == nil\nend", "    return txt:sub(-1):match(\"%a\") and not\
    \ txt:sub(-1):match(\"%w\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\")\nend", "    return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\n\
    end", "    local last = txt:sub(-1)\n    return last:match(\"%a\") and not last:match(\"\
    %w\")\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n  local\
    \ last_char_is_letter = last_char:match(\"%a\")\n  local last_char_is_not_part_of_word\
    \ = last_char:match(\"%s\")\n  return last_char_is_letter and last_char_is_not_part_of_word\n\
    end", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n\
    \  return last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  return\
    \ txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  if txt:sub(-1):match(\"%a\"\
    ) and not txt:sub(-1):match(\"%w\") then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\"\
    )\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  if\
    \ #txt == 0 then return false end\n  local last = txt:sub(-1)\n  return last:match(\"\
    %a\") and not txt:sub(-2):match(\"%a\")\nend", "  -- body\nend", "  return txt:match(\"\
    %a$\") and not txt:match(\"%a%s$\")\nend", "  local last = txt:sub(-1)\n  return\
    \ last:match(\"%a\") and not txt:match(\"%s%a$\")\nend", "  if txt:len() == 0\
    \ then return false end\n  local last_char = txt:sub(-1)\n  return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "  local last = txt:sub(-1)\n  return last:match(\"\
    %a\") and not txt:match(\"%a%s$\")\nend", "    if txt == \"\" then\n        return\
    \ false\n    end\n    local last_char = txt:sub(-1)\n    local last_char_is_letter\
    \ = last_char:match(\"%a\")\n    local last_char_is_not_part_of_word = not txt:match(\"\
    %a%s$\")\n    return last_char_is_letter and last_char_is_not_part_of_word\nend",
  "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", " \
    \ return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", " \
    \ return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n\
    \  return last_char:match(\"%a\") and not last_char:match(\"%s\")\nend", "   \
    \ local last_char = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend",
  "  return txt:match(\"%w$\") == nil\nend", "  return txt:match(\"%a$\") and not\
    \ txt:match(\"%a%s$\")\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n\
    \  local last_char_is_letter = last_char:match(\"%a\")\n  local last_char_is_not_part_of_word\
    \ = not txt:match(\"%s%a$\")\n  return last_char_is_letter and last_char_is_not_part_of_word\n\
    end", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not\
    \ last_char:match(\"%s\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\")\nend", "    local last_char = txt:sub(-1)\n    if last_char:match(\"\
    %a\") and not last_char:match(\"%w\") then\n        return true\n    else\n  \
    \      return false\n    end\nend", "    local last_char = txt:sub(-1)\n    return\
    \ last_char:match(\"%a\") and not last_char:match(\"%s\")\nend", "  local last\
    \ = txt:sub(-1)\n  return last:match(\"%a\") and not txt:match(\"%s\"..last..\"\
    %s\")\nend", "    return string.match(txt, \".*%s([%a])$\") ~= nil\nend", "  \
    \  local last_char = txt:sub(-1)\n    local is_letter = last_char:match(\"%a\"\
    )\n    local is_space = last_char:match(\"%s\")\n    return is_letter and not\
    \ is_space\nend", "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\"\
    ) and not last_char:match(\"%s\")\nend", "  if txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\") then\n    return true\n  else\n    return false\n  end\nend", "  -- code\
    \ here\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "  if txt:match(\"%a$\") and not txt:match(\"%a%s$\") then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "  return txt:match(\"[a-zA-Z]$\") and not txt:match(\"\
    [a-zA-Z]%s$\")\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  local last = txt:sub(-1)\n  if\
    \ last:match(\"%a\") and not last:match(\"%w\") then\n    return true\n  else\n\
    \    return false\n  end\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %w\")\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\")\nend", "  local last_char = txt:sub(-1)\n  if\
    \ last_char:match(\"%a\") and not last_char:match(\"%w\") then\n    return true\n\
    \  else\n    return false\n  end\nend", "  return txt:sub(-1):match(\"%a\") and\
    \ not txt:sub(-1):match(\"%w\")\nend", "    local lastChar = txt:sub(-1)\n   \
    \ return lastChar:match(\"%a\") and not lastChar:match(\"%w\")\nend", "  -- code\
    \ here\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\"\
    ) and not last_char:match(\"%w\")\nend", "  if txt == \"\" then return false end\n\
    \  local last_char = txt:sub(-1)\n  if last_char:match(\"%a\") and not last_char:match(\"\
    %w\") then\n    return true\n  else\n    return false\n  end\nend", "    if txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\") then\n        return true\n    else\n\
    \        return false\n    end\nend", "    local last_char = txt:sub(-1)\n   \
    \ return last_char:match(\"%a\") and not last_char:match(\"%w\")\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "    local\
    \ last_char = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  -- body\nend", "  return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"\
    %s\")\nend", "    if txt:match(\"%a$\") and not txt:match(\"%a%s$\") then\n  \
    \      return true\n    else\n        return false\n    end\nend", "    local\
    \ last = txt:sub(-1)\n    if last:match(\"%a\") and not last:match(\"%w\") then\n\
    \        return true\n    else\n        return false\n    end\nend", "  local\
    \ last_char = txt:sub(-1)\n  if last_char:match(\"%a\") then\n    local last_word\
    \ = txt:match(\"%w+$\")\n    if last_word == last_char then\n      return false\n\
    \    else\n      return true\n    end\n  else\n    return false\n  end\nend",
  "    return txt:match(\"%a$\") ~= nil and txt:match(\"%a%s$\") == nil\nend", " \
    \ -- body\nend", "  return txt:find(\"%a$\") and not txt:find(\"%a%s$\")\nend",
  "  return txt:match(\"%w$\") == nil\nend", "  if txt:match(\"%a$\") and not txt:match(\"\
    %a%s$\") then\n    return true\n  else\n    return false\n  end\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  return\
    \ txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", "  local\
    \ last = txt:sub(-1)\n  return last:match(\"%a\") and not txt:sub(-2):match(\"\
    %a\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend",
  "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "    if txt == \"\" then\n        return false\n    end\n    local\
    \ last_char = txt:sub(-1)\n    if last_char:match(\"%a\") and not last_char:match(\"\
    %w\") then\n        return true\n    end\n    return false\nend", "  return txt:match(\"\
    %w$\") == nil\nend", "  if txt:match(\"%a$\") and not txt:match(\"%a%s$\") then\n\
    \    return true\n  else\n    return false\n  end\nend", "  local last = txt:sub(-1)\n\
    \  if last:match(\"%a\") and not last:match(\"%w\") then\n    return true\n  else\n\
    \    return false\n  end\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"\
    %a\") and not last_char:match(\"%w\")\nend", "  return txt:match(\"%a$\") and\
    \ not txt:match(\"%a%s$\")\nend", "  return txt:match(\"%w$\") == nil\nend", " \
    \ local last = txt:sub(-1)\n  return last:match(\"%a\") and not txt:sub(-2):match(\"\
    %a\")\nend", "  return txt:match(\"%w+$\") == nil\nend", "    local last_char\
    \ = txt:sub(-1)\n    return last_char:match(\"%a\") and not last_char:match(\"\
    %w\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend",
  "  local last_char = txt:sub(-1)\n  return last_char:match(\"%a\") and not last_char:match(\"\
    %s\")\nend", "  return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend",
  "    return txt:sub(-1):match(\"%a\") and not txt:sub(-1):match(\"%w\")\nend", " \
    \ return txt:match(\"%a$\") and not txt:match(\"%a%s$\")\nend", "  return txt:match(\"\
    %w$\") == nil\nend", "  local last_char = txt:sub(-1)\n  return last_char:match(\"\
    %a\") and not last_char:match(\"%s\")\nend", "    return txt:sub(-1):match(\"\
    %a\") and not txt:sub(-1):match(\"%w\")\nend", "  -- body\nend", "  return txt:match(\"\
    %w$\") == nil\nend", "  return txt:match(\"%a$\") and not txt:match(\"%w$\")\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

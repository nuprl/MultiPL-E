name: HumanEval_118_get_closest_vowel
language: lua
prompt: "-- You are given a word. Your task is to find the closest vowel that stands\
  \ between \n-- two consonants from the right side of the word (case sensitive).\n\
  -- Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n-- find any vowel met the above condition. \n-- You may assume that the\
  \ given string contains English letter only.\n-- Example:\n-- get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n-- get_closest_vowel(\"FULL\") ==> \"U\"\n-- get_closest_vowel(\"\
  quick\") ==> \"\"\n-- get_closest_vowel(\"ab\") ==> \"\"\nlocal function get_closest_vowel(word)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
  \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
  \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
  \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
  \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
  \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
  \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
  \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n\
    \  for i = #word, 1, -1 do\n    if table.indexOf(vowels, word:sub(i, i)) ~= -1\
    \ then\n      last_vowel = word:sub(i, i)\n      break\n    end\n  end\n  return\
    \ last_vowel\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local result\
    \ = ''\n  for i = #word, 1, -1 do\n    if table.indexOf(vowels, word:sub(i, i))\
    \ ~= -1 then\n      result = word:sub(i, i)\n      break\n    end\n  end\n  return\
    \ result\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  for i = #word, 1, -1 do\n    if last_vowel == '' then\n      for _,\
    \ v in ipairs(vowels) do\n        if word:sub(i, i) == v then\n          last_vowel\
    \ = v\n          break\n        end\n      end\n    else\n      for _, v in ipairs(vowels)\
    \ do\n        if word:sub(i, i) == v then\n          return last_vowel\n     \
    \   end\n      end\n    end\n  end\n  return ''\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local result = ''\n    local last_consonant = ''\n\
    \    local last_vowel = ''\n    for i = #word, 1, -1 do\n        local char =\
    \ word:sub(i, i)\n        if not table.contains(vowels, char) then\n         \
    \   last_consonant = char\n        else\n            last_vowel = char\n     \
    \       break\n        end\n    end\n    if last_consonant ~= '' and last_vowel\
    \ ~= '' then\n        result = last_vowel\n    end\n    return result\nend", " \
    \ local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local result = ''\n  local last_consonant\
    \ = ''\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if not table.contains(vowels, char) then\n      last_consonant = char\n\
    \    else\n      last_vowel = char\n      break\n    end\n  end\n  if last_consonant\
    \ ~= '' and last_vowel ~= '' then\n    result = last_vowel\n  end\n  return result\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local result = ''\n \
    \   local last_consonant = ''\n    local last_vowel = ''\n    for i = 1, #word\
    \ do\n        local letter = word:sub(i, i)\n        if table.indexOf(vowels,\
    \ letter) then\n            last_vowel = letter\n        else\n            last_consonant\
    \ = letter\n        end\n        if last_consonant ~= '' and last_vowel ~= ''\
    \ then\n            result = last_vowel\n            break\n        end\n    end\n\
    \    return result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if last_consonant then\n            for _, vowel in ipairs(vowels)\
    \ do\n                if char == vowel then\n                    return char\n\
    \                end\n            end\n        else\n            for _, vowel\
    \ in ipairs(vowels) do\n                if char == vowel then\n              \
    \      last_consonant = nil\n                    break\n                else\n\
    \                    last_consonant = char\n                end\n            end\n\
    \        end\n    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local result = ''\n  local index = #word\n  while index > 0 do\n\
    \    local char = word:sub(index, index)\n    if char == 'a' or char == 'e' or\
    \ char == 'i' or char == 'o' or char == 'u' then\n      result = char\n      break\n\
    \    end\n    index = index - 1\n  end\n  return result\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n    for i = #word,\
    \ 1, -1 do\n        local c = word:sub(i, i)\n        if not table.contains(vowels,\
    \ c) then\n            last_consonant = i\n        elseif last_consonant then\n\
    \            return c\n        end\n    end\n    return ''\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local prev_vowel = ''\n    local prev_consonant\
    \ = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n      \
    \  if table.index_of(vowels, c) ~= nil then\n            prev_vowel = c\n    \
    \    else\n            if prev_vowel ~= '' then\n                return prev_vowel\n\
    \            end\n            prev_consonant = c\n        end\n    end\n    return\
    \ ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if table.indexof(vowels, char) then\n            last_vowel = char\n   \
    \         break\n        end\n    end\n    return last_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'}\n    local vowel_index = 0\n    local consonant_index = 0\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        if table.contains(vowels, word:sub(i,\
    \ i)) then\n            vowel_index = i\n            break\n        end\n    end\n\
    \    for i = vowel_index, 1, -1 do\n        if table.contains(consonants, word:sub(i,\
    \ i)) then\n            consonant_index = i\n            break\n        end\n\
    \    end\n    if vowel_index > 0 and consonant_index > 0 then\n        closest_vowel\
    \ = word:sub(vowel_index, vowel_index)\n    end\n    return closest_vowel\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n\
    \            last_vowel = word:sub(i, i)\n            break\n        end\n   \
    \ end\n    return last_vowel\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \  local result = ''\n  local index = #word\n  while index > 0 do\n    local char\
    \ = word:sub(index, index)\n    if char:find('[aeiou]') then\n      result = char\n\
    \      break\n    end\n    index = index - 1\n  end\n  return result\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        local letter = word:sub(i, i)\n        if table.contains(vowels,\
    \ letter) then\n            last_vowel = letter\n            break\n        end\n\
    \    end\n    return last_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n    local vowel_pos = 0\n    local consonant_pos = 0\n    for i = #word,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if table.contains(vowels,\
    \ char) then\n            vowel_pos = i\n        else\n            consonant_pos\
    \ = i\n            break\n        end\n    end\n    if vowel_pos > consonant_pos\
    \ then\n        return word:sub(vowel_pos, vowel_pos)\n    end\n    return ''\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = nil\n\
    \  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if last_vowel\
    \ then\n      if not table.contains(vowels, char) then\n        return last_vowel\n\
    \      end\n    else\n      if table.contains(vowels, char) then\n        last_vowel\
    \ = char\n      end\n    end\n  end\n  return ''\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if last_vowel ~= '' and not table.contains(vowels,\
    \ c) then\n            return last_vowel\n        end\n        if table.contains(vowels,\
    \ c) then\n            last_vowel = c\n        end\n    end\n    return ''\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local vowel_index = 0\n    local\
    \ word_length = #word\n    local closest_vowel = ''\n    for i = word_length,\
    \ 1, -1 do\n        if table.contains(vowels, word:sub(i, i)) then\n         \
    \   vowel_index = i\n            break\n        end\n    end\n    if vowel_index\
    \ == 0 then\n        return ''\n    end\n    for i = vowel_index, 1, -1 do\n \
    \       if not table.contains(vowels, word:sub(i, i)) then\n            closest_vowel\
    \ = word:sub(vowel_index, vowel_index)\n            break\n        end\n    end\n\
    \    return closest_vowel\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \  local last_vowel = ''\n  for i = #word, 1, -1 do\n    if table.indexOf(vowels,\
    \ word:sub(i, i)) > 0 then\n      last_vowel = word:sub(i, i)\n      break\n \
    \   end\n  end\n  return last_vowel\nend", "  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local vowel_index = 0\n  local word_length = #word\n  for i = word_length,\
    \ 1, -1 do\n    if table.indexof(vowels, word:sub(i, i)) ~= nil then\n      vowel_index\
    \ = i\n      break\n    end\n  end\n  if vowel_index == 0 then\n    return ''\n\
    \  end\n  for i = vowel_index, 1, -1 do\n    if table.indexof(vowels, word:sub(i,\
    \ i)) == nil then\n      return word:sub(vowel_index, vowel_index)\n    end\n\
    \  end\n  return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n\
    \    if last_vowel ~= '' and not table.contains(vowels, char) then\n      return\
    \ last_vowel\n    end\n    if table.contains(vowels, char) then\n      last_vowel\
    \ = char\n    end\n  end\n  return ''\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local result = ''\n    local last_consonant = ''\n    local last_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if table.contains(vowels, char) then\n            last_vowel = char\n  \
    \      else\n            if last_vowel ~= '' then\n                return last_vowel\n\
    \            end\n            last_consonant = char\n        end\n    end\n  \
    \  return result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = 1, #word do\n  \
    \      local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = c\n        else\n            last_vowel = c\n  \
    \      end\n    end\n    return last_vowel\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local closest_vowel_index\
    \ = 0\n    local word_length = #word\n    for i = word_length, 1, -1 do\n    \
    \    local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            closest_vowel = char\n            closest_vowel_index = i\n     \
    \       break\n        end\n    end\n    if closest_vowel_index == 0 then\n  \
    \      return ''\n    end\n    for i = closest_vowel_index - 1, 1, -1 do\n   \
    \     local char = word:sub(i, i)\n        if not table.indexof(vowels, char)\
    \ then\n            return closest_vowel\n        end\n    end\n    return ''\n\
    end", "  -- your code here\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ index = 0\n  for i = #word, 1, -1 do\n    for j = 1, #vowels do\n      if word:sub(i,\
    \ i) == vowels[j] then\n        index = i\n        break\n      end\n    end\n\
    \    if index ~= 0 then\n      break\n    end\n  end\n  if index == 0 then\n \
    \   return ''\n  end\n  for i = index, 1, -1 do\n    for j = 1, #vowels do\n \
    \     if word:sub(i, i) == vowels[j] then\n        index = i\n        break\n\
    \      end\n    end\n    if index ~= 0 then\n      break\n    end\n  end\n  return\
    \ word:sub(index, index)\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local last_vowel = ''\n    for i = #word, 1, -1 do\n        local char =\
    \ word:sub(i, i)\n        if table.indexof(vowels, char) then\n            last_vowel\
    \ = char\n            break\n        end\n    end\n    return last_vowel\nend",
  "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest = ''\n  local closest_index\
    \ = -1\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if char\
    \ == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u' then\n  \
    \    closest = char\n      closest_index = i\n      break\n    end\n  end\n  for\
    \ i = closest_index - 1, 1, -1 do\n    local char = word:sub(i, i)\n    if char\
    \ == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u' then\n  \
    \    return closest\n    end\n  end\n  return ''\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local word_len = #word\n  local vowel_idx = 0\n  local\
    \ vowel_dist = word_len\n  for i = 1, word_len do\n    local c = word:sub(i, i)\n\
    \    for j = 1, #vowels do\n      if c == vowels[j] then\n        local dist =\
    \ word_len - i\n        if dist < vowel_dist then\n          vowel_dist = dist\n\
    \          vowel_idx = i\n        end\n      end\n    end\n  end\n  if vowel_idx\
    \ == 0 then\n    return ''\n  end\n  local vowel = word:sub(vowel_idx, vowel_idx)\n\
    \  local prev_c = word:sub(vowel_idx - 1, vowel_idx - 1)\n  local next_c = word:sub(vowel_idx\
    \ + 1, vowel_idx + 1)\n  for i = 1, #vowels do\n    if prev_c == vowels[i] or\
    \ next_c == vowels[i] then\n      return ''\n    end\n  end\n  return vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = nil\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n     \
    \   if not table.contains(vowels, c) then\n            last_consonant = i\n  \
    \      elseif last_consonant then\n            return c\n        end\n    end\n\
    \    return ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local letter = word:sub(i,\
    \ i)\n        if table.index_of(vowels, letter) ~= -1 then\n            last_vowel\
    \ = letter\n            break\n        end\n    end\n    return last_vowel\nend",
  "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i =\
    \ #word, 1, -1 do\n    local c = word:sub(i, i)\n    if last_vowel == '' then\n\
    \      for _, v in ipairs(vowels) do\n        if c == v then\n          last_vowel\
    \ = c\n          break\n        end\n      end\n    else\n      for _, v in ipairs(vowels)\
    \ do\n        if c == v then\n          return last_vowel\n        end\n     \
    \ end\n    end\n  end\n  return ''\nend", "  local vowels = {\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n  local closest_vowel = \"\"\n  local closest_vowel_index\
    \ = 0\n  local word_length = string.len(word)\n  for i = word_length, 1, -1 do\n\
    \    local char = string.sub(word, i, i)\n    if not table.contains(vowels, char)\
    \ then\n      for j = i, 1, -1 do\n        local char = string.sub(word, j, j)\n\
    \        if table.contains(vowels, char) then\n          closest_vowel = char\n\
    \          closest_vowel_index = j\n          break\n        end\n      end\n\
    \      break\n    end\n  end\n  if closest_vowel_index > 0 then\n    for i = closest_vowel_index,\
    \ word_length do\n      local char = string.sub(word, i, i)\n      if not table.contains(vowels,\
    \ char) then\n        return closest_vowel\n      end\n    end\n  end\n  return\
    \ \"\"\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel\
    \ = ''\n    local closest_index = -1\n    for i = #word, 1, -1 do\n        local\
    \ letter = word:sub(i, i)\n        if table.contains(vowels, letter) then\n  \
    \          closest_vowel = letter\n            closest_index = i\n           \
    \ break\n        end\n    end\n    if closest_index == -1 then\n        return\
    \ ''\n    end\n    for i = closest_index - 1, 1, -1 do\n        local letter =\
    \ word:sub(i, i)\n        if not table.contains(vowels, letter) then\n       \
    \     return closest_vowel\n        end\n    end\n    return ''\nend", "    --\
    \ your code here\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = ''\n    local closest_vowel = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if not table.contains(vowels, char) then\n  \
    \          last_consonant = char\n        else\n            if last_consonant\
    \ ~= '' then\n                closest_vowel = char\n                break\n  \
    \          end\n        end\n    end\n    return closest_vowel\nend", "  local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n  local word_len = word:len()\n  local closest_vowel\
    \ = ''\n  local closest_vowel_index = 0\n  for i = 1, word_len do\n    local char\
    \ = word:sub(i, i)\n    if table.contains(vowels, char) then\n      local prev_char\
    \ = word:sub(i - 1, i - 1)\n      local next_char = word:sub(i + 1, i + 1)\n \
    \     if prev_char and not table.contains(vowels, prev_char) and\n         next_char\
    \ and not table.contains(vowels, next_char) then\n        if closest_vowel_index\
    \ == 0 or i < closest_vowel_index then\n          closest_vowel = char\n     \
    \     closest_vowel_index = i\n        end\n      end\n    end\n  end\n  return\
    \ closest_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ closest_vowel = ''\n    local closest_vowel_index = 0\n    for i = #word, 1,\
    \ -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n            closest_vowel\
    \ = word:sub(i, i)\n            closest_vowel_index = i\n            break\n \
    \       end\n    end\n    if closest_vowel_index == 0 then\n        return ''\n\
    \    end\n    for i = closest_vowel_index - 1, 1, -1 do\n        if not table.indexof(vowels,\
    \ word:sub(i, i)) then\n            return closest_vowel\n        end\n    end\n\
    \    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n    if table.contains(vowels,\
    \ c) then\n      last_vowel = c\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    local vowels = \"aeiouAEIOU\"\n    local closest_vowel = \"\"\n   \
    \ local closest_index = 0\n    for i = #word, 1, -1 do\n        if string.find(vowels,\
    \ word:sub(i, i)) then\n            if closest_index == 0 then\n             \
    \   closest_index = i\n            else\n                if i + 1 == closest_index\
    \ then\n                    return word:sub(i, i)\n                end\n     \
    \       end\n        else\n            if closest_index ~= 0 then\n          \
    \      closest_vowel = word:sub(closest_index, closest_index)\n              \
    \  closest_index = 0\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if not\
    \ table.contains(vowels, c) then\n            return last_vowel\n        end\n\
    \        last_vowel = c\n    end\n    return ''\nend", "  local vowels = {\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n  local last_vowel = \"\"\n  local last_consonant\
    \ = \"\"\n  for i = #word, 1, -1 do\n    local letter = word:sub(i, i)\n    if\
    \ table.contains(vowels, letter) then\n      last_vowel = letter\n    else\n \
    \     last_consonant = letter\n    end\n    if last_vowel ~= \"\" and last_consonant\
    \ ~= \"\" then\n      return last_vowel\n    end\n  end\n  return \"\"\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n  \
    \  local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n        if not\
    \ closest_vowel_index then\n            for j = 1, #vowels do\n              \
    \  if word:sub(i, i) == vowels[j] then\n                    closest_vowel = word:sub(i,\
    \ i)\n                    closest_vowel_index = i\n                end\n     \
    \       end\n        else\n            if word:sub(i, i) ~= closest_vowel then\n\
    \                return closest_vowel\n            end\n        end\n    end\n\
    \    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      last_vowel = char\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = nil\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n     \
    \   if not table.contains(vowels, c) then\n            last_consonant = i\n  \
    \      elseif last_consonant then\n            return c\n        end\n    end\n\
    \    return ''\nend", "  -- your code here\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n   \
    \     if table.indexof(vowels, word:sub(i, i)) then\n            last_vowel =\
    \ word:sub(i, i)\n            break\n        end\n    end\n    return last_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local pos = 0\n    for\
    \ i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n\
    \            pos = i\n            break\n        end\n    end\n    if pos == 0\
    \ then\n        return ''\n    end\n    for i = pos, 1, -1 do\n        if not\
    \ table.indexof(vowels, word:sub(i, i)) then\n            return word:sub(i +\
    \ 1, i + 1)\n        end\n    end\n    return ''\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local result = ''\n    local last_vowel_index = 0\n\
    \    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.indexOf(vowels,\
    \ c) > 0 then\n            last_vowel_index = i\n            break\n        end\n\
    \    end\n    for i = last_vowel_index - 1, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexOf(vowels, c) > 0 then\n            result = c\n \
    \           break\n        end\n    end\n    return result\nend", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1\
    \ do\n    if table.indexOf(vowels, word:sub(i, i)) then\n      last_vowel = word:sub(i,\
    \ i)\n      break\n    end\n  end\n  return last_vowel\nend", "    local vowels\
    \ = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n    local last_vowel = \"\"\n    for\
    \ i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if last_vowel\
    \ ~= \"\" and not table.contains(vowels, char) then\n            return last_vowel\n\
    \        end\n        if table.contains(vowels, char) then\n            last_vowel\
    \ = char\n        end\n    end\n    return \"\"\nend", "  -- your code here\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local index = #word\n  local vowel\
    \ = ''\n  while index > 0 do\n    if not vowels[word:sub(index, index)] then\n\
    \      vowel = word:sub(index + 1, index + 1)\n      if vowels[vowel] then\n \
    \       return vowel\n      end\n    end\n    index = index - 1\n  end\n  return\
    \ ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest_vowel\
    \ = ''\n  local closest_vowel_index = -1\n  for i = #word, 1, -1 do\n    local\
    \ char = word:sub(i, i)\n    if char == 'a' or char == 'e' or char == 'i' or char\
    \ == 'o' or char == 'u' then\n      closest_vowel = char\n      closest_vowel_index\
    \ = i\n      break\n    end\n  end\n  for i = closest_vowel_index - 1, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if char == 'a' or char == 'e' or char ==\
    \ 'i' or char == 'o' or char == 'u' then\n      return ''\n    end\n  end\n  return\
    \ closest_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ index = #word\n    while index > 0 do\n        local char = word:sub(index,\
    \ index)\n        if char == 'a' or char == 'e' or char == 'i' or char == 'o'\
    \ or char == 'u' then\n            return char\n        end\n        index = index\
    \ - 1\n    end\n    return \"\"\nend", "  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local last_consonant = ''\n  local last_vowel = ''\n  for i = #word,\
    \ 1, -1 do\n    local char = word:sub(i, i)\n    if not table.contains(vowels,\
    \ char) then\n      last_consonant = char\n    else\n      last_vowel = char\n\
    \      break\n    end\n  end\n  if last_consonant == '' or last_vowel == '' then\n\
    \    return ''\n  end\n  return last_vowel\nend", "  -- your code here\n  local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'}\n  local closest_vowel = ''\n  local closest_vowel_index = 0\n  local closest_consonant_index\
    \ = 0\n  local closest_consonant = ''\n  local closest_consonant_index_2 = 0\n\
    \  local closest_consonant_2 = ''\n  for i = 1, #word do\n    for j = 1, #vowels\
    \ do\n      if word:sub(i, i) == vowels[j] then\n        closest_vowel = word:sub(i,\
    \ i)\n        closest_vowel_index = i\n      end\n    end\n  end\n  for i = closest_vowel_index,\
    \ 1, -1 do\n    for j = 1, #consonants do\n      if word:sub(i, i) == consonants[j]\
    \ then\n        closest_consonant = word:sub(i, i)\n        closest_consonant_index\
    \ = i\n        break\n      end\n    end\n    if closest_consonant ~= '' then\n\
    \      break\n    end\n  end\n  for i = closest_vowel_index, #word do\n    for\
    \ j = 1, #consonants do\n      if word:sub(i, i) == consonants[j] then\n     \
    \   closest_consonant_2 = word:sub(i, i)\n        closest_consonant_index_2 =\
    \ i\n        break\n      end\n    end\n    if closest_consonant_2 ~= '' then\n\
    \      break\n    end\n  end\n  if closest_consonant_index == 0 or closest_consonant_index_2\
    \ == 0 then\n    return ''\n  elseif closest_consonant_index_2 - closest_vowel_index\
    \ < closest", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest_vowel\
    \ = ''\n  local closest_vowel_index = -1\n  for i = #word, 1, -1 do\n    if not\
    \ table.contains(vowels, word:sub(i, i)) then\n      for j = #word, i, -1 do\n\
    \        if table.contains(vowels, word:sub(j, j)) then\n          if j > closest_vowel_index\
    \ then\n            closest_vowel = word:sub(j, j)\n            closest_vowel_index\
    \ = j\n          end\n        end\n      end\n    end\n  end\n  return closest_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest_vowel = ''\n\
    \  local closest_vowel_distance = 0\n  for i = #word, 1, -1 do\n    local char\
    \ = word:sub(i, i)\n    if closest_vowel_distance == 0 then\n      for _, vowel\
    \ in ipairs(vowels) do\n        if char == vowel then\n          closest_vowel\
    \ = char\n          closest_vowel_distance = #word - i\n        end\n      end\n\
    \    else\n      for _, vowel in ipairs(vowels) do\n        if char == vowel then\n\
    \          local distance = #word - i\n          if distance < closest_vowel_distance\
    \ then\n            closest_vowel = char\n            closest_vowel_distance =\
    \ distance\n          end\n        end\n      end\n    end\n  end\n  return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel =\
    \ ''\n    local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n       \
    \ if table.contains(vowels, word:sub(i, i)) then\n            closest_vowel =\
    \ word:sub(i, i)\n            closest_vowel_index = i\n            break\n   \
    \     end\n    end\n    if closest_vowel_index == 0 then\n        return ''\n\
    \    end\n    for i = closest_vowel_index - 1, 1, -1 do\n        if not table.contains(vowels,\
    \ word:sub(i, i)) then\n            return closest_vowel\n        end\n    end\n\
    \    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local index\
    \ = #word\n  while index > 0 do\n    if vowels[word:sub(index, index)] then\n\
    \      if index == #word then\n        return ''\n      elseif not vowels[word:sub(index\
    \ + 1, index + 1)] then\n        return word:sub(index, index)\n      end\n  \
    \  end\n    index = index - 1\n  end\n  return ''\nend", "  local vowels = {\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n  local result = \"\"\n  local index = 0\n \
    \ for i = #word, 1, -1 do\n    if (word:sub(i, i) == \"a\" or word:sub(i, i) ==\
    \ \"e\" or word:sub(i, i) == \"i\" or word:sub(i, i) == \"o\" or word:sub(i, i)\
    \ == \"u\") then\n      index = i\n      break\n    end\n  end\n  for i = index,\
    \ 1, -1 do\n    if (word:sub(i, i) ~= \"a\" and word:sub(i, i) ~= \"e\" and word:sub(i,\
    \ i) ~= \"i\" and word:sub(i, i) ~= \"o\" and word:sub(i, i) ~= \"u\") then\n\
    \      result = word:sub(i + 1, i + 1)\n      break\n    end\n  end\n  return\
    \ result\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local vowel_index\
    \ = 0\n  for i = #word, 1, -1 do\n    for j = 1, #vowels do\n      if word:sub(i,\
    \ i) == vowels[j] then\n        vowel_index = i\n        break\n      end\n  \
    \  end\n    if vowel_index > 0 then\n      break\n    end\n  end\n  if vowel_index\
    \ == 0 then\n    return ''\n  end\n  local prev_char = word:sub(vowel_index -\
    \ 1, vowel_index - 1)\n  local next_char = word:sub(vowel_index + 1, vowel_index\
    \ + 1)\n  for i = 1, #vowels do\n    if prev_char == vowels[i] or next_char ==\
    \ vowels[i] then\n      return ''\n    end\n  end\n  return word:sub(vowel_index,\
    \ vowel_index)\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local prev_char\
    \ = ''\n  local prev_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if char == 'a' or char == 'e' or char == 'i' or char == 'o' or char\
    \ == 'u' then\n      prev_vowel = char\n    elseif prev_vowel ~= '' then\n   \
    \   return prev_vowel\n    end\n    prev_char = char\n  end\n  return ''\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local result = ''\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = 1, #word do\n  \
    \      local c = word:sub(i, i)\n        if not table.contains(vowels, c) then\n\
    \            last_consonant = c\n        else\n            if last_consonant ~=\
    \ '' then\n                result = c\n                break\n            end\n\
    \            last_vowel = c\n        end\n    end\n    return result\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n\
    \            last_vowel = word:sub(i, i)\n            break\n        end\n   \
    \ end\n    for i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i,\
    \ i)) then\n            if last_vowel ~= word:sub(i, i) then\n               \
    \ return word:sub(i, i)\n            end\n        end\n    end\n    return ''\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local result = ''\n \
    \   for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if char\
    \ == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u' then\n  \
    \          result = char\n            break\n        end\n    end\n    return\
    \ result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n      \
    \  if table.indexof(vowels, c) then\n            last_vowel = c\n            break\n\
    \        end\n    end\n    return last_vowel\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local closest_distance\
    \ = math.huge\n    local word_len = #word\n    for i = 1, word_len do\n      \
    \  local letter = word:sub(i, i)\n        if table.contains(vowels, letter) then\n\
    \            local distance = word_len - i\n            if distance < closest_distance\
    \ then\n                closest_distance = distance\n                closest_vowel\
    \ = letter\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "  local vowels = {a = true, e = true, i = true, o = true, u = true, y =\
    \ true}\n  local last_consonant = nil\n  for i = #word, 1, -1 do\n    local c\
    \ = word:sub(i, i)\n    if vowels[c] then\n      if last_consonant then\n    \
    \    return c\n      end\n    else\n      last_consonant = c\n    end\n  end\n\
    \  return \"\"\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexof(vowels, c) then\n            last_vowel = c\n \
    \           break\n        end\n    end\n    return last_vowel\nend", "    local\
    \ vowels = \"aeiouAEIOU\"\n    local consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result = \"\"\n    local vowel_index = 0\n    local consonant_index\
    \ = 0\n    local vowel_found = false\n    for i = #word, 1, -1 do\n        if\
    \ not vowel_found then\n            if vowels:find(word:sub(i, i)) then\n    \
    \            vowel_index = i\n                vowel_found = true\n           \
    \ end\n        else\n            if consonants:find(word:sub(i, i)) then\n   \
    \             consonant_index = i\n                break\n            end\n  \
    \      end\n    end\n    if vowel_found and consonant_index ~= 0 then\n      \
    \  result = word:sub(vowel_index, vowel_index)\n    end\n    return result\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local result = ''\n    local\
    \ last_consonant = ''\n    local last_vowel = ''\n    for i = 1, #word do\n  \
    \      local char = word:sub(i, i)\n        if table.contains(vowels, char) then\n\
    \            last_vowel = char\n        else\n            last_consonant = char\n\
    \        end\n        if last_consonant ~= '' and last_vowel ~= '' then\n    \
    \        result = last_vowel\n            break\n        end\n    end\n    return\
    \ result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = ''\n    local closest_vowel = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if not table.contains(vowels, char) then\n  \
    \          last_consonant = char\n        else\n            if last_consonant\
    \ ~= '' then\n                closest_vowel = char\n                break\n  \
    \          end\n        end\n    end\n    return closest_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local\
    \ closest_vowel_index = 0\n    for i = #word, 1, -1 do\n        if word:sub(i,\
    \ i) == 'a' or word:sub(i, i) == 'e' or word:sub(i, i) == 'i' or word:sub(i, i)\
    \ == 'o' or word:sub(i, i) == 'u' then\n            closest_vowel = word:sub(i,\
    \ i)\n            closest_vowel_index = i\n            break\n        end\n  \
    \  end\n    for i = closest_vowel_index, 1, -1 do\n        if word:sub(i, i) ~=\
    \ 'a' and word:sub(i, i) ~= 'e' and word:sub(i, i) ~= 'i' and word:sub(i, i) ~=\
    \ 'o' and word:sub(i, i) ~= 'u' then\n            return closest_vowel\n     \
    \   end\n    end\n    return ''\nend", "    local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n        if table.indexof(vowels,\
    \ word:sub(i, i)) then\n            last_vowel = word:sub(i, i)\n            break\n\
    \        end\n    end\n    return last_vowel\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n    for i = #word, 1, -1\
    \ do\n        local c = word:sub(i, i)\n        if last_consonant and table.contains(vowels,\
    \ c) then\n            return c\n        end\n        if not table.contains(vowels,\
    \ c) then\n            last_consonant = c\n        end\n    end\n    return ''\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local word_len = #word\n\
    \  local closest_vowel = ''\n  local closest_vowel_index = 0\n  for i = word_len,\
    \ 1, -1 do\n    local char = word:sub(i, i)\n    if char:find('[aeiou]') then\n\
    \      closest_vowel = char\n      closest_vowel_index = i\n      break\n    end\n\
    \  end\n  if closest_vowel_index == 0 then\n    return ''\n  end\n  for i = closest_vowel_index\
    \ - 1, 1, -1 do\n    local char = word:sub(i, i)\n    if char:find('[^aeiou]')\
    \ then\n      return closest_vowel\n    end\n  end\n  return ''\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word,\
    \ 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n          \
    \  last_vowel = word:sub(i, i)\n            break\n        end\n    end\n    if\
    \ last_vowel == '' then\n        return ''\n    end\n    local closest_vowel =\
    \ ''\n    local closest_distance = math.huge\n    for i = #word, 1, -1 do\n  \
    \      if table.indexof(vowels, word:sub(i, i)) then\n            if i - 1 > 0\
    \ and not table.indexof(vowels, word:sub(i - 1, i - 1)) then\n               \
    \ if closest_distance > #word - i then\n                    closest_distance =\
    \ #word - i\n                    closest_vowel = word:sub(i, i)\n            \
    \    end\n            end\n        end\n    end\n    return closest_vowel\nend",
  "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i =\
    \ #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.index_of(vowels,\
    \ char) then\n      last_vowel = char\n      break\n    end\n  end\n  return last_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n \
    \ for i = #word, 1, -1 do\n    if table.index_of(vowels, word:sub(i, i)) then\n\
    \      last_vowel = word:sub(i, i)\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        if table.indexOf(vowels, word:sub(i, i))\
    \ ~= -1 then\n            last_vowel = word:sub(i, i)\n            break\n   \
    \     end\n    end\n    return last_vowel\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local closest_vowel_index\
    \ = 0\n    local word_length = #word\n    for i = word_length, 1, -1 do\n    \
    \    local char = word:sub(i, i)\n        if char == 'a' or char == 'e' or char\
    \ == 'i' or char == 'o' or char == 'u' then\n            closest_vowel = char\n\
    \            closest_vowel_index = i\n            break\n        end\n    end\n\
    \    if closest_vowel_index == 0 then\n        return ''\n    end\n    for i =\
    \ closest_vowel_index - 1, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if char == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u'\
    \ then\n            return ''\n        end\n    end\n    return closest_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n \
    \ for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n    if table.index_of(vowels,\
    \ c) then\n      last_vowel = c\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel =\
    \ ''\n    local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n       \
    \ if table.contains(vowels, word:sub(i, i)) then\n            closest_vowel =\
    \ word:sub(i, i)\n            closest_vowel_index = i\n            break\n   \
    \     end\n    end\n    if closest_vowel_index == 1 then\n        return ''\n\
    \    end\n    for i = closest_vowel_index - 1, 1, -1 do\n        if not table.contains(vowels,\
    \ word:sub(i, i)) then\n            return closest_vowel\n        end\n    end\n\
    \    return ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    local closest = ''\n    local closest_index\
    \ = 0\n    local word_length = #word\n    for i = 1, word_length do\n        local\
    \ current_letter = word:sub(i, i)\n        if table.contains(vowels, current_letter)\
    \ then\n            if i > 1 and i < word_length then\n                local previous_letter\
    \ = word:sub(i - 1, i - 1)\n                local next_letter = word:sub(i + 1,\
    \ i + 1)\n                if table.contains(consonants, previous_letter) and table.contains(consonants,\
    \ next_letter) then\n                    if i > closest_index then\n         \
    \               closest = current_letter\n                        closest_index\
    \ = i\n                    end\n                end\n            end\n       \
    \ end\n    end\n    return closest\nend", "  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local word_len = word:len()\n  local last_vowel = ''\n  local last_consonant\
    \ = ''\n  for i = 1, word_len do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      last_vowel = char\n    else\n      last_consonant = char\n\
    \    end\n    if last_vowel ~= '' and last_consonant ~= '' then\n      return\
    \ last_vowel\n    end\n  end\n  return ''\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n   \
    \     if table.index_of(vowels, word:sub(i, i)) then\n            last_vowel =\
    \ word:sub(i, i)\n            break\n        end\n    end\n    return last_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_consonant = nil\n\
    \  local last_vowel = nil\n  for i = #word, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if last_consonant and last_vowel then\n      return last_vowel\n   \
    \ end\n    if last_consonant and not last_vowel and table.indexof(vowels, char)\
    \ then\n      last_vowel = char\n    end\n    if not last_consonant and not table.indexof(vowels,\
    \ char) then\n      last_consonant = char\n    end\n  end\n  return ''\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n\
    \    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if\
    \ not table.contains(vowels, char) then\n            last_consonant = i\n    \
    \    elseif last_consonant then\n            return char\n        end\n    end\n\
    \    return ''\nend", "\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal last_vowel\
    \ = ''\n\tlocal last_consonant = ''\n\tfor i = #word, 1, -1 do\n\t\tlocal char\
    \ = word:sub(i, i)\n\t\tif table.contains(vowels, char) then\n\t\t\tlast_vowel\
    \ = char\n\t\telse\n\t\t\tif last_vowel ~= '' then\n\t\t\t\treturn last_vowel\n\
    \t\t\tend\n\t\t\tlast_consonant = char\n\t\tend\n\tend\n\treturn ''\nend", " \
    \ local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i =\
    \ #word, 1, -1 do\n    if not table.contains(vowels, word:sub(i, i)) then\n  \
    \    if last_vowel ~= '' then\n        return last_vowel\n      end\n    else\n\
    \      last_vowel = word:sub(i, i)\n    end\n  end\n  return ''\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if last_vowel ~= '' and\
    \ not table.contains(vowels, char) then\n            return last_vowel\n     \
    \   end\n        if table.contains(vowels, char) then\n            last_vowel\
    \ = char\n        end\n    end\n    return ''\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        if table.indexof(vowels, word:sub(i, i)) then\n            last_vowel\
    \ = word:sub(i, i)\n            break\n        end\n    end\n    return last_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n \
    \ for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n    if table.indexOf(vowels,\
    \ c) then\n      last_vowel = c\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    -- your code here\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n \
    \   local consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    local closest_vowel =\
    \ ''\n    local closest_distance = 0\n    local distance = 0\n    local last_consonant\
    \ = ''\n    local last_vowel = ''\n    for i = 1, #word do\n        local char\
    \ = word:sub(i, i)\n        if last_consonant ~= '' and last_vowel ~= '' then\n\
    \            distance = i - last_consonant\n            if distance < closest_distance\
    \ or closest_distance == 0 then\n                closest_distance = distance\n\
    \                closest_vowel = last_vowel\n            end\n        end\n  \
    \      if is_in_table(char, vowels) then\n            last_vowel = char\n    \
    \    elseif is_in_table(char, consonants) then\n            last_consonant = i\n\
    \        end\n    end\n    return closest_vowel\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local result = ''\n    local distance = 0\n    for\
    \ i = #word, 1, -1 do\n        if not table.contains(vowels, word:sub(i, i)) then\n\
    \            for j = i - 1, 1, -1 do\n                if table.contains(vowels,\
    \ word:sub(j, j)) then\n                    if i - j < distance or distance ==\
    \ 0 then\n                        distance = i - j\n                        result\
    \ = word:sub(j, j)\n                    end\n                    break\n     \
    \           end\n            end\n        end\n    end\n    return result\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n\
    \    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if\
    \ not table.contains(vowels, char) then\n            last_consonant = i\n    \
    \    elseif last_consonant then\n            return char\n        end\n    end\n\
    \    return ''\nend", "  -- your code here\n  local vowels = {\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n  local consonants = {\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"}\n  local word_table = {}\n  local word_table_vowels\
    \ = {}\n  local word_table_consonants = {}\n  local word_table_vowels_index =\
    \ {}\n  local word_table_consonants_index = {}\n  local word_table_vowels_index_consonants\
    \ = {}\n  local word_table_consonants_index_vowels = {}\n  local word_table_vowels_index_consonants_index\
    \ = {}\n  local word_table_consonants_index_vowels_index = {}\n  local word_table_vowels_index_consonants_index_vowels\
    \ = {}\n  local word_table_consonants_index_vowels_index_consonants = {}\n  local\
    \ word_table_vowels_index_consonants_index_vowels_index = {}\n  local word_table_consonants_index_vowels_index_consonants_index\
    \ = {}\n  local word_table_vowels_index_consonants_index_vowels_index_consonants\
    \ = {}\n  local word_table_consonants_index_vowels_index_consonants_index_vowels\
    \ = {}\n  local word_table_vowels_index_consonants_index_vowels_index_consonants_index\
    \ = {}\n  local word_table_consonants_index_vowels_index_consonants_index_vowels_index\
    \ = {}\n  local word_table_vowels_index_consonants_index_vowels_index_consonants_index_vowels\
    \ = {}\n  local word_table_consonants_index_vowels_index_cons", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local closest_distance\
    \ = 0\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n    \
    \    if char == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u'\
    \ then\n            closest_vowel = char\n            closest_distance = #word\
    \ - i\n            break\n        end\n    end\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if char == 'a' or char == 'e' or\
    \ char == 'i' or char == 'o' or char == 'u' then\n            if #word - i < closest_distance\
    \ then\n                closest_vowel = char\n                closest_distance\
    \ = #word - i\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local prev_vowel = ''\n\
    \    local prev_consonant = ''\n    for i = #word, 1, -1 do\n        local char\
    \ = word:sub(i, i)\n        if table.indexof(vowels, char) then\n            prev_vowel\
    \ = char\n        else\n            if prev_vowel ~= '' then\n               \
    \ return prev_vowel\n            end\n            prev_consonant = char\n    \
    \    end\n    end\n    return ''\nend", "    local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n    local result = ''\n    local last_consonant = ''\n    local last_vowel\
    \ = ''\n    for i = 1, #word do\n        local char = word:sub(i, i)\n       \
    \ if table.contains(vowels, char) then\n            last_vowel = char\n      \
    \  else\n            last_consonant = char\n        end\n        if last_consonant\
    \ ~= '' and last_vowel ~= '' then\n            result = last_vowel\n         \
    \   break\n        end\n    end\n    return result\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ result = ''\n  local vowel_index = 0\n  local consonant_index = 0\n  for i =\
    \ #word, 1, -1 do\n    if table.contains(vowels, word:sub(i, i)) then\n      vowel_index\
    \ = i\n      break\n    end\n  end\n  for i = vowel_index, 1, -1 do\n    if table.contains(consonants,\
    \ word:sub(i, i)) then\n      consonant_index = i\n      break\n    end\n  end\n\
    \  if vowel_index > 0 and consonant_index > 0 then\n    result = word:sub(vowel_index,\
    \ vowel_index)\n  end\n  return result\nend", "  -- your code here\n  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local vowel = ''\n  local consonant = ''\n  local closest_vowel = ''\n  local\
    \ closest_distance = 0\n  local distance = 0\n  for i = #word, 1, -1 do\n    for\
    \ j = 1, #vowels do\n      if word:sub(i, i) == vowels[j] then\n        vowel\
    \ = vowels[j]\n        break\n      end\n    end\n    if vowel ~= '' then\n  \
    \    for j = 1, #consonants do\n        if word:sub(i - 1, i - 1) == consonants[j]\
    \ then\n          consonant = consonants[j]\n          break\n        end\n  \
    \    end\n      if consonant ~= '' then\n        distance = i - 1\n        if\
    \ closest_distance == 0 then\n          closest_distance = distance\n        \
    \  closest_vowel = vowel\n        elseif distance < closest_distance then\n  \
    \        closest_distance = distance\n          closest_vowel = vowel\n      \
    \  end\n      end\n    end\n  end\n  return closest_vowel\nend", "    -- your\
    \ code here\n    local vowels = \"aeiouAEIOU\"\n    local consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel = \"\"\n    local closest_distance = 0\n    for i =\
    \ 1, #word do\n        local char = word:sub(i, i)\n        if vowels:find(char)\
    \ then\n            for j = i, #word do\n                local char2 = word:sub(j,\
    \ j)\n                if consonants:find(char2) then\n                    local\
    \ distance = j - i\n                    if distance > closest_distance then\n\
    \                        closest_distance = distance\n                       \
    \ closest_vowel = char\n                    end\n                    break\n \
    \               end\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = \"aeiouAEIOU\"\n    local closest_vowel = \"\"\n   \
    \ local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n        if vowels:find(word:sub(i,\
    \ i)) then\n            closest_vowel = word:sub(i, i)\n            closest_vowel_index\
    \ = i\n            break\n        end\n    end\n    for i = closest_vowel_index\
    \ - 1, 1, -1 do\n        if not vowels:find(word:sub(i, i)) then\n           \
    \ return closest_vowel\n        end\n    end\n    return \"\"\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local\
    \ closest_vowel_index = -1\n    for i = #word, 1, -1 do\n        local char =\
    \ word:sub(i, i)\n        if table.contains(vowels, char) then\n            closest_vowel\
    \ = char\n            closest_vowel_index = i\n            break\n        end\n\
    \    end\n    if closest_vowel_index == -1 then\n        return ''\n    end\n\
    \    for i = closest_vowel_index - 1, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            return closest_vowel\n\
    \        end\n    end\n    return ''\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local closest_vowel = ''\n    local closest_vowel_distance =\
    \ 0\n    for i = 1, #word do\n        local char = word:sub(i, i)\n        if\
    \ table.contains(vowels, char) then\n            local distance = #word - i\n\
    \            if closest_vowel_distance == 0 or distance < closest_vowel_distance\
    \ then\n                closest_vowel = char\n                closest_vowel_distance\
    \ = distance\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        if last_vowel ~= '' then\n            if\
    \ not table.contains(vowels, word:sub(i, i)) then\n                return last_vowel\n\
    \            end\n        else\n            if table.contains(vowels, word:sub(i,\
    \ i)) then\n                last_vowel = word:sub(i, i)\n            end\n   \
    \     end\n    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local result = ''\n  local last_consonant = ''\n  local last_vowel =\
    \ ''\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n    if last_consonant\
    \ ~= '' and last_vowel ~= '' then\n      return last_vowel\n    end\n    if table.index_of(vowels,\
    \ c) > 0 then\n      last_vowel = c\n    else\n      last_consonant = c\n    end\n\
    \  end\n  return result\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n \
    \ local last_consonant = 0\n  for i = #word, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if not table.contains(vowels, char) then\n      last_consonant = i\n\
    \    else\n      if last_consonant ~= 0 then\n        return char\n      end\n\
    \    end\n  end\n  return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \  local last_consonant = ''\n  local last_vowel = ''\n  for i = #word, 1, -1\
    \ do\n    local letter = word:sub(i, i)\n    if last_consonant ~= '' and last_vowel\
    \ ~= '' then\n      return last_vowel\n    end\n    if table.contains(vowels,\
    \ letter) then\n      last_vowel = letter\n    else\n      last_consonant = letter\n\
    \    end\n  end\n  return ''\nend", "\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \tlocal consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\tlocal closest_vowel = ''\n\t\
    local closest_vowel_index = 0\n\tlocal closest_consonant_index = 0\n\tfor i =\
    \ 1, #word do\n\t\tlocal char = word:sub(i, i)\n\t\tif table.contains(vowels,\
    \ char) then\n\t\t\tclosest_vowel = char\n\t\t\tclosest_vowel_index = i\n\t\t\
    end\n\t\tif table.contains(consonants, char) then\n\t\t\tclosest_consonant_index\
    \ = i\n\t\tend\n\t\tif closest_vowel_index > closest_consonant_index then\n\t\t\
    \treturn closest_vowel\n\t\tend\n\tend\n\treturn ''\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local index = #word\n  while index > 0 do\n    if not\
    \ table.contains(vowels, word:sub(index, index)) then\n      local next_index\
    \ = index + 1\n      if next_index <= #word and table.contains(vowels, word:sub(next_index,\
    \ next_index)) then\n        return word:sub(next_index, next_index)\n      end\n\
    \    end\n    index = index - 1\n  end\n  return ''\nend", "    local vowels =\
    \ {'a', 'e', 'i', 'o', 'u'}\n    local len = #word\n    local last_consonant =\
    \ len\n    for i = len, 1, -1 do\n        local c = word:sub(i, i)\n        if\
    \ not table.contains(vowels, c) then\n            last_consonant = i\n       \
    \ else\n            break\n        end\n    end\n    if last_consonant == len\
    \ then\n        return ''\n    end\n    for i = last_consonant - 1, 1, -1 do\n\
    \        local c = word:sub(i, i)\n        if table.contains(vowels, c) then\n\
    \            return c\n        end\n    end\n    return ''\nend", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1\
    \ do\n    local char = word:sub(i, i)\n    if last_vowel == '' then\n      for\
    \ _, v in ipairs(vowels) do\n        if char == v then\n          last_vowel =\
    \ char\n          break\n        end\n      end\n    else\n      for _, v in ipairs(vowels)\
    \ do\n        if char == v then\n          return last_vowel\n        end\n  \
    \    end\n    end\n  end\n  return ''\nend", "  -- your code here\n  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local closest_vowel = ''\n  local closest_vowel_index\
    \ = 0\n  for i = #word, 1, -1 do\n    if word:sub(i, i) == 'a' or word:sub(i,\
    \ i) == 'e' or word:sub(i, i) == 'i' or word:sub(i, i) == 'o' or word:sub(i, i)\
    \ == 'u' then\n      if closest_vowel_index == 0 then\n        closest_vowel =\
    \ word:sub(i, i)\n        closest_vowel_index = i\n      end\n    else\n     \
    \ if closest_vowel_index ~= 0 then\n        return closest_vowel\n      end\n\
    \    end\n  end\n  return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \  local closest_vowel = ''\n  local closest_distance = math.huge\n  for i = 1,\
    \ #word do\n    local char = word:sub(i, i)\n    if char:find('[aeiou]') then\n\
    \      local distance = #word - i\n      if distance < closest_distance then\n\
    \        closest_distance = distance\n        closest_vowel = char\n      end\n\
    \    end\n  end\n  return closest_vowel\nend", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n    local c =\
    \ word:sub(i, i)\n    if table.index_of(vowels, c) > 0 then\n      last_vowel\
    \ = c\n      break\n    end\n  end\n  return last_vowel\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local result = ''\n    local index = 0\n    for i = #word, 1, -1 do\n   \
    \     if table.indexOf(consonants, word:sub(i, i)) ~= -1 then\n            index\
    \ = i\n            break\n        end\n    end\n    for i = index, #word do\n\
    \        if table.indexOf(vowels, word:sub(i, i)) ~= -1 then\n            result\
    \ = word:sub(i, i)\n            break\n        end\n    end\n    return result\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel =\
    \ ''\n    local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n       \
    \ if word:sub(i, i) == 'a' or word:sub(i, i) == 'e' or word:sub(i, i) == 'i' or\
    \ word:sub(i, i) == 'o' or word:sub(i, i) == 'u' then\n            closest_vowel\
    \ = word:sub(i, i)\n            closest_vowel_index = i\n            break\n \
    \       end\n    end\n    if closest_vowel_index == 0 then\n        return ''\n\
    \    end\n    for i = closest_vowel_index, 1, -1 do\n        if word:sub(i, i)\
    \ ~= 'a' and word:sub(i, i) ~= 'e' and word:sub(i, i) ~= 'i' and word:sub(i, i)\
    \ ~= 'o' and word:sub(i, i) ~= 'u' then\n            return closest_vowel\n  \
    \      end\n    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local closest_vowel = ''\n  local closest_vowel_distance = 0\n  for\
    \ i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      closest_vowel = char\n      closest_vowel_distance = #word\
    \ - i\n      break\n    end\n  end\n  for i = #word, 1, -1 do\n    local char\
    \ = word:sub(i, i)\n    if table.contains(vowels, char) then\n      if #word -\
    \ i < closest_vowel_distance then\n        closest_vowel = char\n        closest_vowel_distance\
    \ = #word - i\n      end\n    end\n  end\n  return closest_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word,\
    \ 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n          \
    \  last_vowel = word:sub(i, i)\n            break\n        end\n    end\n    return\
    \ last_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if not table.contains(vowels, char) then\n  \
    \          last_consonant = char\n        else\n            last_vowel = char\n\
    \            break\n        end\n    end\n    return last_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'}\n    local closest_vowel = ''\n    local closest_vowel_index = 0\n    local\
    \ closest_consonant_index = 0\n    for i = 1, #word do\n        local char = word:sub(i,\
    \ i)\n        if table.contains(vowels, char) then\n            closest_vowel\
    \ = char\n            closest_vowel_index = i\n        elseif table.contains(consonants,\
    \ char) then\n            if closest_vowel_index > closest_consonant_index then\n\
    \                return closest_vowel\n            end\n            closest_consonant_index\
    \ = i\n        end\n    end\n    return ''\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local last_vowel = nil\n    for i = #word, 1, -1 do\n  \
    \      local c = word:sub(i, i)\n        if last_vowel then\n            if not\
    \ table.contains(vowels, c) then\n                return last_vowel\n        \
    \    end\n        else\n            if table.contains(vowels, c) then\n      \
    \          last_vowel = c\n            end\n        end\n    end\n    return ''\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if\
    \ table.index_of(vowels, char) then\n            last_vowel = char\n         \
    \   break\n        end\n    end\n    return last_vowel\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1,\
    \ -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n            last_vowel\
    \ = word:sub(i, i)\n            break\n        end\n    end\n    return last_vowel\n\
    end", "  -- your code here\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  local closest_vowel = \"\"\n  local closest_distance = 0\n  for i = 1, #word\
    \ do\n    for j = 1, #vowels do\n      if word[i] == vowels[j] then\n        local\
    \ distance = #word - i\n        if distance > closest_distance then\n        \
    \  closest_distance = distance\n          closest_vowel = word[i]\n        end\n\
    \      end\n    end\n  end\n  return closest_vowel\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local vowel_index = 0\n  local word_length = #word\n\
    \  for i = word_length, 1, -1 do\n    if i == word_length then\n      if vowels[word:sub(i,\
    \ i)] then\n        vowel_index = i\n      end\n    else\n      if vowels[word:sub(i,\
    \ i)] and not vowels[word:sub(i + 1, i + 1)] then\n        vowel_index = i\n \
    \       break\n      end\n    end\n  end\n  return vowel_index > 0 and word:sub(vowel_index,\
    \ vowel_index) or ''\nend", "    local vowels = \"aeiouAEIOU\"\n    local closest_vowel\
    \ = \"\"\n    local closest_vowel_distance = 0\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if vowels:find(char) then\n    \
    \        closest_vowel = char\n            closest_vowel_distance = #word - i\n\
    \            break\n        end\n    end\n    for i = #word, 1, -1 do\n      \
    \  local char = word:sub(i, i)\n        if vowels:find(char) then\n          \
    \  if #word - i < closest_vowel_distance then\n                closest_vowel =\
    \ char\n                closest_vowel_distance = #word - i\n            end\n\
    \        end\n    end\n    return closest_vowel\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local result = ''\n  local last_consonant = ''\n  local\
    \ last_vowel = ''\n  for i = 1, #word do\n    local char = word:sub(i, i)\n  \
    \  if table.contains(vowels, char) then\n      last_vowel = char\n    else\n \
    \     last_consonant = char\n    end\n    if last_consonant ~= '' and last_vowel\
    \ ~= '' then\n      result = last_vowel\n      break\n    end\n  end\n  return\
    \ result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local vowels_set\
    \ = {}\n    for i = 1, #vowels do\n        vowels_set[vowels[i]] = true\n    end\n\
    \    local last_vowel = ''\n    for i = #word, 1, -1 do\n        if vowels_set[word:sub(i,\
    \ i)] then\n            last_vowel = word:sub(i, i)\n            break\n     \
    \   end\n    end\n    for i = #word, 1, -1 do\n        if vowels_set[word:sub(i,\
    \ i)] then\n            if last_vowel ~= word:sub(i, i) then\n               \
    \ return word:sub(i, i)\n            end\n        end\n    end\n    return ''\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local result = ''\n \
    \   local last_vowel_index = 0\n    for i = #word, 1, -1 do\n        local char\
    \ = word:sub(i, i)\n        if table.indexOf(vowels, char) > 0 then\n        \
    \    last_vowel_index = i\n            break\n        end\n    end\n    for i\
    \ = last_vowel_index, 1, -1 do\n        local char = word:sub(i, i)\n        if\
    \ table.indexOf(vowels, char) > 0 then\n            result = char\n          \
    \  break\n        end\n    end\n    return result\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local res = ''\n    for i = #word, 1, -1 do\n     \
    \   if table.indexof(vowels, word:sub(i, i)) then\n            res = word:sub(i,\
    \ i)\n            break\n        end\n    end\n    return res\nend", "  local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest = ''\n  local closest_index\
    \ = 0\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.indexof(vowels,\
    \ char) then\n      closest = char\n      closest_index = i\n      break\n   \
    \ end\n  end\n  for i = closest_index - 1, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if table.indexof(vowels, char) then\n      return ''\n    end\n  end\n\
    \  return closest\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ result = ''\n    for i = #word, 1, -1 do\n        if table.indexOf(vowels, word:sub(i,\
    \ i)) ~= -1 then\n            result = word:sub(i, i)\n            break\n   \
    \     end\n    end\n    return result\nend", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local result = ''\n  local index = #word\n  local prev_is_vowel\
    \ = false\n  while index > 0 do\n    local char = word:sub(index, index)\n   \
    \ if not prev_is_vowel then\n      for _,v in ipairs(vowels) do\n        if char\
    \ == v then\n          result = char\n          break\n        end\n      end\n\
    \    else\n      if result ~= '' then\n        break\n      end\n    end\n   \
    \ prev_is_vowel = false\n    for _,v in ipairs(vowels) do\n      if char == v\
    \ then\n        prev_is_vowel = true\n        break\n      end\n    end\n    index\
    \ = index - 1\n  end\n  return result\nend", "    -- body\nend", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local last_consonant = 0\n  for i = #word, 1,\
    \ -1 do\n    if not table.contains(vowels, word:sub(i, i)) then\n      last_consonant\
    \ = i\n      break\n    end\n  end\n  if last_consonant == 0 then return '' end\n\
    \  for i = last_consonant, 1, -1 do\n    if table.contains(vowels, word:sub(i,\
    \ i)) then\n      return word:sub(i, i)\n    end\n  end\n  return ''\nend", " \
    \ return word:gsub(\".*([aeiouAEIOU]).*([^aeiouAEIOU]).*\", \"%1\")\nend", " \
    \   local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for\
    \ i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n\
    \            last_vowel = word:sub(i, i)\n            break\n        end\n   \
    \ end\n    return last_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local last_consonant = nil\n    for i = #word, 1, -1 do\n        local char\
    \ = word:sub(i, i)\n        if last_consonant then\n            for _, v in ipairs(vowels)\
    \ do\n                if char == v then\n                    return char\n   \
    \             end\n            end\n        else\n            for _, v in ipairs(vowels)\
    \ do\n                if char == v then\n                    last_consonant =\
    \ nil\n                    break\n                else\n                    last_consonant\
    \ = char\n                end\n            end\n        end\n    end\n    return\
    \ ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel =\
    \ ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      last_vowel = char\n      break\n    end\n  end\n  if last_vowel\
    \ == '' then return '' end\n  local last_consonant = ''\n  for i = #word, 1, -1\
    \ do\n    local char = word:sub(i, i)\n    if not table.contains(vowels, char)\
    \ then\n      last_consonant = char\n      break\n    end\n  end\n  if last_consonant\
    \ == '' then return '' end\n  local closest_vowel = ''\n  local closest_distance\
    \ = #word\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if\
    \ table.contains(vowels, char) then\n      local distance = #word - i\n      if\
    \ distance < closest_distance then\n        closest_vowel = char\n        closest_distance\
    \ = distance\n      end\n    end\n  end\n  return closest_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local\
    \ closest_vowel_index = 0\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if table.index_of(vowels, char) ~= -1 then\n            closest_vowel\
    \ = char\n            closest_vowel_index = i\n            break\n        end\n\
    \    end\n    for i = closest_vowel_index - 1, 1, -1 do\n        local char =\
    \ word:sub(i, i)\n        if table.index_of(vowels, char) == -1 then\n       \
    \     return closest_vowel\n        end\n    end\n    return ''\nend", "  local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n  local vowel_positions = {}\n  for i =\
    \ 1, #word do\n    for j = 1, #vowels do\n      if word:sub(i, i) == vowels[j]\
    \ then\n        vowel_positions[#vowel_positions + 1] = i\n      end\n    end\n\
    \  end\n  local closest_vowel = ''\n  local closest_vowel_distance = #word\n \
    \ for i = 1, #vowel_positions do\n    local vowel_position = vowel_positions[i]\n\
    \    local distance = #word - vowel_position\n    if distance < closest_vowel_distance\
    \ then\n      closest_vowel_distance = distance\n      closest_vowel = word:sub(vowel_position,\
    \ vowel_position)\n    end\n  end\n  return closest_vowel\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel_index = 0\n    for i = #word,\
    \ 1, -1 do\n        if table.index_of(vowels, word:sub(i, i)) ~= -1 then\n   \
    \         last_vowel_index = i\n            break\n        end\n    end\n    if\
    \ last_vowel_index == 0 then\n        return ''\n    end\n    local last_consonant_index\
    \ = 0\n    for i = last_vowel_index - 1, 1, -1 do\n        if table.index_of(vowels,\
    \ word:sub(i, i)) == -1 then\n            last_consonant_index = i\n         \
    \   break\n        end\n    end\n    if last_consonant_index == 0 then\n     \
    \   return ''\n    end\n    return word:sub(last_vowel_index, last_vowel_index)\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local result = ''\n  local\
    \ distance = 0\n  for i = 1, #word do\n    if word:sub(i, i) == 'a' or word:sub(i,\
    \ i) == 'e' or word:sub(i, i) == 'i' or word:sub(i, i) == 'o' or word:sub(i, i)\
    \ == 'u' then\n      if i > 1 and i < #word then\n        if word:sub(i - 1, i\
    \ - 1) ~= 'a' and word:sub(i - 1, i - 1) ~= 'e' and word:sub(i - 1, i - 1) ~=\
    \ 'i' and word:sub(i - 1, i - 1) ~= 'o' and word:sub(i - 1, i - 1) ~= 'u' and\
    \ word:sub(i + 1, i + 1) ~= 'a' and word:sub(i + 1, i + 1) ~= 'e' and word:sub(i\
    \ + 1, i + 1) ~= 'i' and word:sub(i + 1, i + 1) ~= 'o' and word:sub(i + 1, i +\
    \ 1) ~= 'u' then\n          if distance == 0 then\n            distance = i\n\
    \            result = word:sub(i, i)\n          elseif i < distance then\n   \
    \         distance = i\n            result = word:sub(i, i)\n          end\n \
    \       end\n      end\n    end\n  end\n  return result\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = ''\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local letter = word:sub(i, i)\n \
    \       if not table.contains(vowels, letter) then\n            last_consonant\
    \ = letter\n        else\n            if last_consonant ~= '' then\n         \
    \       closest_vowel = letter\n                break\n            end\n     \
    \   end\n    end\n    return closest_vowel\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n   \
    \     if table.index_of(vowels, word:sub(i, i)) ~= -1 then\n            last_vowel\
    \ = word:sub(i, i)\n            break\n        end\n    end\n    for i = #word,\
    \ 1, -1 do\n        if table.index_of(vowels, word:sub(i, i)) == -1 then\n   \
    \         if last_vowel ~= '' then\n                return last_vowel\n      \
    \      end\n        else\n            last_vowel = word:sub(i, i)\n        end\n\
    \    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n \
    \ local closest = ''\n  local closest_index = -1\n  for i = #word, 1, -1 do\n\
    \    local char = word:sub(i, i)\n    if table.contains(vowels, char) then\n \
    \     closest = char\n      closest_index = i\n      break\n    end\n  end\n \
    \ if closest_index == -1 then return '' end\n  for i = closest_index - 1, 1, -1\
    \ do\n    local char = word:sub(i, i)\n    if not table.contains(vowels, char)\
    \ then\n      return closest\n    end\n  end\n  return ''\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local word_len = #word\n    local vowel_index = 0\n    local consonant_index\
    \ = 0\n    local closest_vowel = ''\n    local closest_vowel_index = 0\n    local\
    \ closest_consonant_index = 0\n    for i = 1, word_len do\n        local letter\
    \ = word:sub(i, i)\n        if table.contains(vowels, letter) then\n         \
    \   vowel_index = i\n            for j = i, word_len do\n                local\
    \ letter = word:sub(j, j)\n                if table.contains(consonants, letter)\
    \ then\n                    consonant_index = j\n                    if consonant_index\
    \ - vowel_index > 1 then\n                        if closest_vowel_index == 0\
    \ then\n                            closest_vowel = letter\n                 \
    \           closest_vowel_index = vowel_index\n                            closest_consonant_index\
    \ = consonant_index\n                        elseif consonant_index - vowel_index\
    \ < closest_consonant_index - closest_vowel_index then\n                     \
    \       closest_vowel = letter\n                            closest_vowel_index\
    \ = vowel_index\n                            closest_consonant_index = consonant_index\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return closest_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local\
    \ closest_vowel_index = 0\n    local word_length = #word\n    for i = 1, word_length\
    \ do\n        local letter = word:sub(i, i)\n        if table.contains(vowels,\
    \ letter) then\n            if i > closest_vowel_index then\n                closest_vowel\
    \ = letter\n                closest_vowel_index = i\n            end\n       \
    \ end\n    end\n    return closest_vowel\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n    local closest_vowel = ''\n    local closest_vowel_index\
    \ = 0\n    for i = #word, 1, -1 do\n        if not table.contains(vowels, word:sub(i,\
    \ i)) then\n            for j = i - 1, 1, -1 do\n                if table.contains(vowels,\
    \ word:sub(j, j)) then\n                    if j > closest_vowel_index then\n\
    \                        closest_vowel = word:sub(j, j)\n                    \
    \    closest_vowel_index = j\n                    end\n                    break\n\
    \                end\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "  -- body\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local consonants\
    \ = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'}\n  local word_len = #word\n  local vowel_index\
    \ = 0\n  local consonant_index = 0\n  local closest_vowel = ''\n  local closest_vowel_index\
    \ = 0\n  local closest_consonant_index = 0\n  local closest_distance = 0\n  for\
    \ i = 1, word_len do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      vowel_index = i\n      for j = i, word_len do\n        local\
    \ char = word:sub(j, j)\n        if table.contains(consonants, char) then\n  \
    \        consonant_index = j\n          if closest_vowel_index == 0 then\n   \
    \         closest_vowel_index = vowel_index\n            closest_consonant_index\
    \ = consonant_index\n            closest_vowel = word:sub(vowel_index, vowel_index)\n\
    \            closest_distance = consonant_index - vowel_index\n          else\n\
    \            if consonant_index - vowel_index < closest_distance then\n      \
    \        closest_vowel_index = vowel_index\n              closest_consonant_index\
    \ = consonant_index\n              closest_vowel = word:sub(vowel_index, vowel_index)\n\
    \              closest_distance = consonant_index - vowel_index\n            end\n\
    \          end\n        end\n      end\n    end\n  end\n  return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = ''\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n        local\
    \ char = word:sub(i, i)\n        if table.contains(vowels, char) then\n      \
    \      last_vowel = char\n        else\n            if last_vowel ~= '' then\n\
    \                return last_vowel\n            end\n            last_consonant\
    \ = char\n        end\n    end\n    return ''\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local last_consonant = nil\n    for i = #word, 1, -1\
    \ do\n        local letter = word:sub(i, i)\n        if not table.contains(vowels,\
    \ letter) then\n            last_consonant = i\n        elseif last_consonant\
    \ then\n            return letter\n        end\n    end\n    return ''\nend",
  "    local vowels = \"aeiouAEIOU\"\n    local result = \"\"\n    for i = #word,\
    \ 1, -1 do\n        if vowels:find(word:sub(i, i)) then\n            result =\
    \ word:sub(i, i)\n            break\n        end\n    end\n    return result\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local closest_vowel = \"\"\n  local closest_vowel_index\
    \ = 0\n  local closest_consonant_index = 0\n  local closest_consonant = \"\"\n\
    \  local closest_consonant_index_2 = 0\n  local closest_consonant_2 = \"\"\n \
    \ for i = 1, #word do\n    for j = 1, #vowels do\n      if word:sub(i, i) == vowels[j]\
    \ then\n        closest_vowel = word:sub(i, i)\n        closest_vowel_index =\
    \ i\n      end\n    end\n  end\n  for i = closest_vowel_index, #word do\n    for\
    \ j = 1, #consonants do\n      if word:sub(i, i) == consonants[j] then\n     \
    \   closest_consonant = word:sub(i, i)\n        closest_consonant_index = i\n\
    \      end\n    end\n  end\n  for i = closest_vowel_index, 1, -1 do\n    for j\
    \ = 1, #consonants do\n      if word:sub(i, i) == consonants[j] then\n       \
    \ closest_consonant_2 = word:sub(i, i)\n        closest_consonant_index_2 = i\n\
    \      end\n    end\n  end\n  if closest_consonant_index - closest_vowel_index\
    \ < closest_vowel_index - closest_consonant_index_2 then\n    return closest_vowel\n\
    \  else\n    return \"\"\n  end\nend", "  -- your code here\n  local vowels =\
    \ {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local word_table = {}\n  local closest_vowel = ''\n  local closest_vowel_index\
    \ = 0\n  local closest_consonant_index = 0\n  local closest_consonant = ''\n \
    \ local closest_consonant_index_2 = 0\n  local closest_consonant_2 = ''\n  for\
    \ i = 1, #word do\n    word_table[i] = word:sub(i, i)\n  end\n  for i = #word_table,\
    \ 1, -1 do\n    for j = 1, #vowels do\n      if word_table[i] == vowels[j] then\n\
    \        closest_vowel = word_table[i]\n        closest_vowel_index = i\n    \
    \    break\n      end\n    end\n    if closest_vowel ~= '' then\n      break\n\
    \    end\n  end\n  for i = closest_vowel_index, 1, -1 do\n    for j = 1, #consonants\
    \ do\n      if word_table[i] == consonants[j] then\n        closest_consonant\
    \ = word_table[i]\n        closest_consonant_index = i\n        break\n      end\n\
    \    end\n    if closest_consonant ~= '' then\n      break\n    end\n  end\n \
    \ for i = closest_consonant_index, 1, -1 do\n    for j = 1, #consonants do\n \
    \     if word_table[i] == consonants[j] then\n        closest_consonant_2 = word_table[i]\n\
    \        closest_consonant_index_2 = i\n        break\n      end\n    end\n  \
    \  if closest_consonant_2 ~= '' then\n      break\n    end\n", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local result = ''\n  for i = #word, 1, -1 do\n\
    \    if table.indexOf(vowels, word:sub(i, i)) then\n      result = word:sub(i,\
    \ i)\n      break\n    end\n  end\n  return result\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n  \
    \  local c = word:sub(i, i)\n    if table.contains(vowels, c) then\n      last_vowel\
    \ = c\n      break\n    end\n  end\n  return last_vowel\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = ''\n    local closest_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n   \
    \     if not table.contains(vowels, char) then\n            last_consonant = char\n\
    \        else\n            if last_consonant ~= '' then\n                closest_vowel\
    \ = char\n                break\n            end\n        end\n    end\n    return\
    \ closest_vowel\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  for i = #word, 1, -1 do\n    local c = word:sub(i, i)\n    if c:match('[aeiou]')\
    \ then\n      last_vowel = c\n      break\n    end\n  end\n  return last_vowel\n\
    end", "    -- your code here\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local last_vowel = ''\n    for i = #word, 1, -1 do\n        local char =\
    \ word:sub(i, i)\n        if last_vowel == '' then\n            for _, v in ipairs(vowels)\
    \ do\n                if char == v then\n                    last_vowel = char\n\
    \                    break\n                end\n            end\n        else\n\
    \            for _, v in ipairs(vowels) do\n                if char == v then\n\
    \                    return last_vowel\n                end\n            end\n\
    \        end\n    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n    local c =\
    \ word:sub(i, i)\n    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c ==\
    \ 'u' then\n      last_vowel = c\n      break\n    end\n  end\n  for i = #word,\
    \ 1, -1 do\n    local c = word:sub(i, i)\n    if c == 'a' or c == 'e' or c ==\
    \ 'i' or c == 'o' or c == 'u' then\n      if c ~= last_vowel then\n        return\
    \ c\n      end\n    else\n      last_vowel = ''\n    end\n  end\n  return ''\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local closest_vowel =\
    \ ''\n    local closest_vowel_index = 0\n    for i = #word, 1, -1 do\n       \
    \ if not table.contains(vowels, word:sub(i, i)) then\n            for j = i, 1,\
    \ -1 do\n                if table.contains(vowels, word:sub(j, j)) then\n    \
    \                if closest_vowel_index == 0 then\n                        closest_vowel_index\
    \ = j\n                        closest_vowel = word:sub(j, j)\n              \
    \      elseif j > closest_vowel_index then\n                        closest_vowel_index\
    \ = j\n                        closest_vowel = word:sub(j, j)\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ closest_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ last_consonant = nil\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if not table.contains(vowels, c) then\n            last_consonant\
    \ = i\n        elseif last_consonant then\n            return c\n        end\n\
    \    end\n    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n \
    \ local last_vowel = ''\n  for i = #word, 1, -1 do\n    local letter = word:sub(i,\
    \ i)\n    if table.contains(vowels, letter) then\n      last_vowel = letter\n\
    \      break\n    end\n  end\n  return last_vowel\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1, -1 do\n\
    \        local char = word:sub(i, i)\n        if table.indexof(vowels, char) then\n\
    \            last_vowel = char\n            break\n        end\n    end\n    return\
    \ last_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel\
    \ = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n      \
    \  if table.contains(vowels, c) then\n            last_vowel = c\n           \
    \ break\n        end\n    end\n    return last_vowel\nend", "    -- your code\
    \ here\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'}\n    local closest_vowel = \"\"\n    local closest_vowel_index\
    \ = -1\n    local closest_consonant_index = -1\n    for i = 1, #word do\n    \
    \    if closest_vowel_index ~= -1 and closest_consonant_index ~= -1 then\n   \
    \         break\n        end\n        if closest_vowel_index == -1 then\n    \
    \        for j = 1, #vowels do\n                if word:sub(i, i) == vowels[j]\
    \ then\n                    closest_vowel_index = i\n                    closest_vowel\
    \ = word:sub(i, i)\n                    break\n                end\n         \
    \   end\n        end\n        if closest_consonant_index == -1 then\n        \
    \    for j = 1, #consonants do\n                if word:sub(i, i) == consonants[j]\
    \ then\n                    closest_consonant_index = i\n                    break\n\
    \                end\n            end\n        end\n    end\n    if closest_vowel_index\
    \ == -1 or closest_consonant_index == -1 then\n        return \"\"\n    end\n\
    \    if closest_vowel_index > closest_consonant_index then\n        return \"\"\
    \n    end\n    return closest_vowel\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    local result\
    \ = ''\n    local index = #word\n    while index > 0 do\n        local char =\
    \ word:sub(index, index)\n        if char == 'a' or char == 'e' or char == 'i'\
    \ or char == 'o' or char == 'u' then\n            result = char\n            break\n\
    \        end\n        index = index - 1\n    end\n    return result\nend", " \
    \   local vowels = \"aeiouAEIOU\"\n    local consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local last_consonant = 0\n    local closest_vowel = \"\"\n    local closest_vowel_distance\
    \ = 0\n    for i = 1, #word do\n        local char = word:sub(i, i)\n        if\
    \ consonants:find(char) then\n            last_consonant = i\n        elseif vowels:find(char)\
    \ then\n            if closest_vowel_distance == 0 or i - last_consonant < closest_vowel_distance\
    \ then\n                closest_vowel = char\n                closest_vowel_distance\
    \ = i - last_consonant\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal result = ''\n\tfor\
    \ i = #word, 1, -1 do\n\t\tif not table.contains(vowels, word:sub(i, i)) then\n\
    \t\t\tfor j = i - 1, 1, -1 do\n\t\t\t\tif table.contains(vowels, word:sub(j, j))\
    \ then\n\t\t\t\t\tresult = word:sub(j, j)\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\
    end\n\t\t\tbreak\n\t\tend\n\tend\n\treturn result\nend", "    local vowels = \"\
    aeiouAEIOU\"\n    local last_vowel = \"\"\n    for i = #word, 1, -1 do\n     \
    \   if string.find(vowels, word:sub(i, i)) then\n            last_vowel = word:sub(i,\
    \ i)\n            break\n        end\n    end\n    return last_vowel\nend", " \
    \ local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local result = ''\n  local last_consonant\
    \ = ''\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i,\
    \ i)\n    if not table.contains(vowels, char) then\n      last_consonant = char\n\
    \    else\n      last_vowel = char\n      break\n    end\n  end\n  if last_consonant\
    \ ~= '' and last_vowel ~= '' then\n    result = last_vowel\n  end\n  return result\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if table.contains(vowels,\
    \ c) then\n            last_vowel = c\n            break\n        end\n    end\n\
    \    return last_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local result = ''\n    local index = #word\n    while index > 0 do\n    \
    \    local char = word:sub(index, index)\n        if char == 'a' or char == 'e'\
    \ or char == 'i' or char == 'o' or char == 'u' then\n            result = char\n\
    \            break\n        end\n        index = index - 1\n    end\n    return\
    \ result\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local consonants\
    \ = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'}\n    local closest_vowel = ''\n    local closest_vowel_index\
    \ = 0\n    local closest_consonant_index = 0\n    for i = 1, #word do\n      \
    \  for j = 1, #vowels do\n            if word:sub(i, i) == vowels[j] then\n  \
    \              closest_vowel = word:sub(i, i)\n                closest_vowel_index\
    \ = i\n                break\n            end\n        end\n        for j = 1,\
    \ #consonants do\n            if word:sub(i, i) == consonants[j] then\n      \
    \          closest_consonant_index = i\n                break\n            end\n\
    \        end\n        if closest_vowel_index > closest_consonant_index then\n\
    \            return closest_vowel\n        end\n    end\n    return ''\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel_index = 0\n\
    \    for i = #word, 1, -1 do\n        if table.indexof(vowels, word:sub(i, i))\
    \ then\n            last_vowel_index = i\n            break\n        end\n   \
    \ end\n    if last_vowel_index == 0 then\n        return ''\n    end\n    local\
    \ closest_vowel_index = 0\n    for i = last_vowel_index, 1, -1 do\n        if\
    \ table.indexof(vowels, word:sub(i, i)) then\n            closest_vowel_index\
    \ = i\n        else\n            break\n        end\n    end\n    return word:sub(closest_vowel_index,\
    \ closest_vowel_index)\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \    local closest_vowel = ''\n    local closest_index = 0\n    for i = #word,\
    \ 1, -1 do\n        if table.contains(vowels, word:sub(i, i)) then\n         \
    \   closest_vowel = word:sub(i, i)\n            closest_index = i\n          \
    \  break\n        end\n    end\n    if closest_index == 1 then\n        return\
    \ ''\n    end\n    for i = closest_index - 1, 1, -1 do\n        if not table.contains(vowels,\
    \ word:sub(i, i)) then\n            return closest_vowel\n        end\n    end\n\
    \    return ''\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local closest_vowel\
    \ = ''\n  local closest_vowel_index = 0\n  for i = #word, 1, -1 do\n    if table.indexof(vowels,\
    \ word:sub(i, i)) then\n      closest_vowel = word:sub(i, i)\n      closest_vowel_index\
    \ = i\n      break\n    end\n  end\n  if closest_vowel_index == 0 then\n    return\
    \ ''\n  end\n  for i = closest_vowel_index - 1, 1, -1 do\n    if not table.indexof(vowels,\
    \ word:sub(i, i)) then\n      return closest_vowel\n    end\n  end\n  return ''\n\
    end", "    local vowels = {\n        ['a'] = true,\n        ['e'] = true,\n  \
    \      ['i'] = true,\n        ['o'] = true,\n        ['u'] = true,\n        ['A']\
    \ = true,\n        ['E'] = true,\n        ['I'] = true,\n        ['O'] = true,\n\
    \        ['U'] = true,\n    }\n    local closest_vowel = ''\n    local closest_distance\
    \ = 0\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n    \
    \    if vowels[char] then\n            closest_vowel = char\n            closest_distance\
    \ = #word - i\n            break\n        end\n    end\n    for i = #word, 1,\
    \ -1 do\n        local char = word:sub(i, i)\n        if vowels[char] then\n \
    \           local distance = #word - i\n            if distance < closest_distance\
    \ then\n                closest_vowel = char\n                closest_distance\
    \ = distance\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = nil\n    for i = #word, 1, -1 do\n        local c = word:sub(i, i)\n     \
    \   if not table.contains(vowels, c) then\n            last_consonant = i\n  \
    \      elseif last_consonant then\n            return c\n        end\n    end\n\
    \    return \"\"\nend", "  local vowels = {a = true, e = true, i = true, o = true,\
    \ u = true, y = true}\n  local last_consonant = nil\n  for i = #word, 1, -1 do\n\
    \    local letter = word:sub(i, i)\n    if not vowels[letter:lower()] then\n \
    \     last_consonant = i\n    elseif last_consonant then\n      return word:sub(i,\
    \ i)\n    end\n  end\n  return \"\"\nend", "    local vowels = \"aeiouAEIOU\"\n\
    \    local last_consonant = 0\n    for i = #word, 1, -1 do\n        if not vowels:find(word:sub(i,\
    \ i)) then\n            last_consonant = i\n            break\n        end\n \
    \   end\n    for i = last_consonant, 1, -1 do\n        if vowels:find(word:sub(i,\
    \ i)) then\n            return word:sub(i, i)\n        end\n    end\n    return\
    \ \"\"\nend", "    local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n    local\
    \ closest_vowel = \"\"\n    local closest_vowel_index = 0\n    local word_length\
    \ = #word\n    for i = word_length, 1, -1 do\n        local letter = word:sub(i,\
    \ i)\n        if table.contains(vowels, letter) then\n            closest_vowel\
    \ = letter\n            closest_vowel_index = i\n            break\n        end\n\
    \    end\n    if closest_vowel_index == 0 then\n        return \"\"\n    end\n\
    \    for i = closest_vowel_index, word_length do\n        local letter = word:sub(i,\
    \ i)\n        if not table.contains(vowels, letter) then\n            return closest_vowel\n\
    \        end\n    end\n    return closest_vowel\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local last_vowel = ''\n  for i = #word, 1, -1 do\n  \
    \  local char = word:sub(i, i)\n    if table.indexof(vowels, char) then\n    \
    \  last_vowel = char\n      break\n    end\n  end\n  return last_vowel\nend",
  "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local consonants = {'b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'}\n    local word_length = #word\n    local closest_vowel = ''\n\
    \    for i = word_length, 1, -1 do\n        local char = word:sub(i, i)\n    \
    \    if char == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u'\
    \ then\n            closest_vowel = char\n            break\n        end\n   \
    \ end\n    if closest_vowel == '' then\n        return ''\n    end\n    local\
    \ closest_vowel_index = word:find(closest_vowel)\n    for i = closest_vowel_index,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if char == 'b' or char\
    \ == 'c' or char == 'd' or char == 'f' or char == 'g' or char == 'h' or char ==\
    \ 'j' or char == 'k' or char == 'l' or char == 'm' or char == 'n' or char == 'p'\
    \ or char == 'q' or char == 'r' or char == 's' or char == 't' or char == 'v' or\
    \ char == 'w' or char == 'x' or char == 'y' or char == 'z' then\n            return\
    \ closest_vowel\n        end\n    end\n    return ''\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n    for i = #word, 1,\
    \ -1 do\n        if table.indexof(vowels, word:sub(i, i)) then\n            last_vowel\
    \ = word:sub(i, i)\n            break\n        end\n    end\n    return last_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local word_len = #word\n\
    \    local closest_vowel = ''\n    local closest_vowel_idx = 0\n    for i = word_len,\
    \ 1, -1 do\n        local char = word:sub(i, i)\n        if char == 'a' or char\
    \ == 'e' or char == 'i' or char == 'o' or char == 'u' then\n            closest_vowel\
    \ = char\n            closest_vowel_idx = i\n            break\n        end\n\
    \    end\n    for i = closest_vowel_idx, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if char ~= 'a' and char ~= 'e' and char ~= 'i' and char ~= 'o' and\
    \ char ~= 'u' then\n            return closest_vowel\n        end\n    end\n \
    \   return ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ closest_vowel = ''\n    local closest_vowel_distance = 0\n    local distance\
    \ = 0\n    for i = #word, 1, -1 do\n        if word:sub(i, i) == 'a' or word:sub(i,\
    \ i) == 'e' or word:sub(i, i) == 'i' or word:sub(i, i) == 'o' or word:sub(i, i)\
    \ == 'u' then\n            distance = #word - i\n            if distance > closest_vowel_distance\
    \ then\n                closest_vowel = word:sub(i, i)\n                closest_vowel_distance\
    \ = distance\n            end\n        end\n    end\n    return closest_vowel\n\
    end", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_vowel = ''\n\
    \    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n        if\
    \ table.index_of(vowels, char) then\n            last_vowel = char\n         \
    \   break\n        end\n    end\n    return last_vowel\nend", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local closest = ''\n  local closest_dist = math.huge\n\
    \  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c:find('[aeiou]')\
    \ then\n      local dist = #word - i\n      if dist < closest_dist then\n    \
    \    closest = c\n        closest_dist = dist\n      end\n    end\n  end\n  return\
    \ closest\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local last_vowel\
    \ = ''\n  for i = #word, 1, -1 do\n    local char = word:sub(i, i)\n    if table.contains(vowels,\
    \ char) then\n      last_vowel = char\n      break\n    end\n  end\n  return last_vowel\n\
    end", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local word_len = word:len()\n  local vowel_pos = 0\n\
    \  local consonant_pos = 0\n  local closest_vowel = ''\n  local closest_vowel_pos\
    \ = 0\n  local closest_consonant_pos = 0\n  local closest_distance = 0\n  for\
    \ i = 1, word_len do\n    local char = word:sub(i, i)\n    for j = 1, #vowels\
    \ do\n      if char == vowels[j] then\n        vowel_pos = i\n        break\n\
    \      end\n    end\n    for j = 1, #consonants do\n      if char == consonants[j]\
    \ then\n        consonant_pos = i\n        break\n      end\n    end\n    if vowel_pos\
    \ > 0 and consonant_pos > 0 then\n      local distance = consonant_pos - vowel_pos\n\
    \      if distance > 0 and (closest_distance == 0 or distance < closest_distance)\
    \ then\n        closest_vowel = char\n        closest_vowel_pos = vowel_pos\n\
    \        closest_consonant_pos = consonant_pos\n        closest_distance = distance\n\
    \      end\n    end\n    vowel_pos = 0\n    consonant_pos = 0\n  end\n  return\
    \ closest_vowel\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ closest = ''\n    local closest_distance = math.huge\n    for i = 1, #word do\n\
    \        local c = word:sub(i, i)\n        if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n            local distance = #word - i\n     \
    \       if distance < closest_distance then\n                closest = c\n   \
    \             closest_distance = distance\n            end\n        end\n    end\n\
    \    return closest\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n   \
    \ local last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexOf(vowels, c) then\n            last_vowel = c\n \
    \           break\n        end\n    end\n    return last_vowel\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant = ''\n    local\
    \ last_vowel = ''\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if table.indexof(vowels, c) then\n            last_vowel = c\n \
    \       else\n            if last_vowel ~= '' then\n                return last_vowel\n\
    \            end\n            last_consonant = c\n        end\n    end\n    return\
    \ ''\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local last_consonant\
    \ = nil\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n  \
    \      if not table.contains(vowels, char) then\n            last_consonant =\
    \ i\n        elseif last_consonant then\n            return char\n        end\n\
    \    end\n    return ''\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

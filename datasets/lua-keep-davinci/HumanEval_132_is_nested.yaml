name: HumanEval_132_is_nested
language: lua
prompt: "-- Create a function that takes a string as input which contains only square\
  \ brackets.\n-- The function should return True if and only if there is a valid\
  \ subsequence of brackets \n-- where at least one bracket in the subsequence is\
  \ nested.\n-- is_nested('[[]]') \u279E True\n-- is_nested('[]]]]]]][[[[[]') \u279E\
  \ False\n-- is_nested('[][]') \u279E False\n-- is_nested('[]') \u279E False\n--\
  \ is_nested('[[][]]') \u279E True\n-- is_nested('[[]][[') \u279E True\nlocal function\
  \ is_nested(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_nested\n\
  \    lu.assertEquals(candidate('[[]]'), true)\n    lu.assertEquals(candidate('[]]]]]]][[[[[]'),\
  \ false)\n    lu.assertEquals(candidate('[][]'), false)\n    lu.assertEquals(candidate('[]'),\
  \ false)\n    lu.assertEquals(candidate('[[[[]]]]'), true)\n    lu.assertEquals(candidate('[]]]]]]]]]]'),\
  \ false)\n    lu.assertEquals(candidate('[][][[]]'), true)\n    lu.assertEquals(candidate('[[]'),\
  \ false)\n    lu.assertEquals(candidate('[]]'), false)\n    lu.assertEquals(candidate('[[]][['),\
  \ true)\n    lu.assertEquals(candidate('[[][]]'), true)\n    lu.assertEquals(candidate(''),\
  \ false)\n    lu.assertEquals(candidate('[[[[[[[['), false)\n    lu.assertEquals(candidate(']]]]]]]]'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local stack = {}\n    for i = 1, #string do\n        local c =\
    \ string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    if string[i] == '[' then\n      table.insert(stack, 1, string[i])\n    elseif\
    \ string[i] == ']' then\n      if #stack == 0 then\n        return false\n   \
    \   else\n        table.remove(stack, 1)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack > 0 then\n                table.remove(stack)\n            else\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n\
    \    if string:sub(i, i) == '[' then\n      table.insert(stack, 1, string:sub(i,\
    \ i))\n    elseif string:sub(i, i) == ']' then\n      if #stack == 0 then\n  \
    \      return false\n      else\n        table.remove(stack, 1)\n      end\n \
    \   end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ > 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local c\
    \ = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack > 0 then\n         \
    \       table.remove(stack)\n            else\n                return false\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    -- body\nend", "    local count = 0\n    for i = 1,\
    \ #string do\n        if string:sub(i, i) == '[' then\n            count = count\
    \ + 1\n        elseif string:sub(i, i) == ']' then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    if string:sub(i,\
    \ i) == '[' then\n      table.insert(stack, 1, string:sub(i, i))\n    elseif string:sub(i,\
    \ i) == ']' then\n      if #stack == 0 then\n        return false\n      else\n\
    \        table.remove(stack, 1)\n      end\n    end\n  end\n  return #stack ==\
    \ 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local c =\
    \ string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack > 0 then\n                table.remove(stack)\n\
    \            else\n                return false\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    if string[i]\
    \ == '[' then\n      table.insert(stack, string[i])\n    elseif string[i] == ']'\
    \ then\n      if #stack > 0 then\n        table.remove(stack)\n      else\n  \
    \      return false\n      end\n    end\n  end\n  return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack > 0 then\n                table.remove(stack)\n\
    \            else\n                return false\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "  local open = 0\n  local close = 0\n  for i =\
    \ 1, #string do\n    if string:sub(i, i) == '[' then\n      open = open + 1\n\
    \    elseif string:sub(i, i) == ']' then\n      close = close + 1\n    end\n \
    \ end\n  if open == close then\n    return false\n  else\n    return true\n  end\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack == 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    if string[i] == '[' then\n      table.insert(stack, string[i])\n   \
    \ elseif string[i] == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    if string:sub(i, i) == '[' then\n      table.insert(stack, 1, string:sub(i,\
    \ i))\n    elseif string:sub(i, i) == ']' then\n      if #stack == 0 then\n  \
    \      return false\n      else\n        table.remove(stack, 1)\n      end\n \
    \   end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #string do\n        local char = string:sub(i, i)\n        if char == '['\
    \ then\n            table.insert(stack, char)\n        elseif char == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n   \
    \ if char == '[' then\n      table.insert(stack, char)\n    elseif char == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local count = 0\n\
    \    for i = 1, #string do\n        if string:sub(i, i) == '[' then\n        \
    \    count = count + 1\n        elseif string:sub(i, i) == ']' then\n        \
    \    count = count - 1\n        end\n        if count < 0 then\n            return\
    \ false\n        end\n    end\n    return count == 0\nend", "    local stack =\
    \ {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n     \
    \   if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ > 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n   \
    \ if char == '[' then\n      table.insert(stack, char)\n    elseif char == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    if string[i] == '[' then\n      table.insert(stack,\
    \ string[i])\n    elseif string[i] == ']' then\n      if #stack > 0 then\n   \
    \     table.remove(stack)\n      else\n        return false\n      end\n    end\n\
    \  end\n  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    if string:sub(i, i) == '[' then\n \
    \     table.insert(stack, 1, string:sub(i, i))\n    elseif string:sub(i, i) ==\
    \ ']' then\n      if #stack == 0 then\n        return false\n      else\n    \
    \    table.remove(stack, 1)\n      end\n    end\n  end\n  return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack > 0 then\n   \
    \             table.remove(stack)\n            else\n                return false\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "\tlocal stack = {}\n\tfor i\
    \ = 1, #string do\n\t\tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\t\t\
    table.insert(stack, c)\n\t\telseif c == ']' then\n\t\t\tif #stack == 0 then\n\t\
    \t\t\treturn false\n\t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn #stack == 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ > 0\nend", "    local stack = {}\n    for i = 1, #string do\n        local c\
    \ = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack > 0 then\n                table.remove(stack)\n\
    \            else\n                return false\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    if string:sub(i,\
    \ i) == '[' then\n      table.insert(stack, ']')\n    else\n      if #stack ==\
    \ 0 then\n        return false\n      end\n      table.remove(stack)\n    end\n\
    \  end\n  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   table.insert(stack, c)\n        elseif c == ']' then\n            if #stack\
    \ == 0 then\n                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local count = 0\n  for i =\
    \ 1, #string do\n    if string:sub(i, i) == '[' then\n      count = count + 1\n\
    \    elseif string:sub(i, i) == ']' then\n      count = count - 1\n    end\n \
    \   if count < 0 then\n      return false\n    end\n  end\n  return count == 0\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            local top = table.remove(stack)\n \
    \           if top == nil then\n                return false\n            end\n\
    \        end\n    end\n    return #stack == 0\nend", "    local stack = {}\n \
    \   for i = 1, #string do\n        local char = string:sub(i, i)\n        if char\
    \ == '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            table.insert(stack, char)\n        elseif char == ']' then\n    \
    \        if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack > 0 then\n\
    \        table.remove(stack)\n      else\n        return false\n      end\n  \
    \  end\n  end\n  return #stack > 0\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    if string[i] == '[' then\n      table.insert(stack,\
    \ 1, string[i])\n    elseif string[i] == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack, 1)\n      end\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i=1,#string\
    \ do\n        local char = string:sub(i,i)\n        if char == '[' then\n    \
    \        table.insert(stack, char)\n        elseif char == ']' then\n        \
    \    if #stack == 0 then\n                return false\n            else\n   \
    \             table.remove(stack)\n            end\n        end\n    end\n   \
    \ return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack > 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

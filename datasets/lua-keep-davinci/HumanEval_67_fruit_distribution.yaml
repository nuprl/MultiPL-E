name: HumanEval_67_fruit_distribution
language: lua
prompt: "-- In this task, you will be given a string that represents a number of apples\
  \ and oranges \n-- that are distributed in a basket of fruit this basket contains\
  \ \n-- apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n-- the oranges and apples and an integer that represent the total\
  \ number of the fruits \n-- in the basket return the number of the mango fruits\
  \ in the basket.\n-- for examble:\n-- fruit_distribution(\"5 apples and 6 oranges\"\
  , 19) ->19 - 5 - 6 = 8\n-- fruit_distribution(\"0 apples and 1 oranges\",3) -> 3\
  \ - 0 - 1 = 2\n-- fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2\
  \ - 3 = 95\n-- fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
  \ - 1 = 19\nlocal function fruit_distribution(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fruit_distribution\n\
  \    lu.assertEquals(candidate('5 apples and 6 oranges', 19), 8)\n    lu.assertEquals(candidate('5\
  \ apples and 6 oranges', 21), 10)\n    lu.assertEquals(candidate('0 apples and 1\
  \ oranges', 3), 2)\n    lu.assertEquals(candidate('1 apples and 0 oranges', 3),\
  \ 2)\n    lu.assertEquals(candidate('2 apples and 3 oranges', 100), 95)\n    lu.assertEquals(candidate('2\
  \ apples and 3 oranges', 5), 0)\n    lu.assertEquals(candidate('1 apples and 100\
  \ oranges', 120), 19)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- your code here\n    local apples, oranges = s:match(\"(%d+)\
    \ apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "    --\
    \ your code here\n    local a, o = string.match(s, \"(%d+) apples and (%d+) oranges\"\
    )\n    return n - a - o\nend", "    local apples, oranges = string.match(s, \"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- your code here\n\
    \    local a, o = s:match('(%d+) apples and (%d+) oranges')\n    return n - tonumber(a)\
    \ - tonumber(o)\nend", "    -- Write your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - tonumber(a)\
    \ - tonumber(o)\nend", "\t-- your code here\n\tlocal a,o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - a - o\nend", "    local apples = tonumber(s:match('(%d+)\
    \ apples'))\n    local oranges = tonumber(s:match('(%d+) oranges'))\n    return\
    \ n - apples - oranges\nend", "    -- your code here\n    local apples, oranges\
    \ = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return n - apples\
    \ - oranges\nend", "    -- your code here\n    local a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - a - o\nend", "    -- your code here\n \
    \   local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a\
    \ - o\nend", "    -- YOUR CODE HERE\n    local a, o = string.match(s, \"(%d+)\
    \ apples and (%d+) oranges\")\n    return n - tonumber(a) - tonumber(o)\nend",
  "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\n\
    end", "    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "    -- your code here\n    local apples\
    \ = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s,\
    \ \"(%d+) oranges\"))\n    return n - apples - oranges\nend", "    local apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    local apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\n\
    end", "    local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return\
    \ n - tonumber(a) - tonumber(o)\nend", "    -- YOUR CODE HERE\n    local apples,\
    \ oranges = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "\tlocal apples, oranges = string.match(s, \"(%d+)\
    \ apples and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    local\
    \ apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "\t-- body\n\tlocal\
    \ apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n -\
    \ apples - oranges\nend", "  -- your code here\n  local a, o = s:match(\"(%d+)\
    \ apples and (%d+) oranges\")\n  return n - a - o\nend", "    -- Write your code\
    \ here\n    local apples, oranges = string.match(s, \"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "  local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n  return n - apples - oranges\nend", "    --\
    \ your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "\tlocal apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    local apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- your code here\n\
    \    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges\
    \ = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples - oranges\n\
    end", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges\
    \ = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples - oranges\nend",
  "    -- your code here\n    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    -- Write your code here\n\
    \    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges\
    \ = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples - oranges\n\
    end", "    -- your code here\n    local apples = tonumber(string.match(s, \"(%d+)\
    \ apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n\
    \    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    -- your code here\n    local a, o\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", " \
    \   local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "\t-- your code here\n\
    end", "    local apples, oranges = string.match(s, \"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "    local apples, oranges = string.match(s,\
    \ \"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend",
  "    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return\
    \ n - apples - oranges\nend", "\tlocal apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    -- your code\
    \ here\n    local a, o = string.match(s, \"(%d+) apples and (%d+) oranges\")\n\
    \    return n - a - o\nend", "\tlocal apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "\tlocal a, o = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n\treturn n - a - o\nend", "    local apples,\
    \ oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - tonumber(apples)\
    \ - tonumber(oranges)\nend", "\tlocal apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    local apples,\
    \ oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples\
    \ - oranges\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\n\
    end", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges\
    \ = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples - oranges\nend",
  "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- write your code\
    \ here\n    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "\tlocal apples = tonumber(s:match(\"\
    (%d+) apples\"))\n\tlocal oranges = tonumber(s:match(\"(%d+) oranges\"))\n\treturn\
    \ n - apples - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n \
    \   local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "\t-- your code here\n\tlocal a = string.match(s,\
    \ \"(%d+) apples\")\n\tlocal o = string.match(s, \"(%d+) oranges\")\n\treturn\
    \ n - a - o\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    local apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\n\
    end", "    local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return\
    \ n - a - o\nend", "    -- your code here\n    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "\t\
    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn\
    \ n - apples - oranges\nend", "    -- your code here\n    local a, o = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", "    local apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    local apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\n\
    end", "\tlocal apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n\
    \treturn n - apples - oranges\nend", "    -- your code here\n    local apples,\
    \ oranges = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- write your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "\tlocal apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    local\
    \ apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = string.match(s, \"(%d+) apples and (%d+) oranges\")\n\treturn n - apples -\
    \ oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - a - o\nend", "    -- Write your code here\n\
    \    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges\
    \ = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples - oranges\n\
    end", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges\
    \ = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples - oranges\nend",
  "    -- your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- your code here\n    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  local\
    \ apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n  return n -\
    \ apples - oranges\nend", "    -- Write your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    -- your code here\nend", "   \
    \ local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\n\
    end", "    -- your code here\n    local apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - apples - oranges\nend", "    -- your code\
    \ here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local\
    \ oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- Write your code here\n    local a, o = s:match(\"(%d+)\
    \ apples and (%d+) oranges\")\n    return n - a - o\nend", "    -- your code here\n\
    \    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n   \
    \ return n - apples - oranges\nend", "    -- body\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    -- your code here\n    local a,\
    \ o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a - o\nend",
  "\tlocal a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - a - o\n\
    end", "    -- your code here\n    local a, o = string.match(s, \"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - a - o\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    -- your code here\n    local a, o\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", "\t\
    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn\
    \ n - apples - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "\tlocal a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n\treturn n - tonumber(a) - tonumber(o)\nend", "    local\
    \ apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- Write your code\
    \ here\n    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    local apples =\
    \ tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- your code here\n\
    \    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges\
    \ = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples - oranges\n\
    end", "    -- your code here\n    local apples = tonumber(string.match(s, \"(%d+)\
    \ apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n\
    \    return n - apples - oranges\nend", "\tlocal apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    --\
    \ write your code here\n    local apples, oranges = s:match(\"(%d+) apples and\
    \ (%d+) oranges\")\n    return n - apples - oranges\nend", "    -- your code here\n\
    end", "    local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges\
    \ = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples - oranges\nend",
  "    -- your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "    local a, o = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - a - o\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  -- your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    -- write your code here\n    local\
    \ apples = string.match(s, \"(%d+) apples\")\n    local oranges = string.match(s,\
    \ \"(%d+) oranges\")\n    return n - apples - oranges\nend", "    local apples,\
    \ oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples\
    \ - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    -- your code here\n    local apples,\
    \ oranges = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "    -- Write your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - a - o\nend", "    -- your code here\n \
    \   local a, o = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return\
    \ n - a - o\nend", "    local apples, oranges = string.match(s, \"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - apples - oranges\nend", "\tlocal apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n\tlocal oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n\treturn n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  -- your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "    -- your code here\n    local a, o = string.match(s,\
    \ \"(%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", "    local\
    \ apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "    local apples = tonumber(s:match(\"(%d+) apples\"\
    ))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- Write your code here\n    local apples = tonumber(string.match(s,\
    \ \"%d+ apples\"))\n    local oranges = tonumber(string.match(s, \"%d+ oranges\"\
    ))\n    return n - apples - oranges\nend", "    -- your code here\n    local apples\
    \ = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s,\
    \ \"(%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- your code\
    \ here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local\
    \ oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- write your code here\n    local apples, oranges = string.match(s,\
    \ \"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend",
  "    local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a\
    \ - o\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "    -- your code here\n    local apples,\
    \ oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples\
    \ - oranges\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\n\
    end", "\tlocal apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n\
    \treturn n - apples - oranges\nend", "    -- your code here\n    local apples\
    \ = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s,\
    \ \"(%d+) oranges\"))\n    return n - apples - oranges\nend", "    local a, o\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - tonumber(a) -\
    \ tonumber(o)\nend", "    -- write your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - tonumber(a) - tonumber(o)\nend", "    local\
    \ a, o = string.match(s, \"(%d+) apples and (%d+) oranges\")\n    return n - a\
    \ - o\nend", "    -- your code here\n    local apples = string.match(s, \"(%d+)\
    \ apples\")\n    local oranges = string.match(s, \"(%d+) oranges\")\n    return\
    \ n - apples - oranges\nend", "    local apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - apples - oranges\nend", "    -- Write your\
    \ code here\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local a, o = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - tonumber(a) - tonumber(o)\nend", "    local\
    \ apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "    local apples, oranges = s:match(\"(%d+) apples\
    \ and (%d+) oranges\")\n    return n - apples - oranges\nend", "  local apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n  local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n  return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    -- your code here\n    local apples\
    \ = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s,\
    \ \"(%d+) oranges\"))\n    return n - apples - oranges\nend", "    local a, o\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", " \
    \   -- your code here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"\
    ))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return\
    \ n - apples - oranges\nend", "    -- write your code here\n    local a, o = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - a - o\nend", "    -- your code\
    \ here\n    local apples = tonumber(string.match(s, \"(%d+) apples\"))\n    local\
    \ oranges = tonumber(string.match(s, \"(%d+) oranges\"))\n    return n - apples\
    \ - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "\tlocal apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\nend", "    local\
    \ apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n\
    \ - apples - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  --\
    \ your code here\n  local apples = string.match(s, \"(%d+) apples\")\n  local\
    \ oranges = string.match(s, \"(%d+) oranges\")\n  return n - apples - oranges\n\
    end", "    local a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n    return\
    \ n - a - o\nend", "    -- your code here\n    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  local apples = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend", "    -- your code here\n\
    \    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\")\n   \
    \ return n - apples - oranges\nend", "    -- write your code here\n    local apples\
    \ = string.match(s, \"(%d+) apples\")\n    local oranges = string.match(s, \"\
    (%d+) oranges\")\n    return n - apples - oranges\nend", "\tlocal apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n - apples - oranges\n\
    end", "\tlocal a, o = s:match(\"(%d+) apples and (%d+) oranges\")\n\treturn n\
    \ - a - o\nend", "    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    -- your code here\nend", "    -- your\
    \ code here\n    local apples, oranges = s:match(\"(%d+) apples and (%d+) oranges\"\
    )\n    return n - apples - oranges\nend", "    local apples, oranges = s:match(\"\
    (%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend", "  \
    \  -- write your code here\n    local apples = tonumber(string.match(s, \"%d+\"\
    ))\n    local oranges = tonumber(string.match(s, \"%d+ oranges\"))\n    return\
    \ n - apples - oranges\nend", "    -- your code here\n    local apples = tonumber(string.match(s,\
    \ \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s, \"(%d+) oranges\"\
    ))\n    return n - apples - oranges\nend", "    local apples = tonumber(s:match(\"\
    (%d+) apples\"))\n    local oranges = tonumber(s:match(\"(%d+) oranges\"))\n \
    \   return n - apples - oranges\nend", "    local apples, oranges = string.match(s,\
    \ \"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\nend",
  "    -- your code here\n    local apples, oranges = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - apples - oranges\nend", "    local apples, oranges\
    \ = s:match(\"(%d+) apples and (%d+) oranges\")\n    return n - apples - oranges\n\
    end", "    -- your code here\n    local a,o = s:match(\"(%d+) apples and (%d+)\
    \ oranges\")\n    return n - a - o\nend", "    -- your code here\n    local apples\
    \ = tonumber(string.match(s, \"(%d+) apples\"))\n    local oranges = tonumber(string.match(s,\
    \ \"(%d+) oranges\"))\n    return n - apples - oranges\nend", "    local apples\
    \ = tonumber(s:match(\"(%d+) apples\"))\n    local oranges = tonumber(s:match(\"\
    (%d+) oranges\"))\n    return n - apples - oranges\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

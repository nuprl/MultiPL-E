name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing(\"<\"\
  )\n-- False\n-- >>> correct_bracketing(\"<>\")\n-- True\n-- >>> correct_bracketing(\"\
  <<><>>\")\n-- True\n-- >>> correct_bracketing(\"><<>\")\n-- False\nlocal function\
  \ correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n        local c\
    \ = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local stack = {}\n   \
    \ for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c\
    \ == \"<\" then\n            table.insert(stack, c)\n        elseif c == \">\"\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "  local stack = {}\n  for i =\
    \ 1, #brackets do\n    local c = brackets:sub(i, i)\n    if c == \"<\" then\n\
    \      table.insert(stack, c)\n    elseif c == \">\" then\n      if #stack ==\
    \ 0 then\n        return false\n      end\n      table.remove(stack)\n    end\n\
    \  end\n  return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "  local stack = {}\n  for i =\
    \ 1, #brackets do\n    local b = brackets:sub(i, i)\n    if b == \"<\" then\n\
    \      table.insert(stack, b)\n    elseif b == \">\" then\n      if #stack ==\
    \ 0 then\n        return false\n      else\n        table.remove(stack)\n    \
    \  end\n    end\n  end\n  return #stack == 0\nend", "    local count = 0\n   \
    \ for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n     \
    \       count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n \
    \           count = count - 1\n        end\n        if count < 0 then\n      \
    \      return false\n        end\n    end\n    return count == 0\nend", "    local\
    \ stack = Stack()\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            stack:push(c)\n        elseif c\
    \ == \">\" then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if\
    \ c == \"<\" then\n            table.insert(stack, c)\n        elseif c == \"\
    >\" then\n            if #stack == 0 then\n                return false\n    \
    \        end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n         \
    \   count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n     \
    \       count = count - 1\n        end\n        if count < 0 then\n          \
    \  return false\n        end\n    end\n    return count == 0\nend", "  local count\
    \ = 0\n  for i = 1, #brackets do\n    if brackets:sub(i, i) == \"<\" then\n  \
    \    count = count + 1\n    else\n      count = count - 1\n    end\n    if count\
    \ < 0 then\n      return false\n    end\n  end\n  return count == 0\nend", "\t\
    local stack = {}\n\tfor i = 1, #brackets do\n\t\tlocal c = brackets:sub(i, i)\n\
    \t\tif c == \"<\" then\n\t\t\ttable.insert(stack, c)\n\t\telseif c == \">\" then\n\
    \t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\ttable.remove(stack)\n\
    \t\tend\n\tend\n\treturn #stack == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"<\"\
    \ then\n            table.insert(stack, c)\n        elseif c == \">\" then\n \
    \           if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i=1,#brackets do\n       \
    \ local c = brackets:sub(i,i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local\
    \ c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack, c)\n\
    \    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "  local count = 0\n  for i = 1, #brackets do\n\
    \    if brackets:sub(i, i) == \"<\" then\n      count = count + 1\n    else\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend", "  local count = 0\n  for i = 1, #brackets\
    \ do\n    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      count =\
    \ count + 1\n    elseif c == \">\" then\n      count = count - 1\n    end\n  \
    \  if count < 0 then\n      return false\n    end\n  end\n  return count == 0\n\
    end", "  local stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i,\
    \ i)\n    if c == \"<\" then\n      table.insert(stack, c)\n    elseif c == \"\
    >\" then\n      if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local open_count = 0\n    for i = 1, #brackets do\n        if\
    \ brackets:sub(i, i) == \"<\" then\n            open_count = open_count + 1\n\
    \        elseif brackets:sub(i, i) == \">\" then\n            open_count = open_count\
    \ - 1\n        end\n        if open_count < 0 then\n            return false\n\
    \        end\n    end\n    return open_count == 0\nend", "    local stack = {}\n\
    \    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if\
    \ c == \"<\" then\n            table.insert(stack, c)\n        elseif c == \"\
    >\" then\n            if #stack == 0 then\n                return false\n    \
    \        end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \ local stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n\
    \    if c == \"<\" then\n      table.insert(stack, c)\n    elseif c == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n  for i = 1,\
    \ #brackets do\n    local c = brackets:sub(i, i)\n    if c == \"<\" then\n   \
    \   table.insert(stack, c)\n    elseif c == \">\" then\n      if #stack == 0 then\n\
    \        return false\n      end\n      table.remove(stack)\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n\
    \        local bracket = brackets:sub(i, i)\n        if bracket == \"<\" then\n\
    \            table.insert(stack, bracket)\n        elseif bracket == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local stack = Stack()\n    for i = 1, #brackets do\n        local\
    \ c = brackets:sub(i, i)\n        if c == \"<\" then\n            stack:push(c)\n\
    \        elseif c == \">\" then\n            if stack:is_empty() then\n      \
    \          return false\n            else\n                stack:pop()\n     \
    \       end\n        end\n    end\n    return stack:is_empty()\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i,\
    \ i) == \"<\" then\n      count = count + 1\n    else\n      count = count - 1\n\
    \    end\n    if count < 0 then\n      return false\n    end\n  end\n  return\
    \ count == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local\
    \ c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack, c)\n\
    \    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "  local stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i,\
    \ i)\n    if c == \"<\" then\n      table.insert(stack, c)\n    elseif c == \"\
    >\" then\n      if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "  local count = 0\n  for i = 1,\
    \ #brackets do\n    if brackets:sub(i, i) == \"<\" then\n      count = count +\
    \ 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n     \
    \ return false\n    end\n  end\n  return count == 0\nend", "    local stack =\
    \ {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n    \
    \    if c == \"<\" then\n            table.insert(stack, c)\n        elseif c\
    \ == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "\tlocal count = 0\n\tfor i\
    \ = 1, #brackets do\n\t\tif brackets:sub(i, i) == \"<\" then\n\t\t\tcount = count\
    \ + 1\n\t\telseif brackets:sub(i, i) == \">\" then\n\t\t\tcount = count - 1\n\t\
    \tend\n\t\tif count < 0 then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn count\
    \ == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n        local\
    \ c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n         \
    \   count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n     \
    \       count = count - 1\n        end\n        if count < 0 then\n          \
    \  return false\n        end\n    end\n    return count == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local\
    \ c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack, c)\n\
    \    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \ local stack = {}\n  for i = 1, #brackets do\n    local b = brackets:sub(i, i)\n\
    \    if b == \"<\" then\n      table.insert(stack, b)\n    elseif b == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local count = 0\n \
    \ for i = 1, #brackets do\n    if brackets:sub(i, i) == \"<\" then\n      count\
    \ = count + 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n\
    \      return false\n    end\n  end\n  return count == 0\nend", "  local stack\
    \ = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n    if c\
    \ == \"<\" then\n      table.insert(stack, c)\n    elseif c == \">\" then\n  \
    \    if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local bracket\
    \ = brackets:sub(i, i)\n        if bracket == \"<\" then\n            table.insert(stack,\
    \ bracket)\n        elseif bracket == \">\" then\n            if #stack == 0 then\n\
    \                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #brackets do\n    local b = brackets:sub(i, i)\n  \
    \  if b == \"<\" then\n      table.insert(stack, b)\n    elseif b == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if\
    \ c == \"<\" then\n            table.insert(stack, c)\n        elseif c == \"\
    >\" then\n            if #stack == 0 then\n                return false\n    \
    \        end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local\
    \ c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack, c)\n\
    \    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "  local stack = {}\n  for i = 1, #brackets do\n    local b = brackets:sub(i,\
    \ i)\n    if b == \"<\" then\n      table.insert(stack, b)\n    elseif b == \"\
    >\" then\n      if #stack == 0 then\n        return false\n      else\n      \
    \  table.remove(stack)\n      end\n    end\n  end\n  return #stack == 0\nend",
  "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n\
    \    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      stack[#stack\
    \ + 1] = c\n    elseif c == \">\" then\n      if #stack == 0 then\n        return\
    \ false\n      end\n      stack[#stack] = nil\n    end\n  end\n  return #stack\
    \ == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "  local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i,\
    \ i) == \"<\" then\n      count = count + 1\n    else\n      count = count - 1\n\
    \    end\n    if count < 0 then\n      return false\n    end\n  end\n  return\
    \ count == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n     \
    \   local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for\
    \ i=1, #brackets do\n    local c = brackets:sub(i,i)\n    if c == \"<\" then\n\
    \      table.insert(stack, c)\n    elseif c == \">\" then\n      if #stack ==\
    \ 0 then\n        return false\n      else\n        table.remove(stack)\n    \
    \  end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n  \
    \  for i = 1, #brackets do\n        local bracket = brackets:sub(i, i)\n     \
    \   if bracket == \"<\" then\n            table.insert(stack, bracket)\n     \
    \   elseif bracket == \">\" then\n            if #stack == 0 then\n          \
    \      return false\n            else\n                table.remove(stack)\n \
    \           end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local stack = {}\n   \
    \ for i = 1, #brackets do\n        local b = brackets:sub(i, i)\n        if b\
    \ == \"<\" then\n            table.insert(stack, b)\n        elseif b == \">\"\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = {}\n    for i = 1,\
    \ #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n\
    \            table.insert(stack, c)\n        elseif c == \">\" then\n        \
    \    if #stack == 0 then\n                return false\n            end\n    \
    \        table.remove(stack)\n        end\n    end\n    return #stack == 0\nend",
  "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       count = count + 1\n        elseif c == \">\" then\n            count =\
    \ count - 1\n        end\n        if count < 0 then\n            return false\n\
    \        end\n    end\n    return count == 0\nend", "    local count = 0\n   \
    \ for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n     \
    \       count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n \
    \           count = count - 1\n        end\n        if count < 0 then\n      \
    \      return false\n        end\n    end\n    return count == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n  \
    \  if c == \"<\" then\n      table.insert(stack, c)\n    elseif c == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n  for i = 1,\
    \ #brackets do\n    local c = brackets:sub(i, i)\n    if c == \"<\" then\n   \
    \   table.insert(stack, c)\n    elseif c == \">\" then\n      if #stack == 0 then\n\
    \        return false\n      end\n      table.remove(stack)\n    end\n  end\n\
    \  return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n\
    \        if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n\
    \        elseif brackets:sub(i, i) == \">\" then\n            count = count -\
    \ 1\n        end\n        if count < 0 then\n            return false\n      \
    \  end\n    end\n    return count == 0\nend", "  local count = 0\n  for i = 1,\
    \ #brackets do\n    if brackets:sub(i, i) == \"<\" then\n      count = count +\
    \ 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n     \
    \ return false\n    end\n  end\n  return count == 0\nend", "    local stack =\
    \ {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n    \
    \    if c == \"<\" then\n            table.insert(stack, c)\n        elseif c\
    \ == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n         \
    \   count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n     \
    \       count = count - 1\n        end\n        if count < 0 then\n          \
    \  return false\n        end\n    end\n    return count == 0\nend", "    local\
    \ stack = Stack()\n    for i = 1, #brackets do\n        local b = brackets:sub(i,\
    \ i)\n        if b == \"<\" then\n            stack:push(b)\n        elseif b\
    \ == \">\" then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "    local open_brackets\
    \ = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n\
    \            open_brackets = open_brackets + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            open_brackets = open_brackets - 1\n        end\n\
    \        if open_brackets < 0 then\n            return false\n        end\n  \
    \  end\n    return open_brackets == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "  local stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i,\
    \ i)\n    if c == \"<\" then\n      table.insert(stack, c)\n    elseif c == \"\
    >\" then\n      if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "  local stack = {}\n  for i=1,#brackets do\n    local b = brackets:sub(i,i)\n\
    \    if b == \"<\" then\n      table.insert(stack, b)\n    elseif b == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local count = 0\n\
    \    for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n  \
    \          count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n\
    \            count = count - 1\n        end\n        if count < 0 then\n     \
    \       return false\n        end\n    end\n    return count == 0\nend", "   \
    \ local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i)\
    \ == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "  local count = 0\n  for i = 1, #brackets do\n    local c = brackets:sub(i,\
    \ i)\n    if c == \"<\" then\n      count = count + 1\n    elseif c == \">\" then\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #brackets do\n        local b = brackets:sub(i, i)\n        if b == \"<\"\
    \ then\n            table.insert(stack, b)\n        elseif b == \">\" then\n \
    \           if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local open_count = 0\n    for i = 1, #brackets do\n\
    \        if brackets:sub(i, i) == \"<\" then\n            open_count = open_count\
    \ + 1\n        elseif brackets:sub(i, i) == \">\" then\n            open_count\
    \ = open_count - 1\n        end\n        if open_count < 0 then\n            return\
    \ false\n        end\n    end\n    return open_count == 0\nend", "    local count\
    \ = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n\
    \            count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n\
    \            count = count - 1\n        end\n        if count < 0 then\n     \
    \       return false\n        end\n    end\n    return count == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n  \
    \  if c == \"<\" then\n      stack[#stack + 1] = c\n    elseif c == \">\" then\n\
    \      if #stack == 0 then\n        return false\n      end\n      stack[#stack]\
    \ = nil\n    end\n  end\n  return #stack == 0\nend", "    local open_count = 0\n\
    \    for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n  \
    \          open_count = open_count + 1\n        elseif brackets:sub(i, i) == \"\
    >\" then\n            open_count = open_count - 1\n        end\n        if open_count\
    \ < 0 then\n            return false\n        end\n    end\n    return open_count\
    \ == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n        local\
    \ c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local stack = {}\n   \
    \ for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c\
    \ == \"<\" then\n            table.insert(stack, c)\n        elseif c == \">\"\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i,\
    \ i) == \"<\" then\n      count = count + 1\n    else\n      count = count - 1\n\
    \    end\n    if count < 0 then\n      return false\n    end\n  end\n  return\
    \ count == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n      \
    \  if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n      \
    \  elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n  \
    \      end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = Stack:new()\n  for i = 1, #brackets do\n\
    \    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      stack:push(c)\n\
    \    elseif c == \">\" then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local bracket = brackets:sub(i,\
    \ i)\n        if bracket == \"<\" then\n            table.insert(stack, bracket)\n\
    \        elseif bracket == \">\" then\n            if #stack == 0 then\n     \
    \           return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #brackets do\n\
    \        local c = brackets:sub(i, i)\n        if c == \"<\" then\n          \
    \  stack:push(c)\n        elseif c == \">\" then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \ local stack = {}\n  for i = 1, #brackets do\n    local bracket = brackets:sub(i,\
    \ i)\n    if bracket == \"<\" then\n      table.insert(stack, bracket)\n    elseif\
    \ bracket == \">\" then\n      if #stack == 0 then\n        return false\n   \
    \   else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n        local\
    \ c = brackets:sub(i, i)\n        if c == \"<\" then\n            count = count\
    \ + 1\n        elseif c == \">\" then\n            count = count - 1\n       \
    \ end\n        if count < 0 then\n            return false\n        end\n    end\n\
    \    return count == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n\
    \    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack,\
    \ c)\n    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local bracket\
    \ = brackets:sub(i, i)\n        if bracket == \"<\" then\n            table.insert(stack,\
    \ bracket)\n        elseif bracket == \">\" then\n            if #stack == 0 then\n\
    \                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local bracket = brackets:sub(i, i)\n        if bracket == \"<\" then\n  \
    \          table.insert(stack, bracket)\n        elseif bracket == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n\
    \    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack,\
    \ c)\n    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "  local count = 0\n  for i = 1, #brackets do\n\
    \    if brackets:sub(i, i) == \"<\" then\n      count = count + 1\n    else\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend", "  local count = 0\n  for i = 1, #brackets\
    \ do\n    if brackets:sub(i, i) == \"<\" then\n      count = count + 1\n    else\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend", "    local stack = {}\n    for i =\
    \ 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"<\"\
    \ then\n            table.insert(stack, c)\n        elseif c == \">\" then\n \
    \           if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local bracket = brackets:sub(i,\
    \ i)\n        if bracket == \"<\" then\n            table.insert(stack, bracket)\n\
    \        elseif bracket == \">\" then\n            if #stack == 0 then\n     \
    \           return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i) == \"\
    <\" then\n            count = count + 1\n        elseif brackets:sub(i, i) ==\
    \ \">\" then\n            count = count - 1\n        end\n        if count < 0\
    \ then\n            return false\n        end\n    end\n    return count == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            count = count + 1\n        elseif c == \">\" then\n    \
    \        count = count - 1\n        end\n        if count < 0 then\n         \
    \   return false\n        end\n    end\n    return count == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local bracket = brackets:sub(i,\
    \ i)\n        if bracket == \"<\" then\n            table.insert(stack, bracket)\n\
    \        elseif bracket == \">\" then\n            if #stack == 0 then\n     \
    \           return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n\
    \        if c == \"<\" then\n            table.insert(stack, c)\n        elseif\
    \ c == \">\" then\n            if #stack == 0 then\n                return false\n\
    \            end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #brackets do\n\
    \        local c = brackets:sub(i, i)\n        if c == \"<\" then\n          \
    \  stack:push(c)\n        elseif c == \">\" then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        if brackets:sub(i, i) == \"<\" then\n            count = count +\
    \ 1\n        elseif brackets:sub(i, i) == \">\" then\n            count = count\
    \ - 1\n        end\n        if count < 0 then\n            return false\n    \
    \    end\n    end\n    return count == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "    local stack = {}\n    for i = 1, #brackets do\n        local char =\
    \ brackets:sub(i, i)\n        if char == \"<\" then\n            table.insert(stack,\
    \ char)\n        elseif char == \">\" then\n            if #stack == 0 then\n\
    \                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ open = 0\n  for i = 1, #brackets do\n    if brackets:sub(i, i) == \"<\" then\n\
    \      open = open + 1\n    else\n      open = open - 1\n    end\n    if open\
    \ < 0 then\n      return false\n    end\n  end\n  return open == 0\nend", "  \
    \  local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local b = brackets:sub(i, i)\n        if b == \"<\" then\n     \
    \       table.insert(stack, b)\n        elseif b == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local\
    \ c = brackets:sub(i, i)\n    if c == \"<\" then\n      table.insert(stack, c)\n\
    \    elseif c == \">\" then\n      if #stack == 0 then\n        return false\n\
    \      end\n      table.remove(stack)\n    end\n  end\n  return #stack == 0\n\
    end", "    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n        local c\
    \ = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n         \
    \   count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n     \
    \       count = count - 1\n        end\n        if count < 0 then\n          \
    \  return false\n        end\n    end\n    return count == 0\nend", "  local stack\
    \ = {}\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n    if c\
    \ == \"<\" then\n      table.insert(stack, c)\n    elseif c == \">\" then\n  \
    \    if #stack == 0 then\n        return false\n      end\n      table.remove(stack)\n\
    \    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n    for i\
    \ = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c == \"\
    <\" then\n            table.insert(stack, c)\n        elseif c == \">\" then\n\
    \            if #stack == 0 then\n                return false\n            end\n\
    \            table.remove(stack)\n        end\n    end\n    return #stack == 0\n\
    end", "\tlocal open_count = 0\n\tfor i = 1, #brackets do\n\t\tif brackets:sub(i,\
    \ i) == \"<\" then\n\t\t\topen_count = open_count + 1\n\t\telseif brackets:sub(i,\
    \ i) == \">\" then\n\t\t\topen_count = open_count - 1\n\t\t\tif open_count < 0\
    \ then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn open_count ==\
    \ 0\nend", "  local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i,\
    \ i) == \"<\" then\n      count = count + 1\n    else\n      count = count - 1\n\
    \    end\n    if count < 0 then\n      return false\n    end\n  end\n  return\
    \ count == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n      \
    \  if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n      \
    \  elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n  \
    \      end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "\tlocal count = 0\n\tfor i = 1, #brackets do\n\
    \t\tif brackets:sub(i, i) == \"<\" then\n\t\t\tcount = count + 1\n\t\telseif brackets:sub(i,\
    \ i) == \">\" then\n\t\t\tcount = count - 1\n\t\tend\n\t\tif count < 0 then\n\t\
    \t\treturn false\n\t\tend\n\tend\n\treturn count == 0\nend", "  local stack =\
    \ Stack()\n  for i = 1, #brackets do\n    local c = brackets:sub(i, i)\n    if\
    \ c == \"<\" then\n      stack:push(c)\n    else\n      if stack:empty() then\n\
    \        return false\n      end\n      stack:pop()\n    end\n  end\n  return\
    \ stack:empty()\nend", "  local stack = Stack:new()\n  for i = 1, #brackets do\n\
    \    local c = brackets:sub(i, i)\n    if c == \"<\" then\n      stack:push(c)\n\
    \    elseif c == \">\" then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "  local stack = {}\n  for i = 1, #brackets do\n    local b = brackets:sub(i,\
    \ i)\n    if b == \"<\" then\n      table.insert(stack, b)\n    elseif b == \"\
    >\" then\n      if #stack == 0 then\n        return false\n      else\n      \
    \  table.remove(stack)\n      end\n    end\n  end\n  return #stack == 0\nend",
  "    local bracket_stack = {}\n    for i = 1, #brackets do\n        local bracket\
    \ = brackets:sub(i, i)\n        if bracket == \"<\" then\n            table.insert(bracket_stack,\
    \ bracket)\n        elseif bracket == \">\" then\n            if #bracket_stack\
    \ == 0 then\n                return false\n            else\n                table.remove(bracket_stack)\n\
    \            end\n        end\n    end\n    return #bracket_stack == 0\nend",
  "    local stack = Stack()\n    for i = 1, #brackets do\n        local bracket =\
    \ brackets:sub(i, i)\n        if bracket == \"<\" then\n            stack:push(bracket)\n\
    \        elseif bracket == \">\" then\n            if stack:is_empty() then\n\
    \                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i)\
    \ == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "  local stack = {}\n  for i = 1, #brackets do\n    local bracket =\
    \ brackets:sub(i, i)\n    if bracket == \"<\" then\n      table.insert(stack,\
    \ bracket)\n    elseif bracket == \">\" then\n      if #stack == 0 then\n    \
    \    return false\n      else\n        table.remove(stack)\n      end\n    end\n\
    \  end\n  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local bracket = brackets:sub(i, i)\n        if bracket == \"<\"\
    \ then\n            table.insert(stack, bracket)\n        elseif bracket == \"\
    >\" then\n            if #stack == 0 then\n                return false\n    \
    \        else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local count = 0\n  for i = 1, #brackets\
    \ do\n    if brackets:sub(i, i) == \"<\" then\n      count = count + 1\n    else\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend", "    local stack = Stack()\n    for\
    \ i = 1, #brackets do\n        local b = brackets:sub(i, i)\n        if b == \"\
    <\" then\n            stack:push(b)\n        elseif b == \">\" then\n        \
    \    if stack:is_empty() then\n                return false\n            else\n\
    \                stack:pop()\n            end\n        end\n    end\n    return\
    \ stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #brackets do\n\
    \        local c = brackets:sub(i, i)\n        if c == \"<\" then\n          \
    \  table.insert(stack, c)\n        elseif c == \">\" then\n            if #stack\
    \ == 0 then\n                return false\n            end\n            table.remove(stack)\n\
    \        end\n    end\n    return #stack == 0\nend", "    local count = 0\n  \
    \  for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n    \
    \        count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n\
    \            count = count - 1\n        end\n        if count < 0 then\n     \
    \       return false\n        end\n    end\n    return count == 0\nend", "   \
    \ local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       count = count + 1\n        elseif c == \">\" then\n            count =\
    \ count - 1\n        end\n        if count < 0 then\n            return false\n\
    \        end\n    end\n    return count == 0\nend", "    local stack = {}\n  \
    \  for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c\
    \ == \"<\" then\n            table.insert(stack, c)\n        elseif c == \">\"\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n    \
    \    local c = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local stack = {}\n   \
    \ for i = 1, #brackets do\n        local c = brackets:sub(i, i)\n        if c\
    \ == \"<\" then\n            table.insert(stack, c)\n        elseif c == \">\"\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      end\n            table.remove(stack)\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local count = 0\n    for i = 1, #brackets do\n     \
    \   if brackets:sub(i, i) == \"<\" then\n            count = count + 1\n     \
    \   elseif brackets:sub(i, i) == \">\" then\n            count = count - 1\n \
    \       end\n        if count < 0 then\n            return false\n        end\n\
    \    end\n    return count == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \ local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i, i) == \"\
    <\" then\n      count = count + 1\n    else\n      count = count - 1\n    end\n\
    \    if count < 0 then\n      return false\n    end\n  end\n  return count ==\
    \ 0\nend", "    local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local stack = {}\n    for i = 1, #brackets do\n        local c\
    \ = brackets:sub(i, i)\n        if c == \"<\" then\n            table.insert(stack,\
    \ c)\n        elseif c == \">\" then\n            if #stack == 0 then\n      \
    \          return false\n            end\n            table.remove(stack)\n  \
    \      end\n    end\n    return #stack == 0\nend", "    local count = 0\n    for\
    \ i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n         \
    \   count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n     \
    \       count = count - 1\n        end\n        if count < 0 then\n          \
    \  return false\n        end\n    end\n    return count == 0\nend", "    local\
    \ stack = Stack()\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            stack:push(c)\n        elseif c\
    \ == \">\" then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "    local count = 0\n \
    \   for i = 1, #brackets do\n        if brackets:sub(i, i) == \"<\" then\n   \
    \         count = count + 1\n        elseif brackets:sub(i, i) == \">\" then\n\
    \            count = count - 1\n        end\n        if count < 0 then\n     \
    \       return false\n        end\n    end\n    return count == 0\nend", "   \
    \ local count = 0\n    for i = 1, #brackets do\n        if brackets:sub(i, i)\
    \ == \"<\" then\n            count = count + 1\n        elseif brackets:sub(i,\
    \ i) == \">\" then\n            count = count - 1\n        end\n        if count\
    \ < 0 then\n            return false\n        end\n    end\n    return count ==\
    \ 0\nend", "    local open = 0\n    for i = 1, #brackets do\n        if brackets:sub(i,\
    \ i) == \"<\" then\n            open = open + 1\n        else\n            open\
    \ = open - 1\n        end\n        if open < 0 then\n            return false\n\
    \        end\n    end\n    return open == 0\nend", "  local stack = {}\n  for\
    \ i = 1, #brackets do\n    local c = brackets:sub(i, i)\n    if c == \"<\" then\n\
    \      table.insert(stack, c)\n    elseif c == \">\" then\n      if #stack ==\
    \ 0 then\n        return false\n      end\n      table.remove(stack)\n    end\n\
    \  end\n  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \   local stack = {}\n    for i = 1, #brackets do\n        local c = brackets:sub(i,\
    \ i)\n        if c == \"<\" then\n            table.insert(stack, c)\n       \
    \ elseif c == \">\" then\n            if #stack == 0 then\n                return\
    \ false\n            end\n            table.remove(stack)\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #brackets\
    \ do\n        local c = brackets:sub(i, i)\n        if c == \"<\" then\n     \
    \       table.insert(stack, c)\n        elseif c == \">\" then\n            if\
    \ #stack == 0 then\n                return false\n            end\n          \
    \  table.remove(stack)\n        end\n    end\n    return #stack == 0\nend", " \
    \ local count = 0\n  for i = 1, #brackets do\n    if brackets:sub(i, i) == \"\
    <\" then\n      count = count + 1\n    elseif brackets:sub(i, i) == \">\" then\n\
    \      count = count - 1\n    end\n    if count < 0 then\n      return false\n\
    \    end\n  end\n  return count == 0\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

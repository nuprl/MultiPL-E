name: HumanEval_94_skjkasdkd
language: lua
prompt: "-- You are given a list of integers.\n-- You need to find the largest prime\
  \ value and return the sum of its digits.\n-- Examples:\n-- For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n-- For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n-- For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n-- For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n-- For lst = [0,81,12,3,1,21] the output should be 3\n--\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nlocal function skjkasdkd(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
  \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
  \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
  \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
  \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
  \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
  \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    if\
    \ lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 2, max do\n\
    \    local isPrime = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n\
    \        isPrime = false\n        break\n      end\n    end\n    if isPrime then\n\
    \      table.insert(primes, i)\n    end\n  end\n  local maxPrime = 0\n  for i\
    \ = 1, #primes do\n    if primes[i] > maxPrime then\n      maxPrime = primes[i]\n\
    \    end\n  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum = sum + maxPrime\
    \ % 10\n    maxPrime = math.floor(maxPrime / 10)\n  end\n  return sum\nend", " \
    \ local function isPrime(n)\n    if n < 2 then return false end\n    if n == 2\
    \ then return true end\n    if n % 2 == 0 then return false end\n    for i = 3,\
    \ math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n   \
    \ return true\n  end\n  local function sumDigits(n)\n    local s = 0\n    while\
    \ n > 0 do\n      s = s + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ s\n  end\n  local max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and\
    \ lst[i] > max then\n      max = lst[i]\n    end\n  end\n  return sumDigits(max)\n\
    end", "    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    local function isPrime(n)\n\
    \        if n <= 1 then\n            return false\n        elseif n <= 3 then\n\
    \            return true\n        elseif n % 2 == 0 or n % 3 == 0 then\n     \
    \       return false\n        end\n        local i = 5\n        while i * i <=\
    \ n do\n            if n % i == 0 or n % (i + 2) == 0 then\n                return\
    \ false\n            end\n            i = i + 6\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local function largestPrime(n)\n\
    \        for i = n, 1, -1 do\n            if isPrime(i) then\n               \
    \ return i\n            end\n        end\n    end\n    return sumDigits(largestPrime(max))\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  local function isPrime(num)\n    if num == 1\
    \ then\n      return false\n    end\n    for i = 2, num - 1 do\n      if num %\
    \ i == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  local function sumDigits(num)\n    local sum = 0\n    while num > 0 do\n  \
    \    sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\n  local function getLargestPrime(num)\n    local largest = 0\n \
    \   for i = 1, num do\n      if isPrime(i) then\n        largest = i\n      end\n\
    \    end\n    return largest\n  end\n  local largestPrime = getLargestPrime(max)\n\
    \  local sum = sumDigits(largestPrime)\n  return sum\nend", "  local max = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max\
    \ = math.floor(max / 10)\n  end\n  return sum\nend", "    local primes = {}\n\
    \    for i = 1, #lst do\n        if lst[i] > 1 then\n            local isPrime\
    \ = true\n            for j = 2, lst[i] - 1 do\n                if lst[i] % j\
    \ == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       table.insert(primes, lst[i])\n            end\n        end\n    end\n\
    \    local maxPrime = math.max(unpack(primes))\n    local sum = 0\n    while maxPrime\
    \ > 0 do\n        sum = sum + maxPrime % 10\n        maxPrime = math.floor(maxPrime\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    local function isPrime(num)\n        if num < 2 then\n           \
    \ return false\n        end\n        for i = 2, num - 1 do\n            if num\
    \ % i == 0 then\n                return false\n            end\n        end\n\
    \        return true\n    end\n    local function sumDigits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end\n\
    \    local function getLargestPrime(num)\n        local largestPrime = 0\n   \
    \     for i = 2, num do\n            if isPrime(i) then\n                largestPrime\
    \ = i\n            end\n        end\n        return largestPrime\n    end\n  \
    \  return sumDigits(getLargestPrime(max))\nend", "    local function isPrime(n)\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end\n \
    \   local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for i = 1, #lst do\n    \
    \    if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n    \
    \    end\n    end\n    return sumDigits(max)\nend", "  local max = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  local function isPrime(n)\n    if n < 2 then\n      return false\n    end\n\
    \    for i = 2, n - 1 do\n      if n % i == 0 then\n        return false\n   \
    \   end\n    end\n    return true\n  end\n  local function getDigits(n)\n    local\
    \ digits = {}\n    while n > 0 do\n      table.insert(digits, n % 10)\n      n\
    \ = math.floor(n / 10)\n    end\n    return digits\n  end\n  local function sum(t)\n\
    \    local sum = 0\n    for i = 1, #t do\n      sum = sum + t[i]\n    end\n  \
    \  return sum\n  end\n  local function getPrimes(n)\n    local primes = {}\n \
    \   for i = 2, n do\n      if isPrime(i) then\n        table.insert(primes, i)\n\
    \      end\n    end\n    return primes\n  end\n  local primes = getPrimes(max)\n\
    \  local maxPrime = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n\
    \      maxPrime = primes[i]\n    end\n  end\n  local digits = getDigits(maxPrime)\n\
    \  return sum(digits)\nend", "  local function isPrime(n)\n    if n < 2 then return\
    \ false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function largestPrime(lst)\n\
    \    local largest = 0\n    for i = 1, #lst do\n      if isPrime(lst[i]) and lst[i]\
    \ > largest then\n        largest = lst[i]\n      end\n    end\n    return largest\n\
    \  end\n  return sumDigits(largestPrime(lst))\nend", "  local primes = {}\n  local\
    \ max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 2, max do\n    local isPrime = true\n    for j = 2,\
    \ i - 1 do\n      if i % j == 0 then\n        isPrime = false\n        break\n\
    \      end\n    end\n    if isPrime then\n      table.insert(primes, i)\n    end\n\
    \  end\n  local maxPrime = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime\
    \ then\n      maxPrime = primes[i]\n    end\n  end\n  local sum = 0\n  while maxPrime\
    \ > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime /\
    \ 10)\n  end\n  return sum\nend", "  local max = 0\n  for i = 1, #lst do\n   \
    \ if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n\
    \    for i = 2, n - 1 do\n      if n % i == 0 then\n        return false\n   \
    \   end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function findLargestPrime(n)\n\
    \    local largestPrime = 0\n    for i = 2, n do\n      if isPrime(i) then\n \
    \       largestPrime = i\n      end\n    end\n    return largestPrime\n  end\n\
    \  local largestPrime = findLargestPrime(max)\n  return sumDigits(largestPrime)\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  return max\nend", "    local primes = {}\n \
    \   for i = 1, #lst do\n        if lst[i] > 1 then\n            local isPrime\
    \ = true\n            for j = 2, lst[i] - 1 do\n                if lst[i] % j\
    \ == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       table.insert(primes, lst[i])\n            end\n        end\n    end\n\
    \    local max = 0\n    for i = 1, #primes do\n        if primes[i] > max then\n\
    \            max = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local function isPrime(num)\n        if num\
    \ < 2 then return false end\n        for i = 2, math.sqrt(num) do\n          \
    \  if num % i == 0 then return false end\n        end\n        return true\n \
    \   end\n    local function sumDigits(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > max then\n         \
    \   max = lst[i]\n        end\n    end\n    return sumDigits(max)\nend", "  local\
    \ function isPrime(n)\n    if n < 2 then return false end\n    for i = 2, math.sqrt(n)\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function sumDigits(n)\n    local s = 0\n    while n > 0 do\n      s =\
    \ s + n % 10\n      n = math.floor(n / 10)\n    end\n    return s\n  end\n  local\
    \ max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  return sumDigits(max)\nend", "    local\
    \ function isPrime(n)\n        if n <= 1 then return false end\n        for i\
    \ = 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n    \
    \    end\n        return true\n    end\n    local function sumDigits(n)\n    \
    \    local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n \
    \           n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local maxPrime = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v)\
    \ and v > maxPrime then\n            maxPrime = v\n        end\n    end\n    return\
    \ sumDigits(maxPrime)\nend", "  local max = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n\
    \    if n < 2 then\n      return false\n    end\n    for i = 2, n - 1 do\n   \
    \   if n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  for i = max, 2, -1 do\n    if isPrime(i) then\n      return sumDigits(i)\n\
    \    end\n  end\nend", "    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, n - 1 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local function largestPrime(lst)\n        local largest = 0\n        for\
    \ i = 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largest then\n \
    \               largest = lst[i]\n            end\n        end\n        return\
    \ largest\n    end\n    return sumDigits(largestPrime(lst))\nend", "  local primes\
    \ = {}\n  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n\
    \ > max then\n      max = n\n    end\n  end\n  for i = 2, max do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      primes[#primes\
    \ + 1] = i\n    end\n  end\n  local maxPrime = 0\n  for i = 1, #primes do\n  \
    \  local n = primes[i]\n    if n > maxPrime then\n      maxPrime = n\n    end\n\
    \  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum = sum + maxPrime % 10\n\
    \    maxPrime = math.floor(maxPrime / 10)\n  end\n  return sum\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then return false end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n      \
    \  end\n        return true\n    end\n    local function sumDigits(n)\n      \
    \  local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return sum\n    end\n \
    \   local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i])\
    \ and lst[i] > max then\n      max = lst[i]\n    end\n  end\n  return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    if\
    \ n == 2 then return true end\n    if n % 2 == 0 then return false end\n    for\
    \ i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local maxPrime = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > maxPrime then\n      maxPrime = v\n    end\n \
    \ end\n  return sumDigits(maxPrime)\nend", "  local largest = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n  end\n\
    \  local sum = 0\n  while largest > 0 do\n    sum = sum + largest % 10\n    largest\
    \ = math.floor(largest / 10)\n  end\n  return sum\nend", "    local function isPrime(n)\n\
    \        if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n\
    \            if n % i == 0 then return false end\n        end\n        return\
    \ true\n    end\n    local function sumDigits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > max then\n         \
    \   max = lst[i]\n        end\n    end\n    return sumDigits(max)\nend", "  local\
    \ function isPrime(n)\n    if n < 2 then return false end\n    if n == 2 then\
    \ return true end\n    if n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n),\
    \ 2 do\n      if n % i == 0 then return false end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local s = 0\n    while n > 0 do\n \
    \     s = s + n % 10\n      n = math.floor(n / 10)\n    end\n    return s\n  end\n\
    \  local function largestPrime(lst)\n    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n      if isPrime(v) and v > max then\n        max = v\n      end\n    end\n\
    \    return max\n  end\n  return sumDigits(largestPrime(lst))\nend", "  local\
    \ function isPrime(n)\n    if n < 2 then return false end\n    for i = 2, n -\
    \ 1 do\n      if n % i == 0 then return false end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local s = 0\n    while n > 0 do\n \
    \     s = s + n % 10\n      n = math.floor(n / 10)\n    end\n    return s\n  end\n\
    \  local max = 0\n  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max\
    \ then max = v end\n  end\n  return sumDigits(max)\nend", "  local function isPrime(n)\n\
    \    if n < 2 then return false end\n    if n == 2 then return true end\n    if\
    \ n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if\
    \ n % i == 0 then return false end\n    end\n    return true\n  end\n  local function\
    \ sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n\
    \      n = math.floor(n / 10)\n    end\n    return sum\n  end\n  local max = 0\n\
    \  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i] > max then\n      max\
    \ = lst[i]\n    end\n  end\n  return sumDigits(max)\nend", "    local function\
    \ isPrime(n)\n        if n < 2 then return false end\n        if n < 4 then return\
    \ true end\n        if n % 2 == 0 then return false end\n        for i = 3, math.sqrt(n),\
    \ 2 do\n            if n % i == 0 then return false end\n        end\n       \
    \ return true\n    end\n    local function sumDigits(n)\n        local sum = 0\n\
    \        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > max then\n         \
    \   max = lst[i]\n        end\n    end\n    return sumDigits(max)\nend", "   \
    \ local primes = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n    \
    \        local j = 2\n            while j * j <= lst[i] do\n                if\
    \ lst[i] % j == 0 then\n                    break\n                end\n     \
    \           j = j + 1\n            end\n            if j * j > lst[i] then\n \
    \               table.insert(primes, lst[i])\n            end\n        end\n \
    \   end\n    local max = 0\n    for i = 1, #primes do\n        if primes[i] >\
    \ max then\n            max = primes[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "  local function isPrime(n)\n    if n\
    \ < 2 then return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local maxPrime = 0\n  for i = 1, #lst\
    \ do\n    if isPrime(lst[i]) and lst[i] > maxPrime then\n      maxPrime = lst[i]\n\
    \    end\n  end\n  return sumDigits(maxPrime)\nend", "    local primes = {}\n\
    \    for i = 1, #lst do\n        if lst[i] > 1 then\n            local isPrime\
    \ = true\n            for j = 2, lst[i] - 1 do\n                if lst[i] % j\
    \ == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       table.insert(primes, lst[i])\n            end\n        end\n    end\n\
    \    local max = 0\n    for i = 1, #primes do\n        if primes[i] > max then\n\
    \            max = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local function isPrime(n)\n        if n <\
    \ 2 then return false end\n        for i = 2, math.sqrt(n) do\n            if\
    \ n % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for i = 1, #lst do\n    \
    \    if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n    \
    \    end\n    end\n    return sumDigits(max)\nend", "    local primes = {}\n \
    \   local max = 0\n    for i = 1, #lst do\n        if lst[i] > 1 then\n      \
    \      local isPrime = true\n            for j = 2, lst[i] - 1 do\n          \
    \      if lst[i] % j == 0 then\n                    isPrime = false\n        \
    \            break\n                end\n            end\n            if isPrime\
    \ then\n                primes[#primes + 1] = lst[i]\n                if lst[i]\
    \ > max then\n                    max = lst[i]\n                end\n        \
    \    end\n        end\n    end\n    local sum = 0\n    while max > 0 do\n    \
    \    sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n    return\
    \ sum\nend", "  local largest = 0\n  for i=1,#lst do\n    if lst[i] > largest\
    \ then\n      largest = lst[i]\n    end\n  end\n  local function isPrime(num)\n\
    \    if num == 2 then\n      return true\n    end\n    if num % 2 == 0 then\n\
    \      return false\n    end\n    for i=3,math.sqrt(num),2 do\n      if num %\
    \ i == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  while not isPrime(largest) do\n    largest = largest - 1\n  end\n  local sum\
    \ = 0\n  while largest > 0 do\n    sum = sum + largest % 10\n    largest = math.floor(largest\
    \ / 10)\n  end\n  return sum\nend", "    local primes = {}\n    local max = 0\n\
    \    for _, v in ipairs(lst) do\n        if v > 1 then\n            local isPrime\
    \ = true\n            for _, p in ipairs(primes) do\n                if v % p\
    \ == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       table.insert(primes, v)\n                if v > max then\n           \
    \         max = v\n                end\n            end\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "\tlocal primes\
    \ = {}\n\tfor i = 1, #lst do\n\t\tif isPrime(lst[i]) then\n\t\t\ttable.insert(primes,\
    \ lst[i])\n\t\tend\n\tend\n\tlocal largest = 0\n\tfor i = 1, #primes do\n\t\t\
    if primes[i] > largest then\n\t\t\tlargest = primes[i]\n\t\tend\n\tend\n\tlocal\
    \ sum = 0\n\twhile largest > 0 do\n\t\tsum = sum + largest % 10\n\t\tlargest =\
    \ math.floor(largest / 10)\n\tend\n\treturn sum\nend", "    local max = 0\n  \
    \  for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    local function isPrime(n)\n        if n < 2 then\n\
    \            return false\n        end\n        for i = 2, n - 1 do\n        \
    \    if n % i == 0 then\n                return false\n            end\n     \
    \   end\n        return true\n    end\n    local function sumDigits(n)\n     \
    \   local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n  \
    \          n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    for i = max, 2, -1 do\n        if isPrime(i) then\n            return sumDigits(i)\n\
    \        end\n    end\nend", "  local primes = {}\n  local max = 0\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n \
    \ for i = 2, max do\n    local isPrime = true\n    for j = 2, i - 1 do\n     \
    \ if i % j == 0 then\n        isPrime = false\n        break\n      end\n    end\n\
    \    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n  local maxPrime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n      maxPrime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum\
    \ = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime / 10)\n  end\n  return\
    \ sum\nend", "    local function isPrime(n)\n        if n < 2 then return false\
    \ end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function largestPrime(lst)\n        local largest = 0\n        for i =\
    \ 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largest then\n     \
    \           largest = lst[i]\n            end\n        end\n        return largest\n\
    \    end\n    return sumDigits(largestPrime(lst))\nend", "    local primes = {}\n\
    \    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n   \
    \         max = lst[i]\n        end\n    end\n    for i = 2, max do\n        if\
    \ isPrime(i) then\n            table.insert(primes, i)\n        end\n    end\n\
    \    local largest = 0\n    for i = 1, #primes do\n        if primes[i] > largest\
    \ then\n            largest = primes[i]\n        end\n    end\n    local sum =\
    \ 0\n    while largest > 0 do\n        sum = sum + largest % 10\n        largest\
    \ = math.floor(largest / 10)\n    end\n    return sum\nend", "  local primes =\
    \ {}\n  local largest = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if\
    \ num > 1 then\n      local isPrime = true\n      for j = 2, math.sqrt(num) do\n\
    \        if num % j == 0 then\n          isPrime = false\n          break\n  \
    \      end\n      end\n      if isPrime then\n        primes[#primes + 1] = num\n\
    \        if num > largest then\n          largest = num\n        end\n      end\n\
    \    end\n  end\n  local sum = 0\n  while largest > 0 do\n    sum = sum + largest\
    \ % 10\n    largest = math.floor(largest / 10)\n  end\n  return sum\nend", " \
    \   local function isPrime(n)\n        if n < 2 then return false end\n      \
    \  for i = 2, math.floor(math.sqrt(n)) do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local maxPrime = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > maxPrime then\n            maxPrime = v\n        end\n    end\n    return\
    \ sumDigits(maxPrime)\nend", "  local primes = {}\n  local largest = 0\n  for\
    \ i = 1, #lst do\n    local n = lst[i]\n    if n > 1 then\n      local isPrime\
    \ = true\n      for j = 2, n - 1 do\n        if n % j == 0 then\n          isPrime\
    \ = false\n          break\n        end\n      end\n      if isPrime then\n  \
    \      primes[#primes + 1] = n\n        if n > largest then\n          largest\
    \ = n\n        end\n      end\n    end\n  end\n  local sum = 0\n  while largest\
    \ > 0 do\n    sum = sum + largest % 10\n    largest = math.floor(largest / 10)\n\
    \  end\n  return sum\nend", "  local primes = {}\n  local largest = 0\n  for i=1,#lst\
    \ do\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n  end\n \
    \ for i=2,largest do\n    local isPrime = true\n    for j=2,i-1 do\n      if i\
    \ % j == 0 then\n        isPrime = false\n        break\n      end\n    end\n\
    \    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n  local sum\
    \ = 0\n  for i=1,#primes do\n    local num = primes[i]\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n\
    \  return sum\nend", "    local primes = {}\n    local max = 0\n    for i = 1,\
    \ #lst do\n        if lst[i] > max then\n            max = lst[i]\n        end\n\
    \    end\n    for i = 2, max do\n        local isPrime = true\n        for j =\
    \ 2, i - 1 do\n            if i % j == 0 then\n                isPrime = false\n\
    \                break\n            end\n        end\n        if isPrime then\n\
    \            table.insert(primes, i)\n        end\n    end\n    local maxPrime\
    \ = 0\n    for i = 1, #lst do\n        for j = 1, #primes do\n            if lst[i]\
    \ == primes[j] then\n                if lst[i] > maxPrime then\n             \
    \       maxPrime = lst[i]\n                end\n            end\n        end\n\
    \    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum = sum + maxPrime\
    \ % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n    return sum\n\
    end", "  local max = 0\n  for _,v in pairs(lst) do\n    if v > max then\n    \
    \  max = v\n    end\n  end\n  local function isPrime(n)\n    if n == 1 then return\
    \ false end\n    if n == 2 then return true end\n    if n % 2 == 0 then return\
    \ false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  for i = max, 1, -1 do\n    if isPrime(i)\
    \ then\n      return sumDigits(i)\n    end\n  end\nend", "  local function isPrime(n)\n\
    \    if n < 2 then return false end\n    for i = 2, math.sqrt(n) do\n      if\
    \ n % i == 0 then return false end\n    end\n    return true\n  end\n  local function\
    \ sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n\
    \      n = math.floor(n / 10)\n    end\n    return sum\n  end\n  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max then max = v end\n\
    \  end\n  return sumDigits(max)\nend", "  local primes = {}\n  local largest =\
    \ 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) then\n      primes[#primes +\
    \ 1] = lst[i]\n      if lst[i] > largest then\n        largest = lst[i]\n    \
    \  end\n    end\n  end\n  local sum = 0\n  for i = 1, #tostring(largest) do\n\
    \    sum = sum + tonumber(tostring(largest):sub(i, i))\n  end\n  return sum\n\
    end", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > 1 then\n      local isPrime = true\n      for j = 2, math.sqrt(lst[i]) do\n\
    \        if lst[i] % j == 0 then\n          isPrime = false\n          break\n\
    \        end\n      end\n      if isPrime then\n        primes[#primes + 1] =\
    \ lst[i]\n        if lst[i] > max then\n          max = lst[i]\n        end\n\
    \      end\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum\
    \ + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "   \
    \ local function isPrime(n)\n        if n < 2 then return false end\n        for\
    \ i = 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n  \
    \      end\n        return true\n    end\n    local function sumDigits(n)\n  \
    \      local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > max then max = v end\n    end\n    return sumDigits(max)\nend", "  local\
    \ primes = {}\n  local largest = 0\n  for i = 1, #lst do\n    if lst[i] > largest\
    \ then\n      largest = lst[i]\n    end\n  end\n  for i = 2, largest do\n    local\
    \ isPrime = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime\
    \ = false\n        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i = 1, #primes do\n    if\
    \ primes[i] > largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n\
    \  local sum = 0\n  for i = 1, #tostring(largestPrime) do\n    sum = sum + tonumber(tostring(largestPrime):sub(i,\
    \ i))\n  end\n  return sum\nend", "  local function isPrime(n)\n    if n < 2 then\
    \ return false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ then\n            table.insert(primes, lst[i])\n        end\n    end\n    local\
    \ max = math.max(unpack(primes))\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + (max % 10)\n        max = math.floor(max / 10)\n    end\n \
    \   return sum\nend", "    local function isPrime(n)\n        if n < 2 then return\
    \ false end\n        for i = 2, n - 1 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local function getLargestPrime(lst)\n        local largestPrime = 0\n   \
    \     for i = 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largestPrime\
    \ then\n                largestPrime = lst[i]\n            end\n        end\n\
    \        return largestPrime\n    end\n    return sumDigits(getLargestPrime(lst))\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n\
    \            local isPrime = true\n            for j = 2, lst[i] - 1 do\n    \
    \            if lst[i] % j == 0 then\n                    isPrime = false\n  \
    \                  break\n                end\n            end\n            if\
    \ isPrime then\n                table.insert(primes, lst[i])\n            end\n\
    \        end\n    end\n    local maxPrime = 0\n    for i = 1, #primes do\n   \
    \     if primes[i] > maxPrime then\n            maxPrime = primes[i]\n       \
    \ end\n    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum = sum\
    \ + maxPrime % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n   \
    \ return sum\nend", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n\
    \    local isPrime = true\n    for j = 2, lst[i] - 1 do\n      if lst[i] % j ==\
    \ 0 then\n        isPrime = false\n        break\n      end\n    end\n    if isPrime\
    \ then\n      primes[#primes + 1] = lst[i]\n      if lst[i] > max then\n     \
    \   max = lst[i]\n      end\n    end\n  end\n  local sum = 0\n  while max > 0\
    \ do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local function isPrime(n)\n        if n < 2 then return false\
    \ end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    local\
    \ isPrime = true\n    for j = 2, n - 1 do\n      if n % j == 0 then\n        isPrime\
    \ = false\n        break\n      end\n    end\n    if isPrime and n > max then\n\
    \      max = n\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", " \
    \   local function isPrime(n)\n        for i = 2, n - 1 do\n            if n %\
    \ i == 0 then\n                return false\n            end\n        end\n  \
    \      return true\n    end\n    local function sumDigits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end\n    local maxPrime\
    \ = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > maxPrime\
    \ then\n            maxPrime = lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "  local largest = 0\n  for i=1,#lst do\n    if lst[i] > largest and isPrime(lst[i])\
    \ then\n      largest = lst[i]\n    end\n  end\n  local sum = 0\n  while largest\
    \ > 0 do\n    sum = sum + largest % 10\n    largest = math.floor(largest / 10)\n\
    \  end\n  return sum\nend", "    local function isPrime(n)\n        if n < 2 then\
    \ return false end\n        for i = 2, math.sqrt(n) do\n            if n % i ==\
    \ 0 then return false end\n        end\n        return true\n    end\n    local\
    \ function sumDigits(n)\n        local s = 0\n        while n > 0 do\n       \
    \     s = s + n % 10\n            n = math.floor(n / 10)\n        end\n      \
    \  return s\n    end\n    local function largestPrime(lst)\n        local largest\
    \ = 0\n        for i = 1, #lst do\n            if isPrime(lst[i]) and lst[i] >\
    \ largest then\n                largest = lst[i]\n            end\n        end\n\
    \        return largest\n    end\n    return sumDigits(largestPrime(lst))\nend",
  "  local max = 0\n  for i=1,#lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  local function isPrime(n)\n    if n < 2 then return false end\n\
    \    if n == 2 then return true end\n    if n % 2 == 0 then return false end\n\
    \    for i=3,math.sqrt(n),2 do\n      if n % i == 0 then return false end\n  \
    \  end\n    return true\n  end\n  local function sumDigits(n)\n    local s = 0\n\
    \    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return s\n  end\n  local function findLargestPrime(n)\n    while not isPrime(n)\
    \ do\n      n = n - 1\n    end\n    return n\n  end\n  return sumDigits(findLargestPrime(max))\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false\
    \ end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function getLargestPrime(lst)\n        local largest = 0\n        for\
    \ i = 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largest then\n \
    \               largest = lst[i]\n            end\n        end\n        return\
    \ largest\n    end\n    return sumDigits(getLargestPrime(lst))\nend", "  local\
    \ function isPrime(n)\n    if n < 2 then return false end\n    for i = 2, n -\
    \ 1 do\n      if n % i == 0 then return false end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local maxPrime = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and\
    \ lst[i] > maxPrime then\n      maxPrime = lst[i]\n    end\n  end\n  return sumDigits(maxPrime)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local maxPrime = 0\n  for i = 1, #lst do\n  \
    \  if isPrime(lst[i]) and lst[i] > maxPrime then\n      maxPrime = lst[i]\n  \
    \  end\n  end\n  return sumDigits(maxPrime)\nend", "    local largest = 0\n  \
    \  for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > largest then\n\
    \            largest = lst[i]\n        end\n    end\n    local sum = 0\n    for\
    \ i = 1, #tostring(largest) do\n        sum = sum + tonumber(tostring(largest):sub(i,\
    \ i))\n    end\n    return sum\nend", "  local max = 0\n  for i=1,#lst do\n  \
    \  local num = lst[i]\n    local prime = true\n    for j=2,num-1 do\n      if\
    \ num%j == 0 then\n        prime = false\n        break\n      end\n    end\n\
    \    if prime and num > max then\n      max = num\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max%10\n    max = math.floor(max/10)\n\
    \  end\n  return sum\nend", "  local primes = {}\n  local max = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for\
    \ i = 2, max do\n    local isPrime = true\n    for j = 2, i - 1 do\n      if i\
    \ % j == 0 then\n        isPrime = false\n        break\n      end\n    end\n\
    \    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n  local maxPrime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n      maxPrime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum\
    \ = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime / 10)\n  end\n  return\
    \ sum\nend", "    local primes = {}\n    for i = 1, #lst do\n        if lst[i]\
    \ > 1 then\n            for j = 2, lst[i] do\n                if lst[i] % j ==\
    \ 0 then\n                    break\n                elseif j == lst[i] - 1 then\n\
    \                    table.insert(primes, lst[i])\n                end\n     \
    \       end\n        end\n    end\n    local largest = 0\n    for i = 1, #primes\
    \ do\n        if primes[i] > largest then\n            largest = primes[i]\n \
    \       end\n    end\n    local sum = 0\n    while largest > 0 do\n        sum\
    \ = sum + largest % 10\n        largest = math.floor(largest / 10)\n    end\n\
    \    return sum\nend", "  local function isPrime(n)\n    if n < 2 then return\
    \ false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local maxPrime = 0\n  for i = 1, #lst\
    \ do\n    if isPrime(lst[i]) and lst[i] > maxPrime then\n      maxPrime = lst[i]\n\
    \    end\n  end\n  return sumDigits(maxPrime)\nend", "  local primes = {}\n  local\
    \ largest = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    local isPrime =\
    \ true\n    for j = 2, math.sqrt(n) do\n      if n % j == 0 then\n        isPrime\
    \ = false\n        break\n      end\n    end\n    if isPrime and n > largest then\n\
    \      largest = n\n    end\n  end\n  local sum = 0\n  while largest > 0 do\n\
    \    sum = sum + largest % 10\n    largest = math.floor(largest / 10)\n  end\n\
    \  return sum\nend", "  local max = 0\n  for i=1,#lst do\n    if lst[i] > max\
    \ then\n      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if\
    \ n < 2 then return false end\n    if n == 2 then return true end\n    for i=2,n-1\
    \ do\n      if n % i == 0 then\n        return false\n      end\n    end\n   \
    \ return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n    while\
    \ n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return sum\n  end\n  local function findLargestPrime(n)\n    while n > 0\
    \ do\n      if isPrime(n) then\n        return n\n      end\n      n = n - 1\n\
    \    end\n  end\n  return sumDigits(findLargestPrime(max))\nend", "  local primes\
    \ = {}\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n    \
    \  max = lst[i]\n    end\n  end\n  for i = 1, max do\n    primes[i] = true\n \
    \ end\n  for i = 2, max do\n    if primes[i] then\n      for j = i * i, max, i\
    \ do\n        primes[j] = false\n      end\n    end\n  end\n  local maxPrime =\
    \ 0\n  for i = 1, #lst do\n    if primes[lst[i]] then\n      if lst[i] > maxPrime\
    \ then\n        maxPrime = lst[i]\n      end\n    end\n  end\n  local sum = 0\n\
    \  while maxPrime > 0 do\n    sum = sum + (maxPrime % 10)\n    maxPrime = math.floor(maxPrime\
    \ / 10)\n  end\n  return sum\nend", "  local primes = {}\n  local function isPrime(n)\n\
    \    if n < 2 then return false end\n    if n == 2 then return true end\n    if\
    \ n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if\
    \ n % i == 0 then return false end\n    end\n    return true\n  end\n  for i =\
    \ 1, #lst do\n    if isPrime(lst[i]) then\n      table.insert(primes, lst[i])\n\
    \    end\n  end\n  local max = math.max(unpack(primes))\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend", "  local primes = {}\n  local max = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > 1 then\n      local isPrime = true\n      for j = 2, lst[i]\
    \ - 1 do\n        if lst[i] % j == 0 then\n          isPrime = false\n       \
    \   break\n        end\n      end\n      if isPrime then\n        table.insert(primes,\
    \ lst[i])\n        if lst[i] > max then\n          max = lst[i]\n        end\n\
    \      end\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum\
    \ + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "   \
    \ local function isPrime(n)\n        if n <= 1 then return false end\n       \
    \ for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local primes = {}\n  local largest = 0\n  for i = 1, #lst do\n    if\
    \ isPrime(lst[i]) then\n      primes[#primes + 1] = lst[i]\n      if lst[i] >\
    \ largest then\n        largest = lst[i]\n      end\n    end\n  end\n  local sum\
    \ = 0\n  while largest > 0 do\n    sum = sum + (largest % 10)\n    largest = math.floor(largest\
    \ / 10)\n  end\n  return sum\nend", "    local function isPrime(n)\n        if\
    \ n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n          \
    \  if n % i == 0 then return false end\n        end\n        return true\n   \
    \ end\n    local function sumDigits(n)\n        local s = 0\n        while n >\
    \ 0 do\n            s = s + n % 10\n            n = math.floor(n / 10)\n     \
    \   end\n        return s\n    end\n    local function largestPrime(lst)\n   \
    \     local largest = 0\n        for i = 1, #lst do\n            if isPrime(lst[i])\
    \ and lst[i] > largest then\n                largest = lst[i]\n            end\n\
    \        end\n        return largest\n    end\n    return sumDigits(largestPrime(lst))\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false\
    \ end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local maxPrime = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and\
    \ lst[i] > maxPrime then\n            maxPrime = lst[i]\n        end\n    end\n\
    \    return sumDigits(maxPrime)\nend", "    local primes = {}\n    local largest\
    \ = 0\n    for _, v in ipairs(lst) do\n        if v > largest then\n         \
    \   largest = v\n        end\n    end\n    for i = 2, largest do\n        local\
    \ isPrime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                isPrime = false\n                break\n            end\n   \
    \     end\n        if isPrime then\n            table.insert(primes, i)\n    \
    \    end\n    end\n    local largestPrime = 0\n    for _, v in ipairs(primes)\
    \ do\n        if v > largestPrime then\n            largestPrime = v\n       \
    \ end\n    end\n    local sum = 0\n    while largestPrime > 0 do\n        sum\
    \ = sum + largestPrime % 10\n        largestPrime = math.floor(largestPrime /\
    \ 10)\n    end\n    return sum\nend", "    local primes = {}\n    local max =\
    \ 0\n    for i = 1, #lst do\n        if lst[i] > 1 then\n            local isPrime\
    \ = true\n            for j = 2, lst[i] - 1 do\n                if lst[i] % j\
    \ == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       primes[#primes + 1] = lst[i]\n                if lst[i] > max then\n \
    \                   max = lst[i]\n                end\n            end\n     \
    \   end\n    end\n    local sum = 0\n    while max > 0 do\n        sum = sum +\
    \ max % 10\n        max = math.floor(max / 10)\n    end\n    return sum\nend",
  "  local function isPrime(n)\n    if n < 2 then return false end\n    if n == 2\
    \ then return true end\n    if n % 2 == 0 then return false end\n    for i = 3,\
    \ math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n   \
    \ return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n    while\
    \ n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return sum\n  end\n  local largestPrime = 0\n  for i = 1, #lst do\n    if\
    \ isPrime(lst[i]) and lst[i] > largestPrime then\n      largestPrime = lst[i]\n\
    \    end\n  end\n  return sumDigits(largestPrime)\nend", "  local largest = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > largest then\n      largest = lst[i]\n\
    \    end\n  end\n  local primes = {}\n  for i = 2, largest do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i = 1, #primes do\n    if\
    \ primes[i] > largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n\
    \  local sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime %\
    \ 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then return false end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local maxPrime = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v)\
    \ and v > maxPrime then\n            maxPrime = v\n        end\n    end\n    return\
    \ sumDigits(maxPrime)\nend", "  local max = 0\n  for i=1,#lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local primes = {}\n  for i=2,max\
    \ do\n    local isPrime = true\n    for j=2,i-1 do\n      if i % j == 0 then\n\
    \        isPrime = false\n        break\n      end\n    end\n    if isPrime then\n\
    \      table.insert(primes, i)\n    end\n  end\n  local maxPrime = 0\n  for i=1,#primes\
    \ do\n    if primes[i] > maxPrime then\n      maxPrime = primes[i]\n    end\n\
    \  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum = sum + maxPrime % 10\n\
    \    maxPrime = math.floor(maxPrime / 10)\n  end\n  return sum\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then return false end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n      \
    \  end\n        return true\n    end\n    local function sumDigits(n)\n      \
    \  local s = 0\n        while n > 0 do\n            s = s + n % 10\n         \
    \   n = math.floor(n / 10)\n        end\n        return s\n    end\n    local\
    \ function largestPrime(lst)\n        local largest = 0\n        for _, v in ipairs(lst)\
    \ do\n            if isPrime(v) and v > largest then\n                largest\
    \ = v\n            end\n        end\n        return largest\n    end\n    return\
    \ sumDigits(largestPrime(lst))\nend", "  local primes = {}\n  local max = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  for i = 2, max do\n    local isPrime = true\n    for j = 2, i - 1 do\n\
    \      if i % j == 0 then\n        isPrime = false\n        break\n      end\n\
    \    end\n    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n\
    \  local maxPrime = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n\
    \      maxPrime = primes[i]\n    end\n  end\n  local sum = 0\n  while maxPrime\
    \ > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime /\
    \ 10)\n  end\n  return sum\nend", "  local primes = {}\n  local largest = 0\n\
    \  for i = 1, #lst do\n    if isPrime(lst[i]) then\n      primes[#primes + 1]\
    \ = lst[i]\n      if lst[i] > largest then\n        largest = lst[i]\n      end\n\
    \    end\n  end\n  local sum = 0\n  while largest > 0 do\n    sum = sum + largest\
    \ % 10\n    largest = math.floor(largest / 10)\n  end\n  return sum\nend", " \
    \ local primes = {}\n  local largest = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > 1 then\n      local isPrime = true\n      for j = 2, lst[i] - 1 do\n     \
    \   if lst[i] % j == 0 then\n          isPrime = false\n          break\n    \
    \    end\n      end\n      if isPrime then\n        primes[#primes + 1] = lst[i]\n\
    \        if lst[i] > largest then\n          largest = lst[i]\n        end\n \
    \     end\n    end\n  end\n  local sum = 0\n  while largest > 0 do\n    sum =\
    \ sum + largest % 10\n    largest = math.floor(largest / 10)\n  end\n  return\
    \ sum\nend", "\tlocal function isPrime(n)\n\t\tif n < 2 then return false end\n\
    \t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then return false end\n\t\tend\n\t\
    \treturn true\n\tend\n\tlocal function sumDigits(n)\n\t\tlocal s = 0\n\t\twhile\
    \ n > 0 do\n\t\t\ts = s + n % 10\n\t\t\tn = math.floor(n / 10)\n\t\tend\n\t\t\
    return s\n\tend\n\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif isPrime(lst[i])\
    \ and lst[i] > max then\n\t\t\tmax = lst[i]\n\t\tend\n\tend\n\treturn sumDigits(max)\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, math.floor(math.sqrt(n)) do\n            if n % i == 0 then\
    \ return false end\n        end\n        return true\n    end\n    local function\
    \ sumDigits(n)\n        local s = 0\n        while n > 0 do\n            s = s\
    \ + n % 10\n            n = math.floor(n / 10)\n        end\n        return s\n\
    \    end\n    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ and lst[i] > max then\n            max = lst[i]\n        end\n    end\n    return\
    \ sumDigits(max)\nend", "    local function isPrime(n)\n        if n <= 1 then\
    \ return false end\n        if n <= 3 then return true end\n        if n % 2 ==\
    \ 0 or n % 3 == 0 then return false end\n        for i = 5, math.sqrt(n), 6 do\n\
    \            if n % i == 0 or n % (i + 2) == 0 then return false end\n       \
    \ end\n        return true\n    end\n    local function sumDigits(n)\n       \
    \ local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n    \
    \        n = math.floor(n / 10)\n        end\n        return sum\n    end\n  \
    \  local maxPrime = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and\
    \ lst[i] > maxPrime then\n            maxPrime = lst[i]\n        end\n    end\n\
    \    return sumDigits(maxPrime)\nend", "    local primes = {}\n    local largestPrime\
    \ = 0\n    for i = 1, #lst do\n        local num = lst[i]\n        if num > 1\
    \ then\n            local isPrime = true\n            for j = 2, num - 1 do\n\
    \                if num % j == 0 then\n                    isPrime = false\n \
    \                   break\n                end\n            end\n            if\
    \ isPrime then\n                primes[#primes + 1] = num\n                if\
    \ num > largestPrime then\n                    largestPrime = num\n          \
    \      end\n            end\n        end\n    end\n    local sum = 0\n    while\
    \ largestPrime > 0 do\n        sum = sum + largestPrime % 10\n        largestPrime\
    \ = math.floor(largestPrime / 10)\n    end\n    return sum\nend", "  local max\
    \ = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n  \
    \  end\n  end\n  local function isPrime(n)\n    for i = 2, n - 1 do\n      if\
    \ n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function getDigits(n)\n    local digits = {}\n    while n > 0\
    \ do\n      local digit = n % 10\n      n = (n - digit) / 10\n      table.insert(digits,\
    \ digit)\n    end\n    return digits\n  end\n  local function sum(digits)\n  \
    \  local sum = 0\n    for i = 1, #digits do\n      sum = sum + digits[i]\n   \
    \ end\n    return sum\n  end\n  local function getLargestPrime(n)\n    local largestPrime\
    \ = 0\n    for i = 2, n do\n      if isPrime(i) then\n        largestPrime = i\n\
    \      end\n    end\n    return largestPrime\n  end\n  local largestPrime = getLargestPrime(max)\n\
    \  local digits = getDigits(largestPrime)\n  return sum(digits)\nend", "  local\
    \ primes = {}\n  local max = 0\n  for i=1, #lst do\n    if lst[i] > max then max\
    \ = lst[i] end\n  end\n  for i=2, max do\n    local is_prime = true\n    for j=2,\
    \ i-1 do\n      if i % j == 0 then\n        is_prime = false\n        break\n\
    \      end\n    end\n    if is_prime then\n      table.insert(primes, i)\n   \
    \ end\n  end\n  local max_prime = 0\n  for i=1, #lst do\n    if lst[i] > max_prime\
    \ then\n      for j=1, #primes do\n        if lst[i] == primes[j] then\n     \
    \     max_prime = lst[i]\n          break\n        end\n      end\n    end\n \
    \ end\n  local sum = 0\n  while max_prime > 0 do\n    sum = sum + (max_prime %\
    \ 10)\n    max_prime = math.floor(max_prime / 10)\n  end\n  return sum\nend",
  "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max then\n  \
    \          max = v\n        end\n    end\n    local sum = 0\n    while max > 0\
    \ do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n\
    \    return sum\nend", "  local function isPrime(n)\n    if n < 2 then return\
    \ false end\n    for i = 2, math.floor(math.sqrt(n)) do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local largestPrime = 0\n  for i = 1,\
    \ #lst do\n    if isPrime(lst[i]) and lst[i] > largestPrime then\n      largestPrime\
    \ = lst[i]\n    end\n  end\n  return sumDigits(largestPrime)\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then return false end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n      \
    \  end\n        return true\n    end\n    local function sumDigits(n)\n      \
    \  local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return sum\n    end\n \
    \   local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    local n\
    \ = lst[i]\n    if n > 1 then\n      local isPrime = true\n      for j = 2, n\
    \ - 1 do\n        if n % j == 0 then\n          isPrime = false\n          break\n\
    \        end\n      end\n      if isPrime then\n        primes[#primes + 1] =\
    \ n\n        if n > max then\n          max = n\n        end\n      end\n    end\n\
    \  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max\
    \ = math.floor(max / 10)\n  end\n  return sum\nend", "    local function isPrime(n)\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end\n \
    \   local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for i = 1, #lst do\n    \
    \    if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n    \
    \    end\n    end\n    return sumDigits(max)\nend", "    local largest = 0\n \
    \   for i = 1, #lst do\n        if lst[i] > largest then\n            largest\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while largest > 0 do\n\
    \        sum = sum + (largest % 10)\n        largest = math.floor(largest / 10)\n\
    \    end\n    return sum\nend", "  local function isPrime(n)\n    if n <= 1 then\
    \ return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "  local largest = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n  end\n \
    \ local sum = 0\n  while largest > 0 do\n    sum = sum + largest % 10\n    largest\
    \ = math.floor(largest / 10)\n  end\n  return sum\nend", "  local function isPrime(n)\n\
    \    if n < 2 then return false end\n    for i = 2, math.sqrt(n) do\n      if\
    \ n % i == 0 then return false end\n    end\n    return true\n  end\n  local function\
    \ sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n\
    \      n = math.floor(n / 10)\n    end\n    return sum\n  end\n  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max then max = v end\n\
    \  end\n  return sumDigits(max)\nend", "  local primes = {}\n  local max = 0\n\
    \  for i = 1, #lst do\n    local n = lst[i]\n    if n > 1 then\n      local isPrime\
    \ = true\n      for j = 2, math.sqrt(n) do\n        if n % j == 0 then\n     \
    \     isPrime = false\n          break\n        end\n      end\n      if isPrime\
    \ then\n        table.insert(primes, n)\n        if n > max then\n          max\
    \ = n\n        end\n      end\n    end\n  end\n  local sum = 0\n  while max >\
    \ 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local function isPrime(n)\n        if n <= 1 then return false\
    \ end\n        if n <= 3 then return true end\n        if n % 2 == 0 or n % 3\
    \ == 0 then return false end\n        for i = 5, math.sqrt(n), 6 do\n        \
    \    if n % i == 0 or n % (i + 2) == 0 then return false end\n        end\n  \
    \      return true\n    end\n    local function sumDigits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end\n    local maxPrime\
    \ = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > maxPrime\
    \ then\n            maxPrime = lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        if n == 2 then return true end\n        if n % 2 == 0 then return false\
    \ end\n        for i = 3, math.sqrt(n), 2 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local maxPrime = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > maxPrime then\n            maxPrime = lst[i]\n        end\n    end\n    return\
    \ sumDigits(maxPrime)\nend", "  local primes = {}\n  local max = 0\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n \
    \ for i = 2, max do\n    local isPrime = true\n    for j = 2, i - 1 do\n     \
    \ if i % j == 0 then\n        isPrime = false\n        break\n      end\n    end\n\
    \    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n  local maxPrime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n      maxPrime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while maxPrime > 0 do\n    sum\
    \ = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime / 10)\n  end\n  return\
    \ sum\nend", "  local primes = {}\n  local max = 0\n  for i=1,#lst do\n    if\
    \ lst[i] > max then max = lst[i] end\n  end\n  for i=2,max do\n    local isPrime\
    \ = true\n    for j=2,i-1 do\n      if i%j == 0 then\n        isPrime = false\n\
    \        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i=1,#lst do\n    for j=1,#primes\
    \ do\n      if lst[i] == primes[j] then\n        if lst[i] > largestPrime then\n\
    \          largestPrime = lst[i]\n        end\n      end\n    end\n  end\n  local\
    \ sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime%10\n    largestPrime\
    \ = math.floor(largestPrime/10)\n  end\n  return sum\nend", "  local primes =\
    \ {}\n  local largest = 0\n  for i = 1, #lst do\n    if lst[i] > largest then\n\
    \      largest = lst[i]\n    end\n  end\n  for i = 2, largest do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i = 1, #primes do\n    if\
    \ primes[i] > largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n\
    \  local sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime %\
    \ 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\n\
    end", "  local largestPrime = 0\n  for i = 1, #lst do\n    if lst[i] > largestPrime\
    \ and isPrime(lst[i]) then\n      largestPrime = lst[i]\n    end\n  end\n  local\
    \ sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime % 10\n  \
    \  largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\nend", " \
    \ local function isPrime(n)\n    if n < 2 then return false end\n    for i = 2,\
    \ n - 1 do\n      if n % i == 0 then return false end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  return sumDigits(max)\nend",
  "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      max = lst[i]\n    end\n  end\n  for i = 2, max do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local maxPrime = 0\n  for i = 1, #primes do\n    if primes[i]\
    \ > maxPrime then\n      maxPrime = primes[i]\n    end\n  end\n  local sum = 0\n\
    \  while maxPrime > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime\
    \ / 10)\n  end\n  return sum\nend", "  local t = {}\n  for i=1,#lst do\n    local\
    \ n = lst[i]\n    if n > 1 then\n      local p = 2\n      while p <= n do\n  \
    \      if n % p == 0 then\n          n = n / p\n          t[p] = (t[p] or 0) +\
    \ 1\n        else\n          p = p + 1\n        end\n      end\n    end\n  end\n\
    \  local m = 0\n  for k,v in pairs(t) do\n    if k > m then m = k end\n  end\n\
    \  local s = 0\n  while m > 0 do\n    s = s + m % 10\n    m = math.floor(m / 10)\n\
    \  end\n  return s\nend", "  local max = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local function isPrime(n)\n\
    \    if n < 2 then\n      return false\n    end\n    for i = 2, math.sqrt(n) do\n\
    \      if n % i == 0 then\n        return false\n      end\n    end\n    return\
    \ true\n  end\n  local function getDigits(n)\n    local digits = {}\n    while\
    \ n > 0 do\n      table.insert(digits, n % 10)\n      n = math.floor(n / 10)\n\
    \    end\n    return digits\n  end\n  local function sumDigits(digits)\n    local\
    \ sum = 0\n    for i = 1, #digits do\n      sum = sum + digits[i]\n    end\n \
    \   return sum\n  end\n  local function getSumOfDigits(n)\n    local digits =\
    \ getDigits(n)\n    return sumDigits(digits)\n  end\n  for i = max, 2, -1 do\n\
    \    if isPrime(i) then\n      return getSumOfDigits(i)\n    end\n  end\n  return\
    \ 0\nend", "    local function isPrime(n)\n        for i = 2, n - 1 do\n     \
    \       if n % i == 0 then\n                return false\n            end\n  \
    \      end\n        return true\n    end\n    local function sumDigits(n)\n  \
    \      local s = 0\n        while n > 0 do\n            s = s + n % 10\n     \
    \       n = math.floor(n / 10)\n        end\n        return s\n    end\n    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and v > max then\n\
    \            max = v\n        end\n    end\n    return sumDigits(max)\nend", " \
    \ local primes = {}\n  local largest = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > largest then\n      largest = lst[i]\n    end\n  end\n  for i = 2, largest\
    \ do\n    local isPrime = true\n    for j = 2, i do\n      if i % j == 0 and i\
    \ ~= j then\n        isPrime = false\n      end\n    end\n    if isPrime then\n\
    \      table.insert(primes, i)\n    end\n  end\n  local largestPrime = 0\n  for\
    \ i = 1, #primes do\n    if primes[i] > largestPrime then\n      largestPrime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while largestPrime > 0 do\n\
    \    sum = sum + largestPrime % 10\n    largestPrime = math.floor(largestPrime\
    \ / 10)\n  end\n  return sum\nend", "    local primes = {}\n    for i=1,#lst do\n\
    \        if isPrime(lst[i]) then\n            primes[#primes+1] = lst[i]\n   \
    \     end\n    end\n    local max = 0\n    for i=1,#primes do\n        if primes[i]\
    \ > max then\n            max = primes[i]\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max%10\n        max = math.floor(max/10)\n\
    \    end\n    return sum\nend", "  local largestPrime = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > largestPrime then\n      largestPrime = lst[i]\n\
    \    end\n  end\n  local sum = 0\n  while largestPrime > 0 do\n    sum = sum +\
    \ largestPrime % 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n\
    \  return sum\nend", "  local primes = {}\n  local largest = 0\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \    if n > 1 then\n      local isPrime = true\n      for j = 2, n - 1 do\n  \
    \      if n % j == 0 then\n          isPrime = false\n          break\n      \
    \  end\n      end\n      if isPrime then\n        primes[#primes + 1] = n\n  \
    \    end\n    end\n  end\n  local largestPrime = 0\n  for i = 1, #primes do\n\
    \    local n = primes[i]\n    if n > largestPrime and n <= largest then\n    \
    \  largestPrime = n\n    end\n  end\n  local sum = 0\n  while largestPrime > 0\
    \ do\n    sum = sum + largestPrime % 10\n    largestPrime = math.floor(largestPrime\
    \ / 10)\n  end\n  return sum\nend", "  local function isPrime(n)\n    if n < 2\
    \ then return false end\n    if n == 2 then return true end\n    if n % 2 == 0\
    \ then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i ==\
    \ 0 then return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "    local primes = {}\n    for i = 1, #lst\
    \ do\n        if isPrime(lst[i]) then\n            table.insert(primes, lst[i])\n\
    \        end\n    end\n    local max = math.max(unpack(primes))\n    local sum\
    \ = 0\n    for i = 1, #tostring(max) do\n        sum = sum + tonumber(tostring(max):sub(i,\
    \ i))\n    end\n    return sum\nend", "  local function isPrime(n)\n    if n <\
    \ 2 then return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end", "    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    local primes = {}\n    for\
    \ i = 1, max do\n        if isPrime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    local maxPrime = 0\n    for i = 1, #primes do\n\
    \        if primes[i] > maxPrime then\n            maxPrime = primes[i]\n    \
    \    end\n    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum =\
    \ sum + maxPrime % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n\
    \    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n      \
    \  if isPrime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n       \
    \ end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if primes[i]\
    \ > max then\n            max = primes[i]\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local function isPrime(n)\n     \
    \   if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n     \
    \       if n % i == 0 then return false end\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max = 0\n    for i = 1, #lst\
    \ do\n        if isPrime(lst[i]) and lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    return sumDigits(max)\nend", "    local primes = {}\n\
    \    local max = 0\n    for i = 1, #lst do\n        local n = lst[i]\n       \
    \ if n > 1 then\n            local isPrime = true\n            for j = 2, n -\
    \ 1 do\n                if n % j == 0 then\n                    isPrime = false\n\
    \                    break\n                end\n            end\n           \
    \ if isPrime then\n                table.insert(primes, n)\n                if\
    \ n > max then\n                    max = n\n                end\n           \
    \ end\n        end\n    end\n    local sum = 0\n    while max > 0 do\n       \
    \ sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n    return\
    \ sum\nend", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n   \
    \ local num = lst[i]\n    if num > max then\n      max = num\n    end\n  end\n\
    \  for i = 2, max do\n    local isPrime = true\n    for j = 2, i - 1 do\n    \
    \  if i % j == 0 then\n        isPrime = false\n        break\n      end\n   \
    \ end\n    if isPrime then\n      table.insert(primes, i)\n    end\n  end\n  local\
    \ maxPrime = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    for j = 1, #primes\
    \ do\n      local prime = primes[j]\n      if num == prime and prime > maxPrime\
    \ then\n        maxPrime = prime\n      end\n    end\n  end\n  local sum = 0\n\
    \  while maxPrime > 0 do\n    local digit = maxPrime % 10\n    sum = sum + digit\n\
    \    maxPrime = math.floor(maxPrime / 10)\n  end\n  return sum\nend", "    local\
    \ primes = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n          \
    \  local j = 2\n            while j <= lst[i] do\n                if lst[i] %\
    \ j == 0 then\n                    if j == lst[i] then\n                     \
    \   table.insert(primes, lst[i])\n                    end\n                  \
    \  lst[i] = lst[i] / j\n                else\n                    j = j + 1\n\
    \                end\n            end\n        end\n    end\n    local max = 0\n\
    \    for i = 1, #primes do\n        if primes[i] > max then\n            max =\
    \ primes[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n \
    \       sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n  \
    \  return sum\nend", "  local function isPrime(n)\n    for i = 2, n - 1 do\n \
    \     if n % i == 0 then\n        return false\n      end\n    end\n    return\
    \ true\n  end\n  local function sumDigits(n)\n    local sum = 0\n    while n >\
    \ 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end\n  local maxPrime = 0\n  for i = 1, #lst do\n    if isPrime(lst[i])\
    \ and lst[i] > maxPrime then\n      maxPrime = lst[i]\n    end\n  end\n  return\
    \ sumDigits(maxPrime)\nend", "    local primes = {}\n    local largest = 0\n \
    \   for i = 1, #lst do\n        if lst[i] > largest then\n            largest\
    \ = lst[i]\n        end\n    end\n    for i = 2, largest do\n        if isPrime(i)\
    \ then\n            primes[#primes + 1] = i\n        end\n    end\n    local largestPrime\
    \ = 0\n    for i = 1, #primes do\n        if primes[i] > largestPrime then\n \
    \           largestPrime = primes[i]\n        end\n    end\n    local largestPrimeString\
    \ = tostring(largestPrime)\n    local sum = 0\n    for i = 1, #largestPrimeString\
    \ do\n        sum = sum + tonumber(largestPrimeString:sub(i, i))\n    end\n  \
    \  return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n        if\
    \ lst[i] > 1 then\n            local isPrime = true\n            for j = 2, lst[i]\
    \ - 1 do\n                if lst[i] % j == 0 then\n                    isPrime\
    \ = false\n                    break\n                end\n            end\n \
    \           if isPrime then\n                table.insert(primes, lst[i])\n  \
    \          end\n        end\n    end\n    local maxPrime = 0\n    for i = 1, #primes\
    \ do\n        if primes[i] > maxPrime then\n            maxPrime = primes[i]\n\
    \        end\n    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum\
    \ = sum + maxPrime % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n\
    \    return sum\nend", "  local function isPrime(n)\n    if n < 2 then return\
    \ false end\n    if n == 2 then return true end\n    if n % 2 == 0 then return\
    \ false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "    local primes = {}\n    for i = 2, math.max(unpack(lst))\
    \ do\n        local isPrime = true\n        for j = 2, i - 1 do\n            if\
    \ i % j == 0 then\n                isPrime = false\n                break\n  \
    \          end\n        end\n        if isPrime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    local maxPrime = 0\n    for i = 1, #lst do\n \
    \       if lst[i] > maxPrime and lst[i] % 2 ~= 0 then\n            maxPrime =\
    \ lst[i]\n        end\n    end\n    local sum = 0\n    while maxPrime > 0 do\n\
    \        sum = sum + maxPrime % 10\n        maxPrime = math.floor(maxPrime / 10)\n\
    \    end\n    return sum\nend", "    local primes = {}\n    for i=1,#lst do\n\
    \        if isPrime(lst[i]) then\n            primes[#primes+1] = lst[i]\n   \
    \     end\n    end\n    local max = 0\n    for i=1,#primes do\n        if primes[i]\
    \ > max then\n            max = primes[i]\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max%10\n        max = math.floor(max/10)\n\
    \    end\n    return sum\nend", "  local primes = {}\n  local max = 0\n  for i\
    \ = 1, #lst do\n    local n = lst[i]\n    if n > max then\n      max = n\n   \
    \ end\n  end\n  for i = 2, max do\n    local isPrime = true\n    for j = 2, i\
    \ - 1 do\n      if i % j == 0 then\n        isPrime = false\n        break\n \
    \     end\n    end\n    if isPrime then\n      table.insert(primes, i)\n    end\n\
    \  end\n  local maxPrime = 0\n  for i = 1, #lst do\n    local n = lst[i]\n   \
    \ for j = 1, #primes do\n      local p = primes[j]\n      if n == p and p > maxPrime\
    \ then\n        maxPrime = p\n      end\n    end\n  end\n  local sum = 0\n  while\
    \ maxPrime > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime\
    \ / 10)\n  end\n  return sum\nend", "    local primes = {}\n    local max = 0\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    for i = 2, max do\n        local isPrime = true\n \
    \       for j = 2, i - 1 do\n            if i % j == 0 then\n                isPrime\
    \ = false\n                break\n            end\n        end\n        if isPrime\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    local maxPrime\
    \ = 0\n    for i = 1, #lst do\n        for j = 1, #primes do\n            if lst[i]\
    \ == primes[j] then\n                if lst[i] > maxPrime then\n             \
    \       maxPrime = lst[i]\n                end\n            end\n        end\n\
    \    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum = sum + maxPrime\
    \ % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n    return sum\n\
    end", "    local primes = {}\n    for i=2,#lst do\n        if lst[i] > 1 then\n\
    \            for j=2,i-1 do\n                if i % j == 0 then\n            \
    \        break\n                elseif j == i-1 then\n                    table.insert(primes,\
    \ i)\n                end\n            end\n        end\n    end\n    local largest\
    \ = primes[1]\n    for i=2,#primes do\n        if primes[i] > largest then\n \
    \           largest = primes[i]\n        end\n    end\n    local sum = 0\n   \
    \ while largest > 0 do\n        sum = sum + largest % 10\n        largest = math.floor(largest\
    \ / 10)\n    end\n    return sum\nend", "  local max = 0\n  for i=1,#lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local function\
    \ isPrime(n)\n    if n < 2 then return false end\n    for i=2,n-1 do\n      if\
    \ n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function findLargestPrime(n)\n    while n > 0 do\n      if isPrime(n)\
    \ then\n        return n\n      end\n      n = n - 1\n    end\n  end\n  local\
    \ largestPrime = findLargestPrime(max)\n  return sumDigits(largestPrime)\nend",
  "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  local function isPrime(n)\n    for i = 2, n - 1 do\n      if\
    \ n % i == 0 then\n        return false\n      end\n    end\n    return true\n\
    \  end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  while not isPrime(max) do\n    max = max - 1\n  end\n  return sumDigits(max)\n\
    end", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    local num\
    \ = lst[i]\n    local isPrime = true\n    for j = 2, num - 1 do\n      if num\
    \ % j == 0 then\n        isPrime = false\n        break\n      end\n    end\n\
    \    if isPrime then\n      primes[#primes + 1] = num\n      if num > max then\n\
    \        max = num\n      end\n    end\n  end\n  local sum = 0\n  while max >\
    \ 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local largestPrime = 0\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ and lst[i] > largestPrime then\n            largestPrime = lst[i]\n        end\n\
    \    end\n    local sum = 0\n    while largestPrime > 0 do\n        sum = sum\
    \ + largestPrime % 10\n        largestPrime = math.floor(largestPrime / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for i=1,#lst do\n    local\
    \ num = lst[i]\n    local prime = true\n    for j=2,num-1 do\n      if num%j ==\
    \ 0 then\n        prime = false\n        break\n      end\n    end\n    if prime\
    \ and num > max then\n      max = num\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max%10\n    max = math.floor(max/10)\n  end\n  return\
    \ sum\nend", "    local primes = {}\n    local largest = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > largest then\n            largest = lst[i]\n       \
    \ end\n    end\n    for i = 2, largest do\n        if isPrime(i) then\n      \
    \      primes[#primes + 1] = i\n        end\n    end\n    local largestPrime =\
    \ 0\n    for i = 1, #primes do\n        if primes[i] > largestPrime then\n   \
    \         largestPrime = primes[i]\n        end\n    end\n    local sum = 0\n\
    \    while largestPrime > 0 do\n        sum = sum + largestPrime % 10\n      \
    \  largestPrime = math.floor(largestPrime / 10)\n    end\n    return sum\nend",
  "    local function isPrime(n)\n        if n < 2 then return false end\n       \
    \ if n == 2 then return true end\n        if n % 2 == 0 then return false end\n\
    \        for i = 3, math.sqrt(n), 2 do\n            if n % i == 0 then return\
    \ false end\n        end\n        return true\n    end\n    local function getDigits(n)\n\
    \        local digits = {}\n        while n > 0 do\n            table.insert(digits,\
    \ n % 10)\n            n = math.floor(n / 10)\n        end\n        return digits\n\
    \    end\n    local function sumDigits(digits)\n        local sum = 0\n      \
    \  for i = 1, #digits do\n            sum = sum + digits[i]\n        end\n   \
    \     return sum\n    end\n    local maxPrime = 0\n    for i = 1, #lst do\n  \
    \      if isPrime(lst[i]) and lst[i] > maxPrime then\n            maxPrime = lst[i]\n\
    \        end\n    end\n    return sumDigits(getDigits(maxPrime))\nend", "    local\
    \ primes = {}\n    local max = 0\n    for i = 1, #lst do\n        if lst[i] >\
    \ max then\n            max = lst[i]\n        end\n    end\n    for i = 2, max\
    \ do\n        local isPrime = true\n        for j = 2, i - 1 do\n            if\
    \ i % j == 0 then\n                isPrime = false\n                break\n  \
    \          end\n        end\n        if isPrime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    local maxPrime = 0\n    for i = 1, #lst do\n \
    \       for j = 1, #primes do\n            if lst[i] == primes[j] then\n     \
    \           if lst[i] > maxPrime then\n                    maxPrime = lst[i]\n\
    \                end\n            end\n        end\n    end\n    local sum = 0\n\
    \    while maxPrime > 0 do\n        sum = sum + maxPrime % 10\n        maxPrime\
    \ = math.floor(maxPrime / 10)\n    end\n    return sum\nend", "    local primes\
    \ = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n            local\
    \ isPrime = true\n            for j = 2, lst[i] - 1 do\n                if lst[i]\
    \ % j == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       table.insert(primes, lst[i])\n            end\n        end\n    end\n\
    \    local max = 0\n    for i = 1, #primes do\n        if primes[i] > max then\n\
    \            max = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local function isPrime(n)\n    if n < 2 then\
    \ return false end\n    if n == 2 then return true end\n    if n % 2 == 0 then\
    \ return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sum(n)\n\
    \    local s = 0\n    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return s\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sum(max)\nend", "    local function isPrime(n)\n        if n <\
    \ 2 then return false end\n        for i = 2, math.sqrt(n) do\n            if\
    \ n % i == 0 then return false end\n        end\n        return true\n    end\n\
    \    local function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local maxPrime = 0\n    for _, v in ipairs(lst)\
    \ do\n        if isPrime(v) and v > maxPrime then\n            maxPrime = v\n\
    \        end\n    end\n    return sumDigits(maxPrime)\nend", "    local primes\
    \ = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n            for j\
    \ = 2, lst[i] do\n                if lst[i] % j == 0 then\n                  \
    \  break\n                elseif j == lst[i] - 1 then\n                    table.insert(primes,\
    \ lst[i])\n                end\n            end\n        end\n    end\n    local\
    \ largest = 0\n    for i = 1, #primes do\n        if primes[i] > largest then\n\
    \            largest = primes[i]\n        end\n    end\n    local sum = 0\n  \
    \  while largest > 0 do\n        sum = sum + largest % 10\n        largest = math.floor(largest\
    \ / 10)\n    end\n    return sum\nend", '  local primes = {2, 3, 5, 7, 11, 13,
    17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,
    103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,
    191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,
    277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,
    379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,
    467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,
    587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,
    677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,
    797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,
    907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013,
    1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093,
    1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193,
    1201, 1213,', "    local primes = {}\n    local max = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > 1 then\n            local isPrime = true\n            for\
    \ j = 2, lst[i] - 1 do\n                if lst[i] % j == 0 then\n            \
    \        isPrime = false\n                    break\n                end\n   \
    \         end\n            if isPrime then\n                primes[#primes + 1]\
    \ = lst[i]\n                if lst[i] > max then\n                    max = lst[i]\n\
    \                end\n            end\n        end\n    end\n    local sum = 0\n\
    \    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "\tlocal function isPrime(n)\n\t\tif n\
    \ <= 1 then return false end\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\
    \ return false end\n\t\tend\n\t\treturn true\n\tend\n\tlocal function sumDigits(n)\n\
    \t\tlocal sum = 0\n\t\twhile n > 0 do\n\t\t\tsum = sum + n % 10\n\t\t\tn = math.floor(n\
    \ / 10)\n\t\tend\n\t\treturn sum\n\tend\n\tlocal largestPrime = 0\n\tfor i = 1,\
    \ #lst do\n\t\tif isPrime(lst[i]) and lst[i] > largestPrime then\n\t\t\tlargestPrime\
    \ = lst[i]\n\t\tend\n\tend\n\treturn sumDigits(largestPrime)\nend", "  local largestPrime\
    \ = 0\n  for i = 1, #lst do\n    local prime = true\n    for j = 2, lst[i] - 1\
    \ do\n      if lst[i] % j == 0 then\n        prime = false\n        break\n  \
    \    end\n    end\n    if prime and lst[i] > largestPrime then\n      largestPrime\
    \ = lst[i]\n    end\n  end\n  local sum = 0\n  while largestPrime > 0 do\n   \
    \ sum = sum + largestPrime % 10\n    largestPrime = math.floor(largestPrime /\
    \ 10)\n  end\n  return sum\nend", "  local function isPrime(n)\n    if n < 2 then\
    \ return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "  local primes = {}\n  local largest =\
    \ 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > 1 then\n      local\
    \ isPrime = true\n      for j = 2, n - 1 do\n        if n % j == 0 then\n    \
    \      isPrime = false\n          break\n        end\n      end\n      if isPrime\
    \ then\n        primes[#primes + 1] = n\n        if n > largest then\n       \
    \   largest = n\n        end\n      end\n    end\n  end\n  local sum = 0\n  while\
    \ largest > 0 do\n    sum = sum + largest % 10\n    largest = math.floor(largest\
    \ / 10)\n  end\n  return sum\nend", "    local function isPrime(n)\n        if\
    \ n < 2 then return false end\n        if n == 2 then return true end\n      \
    \  if n % 2 == 0 then return false end\n        for i = 3, math.sqrt(n), 2 do\n\
    \            if n % i == 0 then return false end\n        end\n        return\
    \ true\n    end\n    local function sumDigits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local maxPrime = 0\n  \
    \  for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > maxPrime then\n\
    \            maxPrime = lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "  local function isPrime(n)\n    for i = 2, n - 1 do\n      if n % i ==\
    \ 0 then\n        return false\n      end\n    end\n    return true\n  end\n \
    \ local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local max = 0\n  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max\
    \ then\n      max = v\n    end\n  end\n  return sumDigits(max)\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then return false end\n        if n ==\
    \ 2 then return true end\n        if n % 2 == 0 then return false end\n      \
    \  for i = 3, math.sqrt(n), 2 do\n            if n % i == 0 then return false\
    \ end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function getMaxPrime(lst)\n        local max = 0\n        for i = 1, #lst\
    \ do\n            if isPrime(lst[i]) and lst[i] > max then\n                max\
    \ = lst[i]\n            end\n        end\n        return max\n    end\n    return\
    \ sumDigits(getMaxPrime(lst))\nend", "  local primes = {}\n  local largest = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > largest then\n      largest = lst[i]\n\
    \    end\n  end\n  for i = 2, largest do\n    local isPrime = true\n    for j\
    \ = 2, i - 1 do\n      if i % j == 0 then\n        isPrime = false\n        break\n\
    \      end\n    end\n    if isPrime then\n      table.insert(primes, i)\n    end\n\
    \  end\n  local largestPrime = 0\n  for i = 1, #primes do\n    if primes[i] >\
    \ largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n  local sum\
    \ = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime % 10\n    largestPrime\
    \ = math.floor(largestPrime / 10)\n  end\n  return sum\nend", "  local max = 0\n\
    \  for i=1,#lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  local function isPrime(n)\n    if n < 2 then return false end\n    if n ==\
    \ 2 then return true end\n    if n % 2 == 0 then return false end\n    for i=3,math.sqrt(n),2\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function getDigits(n)\n    local digits = {}\n    while n > 0 do\n  \
    \    digits[#digits+1] = n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ digits\n  end\n  local function sumDigits(digits)\n    local sum = 0\n    for\
    \ i=1,#digits do\n      sum = sum + digits[i]\n    end\n    return sum\n  end\n\
    \  for i=max,2,-1 do\n    if isPrime(i) then\n      return sumDigits(getDigits(i))\n\
    \    end\n  end\n  return 0\nend", "    local function isPrime(n)\n        if\
    \ n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n          \
    \  if n % i == 0 then return false end\n        end\n        return true\n   \
    \ end\n    local function sumDigits(n)\n        local sum = 0\n        while n\
    \ > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local maxPrime = 0\n    for i =\
    \ 1, #lst do\n        if isPrime(lst[i]) and lst[i] > maxPrime then\n        \
    \    maxPrime = lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  local function isPrime(n)\n    if n < 2 then\n\
    \      return false\n    end\n    for i = 2, n - 1 do\n      if n % i == 0 then\n\
    \        return false\n      end\n    end\n    return true\n  end\n  local function\
    \ getDigits(n)\n    local digits = {}\n    while n > 0 do\n      table.insert(digits,\
    \ n % 10)\n      n = math.floor(n / 10)\n    end\n    return digits\n  end\n \
    \ local function sumDigits(digits)\n    local sum = 0\n    for i = 1, #digits\
    \ do\n      sum = sum + digits[i]\n    end\n    return sum\n  end\n  local function\
    \ getPrime(n)\n    for i = n, 2, -1 do\n      if isPrime(i) then\n        return\
    \ i\n      end\n    end\n  end\n  local prime = getPrime(max)\n  local digits\
    \ = getDigits(prime)\n  return sumDigits(digits)\nend", "    local function isPrime(n)\n\
    \        if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n\
    \            if n % i == 0 then return false end\n        end\n        return\
    \ true\n    end\n    local function sumDigits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ _, v in ipairs(lst) do\n        if isPrime(v) and v > max then max = v end\n\
    \    end\n    return sumDigits(max)\nend", "  local function isPrime(n)\n    if\
    \ n < 2 then return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "    local function isPrime(n)\n       \
    \ if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n       \
    \     if n % i == 0 then return false end\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local maxPrime = 0\n    for _,\
    \ v in ipairs(lst) do\n        if isPrime(v) and v > maxPrime then\n         \
    \   maxPrime = v\n        end\n    end\n    return sumDigits(maxPrime)\nend",
  "  local primes = {}\n  local max = 0\n  for i=1,#lst do\n    if lst[i] > max then\
    \ max = lst[i] end\n  end\n  for i=2,max do\n    local isPrime = true\n    for\
    \ j=2,i-1 do\n      if i%j == 0 then\n        isPrime = false\n        break\n\
    \      end\n    end\n    if isPrime then\n      primes[#primes+1] = i\n    end\n\
    \  end\n  local maxPrime = 0\n  for i=1,#primes do\n    local isInList = false\n\
    \    for j=1,#lst do\n      if primes[i] == lst[j] then\n        isInList = true\n\
    \        break\n      end\n    end\n    if isInList then\n      if primes[i] >\
    \ maxPrime then\n        maxPrime = primes[i]\n      end\n    end\n  end\n  local\
    \ sum = 0\n  while maxPrime > 0 do\n    sum = sum + maxPrime%10\n    maxPrime\
    \ = math.floor(maxPrime/10)\n  end\n  return sum\nend", "    local function isPrime(n)\n\
    \        if n <= 1 then return false end\n        for i = 2, n - 1 do\n      \
    \      if n % i == 0 then return false end\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local function getLargestPrime(lst)\n\
    \        local largestPrime = 0\n        for i = 1, #lst do\n            if isPrime(lst[i])\
    \ and lst[i] > largestPrime then\n                largestPrime = lst[i]\n    \
    \        end\n        end\n        return largestPrime\n    end\n    return sumDigits(getLargestPrime(lst))\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false\
    \ end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local primes = {}\n  local max = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > 1 then\n      local isPrime = true\n      for j = 2, lst[i] - 1 do\n     \
    \   if lst[i] % j == 0 then\n          isPrime = false\n          break\n    \
    \    end\n      end\n      if isPrime then\n        primes[#primes + 1] = lst[i]\n\
    \        if lst[i] > max then\n          max = lst[i]\n        end\n      end\n\
    \    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local primes\
    \ = {}\n    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    for i = 1, max do\n     \
    \   primes[i] = true\n    end\n    primes[1] = false\n    for i = 2, max do\n\
    \        if primes[i] then\n            for j = i * i, max, i do\n           \
    \     primes[j] = false\n            end\n        end\n    end\n    local maxPrime\
    \ = 0\n    for i = 1, #lst do\n        if primes[lst[i]] then\n            if\
    \ lst[i] > maxPrime then\n                maxPrime = lst[i]\n            end\n\
    \        end\n    end\n    local sum = 0\n    while maxPrime > 0 do\n        sum\
    \ = sum + maxPrime % 10\n        maxPrime = math.floor(maxPrime / 10)\n    end\n\
    \    return sum\nend", "    local primes = {}\n    local largest = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) then\n            primes[#primes\
    \ + 1] = lst[i]\n            if lst[i] > largest then\n                largest\
    \ = lst[i]\n            end\n        end\n    end\n    local sum = 0\n    while\
    \ largest > 0 do\n        sum = sum + (largest % 10)\n        largest = math.floor(largest\
    \ / 10)\n    end\n    return sum\nend", "  local max = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local function\
    \ isPrime(n)\n    if n == 1 then\n      return false\n    end\n    for i = 2,\
    \ n - 1 do\n      if n % i == 0 then\n        return false\n      end\n    end\n\
    \    return true\n  end\n  local function getDigits(n)\n    local digits = {}\n\
    \    while n > 0 do\n      table.insert(digits, n % 10)\n      n = math.floor(n\
    \ / 10)\n    end\n    return digits\n  end\n  local function sum(t)\n    local\
    \ sum = 0\n    for i = 1, #t do\n      sum = sum + t[i]\n    end\n    return sum\n\
    \  end\n  local function getPrimes(n)\n    local primes = {}\n    for i = 1, n\
    \ do\n      if isPrime(i) then\n        table.insert(primes, i)\n      end\n \
    \   end\n    return primes\n  end\n  local primes = getPrimes(max)\n  local maxPrime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > maxPrime then\n      maxPrime\
    \ = primes[i]\n    end\n  end\n  local digits = getDigits(maxPrime)\n  return\
    \ sum(digits)\nend", "  local primes = {}\n  local max = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > 1 then\n      local isPrime = true\n      for j = 2, lst[i]\
    \ - 1 do\n        if lst[i] % j == 0 then\n          isPrime = false\n       \
    \   break\n        end\n      end\n      if isPrime then\n        primes[#primes\
    \ + 1] = lst[i]\n        if lst[i] > max then\n          max = lst[i]\n      \
    \  end\n      end\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum\
    \ = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend",
  "    local function isPrime(n)\n        if n < 2 then return false end\n       \
    \ for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n <= 1 then return false end\n    if\
    \ n <= 3 then return true end\n    if n % 2 == 0 or n % 3 == 0 then return false\
    \ end\n    for i = 5, math.sqrt(n), 6 do\n      if n % i == 0 or n % (i + 2) ==\
    \ 0 then return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local s = 0\n    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return s\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "  local function isPrime(n)\n    if n <\
    \ 2 then return false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0\
    \ then return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  return sumDigits(max)\nend", "    local function isPrime(n)\n       \
    \ if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n       \
    \     if n % i == 0 then return false end\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local function getLargestPrime(lst)\n\
    \        local largest = 0\n        for i = 1, #lst do\n            if isPrime(lst[i])\
    \ and lst[i] > largest then\n                largest = lst[i]\n            end\n\
    \        end\n        return largest\n    end\n    return sumDigits(getLargestPrime(lst))\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i])\
    \ and lst[i] > max then\n      max = lst[i]\n    end\n  end\n  return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n <= 1 then return false end\n    if\
    \ n == 2 then return true end\n    if n % 2 == 0 then return false end\n    for\
    \ i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if isPrime(v) and v > max then max = v end\n  end\n  return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    for i = 2, math.sqrt(n) do\n      if n\
    \ % i == 0 then\n        return false\n      end\n    end\n    return true\n \
    \ end\n  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n\
    \      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local max = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  return sumDigits(max)\nend",
  "    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i]) then\n\
    \            table.insert(primes, lst[i])\n        end\n    end\n    local largest\
    \ = 0\n    for i = 1, #primes do\n        if primes[i] > largest then\n      \
    \      largest = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ largest > 0 do\n        sum = sum + largest % 10\n        largest = math.floor(largest\
    \ / 10)\n    end\n    return sum\nend", "    local largest = 0\n    for i = 1,\
    \ #lst do\n        if lst[i] > largest then\n            largest = lst[i]\n  \
    \      end\n    end\n    local function isPrime(n)\n        if n < 2 then\n  \
    \          return false\n        end\n        for i = 2, n - 1 do\n          \
    \  if n % i == 0 then\n                return false\n            end\n       \
    \ end\n        return true\n    end\n    local function sumDigits(n)\n       \
    \ local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n    \
    \        n = math.floor(n / 10)\n        end\n        return sum\n    end\n  \
    \  local function findLargestPrime(n)\n        for i = n, 2, -1 do\n         \
    \   if isPrime(i) then\n                return i\n            end\n        end\n\
    \        return 2\n    end\n    return sumDigits(findLargestPrime(largest))\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then return false end\n\
    \        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    if\
    \ n == 2 then return true end\n    if n % 2 == 0 then return false end\n    for\
    \ i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local largestPrime = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > largestPrime then\n      largestPrime = lst[i]\n\
    \    end\n  end\n  return sumDigits(largestPrime)\nend", "    local function isPrime(n)\n\
    \        if n < 2 then return false end\n        for i = 2, math.sqrt(n) do\n\
    \            if n % i == 0 then return false end\n        end\n        return\
    \ true\n    end\n    local function sumDigits(n)\n        local s = 0\n      \
    \  while n > 0 do\n            s = s + n % 10\n            n = math.floor(n /\
    \ 10)\n        end\n        return s\n    end\n    local maxPrime = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > maxPrime then\n    \
    \        maxPrime = lst[i]\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "  local prime = 0\n  for i = 1, #lst do\n    if lst[i] > prime and isPrime(lst[i])\
    \ then\n      prime = lst[i]\n    end\n  end\n  local sum = 0\n  while prime >\
    \ 0 do\n    sum = sum + prime % 10\n    prime = math.floor(prime / 10)\n  end\n\
    \  return sum\nend", "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      max = lst[i]\n    end\n  end\n  local function isPrime(num)\n  \
    \  if num == 1 then\n      return false\n    end\n    for i = 2, num - 1 do\n\
    \      if num % i == 0 then\n        return false\n      end\n    end\n    return\
    \ true\n  end\n  local function getDigits(num)\n    local digits = {}\n    while\
    \ num > 0 do\n      table.insert(digits, num % 10)\n      num = math.floor(num\
    \ / 10)\n    end\n    return digits\n  end\n  local function sumDigits(digits)\n\
    \    local sum = 0\n    for i = 1, #digits do\n      sum = sum + digits[i]\n \
    \   end\n    return sum\n  end\n  local function getLargestPrime(num)\n    while\
    \ not isPrime(num) do\n      num = num - 1\n    end\n    return num\n  end\n \
    \ local largestPrime = getLargestPrime(max)\n  local digits = getDigits(largestPrime)\n\
    \  local sum = sumDigits(digits)\n  return sum\nend", "    local function isPrime(n)\n\
    \        if n < 2 then return false end\n        if n == 2 then return true end\n\
    \        if n % 2 == 0 then return false end\n        for i = 3, math.sqrt(n),\
    \ 2 do\n            if n % i == 0 then return false end\n        end\n       \
    \ return true\n    end\n    local function sumDigits(n)\n        local sum = 0\n\
    \        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end\n    local max = 0\n    for\
    \ i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > max then\n         \
    \   max = lst[i]\n        end\n    end\n    return sumDigits(max)\nend", "   \
    \ local primes = {}\n    for i = 1, #lst do\n        local n = lst[i]\n      \
    \  local isPrime = true\n        for j = 2, math.sqrt(n) do\n            if n\
    \ % j == 0 then\n                isPrime = false\n                break\n    \
    \        end\n        end\n        if isPrime and n > 1 then\n            table.insert(primes,\
    \ n)\n        end\n    end\n    local max = 0\n    for i = 1, #primes do\n   \
    \     if primes[i] > max then\n            max = primes[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes\
    \ = {}\n  local largest = 0\n  for i=1,#lst do\n    if lst[i] > largest then\n\
    \      largest = lst[i]\n    end\n  end\n  for i=2,largest do\n    local isPrime\
    \ = true\n    for j=2,i-1 do\n      if i % j == 0 then\n        isPrime = false\n\
    \        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i=1,#primes do\n    if primes[i]\
    \ > largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n  local\
    \ sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime % 10\n  \
    \  largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\nend", " \
    \ local primes = {}\n  local max = 0\n  for _,v in ipairs(lst) do\n    if v >\
    \ max then max = v end\n  end\n  for i=2,max do\n    local isPrime = true\n  \
    \  for j=2,i-1 do\n      if i % j == 0 then\n        isPrime = false\n       \
    \ break\n      end\n    end\n    if isPrime then\n      table.insert(primes, i)\n\
    \    end\n  end\n  local maxPrime = 0\n  for _,v in ipairs(primes) do\n    if\
    \ v > maxPrime then maxPrime = v end\n  end\n  local sum = 0\n  while maxPrime\
    \ > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime /\
    \ 10)\n  end\n  return sum\nend", "    local max = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    local function isPrime(num)\n        if num <= 1 then\n            return\
    \ false\n        end\n        for i = 2, num - 1 do\n            if num % i ==\
    \ 0 then\n                return false\n            end\n        end\n       \
    \ return true\n    end\n    local function getSum(num)\n        local sum = 0\n\
    \        while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end\n    local function\
    \ getMaxPrime(num)\n        local maxPrime = 0\n        for i = 1, num do\n  \
    \          if isPrime(i) then\n                maxPrime = i\n            end\n\
    \        end\n        return maxPrime\n    end\n    return getSum(getMaxPrime(max))\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, n - 1 do\n      if n % i == 0 then return false end\n    end\n    return\
    \ true\n  end\n  local function sumDigits(n)\n    local sum = 0\n    while n >\
    \ 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end\n  local max = 0\n  for _, v in ipairs(lst) do\n    if isPrime(v)\
    \ and v > max then max = v end\n  end\n  return sumDigits(max)\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then return false end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then return false end\n      \
    \  end\n        return true\n    end\n    local function sumDigits(n)\n      \
    \  local s = 0\n        while n > 0 do\n            s = s + n % 10\n         \
    \   n = math.floor(n / 10)\n        end\n        return s\n    end\n    local\
    \ max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i] > max\
    \ then\n            max = lst[i]\n        end\n    end\n    return sumDigits(max)\n\
    end", "    local function isPrime(n)\n        if n < 2 then return false end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then return false\
    \ end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function largestPrime(lst)\n        local largest = 0\n        for i =\
    \ 1, #lst do\n            if isPrime(lst[i]) and lst[i] > largest then\n     \
    \           largest = lst[i]\n            end\n        end\n        return largest\n\
    \    end\n    return sumDigits(largestPrime(lst))\nend", "  local primes = {}\n\
    \  local largest = 0\n  for i = 1, #lst do\n    if lst[i] > largest then\n   \
    \   largest = lst[i]\n    end\n  end\n  for i = 2, largest do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  local largestPrime = 0\n  for i = 1, #primes do\n    if\
    \ primes[i] > largestPrime then\n      largestPrime = primes[i]\n    end\n  end\n\
    \  local sum = 0\n  while largestPrime > 0 do\n    sum = sum + largestPrime %\
    \ 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n  return sum\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

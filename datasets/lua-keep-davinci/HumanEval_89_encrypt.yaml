name: HumanEval_89_encrypt
language: lua
prompt: "-- Create a function encrypt that takes a string as an argument and\n-- returns\
  \ a string encrypted with the alphabet being rotated. \n-- The alphabet should be\
  \ rotated in a manner such that the letters \n-- shift down by two multiplied to\
  \ two places.\n-- For example:\n-- encrypt('hi') returns 'lm'\n-- encrypt('asdfghjkl')\
  \ returns 'ewhjklnop'\n-- encrypt('gf') returns 'kj'\n-- encrypt('et') returns 'ix'\n\
  local function encrypt(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = encrypt\n\
  \    lu.assertEquals(candidate('hi'), 'lm')\n    lu.assertEquals(candidate('asdfghjkl'),\
  \ 'ewhjklnop')\n    lu.assertEquals(candidate('gf'), 'kj')\n    lu.assertEquals(candidate('et'),\
  \ 'ix')\n    lu.assertEquals(candidate('faewfawefaewg'), 'jeiajeaijeiak')\n    lu.assertEquals(candidate('hellomyfriend'),\
  \ 'lippsqcjvmirh')\n    lu.assertEquals(candidate('dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh'),\
  \ 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl')\n    lu.assertEquals(candidate('a'),\
  \ 'e')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\tlocal new_s = ''\n\
    \tfor i = 1, #s do\n\t\tlocal c = string.sub(s, i, i)\n\t\tlocal index = string.find(alphabet,\
    \ c)\n\t\tif index then\n\t\t\tnew_s = new_s .. string.sub(new_alphabet, index,\
    \ index)\n\t\telse\n\t\t\tnew_s = new_s .. c\n\t\tend\n\tend\n\treturn new_s\n\
    end", "  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local encrypted = {}\n  local s = string.lower(s)\n  for i = 1, #s do\n   \
    \ local letter = s:sub(i,i)\n    local index = 0\n    for j = 1, #alphabet do\n\
    \      if letter == alphabet[j] then\n        index = j\n      end\n    end\n\
    \    if index == 0 then\n      table.insert(encrypted, letter)\n    else\n   \
    \   local new_index = index + (2 * 2)\n      if new_index > #alphabet then\n \
    \       new_index = new_index - #alphabet\n      end\n      table.insert(encrypted,\
    \ alphabet[new_index])\n    end\n  end\n  return table.concat(encrypted)\nend",
  "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor\
    \ i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tif index then\n\t\t\tlocal newIndex = index + (2 * 2)\n\t\t\tif newIndex >\
    \ #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted =\
    \ encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n     \
    \   if index then\n            index = index + 2 * 2\n            if index > #alphabet\
    \ then\n                index = index - #alphabet\n            end\n         \
    \   result = result .. alphabet:sub(index, index)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            result\
    \ = result .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            result = result .. c\n        end\n    end\n\
    \    return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + (2 * 2)) % #alphabet\n            result = result .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            result = result .. c\n        end\n   \
    \ end\n    return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        encrypted = encrypted .. alphabet:sub(index\
    \ + 2, index + 2)\n    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = index +\
    \ (2 * 2)\n      if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n\
    \      end\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local new_alphabet =\
    \ string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n  local new_s = ''\n\
    \  for i = 1, #s do\n    local c = string.sub(s, i, i)\n    local index = string.find(alphabet,\
    \ c)\n    if index then\n      new_s = new_s .. string.sub(new_alphabet, index,\
    \ index)\n    else\n      new_s = new_s .. c\n    end\n  end\n  return new_s\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted\
    \ = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tif index then\n\t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet\
    \ then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted\
    \ .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2)\
    \ % 26 + 1)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n\
    \        newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ char\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = index +\
    \ 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n\
    \      end\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "\tlocal alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index then\n\
    \t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\t\t\tindex =\
    \ index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,index)\n\
    \t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\
    \tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,\
    \ index)\n\t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn\
    \ encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted\
    \ = ''\n\tfor i = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tlocal newIndex = index + (2 * 2)\n\t\t\tif newIndex >\
    \ #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted =\
    \ encrypted .. char\n\t\tend\n\tend\n\treturn encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      index = index + 2 * 2\n      if index > #alphabet then\n        index =\
    \ index - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted\
    \ = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n     \
    \   if index then\n            index = index + 2 * 2\n            if index > #alphabet\
    \ then\n                index = index - #alphabet\n            end\n         \
    \   result = result .. alphabet:sub(index, index)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n\
    \        newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ char\n    end\n  end\n  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local index = alphabet:find(char)\n    local newIndex = index + (2 * 2)\n \
    \   if newIndex > #alphabet then\n      newIndex = newIndex - #alphabet\n    end\n\
    \    encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n  end\n  return\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local\
    \ index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            result = result .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            result = result .. c\n        end\n   \
    \ end\n    return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    local newIndex = index + 2 * 2\n    if newIndex\
    \ > #alphabet then\n      newIndex = newIndex - #alphabet\n    end\n    encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n  end\n  return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2)\
    \ % 26 + 1)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local result = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local n = c:byte()\n    if n >= 97 and n <= 122\
    \ then\n      n = n + 2 * 2\n      if n > 122 then\n        n = n - 26\n     \
    \ end\n    end\n    result = result .. string.char(n)\n  end\n  return result\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + 4\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet = string.sub(alphabet,\
    \ 3) .. string.sub(alphabet, 1, 2)\n    local new_s = ''\n    for i = 1, #s do\n\
    \        local c = string.sub(s, i, i)\n        local index = string.find(alphabet,\
    \ c)\n        if index then\n            new_s = new_s .. string.sub(new_alphabet,\
    \ index, index)\n        else\n            new_s = new_s .. c\n        end\n \
    \   end\n    return new_s\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tlocal newIndex = index +\
    \ 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\
    \t\t\tend\n\t\t\tc = alphabet:sub(newIndex, newIndex)\n\t\tend\n\t\tencrypted\
    \ = encrypted .. c\n\tend\n\treturn encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\t\
    local result = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index\
    \ = alphabet:find(c)\n\t\tif index then\n\t\t\tresult = result .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n\t\telse\n\t\t\tresult = result .. c\n\
    \t\tend\n\tend\n\treturn result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local index = alphabet:find(char)\n    if index then\n      local newIndex\
    \ = index + (2 * 2)\n      if newIndex > #alphabet then\n        newIndex = newIndex\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n \
    \ return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local index = string.find(alphabet,\
    \ s:sub(i, i))\n        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 4) % 26 + 1, (index + 4) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. s:sub(i, i)\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ 26 + 1, (index + 2) % 26 + 1)\n    else\n      encrypted = encrypted .. c\n\
    \    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      index = index + 2 * 2\n \
    \     if index > #alphabet then\n        index = index - #alphabet\n      end\n\
    \      encrypted = encrypted .. alphabet:sub(index, index)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal letter = s:sub(i, i)\n\t\
    \tlocal index = alphabet:find(letter)\n\t\tlocal newIndex = index + 2 * 2\n\t\t\
    if newIndex > #alphabet then\n\t\t\tnewIndex = newIndex - #alphabet\n\t\tend\n\
    \t\tencrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\tend\n\treturn\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \tlocal s_table = {}\n\tlocal s_encrypted = {}\n\tlocal s_encrypted_string = ''\n\
    \tfor i = 1, #s do\n\t\ts_table[i] = string.sub(s, i, i)\n\tend\n\tfor i = 1,\
    \ #s_table do\n\t\tfor j = 1, #alphabet do\n\t\t\tif s_table[i] == alphabet[j]\
    \ then\n\t\t\t\ts_encrypted[i] = alphabet[j + 2]\n\t\t\tend\n\t\tend\n\tend\n\t\
    for i = 1, #s_encrypted do\n\t\ts_encrypted_string = s_encrypted_string .. s_encrypted[i]\n\
    \tend\n\treturn s_encrypted_string\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local new_alphabet = 'cdefghijklmnopqrstuvwxyzab'\n  local new_string = ''\n\
    \  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      new_string = new_string .. new_alphabet:sub(index, index)\n\
    \    else\n      new_string = new_string .. char\n    end\n  end\n  return new_string\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n \
    \   local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n  \
    \      newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + (2 * 2)) % 26\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "\tlocal\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal new_alphabet = 'cdefghijklmnopqrstuvwxyzab'\n\
    \tlocal new_string = ''\n\tfor i = 1, #s do\n\t\tlocal letter = s:sub(i, i)\n\t\
    \tlocal index = alphabet:find(letter)\n\t\tif index then\n\t\t\tnew_string = new_string\
    \ .. new_alphabet:sub(index, index)\n\t\telse\n\t\t\tnew_string = new_string ..\
    \ letter\n\t\tend\n\tend\n\treturn new_string\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local new_string = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = index + 4\n            if new_index > #alphabet then\n\
    \                new_index = new_index - #alphabet\n            end\n        \
    \    new_string = new_string .. alphabet:sub(new_index, new_index)\n        else\n\
    \            new_string = new_string .. char\n        end\n    end\n    return\
    \ new_string\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n   \
    \     local index = alphabet:find(char)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local a = {}\n    for i = 1, #s do\n        a[i] = string.char(string.byte(s,\
    \ i) + 2 * 2)\n    end\n    return table.concat(a)\nend", "    local a = {}\n\
    \    for i = 1, #s do\n        local c = s:sub(i,i)\n        local b = string.byte(c)\n\
    \        if b >= 97 and b <= 122 then\n            b = b + 2\n            if b\
    \ > 122 then\n                b = b - 26\n            end\n        elseif b >=\
    \ 65 and b <= 90 then\n            b = b + 2\n            if b > 90 then\n   \
    \             b = b - 26\n            end\n        end\n        a[#a+1] = string.char(b)\n\
    \    end\n    return table.concat(a)\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local s = s:lower()\n    local encrypted = ''\n    for i = 1, #s do\n   \
    \     local c = s:sub(i, i)\n        local index = alphabet:find(c)\n        if\
    \ index then\n            local newIndex = (index + 2 * 2) % #alphabet\n     \
    \       encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 4\n            if index > #alphabet then\n                index =\
    \ index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        local newIndex = index + 2 * 2\n        if newIndex > #alphabet then\n\
    \            newIndex = newIndex - #alphabet\n        end\n        encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    end\n    return encrypted\n\
    end", "  local t = {}\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ n = c:byte()\n    if n >= 97 and n <= 122 then\n      n = n + 4\n      if n\
    \ > 122 then\n        n = n - 26\n      end\n    end\n    t[i] = string.char(n)\n\
    \  end\n  return table.concat(t)\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  -- TODO: Implement\nend", "    local\
    \ alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = 0\n        for j = 1, #alphabet do\n            if c ==\
    \ alphabet[j] then\n                index = j\n                break\n       \
    \     end\n        end\n        if index == 0 then\n            encrypted = encrypted\
    \ .. c\n        else\n            local newIndex = index + (2 * 2)\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet[newIndex]\n  \
    \      end\n    end\n    return encrypted\nend", "  return s:gsub('.', function(c)\n\
    \    local c = c:byte()\n    if c >= 97 and c <= 122 then\n      return string.char((c\
    \ - 97 + 2 * 2) % 26 + 97)\n    elseif c >= 65 and c <= 90 then\n      return\
    \ string.char((c - 65 + 2 * 2) % 26 + 65)\n    else\n      return c\n    end\n\
    \  end)\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2)\
    \ % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n  \
    \      newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = index + 4\n            if new_index > #alphabet then\n\
    \                new_index = new_index - #alphabet\n            end\n        \
    \    encrypted = encrypted .. alphabet:sub(new_index, new_index)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = (index + 2 *\
    \ 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local\
    \ index = alphabet:find(c)\n        if index then\n            result = result\
    \ .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n\
    \            result = result .. c\n        end\n    end\n    return result\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "\tlocal\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1,\
    \ #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\tif\
    \ index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\
    \t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,index)\n\
    \t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 4\n      if newIndex > #alphabet then\n      \
    \  newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted .. c\n\
    \    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       index = index + 2 * 2\n            if index > #alphabet then\n       \
    \         index = index - #alphabet\n            end\n            encrypted =\
    \ encrypted .. alphabet:sub(index, index)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local encrypted = \"\"\n\
    \    for i = 1, #s do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index,index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = (index + 4) % 26\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "\tlocal s = s:lower()\n\
    \tlocal t = {}\n\tlocal e = {}\n\tlocal a = {}\n\tlocal b = {}\n\tlocal c = {}\n\
    \tlocal d = {}\n\tlocal f = {}\n\tlocal g = {}\n\tlocal h = {}\n\tlocal i = {}\n\
    \tlocal j = {}\n\tlocal k = {}\n\tlocal l = {}\n\tlocal m = {}\n\tlocal n = {}\n\
    \tlocal o = {}\n\tlocal p = {}\n\tlocal q = {}\n\tlocal r = {}\n\tlocal u = {}\n\
    \tlocal v = {}\n\tlocal w = {}\n\tlocal x = {}\n\tlocal y = {}\n\tlocal z = {}\n\
    \tlocal space = {}\n\tlocal exclamation = {}\n\tlocal question = {}\n\tlocal period\
    \ = {}\n\tlocal comma = {}\n\tlocal apostrophe = {}\n\tlocal colon = {}\n\tlocal\
    \ semicolon = {}\n\tlocal dash = {}\n\tlocal underscore = {}\n\tlocal left_paren\
    \ = {}\n\tlocal right_paren = {}\n\tlocal left_bracket = {}\n\tlocal right_bracket\
    \ = {}\n\tlocal left_brace = {}\n\tlocal right_brace = {}\n\tlocal at = {}\n\t\
    local pound = {}\n\tlocal dollar = {}\n\tlocal percent = {}\n\tlocal caret = {}\n\
    \tlocal ampersand = {}\n\tlocal asterisk = {}\n\tlocal plus = {}\n\tlocal equal\
    \ = {}\n\tlocal backslash = {}\n\tlocal bar = {}\n\tlocal tilde = {}\n\tlocal\
    \ less_than = {}\n\tlocal greater_than = {}\n\tlocal number_sign = {}\n\tlocal\
    \ double_quote = {}\n\tlocal single_quote = {}\n\tlocal backtick = {}\n\tlocal\
    \ forward_slash = {}\n\tlocal backspace = {}\n\tlocal tab = {}\n\tlocal newline\
    \ = {}\n\tlocal return_key = {}\n\tlocal escape = {}\n\tlocal delete = {}\n\t\
    local insert = {}\n\tlocal home = {}\n\tlocal end_key = {}\n\tlocal page_up =\
    \ {}\n\tlocal page_down = {}\n\tlocal up_arrow = {}\n\tlocal down_arrow = {}\n\
    \tlocal left_arrow = {}\n\tlocal right", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local new_alphabet = ''\n  local new_string = ''\n  for i = 1, #alphabet do\n\
    \    new_alphabet = new_alphabet .. alphabet:sub(i + 2, i + 2)\n  end\n  for i\
    \ = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    new_string = new_string .. new_alphabet:sub(index, index)\n  end\n  return\
    \ new_string\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n   \
    \     local index = alphabet:find(char)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local newAlphabet\
    \ = 'cdefghijklmnopqrstuvwxyzab'\n    local result = ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n     \
    \   if index then\n            result = result .. newAlphabet:sub(index, index)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ new_alphabet = 'cdefghijklmnopqrstuvwxyzab'\n    local new_string = ''\n   \
    \ for i = 1, #s do\n        local letter = s:sub(i, i)\n        local index =\
    \ alphabet:find(letter)\n        if index then\n            new_string = new_string\
    \ .. new_alphabet:sub(index, index)\n        else\n            new_string = new_string\
    \ .. letter\n        end\n    end\n    return new_string\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if\
    \ index then\n      local newIndex = index + 2 * 2\n      if newIndex > #alphabet\
    \ then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n    local result =\
    \ ''\n    for i = 1, #s do\n        local char = string.sub(s, i, i)\n       \
    \ local index = string.find(alphabet, char)\n        if index then\n         \
    \   result = result .. string.sub(new_alphabet, index, index)\n        else\n\
    \            result = result .. char\n        end\n    end\n    return result\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            encrypted =\
    \ encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. char\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local index = alphabet:find(char)\n    if index then\n      index = index +\
    \ 2 * 2\n      if index > #alphabet then\n        index = index - #alphabet\n\
    \      end\n      encrypted = encrypted .. alphabet:sub(index, index)\n    else\n\
    \      encrypted = encrypted .. char\n    end\n  end\n  return encrypted\nend",
  "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor\
    \ i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tif index then\n\t\t\tencrypted = encrypted .. alphabet:sub((index + 2) % #alphabet\
    \ + 1, (index + 2) % #alphabet + 1)\n\t\telse\n\t\t\tencrypted = encrypted ..\
    \ c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            result\
    \ = result .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n     \
    \   else\n            result = result .. c\n        end\n    end\n    return result\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = (index + 2 * 2) % #alphabet\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "\tlocal alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index then\n\
    \t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\t\t\tindex =\
    \ index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,index)\n\
    \t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            result = result .. alphabet:sub(index, index)\n        else\n   \
    \         result = result .. c\n        end\n    end\n    return result\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n     \
    \   if index then\n            index = index + 2 * 2\n            if index > #alphabet\
    \ then\n                index = index - #alphabet\n            end\n         \
    \   result = result .. alphabet:sub(index, index)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet = string.sub(alphabet,\
    \ 3) .. string.sub(alphabet, 1, 2)\n    local new_s = ''\n    for i = 1, #s do\n\
    \        local c = string.sub(s, i, i)\n        local index = string.find(alphabet,\
    \ c)\n        if index then\n            new_s = new_s .. string.sub(new_alphabet,\
    \ index, index)\n        else\n            new_s = new_s .. c\n        end\n \
    \   end\n    return new_s\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      encrypted = encrypted ..\
    \ alphabet:sub((index + 2 * 2) % 26 + 1, (index + 2 * 2) % 26 + 1)\n    else\n\
    \      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\nend", "\t\
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i\
    \ = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,\
    \ index)\n\t\telse\n\t\t\tencrypted = encrypted .. char\n\t\tend\n\tend\n\treturn\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n   \
    \     local index = alphabet:find(char)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = index +\
    \ 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n\
    \      end\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = (index\
    \ + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local newString = ''\n    for i = 1, #s do\n        local c = s:sub(i,i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            newString\
    \ = newString .. alphabet:sub(newIndex, newIndex)\n        else\n            newString\
    \ = newString .. c\n        end\n    end\n    return newString\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + 4\n      if newIndex > #alphabet\
    \ then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted\
    \ .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n \
    \           encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local result = ''\n  for i = 1, #s do\n    local\
    \ c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n   \
    \   local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n     \
    \   newIndex = newIndex - #alphabet\n      end\n      result = result .. alphabet:sub(newIndex,\
    \ newIndex)\n    else\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local newAlphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n    local newString\
    \ = ''\n    for i = 1, #s do\n        local c = string.sub(s, i, i)\n        local\
    \ index = string.find(alphabet, c)\n        if index then\n            newString\
    \ = newString .. string.sub(newAlphabet, index, index)\n        else\n       \
    \     newString = newString .. c\n        end\n    end\n    return newString\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tlocal newIndex = index +\
    \ 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\
    \t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\
    \telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\
    \tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\
    \t\tlocal newIndex = index + (2 * 2)\n\t\tif newIndex > #alphabet then\n\t\t\t\
    newIndex = newIndex - #alphabet\n\t\tend\n\t\tencrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n\tend\n\treturn encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\
    \t\tif index > #alphabet then\n\t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\
    \t\tencrypted = encrypted .. alphabet:sub(index,index)\n\t\telse\n\t\t\tencrypted\
    \ = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\
    \t\tif index > #alphabet then\n\t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\
    \t\tencrypted = encrypted .. alphabet:sub(index,index)\n\t\telse\n\t\t\tencrypted\
    \ = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + (2 * 2)) % 26 + 1, (index + (2 * 2)) % 26 + 1)\n        else\n           \
    \ encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    local newIndex = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex\
    \ = newIndex - #alphabet\n    end\n    encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n  end\n  return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \tlocal new_s = ''\n\tfor i = 1, #s do\n\t\tlocal c = string.sub(s, i, i)\n\t\t\
    local index = string.find(alphabet, c)\n\t\tif index then\n\t\t\tnew_s = new_s\
    \ .. string.sub(new_alphabet, index, index)\n\t\telse\n\t\t\tnew_s = new_s ..\
    \ c\n\t\tend\n\tend\n\treturn new_s\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    --\
    \ TODO: Implement this function\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet\
    \ + 1)\n        else\n            encrypted = encrypted .. c\n        end\n  \
    \  end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "\tlocal\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1,\
    \ #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet\
    \ then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted\
    \ .. char\n\t\tend\n\tend\n\treturn encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tlocal newIndex = index +\
    \ 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\
    \t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\
    \telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            encrypted = encrypted\
    \ .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = (index + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\
    \t\tif index > #alphabet then\n\t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\
    \t\tencrypted = encrypted .. alphabet:sub(index,index)\n\t\telse\n\t\t\tencrypted\
    \ = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index, index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      encrypted = encrypted ..\
    \ alphabet:sub((index + (2 * 2)) % 26 + 1, (index + (2 * 2)) % 26 + 1)\n    else\n\
    \      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\nend", " \
    \   local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local n = string.byte(c)\n        if n >= 97 and n <= 122 then\n          \
    \  n = n + 2\n            if n > 122 then\n                n = n - 26\n      \
    \      end\n        elseif n >= 65 and n <= 90 then\n            n = n + 2\n \
    \           if n > 90 then\n                n = n - 26\n            end\n    \
    \    end\n        t[i] = string.char(n)\n    end\n    return table.concat(t)\n\
    end", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\
    \tfor i = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,\
    \ index)\n\t\telse\n\t\t\tencrypted = encrypted .. char\n\t\tend\n\tend\n\treturn\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local result\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ result = result .. alphabet:sub(newIndex, newIndex)\n    else\n      result\
    \ = result .. c\n    end\n  end\n  return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local index = string.find(alphabet,\
    \ s:sub(i, i))\n    if index then\n      encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2) % 26 + 1, (index + 2 * 2) % 26 + 1)\n    else\n      encrypted = encrypted\
    \ .. s:sub(i, i)\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index, index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + (2 * 2)\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local t = {}\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n    if n >=\
    \ 97 and n <= 122 then\n      n = n + 4\n      if n > 122 then\n        n = n\
    \ - 26\n      end\n    end\n    t[i] = string.char(n)\n  end\n  return table.concat(t)\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local newAlphabet\
    \ = 'cdefghijklmnopqrstuvwxyzab'\n    local newString = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i,i)\n        local index = alphabet:find(c)\n \
    \       newString = newString .. newAlphabet:sub(index,index)\n    end\n    return\
    \ newString\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = (index + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local index = string.find(alphabet,\
    \ s:sub(i, i))\n        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2) % #alphabet, (index + 2 * 2) % #alphabet)\n        else\n         \
    \   encrypted = encrypted .. s:sub(i, i)\n        end\n    end\n    return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      encrypted = encrypted ..\
    \ alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "\tlocal alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\
    \t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\t\tif index\
    \ then\n\t\t\tlocal newIndex = index + (2 * 2)\n\t\t\tif newIndex > #alphabet\
    \ then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted\
    \ .. char\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \    local new_s = ''\n    for i = 1, #s do\n        local c = string.sub(s, i,\
    \ i)\n        local index = string.find(alphabet, c)\n        if index then\n\
    \            new_s = new_s .. string.sub(new_alphabet, index, index)\n       \
    \ else\n            new_s = new_s .. c\n        end\n    end\n    return new_s\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = (index +\
    \ 2 * 2) % #alphabet\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = (index + 2 * 2) % 26\n  \
    \          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n       \
    \ else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "    -- TODO: Implement this function\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    local newIndex = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex\
    \ = newIndex - #alphabet\n    end\n    encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local\
    \ index = alphabet:find(char)\n    if index then\n      local newIndex = index\
    \ + 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n\
    \      end\n      result = result .. alphabet:sub(newIndex, newIndex)\n    else\n\
    \      result = result .. char\n    end\n  end\n  return result\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n   \
    \     local index = alphabet:find(char)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tlocal newIndex = index +\
    \ 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\
    \t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\
    \telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\
    \tfor i = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal index = alphabet:find(char)\n\
    \t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\
    \t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,\
    \ index)\n\t\telse\n\t\t\tencrypted = encrypted .. char\n\t\tend\n\tend\n\treturn\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = index + (2 * 2)\n            if newIndex > #alphabet then\n              \
    \  newIndex = newIndex - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index, index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local letter = s:sub(i,i)\n\
    \        local index = table.indexOf(alphabet, letter)\n        if index then\n\
    \            local newIndex = index + (2 * 2)\n            if newIndex > #alphabet\
    \ then\n                newIndex = newIndex - #alphabet\n            end\n   \
    \         encrypted = encrypted .. alphabet[newIndex]\n        else\n        \
    \    encrypted = encrypted .. letter\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "\tlocal alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\
    \tlocal c = s:sub(i,i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index then\n\
    \t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\
    \t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted .. c\n\
    \t\tend\n\tend\n\treturn encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tencrypted = encrypted ..\
    \ alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)\n\t\t\
    else\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n        else\n \
    \           encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            encrypted =\
    \ encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) %\
    \ #alphabet + 1)\n        else\n            encrypted = encrypted .. char\n  \
    \      end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       index = index + 2 * 2\n            if index > #alphabet then\n       \
    \         index = index - #alphabet\n            end\n            encrypted =\
    \ encrypted .. alphabet:sub(index, index)\n        else\n            encrypted\
    \ = encrypted .. char\n        end\n    end\n    return encrypted\nend", "   \
    \ local t = {}\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local\
    \ n = c:byte()\n        if n >= 97 and n <= 122 then\n            n = n + 4\n\
    \            if n > 122 then\n                n = n - 26\n            end\n  \
    \      elseif n >= 65 and n <= 90 then\n            n = n + 4\n            if\
    \ n > 90 then\n                n = n - 26\n            end\n        end\n    \
    \    t[#t + 1] = string.char(n)\n    end\n    return table.concat(t)\nend", " \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local letter = s:sub(i, i)\n    local index = alphabet:find(letter)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. letter\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n     \
    \   if index then\n            local newIndex = index + (2 * 2)\n            if\
    \ newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted\
    \ = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    encrypted = encrypted .. alphabet:sub(index + 4, index + 4)\n  end\n  return\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local\
    \ index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = index + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            result = result .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            result = result .. c\n        end\n   \
    \ end\n    return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      encrypted = encrypted ..\
    \ alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

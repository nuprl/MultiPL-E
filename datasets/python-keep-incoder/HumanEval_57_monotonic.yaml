name: HumanEval_57_monotonic
language: python
prompt: "from typing import List\n\ndef monotonic(l: List[int]) -> bool:\n    \"\"\
  \"Return True is list elements are monotonically increasing or decreasing.\n   \
  \ >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n  \
  \  False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 2, 4, 10]) == True\n    assert\
  \ candidate([1, 2, 4, 20]) == True\n    assert candidate([1, 20, 4, 10]) == False\n\
  \    assert candidate([4, 1, 0, -10]) == True\n    assert candidate([4, 1, 1, 0])\
  \ == True\n    assert candidate([1, 2, 3, 2, 5, 60]) == False\n    assert candidate([1,\
  \ 2, 3, 4, 5, 60]) == True\n    assert candidate([9, 9, 9, 9]) == True\n\ndef test_check():\n\
  \    check(monotonic)\n\ntest_check()\n"
completions: ["    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n   \
    \     return True\n    if l[-1] > l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n   \
    \     return True\n    i = 0\n    j = i\n    while j < len(l) - 1:\n        if\
    \ l[j] < l[j + 1]:\n            return False\n        j += 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n      \
    \  if prev > x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev <= x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for i in l[1:]:\n        if prev > i:\n            return False\n        prev\
    \ = i\n    return True\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n   \
    \     return True\n    i = 0\n    j = i\n    while i < len(l) - 1:\n        if\
    \ l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n        \
    \    i += 1\n        else:\n            j += 1\n    return True\n", "    if len(l)\
    \ < 2:\n        return True\n    prev = l[0]\n    for i in l[1:]:\n        if\
    \ prev < i:\n            return False\n        prev = i\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    head, *tail = l\n    if head < tail[0]:\n\
    \        return True\n    if head > tail[-1]:\n        return True\n    return\
    \ monotonic(tail)\n", "    if len(l) < 2:\n        return True\n    l.sort()\n\
    \    return l[0] < l[-1]\n", "    if len(l) < 2:\n        return True\n    if\
    \ l[-1] < l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n\
    \        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = -1\n    j = len(l)\
    \ - 1\n    while i < j:\n        if l[i] < l[j]:\n            return False\n \
    \       i += 1\n        i -= 1\n        j += 1\n        j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i, j = 0, len(l) - 1\n    while i\
    \ < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            return True\n        i += 1\n        j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return False\n    i, j = 0, len(l) - 1\n    while i < j:\n        if l[i]\
    \ < l[j]:\n            return True\n        elif l[i] > l[j]:\n            return\
    \ False\n        i += 1\n        i %= len(l)\n        j -= 1\n        j %= len(l)\n\
    \    return True\n", "    if len(l) < 2:\n        return True\n    if l[-1] <\
    \ l[0]:\n        return True\n    if l[-1] > l[-2]:\n        return True\n   \
    \ return False\n", "    if len(l) < 2:\n        return True\n    \n    prev =\
    \ l[0]\n    for i in l[1:]:\n        if prev < i:\n            return False\n\
    \        prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n      \
    \  if prev < i:\n            return False\n        prev = i\n    return True\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        prev = l[0]\n        for el in l[1:]:\n            if el < prev:\n  \
    \              return False\n            prev = el\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    head, *tail\
    \ = l\n    if head <= tail[0]:\n        return True\n    if head < tail[-1]:\n\
    \        return False\n    return monotonic(tail)\n", "    if len(l) < 2:\n  \
    \      return True\n    if l[-1] < l[0]:\n        return True\n    if l[-1] >\
    \ l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n    \
    \    return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    else:\n        first = l[0]\n    \
    \    last = l[-1]\n        if first < last:\n            return True\n       \
    \ else:\n            return False\n", "    if len(l) < 2:\n        return True\n\
    \    else:\n        first = l[0]\n        last = l[-1]\n        if first < last:\n\
    \            return True\n        else:\n            return False\n", "    if\
    \ len(l) < 2:\n        return True\n    i = j = 0\n    while i < len(l) - 1:\n\
    \        if l[i] < l[i + 1]:\n            return False\n        i += 1\n    while\
    \ j < len(l) - 1:\n        if l[j] > l[j + 1]:\n            return False\n   \
    \     j += 1\n    return True\n", "    if len(l) < 2:\n        return True\n \
    \   \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n           \
    \ return False\n        prev = x\n    return True\n", "    if len(l) < 2:\n  \
    \      return True\n    head, *tail = l\n    if head < tail[0]:\n        return\
    \ True\n    elif head > tail[-1]:\n        return True\n    else:\n        return\
    \ monotonic(tail)\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for i in l[1:]:\n        if prev < i:\n            return False\n\
    \        prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n  \
    \          return False\n        elif l[i] > l[j]:\n            return True\n\
    \        i += 1\n        j -= 1\n    return True\n", "    if len(l) < 2:\n   \
    \     return True\n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j = i\n    while\
    \ j > 0 and l[j-1] > l[j]:\n        j -= 1\n    return j == 0 or l[j] < l[j-1]\n",
  "    if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    if l[0] > l[-1]:\n        return True\n\
    \    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n  \
    \          return False\n        elif l[i] > l[j]:\n            i += 1\n     \
    \   else:\n            j -= 1\n    return True\n", "    if len(l) < 2:\n     \
    \   return True\n    i = 0\n    j = i\n    while j < len(l) - 1:\n        if l[j]\
    \ < l[j + 1]:\n            return False\n        j += 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev > i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for i in l[1:]:\n        if prev < i:\n            return False\n        prev\
    \ = i\n    return True\n", "    l = list(l)\n    l.sort()\n    return l[0] ==\
    \ l[-1]\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n\
    \    for x in l[1:]:\n        if prev < x:\n            return False\n       \
    \ prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n   \
    \ if l[-1] < l[0]:\n        return True\n    return False\n", "    if len(l) <\
    \ 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for x in l[1:]:\n        if prev <= x:\n         \
    \   return False\n        prev = x\n    return True\n", "    if len(l) < 2:\n\
    \        return True\n    else:\n        return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return False\n    i, j = 0, len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        i += 1\n\
    \        i %= len(l)\n        j -= 1\n        j %= len(l)\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for i in l[1:]:\n        if prev < i:\n            return False\n\
    \        prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    else:\n        head, *tail = l\n        if head < tail[0]:\n            return\
    \ False\n        elif head > tail[-1]:\n            return True\n        else:\n\
    \            return monotonic(tail)\n", "    if len(l) < 2:\n        return True\n\
    \    i = len(l) - 2\n    j = i\n    while j > 0 and l[j-1] > l[j]:\n        j\
    \ -= 1\n    return j == 0 or l[j] < l[j-1]\n", "    if len(l) < 2:\n        return\
    \ True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n   \
    \         return False\n        prev = x\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ < i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    head, *tail = l\n    if head < tail[0]:\n\
    \        return True\n    if head > tail[-1]:\n        return True\n    return\
    \ monotonic(tail)\n", "    if len(l) < 2:\n        return True\n    head, *tail\
    \ = l\n    if head <= tail[0]:\n        return monotonic(tail)\n    else:\n  \
    \      return False\n", "    if len(l) < 2:\n        return True\n    i, j = 0,\
    \ len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return False\n\
    \        elif l[i] > l[j]:\n            i += 1\n        else:\n            j -=\
    \ 1\n    return True\n", "    if len(l) < 2:\n        return True\n    head, *tail\
    \ = l\n    if head < tail[0]:\n        return True\n    if head > tail[-1]:\n\
    \        return True\n    return monotonic(tail)\n", "    if len(l) < 2:\n   \
    \     return True\n    head, *tail = l\n    if head < tail[0]:\n        return\
    \ True\n    elif head > tail[-1]:\n        return True\n    else:\n        return\
    \ monotonic(tail)\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for i in l[1:]:\n        if prev < i:\n            return False\n\
    \        prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i = len(l) - 2\n    j = i\n    while j > 0 and l[j-1] > l[j]:\n        j\
    \ -= 1\n    return j == 0 or l[j-1] <= l[j]\n", "    if len(l) < 2:\n        return\
    \ True\n    else:\n        first = l[0]\n        last = l[-1]\n        if first\
    \ < last:\n            return True\n        else:\n            return False\n",
  "    if len(l) < 2:\n        return True\n    else:\n        first = l[0]\n    \
    \    last = l[-1]\n        if first < last:\n            return True\n       \
    \ else:\n            return False\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n          \
    \  return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    i = len(l) - 2\n    j = i\n    while j > 0 and l[j-1]\
    \ > l[j]:\n        j -= 1\n    return j > 0\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[-1] < l[0]:\n        return True\n    return False\n", "    if\
    \ len(l) < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n   \
    \ if l[-1] < l[0]:\n        return True\n    if l[-1] > l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        first = l[0]\n        last = l[-1]\n        if first < last:\n      \
    \      return True\n        else:\n            return False\n", "    if len(l)\
    \ < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1] for\
    \ i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    \n\
    \    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return\
    \ False\n        prev = x\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[0] < l[1]:\n        return True\n    if l[-1] < l[-2]:\n    \
    \    return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    prev = l[0]\n    for i in l[1:]:\n        if\
    \ prev < i:\n            return False\n        prev = i\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    if l[-1] > l[-2]:\n        return True\n \
    \   return False\n", "    if len(l) < 2:\n        return True\n    i = 0\n   \
    \ j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n      \
    \      j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i = 0\n    j = i\n    while i < len(l) - 1:\n        if l[i] < l[j]:\n  \
    \          return False\n        elif l[i] > l[j]:\n            i += 1\n     \
    \   else:\n            j -= 1\n    return True\n", "    if len(l) < 2:\n     \
    \   return True\n    if l[-1] < l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    if l[-1] <\
    \ l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n     \
    \   return True\n    l.sort()\n    if l[0] < l[-1]:\n        return True\n   \
    \ return False\n", "    if len(l) < 2:\n        return True\n    \n    prev =\
    \ l[0]\n    for x in l[1:]:\n        if prev > x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i, j = 0, len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n       \
    \     return False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n\
    \            j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n          \
    \  return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    i = 0\n    j = i\n    while i < len(l) - 1:\n       \
    \ if l[i] > l[i + 1]:\n            return False\n        i += 1\n    while j <\
    \ len(l):\n        if l[j] < l[j + 1]:\n            return False\n        j +=\
    \ 1\n    return True\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return False\n    i, j = 0, len(l) - 1\n    while i < j:\n\
    \        if l[i] < l[j]:\n            return True\n        elif l[i] > l[j]:\n\
    \            return False\n        i += 1\n        i %= len(l)\n        j -= 1\n\
    \        j %= len(l)\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    l.sort()\n    return l[0] < l[-1]\n", "    if len(l) < 2:\n      \
    \  return True\n    if l[-1] < l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n  \
    \      return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ > x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return False\n\
    \    diff1 = l[1] - l[0]\n    diff2 = l[2] - l[1]\n    return diff1 < diff2\n",
  "    if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <=\
    \ l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n          \
    \  return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    if l[-1] < l[0]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    if l[-1] > l[-2]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    i = 0\n\
    \    j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            return True\n        i += 1\n\
    \        j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[-2]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev <= x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i, j = 0, len(l) - 1\n    while i\
    \ < j:\n        if l[i] < l[j]:\n            return True\n        elif l[i] >\
    \ l[j]:\n            return False\n        i += 1\n        i %= len(l)\n     \
    \   j -= 1\n        j %= len(l)\n    return True\n", "    if len(l) < 2:\n   \
    \     return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ < x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] > l[j]:\n            return False\n        elif l[i]\
    \ < l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] == l[-1]\
    \ and l[0] < 0\n", "    if len(l) < 2:\n        return True\n    i = 0\n    j\
    \ = i\n    while j < len(l) - 1:\n        if l[j] < l[j + 1]:\n            i +=\
    \ 1\n        else:\n            j += 1\n    return i == len(l)\n", "    if len(l)\
    \ < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n\
    \        if l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n\
    \            i += 1\n        else:\n            j -= 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev > i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for i in l[1:]:\n        if prev < i:\n            return False\n        prev\
    \ = i\n    return True\n", "    if len(l) < 2:\n        return True\n    i = 0\n\
    \    j = -1\n    while i < len(l) - 1:\n        if l[i] < l[i + 1]:\n        \
    \    return False\n        elif l[i] > l[i + 1]:\n            i += 1\n       \
    \ else:\n            j += 1\n            if j == len(l) - 1:\n               \
    \ return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1] for\
    \ i in range(len(l)-1))\n", "    l = list(l)\n    l.sort()\n    return l[0] <\
    \ l[-1]\n", "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l)\
    \ - 1\n    while i < j:\n        if l[i] < l[j]:\n            return False\n \
    \       elif l[i] > l[j]:\n            i += 1\n        else:\n            j -=\
    \ 1\n    return True\n", "    if len(l) < 2:\n        return True\n    i = 0\n\
    \    j = i\n    while i < len(l) - 1:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n      \
    \      j += 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[-2]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while j < len(l)\
    \ - 1:\n        if l[j] < l[j + 1]:\n            return False\n        j += 1\n\
    \    return True\n", "    if len(l) < 2:\n        return True\n    i = 0\n   \
    \ j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n      \
    \      j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n \
    \       if l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n\
    \            i += 1\n        else:\n            j -= 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    l.sort()\n    if l[0] > l[-1]:\n\
    \        return True\n    return False\n", "    if len(l) < 2:\n        return\
    \ True\n    head, *tail = l\n    if head == tail:\n        return True\n    if\
    \ head > tail:\n        return False\n    return monotonic(tail)\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i, j = 0, len(l) - 1\n    while i\
    \ < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n         \
    \   return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n\
    \        return True\n    head, *tail = l\n    if head < tail[0]:\n        return\
    \ True\n    if head == tail[0]:\n        return monotonic(tail[1:])\n    return\
    \ False\n", "    if len(l) < 2:\n        return True\n    else:\n        if l[-1]\
    \ < l[0]:\n            return False\n        else:\n            return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l)\
    \ - 1\n    while i < j:\n        if l[i] < l[j]:\n            return False\n \
    \       elif l[i] > l[j]:\n            return True\n        i += 1\n        j\
    \ -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n    \n \
    \   prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return\
    \ False\n        prev = x\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n   \
    \         return False\n        prev = x\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n \
    \       if l[i] > l[j]:\n            return False\n        elif l[i] < l[j]:\n\
    \            i += 1\n        else:\n            j -= 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    if l[-1] > l[-2]:\n        return True\n \
    \   return False\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i = j = 0\n    while i < len(l) - 1:\n        if l[i] < l[i + 1]:\n     \
    \       return False\n        i += 1\n    while j < len(l) - 1:\n        if l[j]\
    \ > l[j + 1]:\n            return False\n        j += 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    i, j = 0, len(l) - 1\n    while i\
    \ < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n\
    \n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for\
    \ x in l[1:]:\n        if prev < x:\n            return False\n        prev =\
    \ x\n    return True\n", "    if len(l) < 2:\n        return True\n    l.sort()\n\
    \    return l[0] == l[-1] and l[-1] - l[-2] >= 0\n", "    if len(l) < 2:\n   \
    \     return True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ < i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    i, j = 0, 1\n    while i < len(l) - 1:\n\
    \        if l[i] < l[j]:\n            return False\n        i += 1\n        j\
    \ += 1\n    return True\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n   \
    \     return True\n    head, *tail = l\n    if head < tail[0]:\n        return\
    \ True\n    if head > tail[-1]:\n        return True\n    return monotonic(tail)\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i]\
    \ > l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    l = list(l)\n    l.sort()\n    return l[0] == l[-1]\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    l.sort()\n\
    \    return l[0] < l[-1]\n", "    if len(l) < 2:\n        return True\n    if\
    \ l[0] > l[-1]:\n        return True\n    return False\n", "    if len(l) < 2:\n\
    \        return True\n    l.sort()\n    if l[0] < l[1]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    diff = l[1] - l[0]\n    for x in l[2:]:\n        if x < l[0] + diff:\n\
    \            return False\n        diff += x - l[0]\n    return True\n", "   \
    \ if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    i = -1\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i]\
    \ > l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n   \
    \     return True\n    if l[-1] < l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for i in l[1:]:\n        if prev > i:\n            return False\n        prev\
    \ = i\n    return True\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n  \
    \      return True\n    if l[-1] < l[0]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    diff1 = l[1] - l[0]\n    diff2 = l[2]\
    \ - l[1]\n    return diff1 < diff2\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    else:\n        head, *tail = l\n        if head\
    \ < tail[0]:\n            return True\n        elif head > tail[-1]:\n       \
    \     return True\n        else:\n            return False\n", "    if len(l)\
    \ < 2:\n        return True\n    prev = l[0]\n    for i in l[1:]:\n        if\
    \ prev < i:\n            return False\n        prev = i\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev <= x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1]\
    \ for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n  \
    \  i = len(l) - 2\n    j = i\n    while j > 0 and l[j] < l[j-1]:\n        j -=\
    \ 1\n    if j == i:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n    \
    \    if prev < i:\n            return False\n        prev = i\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while i < len(l)\
    \ - 1:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            i += 1\n        else:\n            j += 1\n    return i ==\
    \ len(l) - 1\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    head, *tail = l\n    if head < tail[0]:\n        return True\n   \
    \ if head > tail[-1]:\n        return True\n    return monotonic(tail)\n", " \
    \   if len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while i < len(l)\
    \ - 1:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for i in l[1:]:\n        if prev > i:\n            return False\n        prev\
    \ = i\n    return True\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n    return\
    \ False\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n\
    \    for x in l[1:]:\n        if prev <= x:\n            return False\n      \
    \  prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n  \
    \  \n    prev = l[0]\n    for x in l[1:]:\n        if prev > x:\n            return\
    \ False\n        prev = x\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    else:\n        head, *tail = l\n        if head < tail[0]:\n     \
    \       return True\n        elif head > tail[-1]:\n            return True\n\
    \        else:\n            return False\n", "    if len(l) < 2:\n        return\
    \ True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

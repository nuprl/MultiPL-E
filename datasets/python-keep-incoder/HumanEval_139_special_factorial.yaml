name: HumanEval_139_special_factorial
language: python
prompt: "def special_factorial(n: int) -> int:\n    \"\"\"The Brazilian factorial\
  \ is defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
  \    where n > 0\n\n    For example:\n    >>> special_factorial(4)\n    288\n\n\
  \    The function will receive an integer as input and should return the special\n\
  \    factorial of this integer.\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(4) == 288\n    assert candidate(5)\
  \ == 34560\n    assert candidate(7) == 125411328000\n    assert candidate(1) ==\
  \ 1\n\ndef test_check():\n    check(special_factorial)\n\ntest_check()\n"
completions: ["    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    if n == 1:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n < 0:\n        return\
    \ 0\n    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\
    \n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    if n == 1:\n        return\
    \ n\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n <= 0:\n        return\
    \ 0\n    return factorial(n) * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n <=\
    \ 0:\n        return 0\n    return factorial(n) * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n-1) * factorial(n-2)\n\
    \n", "    if n == 0:\n        return 1\n    return factorial(n) * (n - 1) * special_factorial(n\
    \ - 2)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    if n == 1:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n <= 0:\n        return\
    \ 0\n    return factorial(n) * factorial(n - 1)\n\n", "    if n == 0:\n      \
    \  return 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n \
    \       return 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n ==\
    \ 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", "    if\
    \ n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", " \
    \   if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n-1)\n\
    \n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n < 0:\n        return 0\n    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return\
    \ 1\n    return factorial(n) * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n ==\
    \ 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", "    if\
    \ n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", " \
    \   if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * factorial(n-1)\
    \ * factorial(n-2)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    if n < 0:\n        return\
    \ 0\n    return factorial(n) * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return factorial(n) * special_factorial(n - 1)\n\n", " \
    \   if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * (n -\
    \ 1) * (n - 2) * ... * (n - 1)\n\n", "    if n < 0:\n        return 0\n    if\
    \ n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", " \
    \   if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n <= 0:\n        return 0\n    factorial = 1\n    for i in\
    \ range(1, n + 1):\n        factorial *= i\n    return factorial\n\n", "    if\
    \ n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", " \
    \   if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return\
    \ n * special_factorial(n - 1)\n\n", "    if n <= 0:\n        return 0\n    return\
    \ factorial(n) * factorial(n-1) * factorial(n-2)\n\n", "    if n == 0:\n     \
    \   return 1\n    return n * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n ==\
    \ 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", "    if\
    \ n == 0:\n        return 1\n    return factorial(n) * factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n < 0:\n        raise ValueError(\"The factorial of a negative\
    \ number is not defined\")\n    if n == 0:\n        return 1\n    return factorial(n)\
    \ * special_factorial(n - 1)\n\n", "    if n == 0:\n        return 1\n    return\
    \ n * special_factorial(n - 1)\n\n", "    if n == 0:\n        return 1\n    return\
    \ factorial(n) * special_factorial(n - 1)\n\n", "    if n <= 0:\n        return\
    \ 0\n    return factorial(n) * special_factorial(n - 1)\n\n", "    if n == 0:\n\
    \        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n ==\
    \ 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", "    if\
    \ n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", " \
    \   if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n",
  "    if n == 0:\n        return 1\n    return factorial(n) * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n", "    if n == 0:\n        return 1\n    return n * special_factorial(n\
    \ - 1)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_151_double_the_difference
language: python
prompt: "from typing import List\n\ndef double_the_difference(lst: List[float]) ->\
  \ int:\n    \"\"\"\n    Given a list of numbers, return the sum of squares of the\
  \ numbers\n    in the list that are odd. Ignore numbers that are negative or not\
  \ integers.\n    \n    double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n\
  \    double_the_difference([-1, -2, 0]) == 0\n    double_the_difference([9, -2])\
  \ == 81\n    double_the_difference([0]) == 0  \n   \n    If the input list is empty,\
  \ return 0.\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
  \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
  \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
  \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
  \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
  \ntest_check()\n"
completions: ["    \n    sum = 0\n    for num in lst:\n        if num % 2 != 0:\n\
    \            sum += num\n    return sum\n", "    \n    sum = 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 ==\
    \ 0:\n            sum += num\n    \n    return sum\n    ", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n\
    \            \n    return sum\n</cell>\n<cell>", "    \n    return sum(map(lambda\
    \ x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    lst = [x for x in\
    \ lst if x > 0]\n    \n    if len(lst) == 0:\n        return 0\n    \n    odd_sum\
    \ = 0\n    \n    for x in lst:\n        if x % 2 == 0:\n            odd_sum +=\
    \ x\n    \n    return odd_sum\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n        else:\n            pass\n    \n    return sum\n", " \
    \   \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n     \
    \       sum += num\n    \n    return sum\n</cell>\n<cell>", "    \n    return\
    \ sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n    \n    return sum\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n\
    \        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n    \n    return sum\n", "    \n    sum = 0\n    for num in\
    \ lst:\n        if num % 2 == 0:\n            sum += num\n    return sum\n", " \
    \   \n    sum = 0\n    for num in lst:\n        if num % 2 == 0:\n           \
    \ sum += num\n    return sum\n    ", "    \n    sum = 0\n    \n    for num in\
    \ lst:\n        if num % 2 == 0:\n            sum += num\n        else:\n    \
    \        sum -= num\n    \n    return sum\n</cell>\n<cell>", "    \n    sum =\
    \ 0\n    \n    if len(lst) == 0:\n        return 0\n    \n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    \n    return sum\n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n\
    \    \n    if len(lst) == 0:\n        return 0\n    \n    for num in lst:\n  \
    \      if num % 2 != 0:\n            sum += num\n    \n    return sum\n", "  \
    \  \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n            \n    return sum\n", "    \n    sum = 0\n    for\
    \ num in lst:\n        if num % 2 != 0:\n            sum += num**2\n    return\
    \ sum\n    \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n    \n    return sum\n", "    \n    return sum(map(lambda x:\
    \ x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    \n   \
    \ for num in lst:\n        if num % 2 != 0:\n            sum += num\n    \n  \
    \  return sum\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n  \
    \  sum = 0\n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n    \
    \    if num % 2 == 0:\n            sum += num\n            \n    return sum\n\
    \    ", "    \n    sum = 0\n    \n    if len(lst) == 0:\n        return 0\n  \
    \  \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n \
    \   \n    return sum\n", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n    return sum\n", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n\
    \    \n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n    \
    \    if num % 2 == 0:\n            sum += num\n    \n    return sum\n</cell>\n\
    <cell>", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 ==\
    \ 0:\n            sum += num\n        else:\n            pass\n    \n    return\
    \ sum\n</cell>\n<cell>", "    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 !=\
    \ 0:\n            sum += num\n            \n    return sum\n</cell>\n<cell>",
  "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n",
  "    \n    sum = 0\n    \n    if lst:\n        for num in lst:\n            if num\
    \ % 2 == 0:\n                sum += num\n            else:\n                continue\n\
    \    else:\n        return 0\n    \n    return sum\n", "    \n    return sum(map(lambda\
    \ x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    for\
    \ num in lst:\n        if num % 2 != 0:\n            sum += num\n    return sum\n\
    </cell>\n<cell>", "    \n    lst = [i for i in lst if i > 0]\n    \n    if len(lst)\
    \ == 0:\n        return 0\n    \n    sum = 0\n    \n    for num in lst:\n    \
    \    if num % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n\
    \    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n          \
    \  sum += num\n    \n    return sum\n", "    \n    sum = 0\n    for i in lst:\n\
    \        if i % 2 == 0:\n            sum += i\n    return sum\n    ", "    \n\
    \    sum = 0\n    \n    if len(lst) == 0:\n        return 0\n    \n    for num\
    \ in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 !=\
    \ 0:\n            sum += num\n    \n    return sum\n", "    \n    sum = 0\n  \
    \  \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n \
    \   \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    \n    if lst:\n\
    \        for num in lst:\n            if num % 2 == 0:\n                sum +=\
    \ num\n            else:\n                sum -= num\n    else:\n        return\
    \ 0\n    \n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n\
    \        if num % 2 != 0:\n            sum += num\n    \n    return sum\n", " \
    \   \n    sum = 0\n    for num in lst:\n        if num % 2 == 0:\n           \
    \ sum += num\n    return sum\n", "    \n    sum = 0\n    \n    if len(lst) ==\
    \ 0:\n        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n\
    \            sum += num\n            \n    return sum\n", "    \n    lst = [x\
    \ for x in lst if x != 0 and x % 2 == 1]\n    \n    return sum(lst)\n", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n    \n\
    \    for num in lst:\n        if num % 2 == 0:\n            sum += num\n     \
    \       \n    return sum\n", "    \n    sum = 0\n    \n    if lst:\n        for\
    \ num in lst:\n            if num % 2 != 0:\n                sum += num**2\n \
    \           else:\n                sum += num\n    else:\n        return 0\n \
    \   \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    for i in lst:\n\
    \        if i % 2 == 0:\n            sum += i\n    return sum\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n    \n    return sum\n", "    \n    sum = 0\n    \n    if lst:\n      \
    \  for num in lst:\n            if num % 2 != 0:\n                sum += num\n\
    \    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n    sum\
    \ = 0\n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n            \n    return sum\n", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    return sum\n", "    \n\
    \    sum = 0\n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    \n    for num\
    \ in lst:\n        if num % 2 != 0:\n            sum += num\n    \n    return\
    \ sum\n    ", "    \n    sum = 0\n    \n    for num in lst:\n        if num %\
    \ 2 != 0:\n            sum += num\n    \n    return sum\n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n\
    \        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n    \n    return sum\n", "    \n    # Your code here\n   \
    \ \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n      \
    \      sum += num\n    \n    return sum\n", "    \n    sum = 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n</cell>\n<cell>\ndouble_the_difference([-1, -2, 0])\n</cell>\n<cell>\n\
    double_the_difference([9, -2])\n</cell>\n<cell>\ndouble_the_difference([0])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of times\
    \ the value 'x' appears in the list 'lst'.\n\nIf 'x' is not in the list, return\
    \ 0.\n\nIf 'x' appears more than once, return 'x'.\n\nIf 'x' appears exactly twice,\
    \ return 'x'.\n\nIf 'x' appears less than twice, return 'x'.\n\n\n</text>\n<cell>",
  "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n    \n    return sum\n    ", "    \n    return sum(lst[i] for\
    \ i in lst if i % 2 == 1)\n", "    \n    sum = 0\n    \n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n        else:\n           \
    \ pass\n    \n    return sum\n", "    \n    sum = 0\n    \n    if len(lst) ==\
    \ 0:\n        return 0\n    \n    for num in lst:\n        if num % 2 != 0:\n\
    \            sum += num\n    \n    return sum\n</cell>\n<cell>", "    \n    return\
    \ sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    return sum(map(lambda\
    \ x: x**2, filter(lambda x: x % 2 != 0, lst)))\n", "    \n    sum = 0\n    \n\
    \    if len(lst) == 0:\n        return 0\n    \n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n    return\
    \ sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n            sum +=\
    \ num\n    \n    return sum\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n\
    \        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n    \n    return sum\n", "    \n    sum = 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n        else:\n\
    \            pass\n    \n    return sum\n", "    \n    sum = 0\n    \n    if lst:\n\
    \        for num in lst:\n            if num % 2 == 0:\n                sum +=\
    \ num\n            else:\n                sum -= num\n    return sum\n", "   \
    \ \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n       \
    \     sum += num\n    \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n\
    \    \n    if len(lst) == 0:\n        return 0\n    \n    for num in lst:\n  \
    \      if num % 2 == 0:\n            sum += num\n    \n    return sum\n", "  \
    \  \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n      \
    \      sum += num\n    \n    return sum\n", "    \n    sum = 0\n    for num in\
    \ lst:\n        if num % 2 != 0:\n            sum += num**2\n    return sum\n\
    </cell>\n<cell>", "    \n    sum = 0\n    \n    if len(lst) == 0:\n        return\
    \ 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \    \n    return sum\n", "    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n        return 0\n\
    \    \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \    \n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n    \
    \    if num % 2 == 0:\n            sum += num\n        else:\n            sum\
    \ -= num\n    \n    return sum\n    \n    ", "    \n    sum = 0\n    for num in\
    \ lst:\n        if num % 2 != 0:\n            sum += num\n    return sum\n", " \
    \   \n    # Your code here\n    \n    return sum(lst[1::2])\n</cell>\n<cell>",
  "    \n    sum = 0\n    for num in lst:\n        if num % 2 == 0:\n            sum\
    \ += num\n    return sum\n", "    \n    lst = lst if lst else []\n    \n    sum_of_squares\
    \ = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum_of_squares\
    \ += num * num\n    \n    return sum_of_squares\n", "    \n    sum = 0\n    \n\
    \    for num in lst:\n        if num % 2 == 0:\n            sum += num\n     \
    \   else:\n            pass\n    \n    return sum\n</cell>\n<cell>", "    \n \
    \   sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n\
    \    return sum\n", "    \n    sum = 0\n    for i in lst:\n        if i % 2 ==\
    \ 0:\n            sum += i\n    return sum\n", "    \n    sum = 0\n    \n    for\
    \ num in lst:\n        if num % 2 != 0:\n            sum += num\n    return sum\n\
    </cell>\n<cell>", "    \n    sum = 0\n    \n    for num in lst:\n        if num\
    \ % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n    sum =\
    \ 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \        else:\n            pass\n    \n    return sum\n</cell>\n<cell>", "  \
    \  \n    sum = 0\n    for num in lst:\n        if num % 2 == 0:\n            sum\
    \ += num\n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n \
    \       if num % 2 != 0:\n            sum += num\n    \n    return sum\n</cell>\n\
    <cell>", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 !=\
    \ 0:\n            sum += num\n            \n    return sum\n</cell>\n<cell>",
  "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n\
    </cell>\n<cell>\ndouble_the_difference([-1, -2, 0])\n</cell>\n<cell>\ndouble_the_difference([9,\
    \ -2])\n</cell>\n<cell>\ndouble_the_difference([0])\n</cell>\n<text>\nProblem\
    \ 7\nWrite a Python function, sum_of_squares, that takes in a list of numbers\
    \ and returns the sum of all the squares of the numbers in the list. \nsum_of_squares\
    \ should be able to handle any data type (integers, floats, strings, lists, dictionaries,\
    \ sets, tuples). \nThe function sum_of_squares should not use any for or while\
    \ loops. \nThe function sum_of_squares should not mutate the input list but instead\
    \ return a value that is the sum of the squares of the numbers in the input list.\
    \ \nThe function sum_of_squares should not use return but instead print the value\
    \ to the screen.\n\nExample usage:\n\nsum_of_squares([-1, 0, 2, -3, 4, -1, 2,\
    \ 5, 3]) == -225\nsum_of_squares([-4, -2, 2, 0, 8]) == -64\nsum_of_squares([-1,\
    \ 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) ==\
    \ 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2,\
    \ -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\n\
    sum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3,\
    \ 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\n\
    sum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3,\
    \ 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\n\
    sum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3,\
    \ 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\n\
    sum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3,\
    \ 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\n\
    sum_of_squares([-1, 2, -3, 4, -1, 2, 5, 3]) == 30\nsum_of_squares([-1, 2, -",
  "    \n    # Your code here\n    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n", "    \n    sum = 0\n    for num in lst:\n        if\
    \ num % 2 != 0:\n            sum += num\n    return sum\n", "    \n    # Your\
    \ code here\n    \n    return 0\n</cell>\n<cell>", "    \n    sum = 0\n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    return sum\n\
    </cell>\n<cell>", "    \n    sum = 0\n    for num in lst:\n        if num % 2\
    \ == 0:\n            sum += num\n    return sum\n", "    \n    sum = 0\n    \n\
    \    for num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n\
    \    return sum\n", "    \n    sum = 0\n    for num in lst:\n        if num %\
    \ 2 != 0:\n            sum += num\n    return sum\n", "    \n    sum = 0\n   \
    \ \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n  \
    \  \n    return sum\n", "    \n    sum = 0\n    for num in lst:\n        if num\
    \ % 2 == 0:\n            sum += num\n    return sum\n", "    \n    sum = 0\n \
    \   for num in lst:\n        if num % 2 == 0:\n            sum += num\n    return\
    \ sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 ==\
    \ 0:\n            sum += num\n        else:\n            pass\n    \n    return\
    \ sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 ==\
    \ 0:\n            sum += num\n        else:\n            sum -= num\n        \
    \    \n    return sum\n", "    \n    lst = [x for x in lst if x != 0]\n    \n\
    \    if len(lst) == 0:\n        return 0\n    \n    sum = 0\n    \n    for x in\
    \ lst:\n        if x % 2 == 0:\n            sum += x\n    \n    return sum\n",
  "    \n    sum = 0\n    \n    if len(lst) == 0:\n        return 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n    \n    ", "    \n    sum = 0\n    \n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n    \n    return sum\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum +=\
    \ num\n    \n    return sum\n", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 == 1, lst)))\n", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    \n    for num in lst:\n  \
    \      if num % 2 != 0:\n            sum += num\n    \n    return sum\n", "  \
    \  \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n        else:\n            pass\n    \n    return sum\n", " \
    \   \n    sum = 0\n    for num in lst:\n        if num % 2 != 0:\n           \
    \ sum += num\n    return sum\n", "    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    sum = 0\n    \n    for num in lst:\n        if num\
    \ % 2 != 0:\n            sum += num\n    \n    return sum\n    \n    ", "    \n\
    \    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n          \
    \  sum += num\n            \n    return sum\n", "    \n    sum = 0\n    \n   \
    \ for num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n  \
    \  return sum\n", "    \n    sum = 0\n    for num in lst:\n        if num % 2\
    \ == 0:\n            sum += num\n    return sum\n    ", "    \n    return sum(lst[i]\
    \ for i in lst if i % 2 != 0)\n", "    \n    sum = 0\n    \n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    \n    return sum\n    ",
  "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n\
    </cell>\n<cell>\ndouble_the_difference([1,3,2,0])\n</cell>\n<cell>\ndouble_the_difference([-1,-2,0])\n\
    </cell>\n<cell>\ndouble_the_difference([9,-2])\n</cell>\n<cell>\ndouble_the_difference([0])\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns a list of numbers that\
    \ when multiplied together equal the given target number.\n\nFor example, given\
    \ a target number 24, the function should return [2, 2, 3, 2]. Another example\
    \ is given a target number 120, the function should return [2, 2, 3, 4, 18, 12].\n\
    \nIf the given target number is less than 1 or greater than 100, then return an\
    \ empty list.\n\nThe order of the output does not matter.\n\nIf the input list\
    \ is empty, return an empty list.\n\n\n</text>\n<cell>", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n\
    \    \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 != 0:\n            sum += num\n    return sum\n", "    \n\
    \    sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n\
    \    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if\
    \ num % 2 == 0:\n            sum += num\n            \n    return sum\n    \n\
    \    ", "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1,\
    \ lst)))\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2\
    \ == 0:\n            sum += num\n            \n    return sum\n", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum +=\
    \ num\n    \n    return sum\n</cell>\n<cell>", "    \n    return sum(map(lambda\
    \ x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    \n\
    \    for num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n\
    \    return sum\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    sum = 0\n    for num in lst:\n        if num % 2 != 0:\n            sum\
    \ += num\n    return sum\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n\
    \        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n    \n    return sum\n", "    \n    sum = 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n", "    \n    sum = 0\n    for i in lst:\n        if i % 2 != 0:\n    \
    \        sum += i\n    return sum\n", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    return sum\n", "    \n\
    \    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n", " \
    \   \n    sum = 0\n    \n    if len(lst) == 0:\n        return 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n    return\
    \ sum\n</cell>\n<cell>", "    \n    lst = [x for x in lst if x != 0 and x % 2\
    \ != 0]\n    \n    return sum(lst)\n</cell>\n<cell>\ndouble_the_difference([-1,\
    \ -2, 0])\n</cell>\n<cell>\ndouble_the_difference([9, -2])\n</cell>\n<cell>\n\
    double_the_difference([0])\n</cell>\n<text>\nProblem 3\nWrite a Python program\
    \ to find the first non-repeated character in a given string. \nIf the string\
    \ has only one character, return that character.\nIf the string has no non-repeating\
    \ characters, return '?'.\nIf the string has more than one character, return the\
    \ first character.\n\n\n</text>\n<cell>", "    \n    sum = 0\n    \n    for num\
    \ in lst:\n        if num % 2 == 0:\n            sum += num\n            \n  \
    \  return sum\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n        return\
    \ 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \    \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 != 0:\n            sum += num\n    return sum\n", "    \n\
    \    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n          \
    \  sum += num\n    \n    return sum\n", "    \n    sum = 0\n    \n    for num\
    \ in lst:\n        if num % 2 == 0:\n            sum += num\n            \n  \
    \  return sum\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n  \
    \  return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n", "  \
    \  \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n        else:\n            pass\n    \n    return sum\n", " \
    \   \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n        else:\n            sum -= num\n    \n    return sum\n\
    </cell>\n<cell>", "    \n    sum = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            sum += i\n    return sum\n", "    \n    sum = 0\n    \n    if len(lst)\
    \ == 0:\n        return 0\n    \n    for num in lst:\n        if num % 2 != 0:\n\
    \            sum += num\n    \n    return sum\n", "    \n    sum = 0\n    for\
    \ num in lst:\n        if num % 2 == 0:\n            sum += num\n    return sum\n",
  "    \n    # Your code here\n    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 == 1, lst)))\n    \n</cell>\n<cell>", "    \n    sum = 0\n    \n  \
    \  if lst:\n        for num in lst:\n            if num % 2 == 0:\n          \
    \      sum += num\n            else:\n                sum -= num\n    else:\n\
    \        return 0\n    \n    return sum\n    \n    ", "    \n    sum = 0\n   \
    \ \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n  \
    \  \n    return sum\n", "    \n    # Your code here\n    \n    return sum(map(lambda\
    \ x:x**2, filter(lambda x:x%2, lst)))\n    \n</cell>\n<cell>", "    \n    sum\
    \ = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            sum +=\
    \ num\n            \n    return sum\n", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    return sum\n</cell>\n<cell>",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n      \
    \      sum += num\n    \n    return sum\n    ", "    \n    sum = 0\n    \n   \
    \ for num in lst:\n        if num % 2 == 0:\n            sum += num\n    \n  \
    \  return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n        if num\
    \ % 2 != 0:\n            sum += num\n            \n    return sum\n</cell>\n<cell>",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n\
    \    \n    return sum\n", "    \n    sum = 0\n    for num in lst:\n        if\
    \ num % 2 != 0:\n            sum += num\n    return sum\n", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 == 0:\n            sum += num\n\
    \        else:\n            sum -= num\n            \n    return sum\n", "   \
    \ \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n       \
    \     sum += num\n        else:\n            pass\n    \n    return sum\n", " \
    \   \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 != 0, lst)))\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n      \
    \      sum += num\n            \n    return sum\n    ", "    \n    return sum(map(lambda\
    \ x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum = 0\n    \n\
    \    for num in lst:\n        if num % 2 == 0:\n            sum += num\n     \
    \       \n    return sum\n", "    \n    sum = 0\n    \n    for num in lst:\n \
    \       if num % 2 == 0:\n            sum += num\n    \n    return sum\n", " \
    \   \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n        else:\n            sum -= num\n    \n    return sum\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n    \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n\
    \    for num in lst:\n        if num % 2 != 0:\n            sum += num\n    return\
    \ sum\n</cell>\n<cell>", "    \n    sum = 0\n    \n    for num in lst:\n     \
    \   if num % 2 == 0:\n            sum += num\n        else:\n            sum -=\
    \ num\n    \n    return sum\n", "    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n", "    \n    sum = 0\n    \n    if len(lst) == 0:\n\
    \        return 0\n    \n    for num in lst:\n        if num % 2 == 0:\n     \
    \       sum += num\n    \n    return sum\n</cell>\n<cell>", "    \n    return\
    \ sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n", "    \n    sum\
    \ = 0\n    \n    if len(lst) == 0:\n        return 0\n    \n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    \n    return sum\n", " \
    \   \n    sum = 0\n    \n    for num in lst:\n        if num % 2 != 0:\n     \
    \       sum += num\n            \n    return sum\n</cell>\n<cell>\ndouble_the_difference([-1,\
    \ -2, 0])\n</cell>\n<cell>\ndouble_the_difference([9, -2])\n</cell>\n<cell>\n\
    double_the_difference([])\n</cell>\n<text>\nProblem 7\nWrite a Python program\
    \ to find the first non-repeating character in a given string.\n\nFor example,\
    \ the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite a Python\
    \ program to find the first non-repeating character in a given string.\n\nFor\
    \ example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\nWrite\
    \ a Python program to find the first non-repeating character in a given string.\n\
    \nFor example, the first non-repeating character in \"abcabcbb\" is 'b'.\n\n",
  "    \n    return sum(map(lambda x: x**2, filter(lambda x: x % 2 == 1, lst)))\n",
  "    \n    sum = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n      \
    \      sum += num\n    \n    return sum\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    sum = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            sum += i\n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n\
    \    \n    for num in lst:\n        if num % 2 != 0:\n            sum += num\n\
    \    \n    return sum\n</cell>\n<cell>", "    \n    sum = 0\n    for num in lst:\n\
    \        if num % 2 == 0:\n            sum += num\n    return sum\n", "    \n\
    \    # Your code here\n    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n", "    \n    sum = 0\n    \n    for num in lst:\n  \
    \      if num % 2 == 0:\n            sum += num\n            \n    return sum\n",
  "    \n    # Your code here\n    \n    return sum(map(lambda x: x**2, filter(lambda\
    \ x: x % 2 != 0, lst)))\n</cell>\n<cell>", "    \n    sum = 0\n    \n    for num\
    \ in lst:\n        if num % 2 == 0:\n            sum += num\n        else:\n \
    \           pass\n    \n    return sum\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

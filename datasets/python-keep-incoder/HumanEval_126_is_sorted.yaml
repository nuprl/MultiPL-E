name: HumanEval_126_is_sorted
language: python
prompt: "from typing import List\n\ndef is_sorted(lst: List[int]) -> bool:\n    \"\
  \"\"\n    Given a list of numbers, return whether or not they are sorted\n    in\
  \ ascending order. If list has more than 1 duplicate of the same\n    number, return\
  \ False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5])\
  \ \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n    is_sorted([1, 3,\
  \ 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279E True\n    is_sorted([1,\
  \ 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279E False\n\
  \    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n    is_sorted([1, 2, 2, 2, 3, 4])\
  \ \u279E False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([5]) == True\n    assert candidate([1,\
  \ 2, 3, 4, 5]) == True\n    assert candidate([1, 3, 2, 4, 5]) == False\n    assert\
  \ candidate([1, 2, 3, 4, 5, 6]) == True\n    assert candidate([1, 2, 3, 4, 5, 6,\
  \ 7]) == True\n    assert candidate([1, 3, 2, 4, 5, 6, 7]) == False\n    assert\
  \ candidate([]) == True\n    assert candidate([1]) == True\n    assert candidate([3,\
  \ 2, 1]) == False\n    assert candidate([1, 2, 2, 2, 3, 4]) == False\n    assert\
  \ candidate([1, 2, 3, 3, 3, 4]) == False\n    assert candidate([1, 2, 2, 3, 3, 4])\
  \ == True\n    assert candidate([1, 2, 3, 4]) == True\n\ndef test_check():\n   \
  \ check(is_sorted)\n\ntest_check()\n"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

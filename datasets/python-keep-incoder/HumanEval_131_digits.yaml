name: HumanEval_131_digits
language: python
prompt: "def digits(n: int) -> int:\n    \"\"\"Given a positive integer n, return\
  \ the product of the odd digits.\n    Return 0 if all digits are even.\n    For\
  \ example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n  \
  \  \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5) == 5\n    assert candidate(54)\
  \ == 5\n    assert candidate(120) == 1\n    assert candidate(5014) == 5\n    assert\
  \ candidate(98765) == 315\n    assert candidate(5576543) == 2625\n    assert candidate(2468)\
  \ == 0\n\ndef test_check():\n    check(digits)\n\ntest_check()\n"
completions: ["    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n\
    \ if n % 2 else n * digits(n // 10)\n\n", "    if n < 10:\n        return n\n\
    \    return n * digits(n // 10)\n\n", "    return 0 if n % 2 else (n // 10) *\
    \ (n % 10)\n\n", "    return n if n % 2 else n * digits(n // 2)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 == 0 else n // 2 * digits(n // 2)\n\n",
  "    return 0 if n % 2 == 0 else n // 2 * digits(n // 2)\n\n", "    product = 1\n\
    \    while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    product = 1\n    while n > 0:\n        product *= n % 10\n        n\
    \ //= 10\n    return product\n\n", "    product = 1\n    while n > 0:\n      \
    \  product *= n % 10\n        n //= 10\n    return product\n\n", "    if n ==\
    \ 0:\n        return 0\n    product = 1\n    while n > 0:\n        product *=\
    \ n % 10\n        n //= 10\n    return product\n\n", "    return n // 10 * 10\
    \ + n % 10\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    if n < 10:\n        return n\n\
    \    else:\n        product = 1\n        while n > 0:\n            product *=\
    \ n % 10\n            n //= 10\n        return product\n\n", "    product = 1\n\
    \    while n:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n // 10\
    \ * 10 + n % 10\n\n", "    product = 1\n    while n > 0:\n        product *= n\
    \ % 10\n        n //= 10\n    return product\n\n", "    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    return n // 10 * 2 + n % 10\n\n", "    product = 1\n    while n > 0:\n    \
    \    product *= n % 10\n        n //= 10\n    return product\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return 0 if n % 2 else (n //\
    \ 10) * (n % 10)\n\n", "    if n == 0:\n        return 0\n    product = 1\n  \
    \  while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    if n == 0:\n        return 0\n    digits = 1\n    while n != 0:\n  \
    \      digits = digits * n % 10\n        n = n // 10\n    return digits\n\n",
  "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    if n == 0:\n        return 0\n    product = 1\n\
    \    while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n // 10\
    \ * (n % 10) if n % 10 else 0\n\n", "    if n == 0:\n        return 0\n    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n if n % 2 else n * digits(n\
    \ // 2)\n\n", "    return 0 if n % 2 else n // 2 * digits(n // 2)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return n if n % 2 else (digits(n // 10) * 10) + n % 10\n\n",
  "    if n == 0:\n        return 0\n    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    product = 1\n   \
    \ while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    if n == 0:\n        return 0\n    product = 1\n    while n > 0:\n  \
    \      product *= n % 10\n        n //= 10\n    return product\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return n // 10 * 2 + n % 10\n\n", "    return 0 if n % 2\
    \ else n // 2 * digits(n // 2)\n\n", "    return 0 if n % 2 else (n // 10) * (n\
    \ % 10)\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    product = 1\n    while n:\n \
    \       product *= n % 10\n        n //= 10\n    return product\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    if\
    \ n == 0:\n        return 0\n    digits = 1\n    while n > 0:\n        digits\
    \ = digits * n % 10\n        n = n // 10\n    return digits\n\n", "    return\
    \ 0 if n % 2 else n // 2 * digits(n // 2)\n\n", "    return n // 10 * (n % 10)\
    \ if n % 10 else 0\n\n", "    product = 1\n    while n > 0:\n        product *=\
    \ n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2 else\
    \ (n // 10) * (n % 10)\n\n", "    return n // 10 * 10 + n % 10\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n if n % 2 else n * digits(n\
    \ // 2)\n\n", "    if n < 10:\n        return n\n    digits = 1\n    while n >\
    \ 0:\n        digits = digits * n % 10\n        n = n // 10\n    return digits\n\
    \n", "    return n // 10 * 2 + n % 10\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    if\
    \ n < 10:\n        return n\n    return n * digits(n // 10)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n if n % 2 else (digits(n\
    \ // 10) * 10 + n % 10)\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2\
    \ else n // 2 * digits(n // 2)\n\n", "    return 0 if n % 2 else (n // 10) * (n\
    \ % 10)\n\n", "    product = 1\n    while n:\n        product *= n % 10\n    \
    \    n //= 10\n    return product\n\n", "    if n < 10:\n        return n\n  \
    \  return n * digits(n // 10)\n\n", "    if n < 10:\n        return n\n    return\
    \ digits(n // 10) * 10 + n % 10\n\n", "    return 0 if n % 2 else n // 2 * digits(n\
    \ // 2)\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    if n < 10:\n        return n\n\
    \    else:\n        return n * digits(n // 10)\n\n", "    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    if n == 0:\n        return 0\n    digits = 1\n    while n > 0:\n        digits\
    \ = digits * n % 10\n        n = n // 10\n    return digits\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    if n == 0:\n        return 0\n    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n",
  "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return n // 10 * (n\
    \ % 10) if n % 10 else 0\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2\
    \ else (n // 10) * (n % 10)\n\n", "    return 0 if n % 2 else (n // 10) * (n %\
    \ 10)\n\n", "    return n // 10 * 10 + n % 10\n\n", "    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    return n // 10 * 10 + n % 10\n\n", "    return 0 if n % 2 else (n // 10) *\
    \ (n % 10)\n\n", "    return 0 if n % 2 else n // 2 * digits(n // 2)\n\n", " \
    \   product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    if n == 0:\n    \
    \    return 0\n    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    return 0 if n % 2 else (n //\
    \ 10) * (n % 10)\n\n", "    if n < 10:\n        return n\n    return n * digits(n\
    \ // 10)\n\n", "    return n // 10 * (n % 10) if n % 10 else 0\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    if\
    \ n < 10:\n        return n\n    else:\n        return n * digits(n // 10)\n\n",
  "    if n < 10:\n        return n\n    return n * digits(n // 10)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    return\
    \ n if n % 2 else n * digits(n // 2)\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    if\
    \ n < 10:\n        return n\n    return n * digits(n // 10)\n\n", "    if n <\
    \ 10:\n        return n\n    else:\n        return n * digits(n // 10)\n\n", " \
    \   return 0 if n % 2 else n // 2 * digits(n // 2)\n\n", "    product = 1\n  \
    \  while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    if n == 0:\n        return 0\n    digits = 1\n    while n > 0:\n   \
    \     digits = digits * n % 10\n        n = n // 10\n    return digits\n\n", " \
    \   if n < 10:\n        return n\n    return n % 10 * digits(n // 10)\n\n", " \
    \   product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    if n < 10:\n    \
    \    return n\n    return digits(n // 10) * 3 + n % 10\n\n", "    return n //\
    \ 10 * (n % 10) if n % 10 else 0\n\n", "    product = 1\n    while n > 0:\n  \
    \      product *= n % 10\n        n //= 10\n    return product\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else n // 2 * digits(n // 2)\n\n", "  \
    \  if n == 0:\n        return 0\n    digits = 1\n    while n > 0:\n        digits\
    \ *= 2\n        n //= 2\n    return digits\n\n", "    product = 1\n    while n\
    \ > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n:\n        product *= n\
    \ % 10\n        n //= 10\n    return product\n\n", "    if n == 0:\n        return\
    \ 0\n    product = 1\n    while n > 0:\n        product *= n % 10\n        n //=\
    \ 10\n    return product\n\n", "    return n // 10 * 2 + n % 10\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    return 0 if n % 2 else (n //\
    \ 10) * (n % 10)\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n",
  "    if n == 0:\n        return 0\n    digits = 1\n    while n > 0:\n        digits\
    \ *= n % 10\n        n //= 10\n    return digits\n\n", "    return n // 10 * 10\
    \ + n % 10\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    if\
    \ n < 10:\n        return n\n    return n * digits(n // 10)\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    if n < 10:\n        return n\n\
    \    return n * digits(n // 10)\n\n", "    return n // 10 * (n % 10) if n % 10\
    \ > 0 else 0\n\n", "    if n == 0:\n        return 0\n    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    return n // 10 * 10 + n % 10\n\n", "    if n ==\
    \ 0:\n        return 0\n    digits = 1\n    while n > 0:\n        digits = digits\
    \ * n % 10\n        n //= 10\n    return digits\n\n", "    return 0 if n % 2 else\
    \ (n // 10) * (n % 10)\n\n", "    if n < 10:\n        return n\n    return n *\
    \ digits(n // 10)\n\n", "    product = 1\n    while n > 0:\n        product *=\
    \ n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2 else\
    \ (n // 10) * (n % 10)\n\n", "    return n if n % 2 else (digits(n // 10) * 10)\
    \ + n % 10\n\n", "    if n == 0:\n        return 0\n    digits = 1\n    while\
    \ n > 0:\n        digits = digits * n % 10\n        n = n // 10\n    return digits\n\
    \n", "    if n < 10:\n        return n\n    return n * digits(n // 10)\n\n", " \
    \   return n // 10 * 10 + n % 10\n\n", "    if n == 0:\n        return 0\n   \
    \ product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2\
    \ else n // 2 * digits(n // 2)\n\n", "    return n // 10 * (n % 10) if n % 10\
    \ else 0\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    if\
    \ n == 0:\n        return 0\n    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    return 0 if n % 2\
    \ else (n // 10) * (n % 10)\n\n", "    product = 1\n    while n > 0:\n       \
    \ product *= n % 10\n        n //= 10\n    return product\n\n", "    if n < 10:\n\
    \        return n\n    return n * digits(n // 10)\n\n", "    return 0 if n % 2\
    \ else (n // 10) * (n % 10)\n\n", "    if n < 10:\n        return n\n    digits\
    \ = 1\n    while n > 0:\n        digits = digits * n % 10\n        n = n // 10\n\
    \    return digits\n\n", "    if n == 0:\n        return 0\n    product = 1\n\
    \    while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n", "    product = 1\n    while n > 0:\n        product *= n % 10\n        n\
    \ //= 10\n    return product\n\n", "    return n if n % 2 else n * digits(n //\
    \ 2)\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return n if n % 2 else (digits(n // 10) * 10 + n % 10)\n\n",
  "    if n < 10:\n        return n\n    return digits(n // 10) * 10 + n % 10\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    return 0 if n % 2 else n // 2 * digits(n // 2)\n\
    \n", "    product = 1\n    while n > 0:\n        product *= n % 10\n        n\
    \ //= 10\n    return product\n\n", "    return 0 if n % 2 else (n // 10) * (n\
    \ % 10)\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    product = 1\n    while n > 0:\n\
    \        product *= n % 10\n        n //= 10\n    return product\n\n", "    return\
    \ 0 if n % 2 else (n // 10) * (n % 10)\n\n", "    if n == 0:\n        return 0\n\
    \    digits = 1\n    while n > 0:\n        digits = digits * n % 10\n        n\
    \ = n // 10\n    return digits\n\n", "    if n == 0:\n        return 0\n    product\
    \ = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n    return\
    \ product\n\n", "    return n // 10 * 10 + n % 10\n\n", "    if n < 10:\n    \
    \    return n\n    return n * digits(n // 10)\n\n", "    product = 1\n    while\
    \ n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    if n == 0:\n    \
    \    return 0\n    product = 1\n    while n > 0:\n        product *= n % 10\n\
    \        n //= 10\n    return product\n\n", "    if n == 0:\n        return 0\n\
    \    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    return 0 if n % 2 else (n // 10) * (n % 10)\n\n",
  "    product = 1\n    while n > 0:\n        product *= n % 10\n        n //= 10\n\
    \    return product\n\n", "    product = 1\n    while n > 0:\n        product\
    \ *= n % 10\n        n //= 10\n    return product\n\n", "    product = 1\n   \
    \ while n > 0:\n        product *= n % 10\n        n //= 10\n    return product\n\
    \n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

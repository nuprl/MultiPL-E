name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n// From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
  \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers) {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $result = [];\n    $rolling_max = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            $rolling_max = $rolling_max > $number\
    \ ? $rolling_max : $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $max_value = array_shift($numbers);\n\
    \    $max_index = array_search($max_value, $numbers);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[$i] = $numbers[$i];\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = count($numbers); $i > 0; $i--) {\n        $result[$i]\
    \ = $max_value;\n        if ($numbers[$i] > $max_value) {\n            $max_value\
    \ = $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = 0;\n        }\n\
    \        $result[$max_index] = $number;\n        $max_index++;\n    }\n    return\
    \ $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $number;\n        }\n    }\n    return\
    \ array_slice($numbers, 0, $max_index);\n}\n", "    $max = array_shift($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n    }\n    return $max;\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n  \
    \          $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    $max_indexs[] = $max_index;\n    $max_indexs[] = count($numbers) -\
    \ 1;\n    $max_indexs[] = count($numbers) - 2;\n    $max_indexs[] = count($numbers)\
    \ - 3;\n    $max_indexs[] = count($numbers) - 4;\n    $max_indexs[] = count($numbers)\
    \ - 5;\n    $max_indexs[] = count($numbers) - 6;\n    $max_indexs[] = count($numbers)\
    \ - 7;\n    $max_indexs[] = count($numbers) - 8;\n    $max_indexs[] = count($numbers)\
    \ - 9;\n    $max_indexs[] = count($numbers) - 10;\n    $max_indexs[] = count($numbers)\
    \ - 11;\n    $max_indexs[] = count($numbers) - 12;\n    $max_indexs[] = count($numbers)\
    \ - 13;\n    $max_indexs[] = count($numbers) - 14;\n    $max_indexs[] = count($numbers)\
    \ - 15;\n    $max_indexs[] = count($numbers) - 16;\n    $max_indexs[] = count($numbers)\
    \ - 17;\n    $max_indexs[] = count($numbers) - 18;\n    $max_indexs[] = count($numbers)\
    \ - 19;\n    $max_indexs[] = count($numbers) - 20;\n    $max_indexs[] = count($numbers)\
    \ - 21;\n    $max_indexs[] = count($numbers) - 22;\n    $max_indexs[] = count($numbers)\
    \ - 23;\n    $max_indexs[] = count($numbers) - 24;\n    $max_indexs[] = count($numbers)\
    \ - 25;\n    $max_indexs[] = count($numbers) - 26;\n    $max_indexs[] = count($numbers)\
    \ - 27;\n    $max_indexs[] = count($numbers) - 28;\n    $max_indexs[] = count($numbers)\
    \ - 29;\n    $max_indexs[] = count($numbers) - 30;\n    $max_indexs[] = count($numbers)\
    \ - 31;\n    $max_indexs[] = count($numbers) - 32;\n    $max_indexs[] = count($numbers)\
    \ - 33;\n    $max_indexs[] = count($numbers) - 34;\n    $max_indexs[] = count($numbers)\
    \ - 35;\n    $max_indexs[] = count($numbers) - 36;\n    $max_indexs[] = count($numbers)\
    \ - 37;\n    $max_indexs[] = count($numbers) - 38;\n    $max_indexs[", "    $max\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n    }\n    return $max;\n}\n", "    $result\
    \ = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \        }\n        $result[] = $max_value;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($rolling_max < $number) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n",
  "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\n\
    This doesn't seem to work. `rolling_max([1, 2, 3, 2, 3, 4, 2])` returns `[1, 2,\
    \ 3, 3, 3, 4, 4]` instead of `[1, 2, 3, 3, 3, 4, 2]`.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and it works. I edited my answer to include the code I tested\
    \ with.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works. I edited my answer\
    \ to include the code I tested with.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6\
    \ and it works. I edited my answer to include the code I tested with.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.6 and it works. I edited my answer to include the\
    \ code I tested with.\n<|/ c |>\n<| a tags=php,arrays,algorithm |>\n<code>", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer. Can you please explain me how this works?\n<|/\
    \ c |>\n<| c |>\nI added some comments to explain how it works. I hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain me how this\
    \ works?\n<|/ c |>\n<| c |>\nI added some comments to explain how it works. I\
    \ hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\n$numbers = [1,\
    \ 2, 3, 2, 3, 4, 2];\n$max_value = max($numbers);\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n", "    $max = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $max_index =\
    \ 0;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n   \
    \         $max = $number;\n            $max_index = 0;\n        } elseif ($number\
    \ == $max) {\n            $max_index++;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n", "    $result = [];\n    $rolling_max = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $rolling_max) {\n\
    \            $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $max = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            $rolling_max = max($rolling_max, $number);\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $i;\n        }\n        $result[$i] = $number;\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max_value) {\n            $max_value = $number;\n     \
    \       $max_index = 0;\n        }\n        if ($number == $max_value) {\n   \
    \         $max_index++;\n        }\n        $result[$max_index] = $max_value;\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    I wrote a recursive function which returns the max value of a given array without\
    \ using any loops or recursion.\n<code>", "    $max = reset($numbers);\n    $max_index\
    \ = count($numbers) - 1;\n    foreach ($numbers as $index => $number) {\n    \
    \    if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $numbers[$max_index];\n}\n", "    $result\
    \ = [];\n    $rolling_max = null;\n    foreach ($numbers as $number) {\n     \
    \   if ($rolling_max === null) {\n            $rolling_max = $number;\n      \
    \  } else {\n            if ($number > $rolling_max) {\n                $rolling_max\
    \ = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n   \
    \ foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n    \
    \        $rolling_max = $number;\n        } else {\n            $rolling_max =\
    \ max($rolling_max, $number);\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $result[] = $numbers[0];\n\
    \    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \            $max_index = $i;\n        }\n        $result[] = $number;\n    }\n\
    \    return $result;\n}", "    $result = [];\n    $max_value = array_shift($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n        }\n        $result[] = $max_value;\n\
    \    }\n    return $result;\n}\n", "    $max_element = null;\n    $max_index =\
    \ null;\n    $max_value = null;\n    $max_index = 0;\n    $i = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n\
    \    $max_element = $max_value;\n    $max_index = $max_index;\n    $max_value\
    \ = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ 0;\n        }\n        if ($number == $max_value) {\n            $max_index++;\n\
    \        }\n        $result[] = $max_value;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexed = false;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \          $max_indexed = true;\n        }\n    }\n    if ($max_indexed) {\n \
    \       $numbers[$max_index] = $max_value;\n    }\n    return $numbers;\n}\n",
  "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n", "    $max_rolling = 0;\n\
    \    $max_rolling_number = 0;\n    $max_rolling_number_index = 0;\n    $max_rolling_number_indexes\
    \ = [];\n    $max_rolling_number_indexes[] = 0;\n    $max_rolling_number_indexes[]\
    \ = 1;\n    $max_rolling_number_indexes[] = 2;\n    $max_rolling_number_indexes[]\
    \ = 3;\n    $max_rolling_number_indexes[] = 4;\n    $max_rolling_number_indexes[]\
    \ = 5;\n    $max_rolling_number_indexes[] = 6;\n    $max_rolling_number_indexes[]\
    \ = 7;\n    $max_rolling_number_indexes[] = 8;\n    $max_rolling_number_indexes[]\
    \ = 9;\n    $max_rolling_number_indexes[] = 10;\n    $max_rolling_number_indexes[]\
    \ = 11;\n    $max_rolling_number_indexes[] = 12;\n    $max_rolling_number_indexes[]\
    \ = 13;\n    $max_rolling_number_indexes[] = 14;\n    $max_rolling_number_indexes[]\
    \ = 15;\n    $max_rolling_number_indexes[] = 16;\n    $max_rolling_number_indexes[]\
    \ = 17;\n    $max_rolling_number_indexes[] = 18;\n    $max_rolling_number_indexes[]\
    \ = 19;\n    $max_rolling_number_indexes[] = 20;\n    $max_rolling_number_indexes[]\
    \ = 21;\n    $max_rolling_number_indexes[] = 22;\n    $max_rolling_number_indexes[]\
    \ = 23;\n    $max_rolling_number_indexes[] = 24;\n    $max_rolling_number_indexes[]\
    \ = 25;\n    $max_rolling_number_indexes[] = 26;\n    $max_rolling_number_indexes[]\
    \ = 27;\n    $max_rolling_number_indexes[] = 28;\n    $max_rolling_number_indexes[]\
    \ = 29;\n    $max_rolling_number_indexes[] = 30;\n    $max_rolling_number_indexes[]\
    \ = 31;\n    $max_rolling_number_indexes[] = 32;\n    $max_rolling_number_indexes[]\
    \ = 33;\n    $max_rolling_number_indexes[] = 34;\n    $max_rolling_number_indexes[]\
    \ = 35;\n    $max_rolling_number_indexes[] = 36;\n    $max_rolling_number_indexes[]\
    \ = 37;\n    $max_rolling_number_indexes[] = 38;\n    $max_rolling_number_indexes[]\
    \ = 39;\n    $max_rolling_number_indexes[] = 40;\n    $max_rolling_number_indexes[",
  "    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max_value == null || $value >\
    \ $max_value) {\n            $max_value = $value;\n            $max_index = $index;\n\
    \        }\n    }\n    $max_element = $numbers[$max_index];\n    return $max_element;\n\
    }\n", "    $result = [];\n    $max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $rolling_max = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = null;\n    $rolling_max_value_index = 0;\n    $rolling_max_value_length =\
    \ 0;\n    foreach ($numbers as $number) {\n        if ($rolling_max === null)\
    \ {\n            $rolling_max = $number;\n            $rolling_max_index = 0;\n\
    \            $rolling_max_value = $number;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value_length = 1;\n        } else {\n       \
    \     if ($number > $rolling_max) {\n                $rolling_max = $number;\n\
    \                $rolling_max_index = 0;\n                $rolling_max_value =\
    \ $number;\n                $rolling_max_value_index = 0;\n                $rolling_max_value_length\
    \ = 1;\n            } else {\n                if ($number == $rolling_max) {\n\
    \                    $rolling_max_value_index++;\n                }\n        \
    \        if ($number > $rolling_max_value) {\n                    $rolling_max_value\
    \ = $number;\n                    $rolling_max_value_index = 0;\n            \
    \        $rolling_max_value_length = 1;\n                }\n            }\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($rolling_max_value_index == $rolling_max_value_length)\
    \ {\n            $result[] = $rolling_max_value;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value = null;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value_length = 0;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n            $index = 0;\n        }\n        $result[$index++]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $max_element = null;\n    $max_index\
    \ = null;\n    $max_value = null;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_value == null || $value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    if ($max_value\
    \ != null) {\n        $max_element = $max_value;\n        $max_index = $max_index;\n\
    \    }\n    return $max_element;\n}\n", "    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $max = reset($numbers);\n    $max_index = count($numbers) - 1;\n  \
    \  foreach ($numbers as $index => $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n            $max_index = $index;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $result\
    \ = [];\n    $max = null;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = max($rolling_max, $number);\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $max = null;\n    $max_index = null;\n    $max_value\
    \ = null;\n    $i = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n        $i++;\n    }\n    return $numbers[$max_index];\n}\n",
  "    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n\
    \            $max_value = $numbers[$i];\n            $max_index = $i;\n      \
    \  }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "   \
    \ $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = $rolling_max > $number ? $rolling_max : $number;\n        }\n    }\n    return\
    \ $rolling_max;\n}\n", "    $result = [];\n    $i = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $result[$i]) {\n            $result[$i]\
    \ = $number;\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $value) {\n        if ($value >\
    \ $max_value) {\n            $max_value = $value;\n            $max_index = $i;\n\
    \        }\n        $result[$i] = $value;\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element === null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n     \
    \       $result[] = $max_value;\n            $max_value = $numbers[$i];\n    \
    \        $max_index = $i;\n        }\n    }\n    $result[] = $max_value;\n   \
    \ return $result;\n}\n", "    $result = [];\n    $rolling_max = $numbers[0];\n\
    \    $rolling_max_index = 0;\n    foreach ($numbers as $number) {\n        if\
    \ ($number > $rolling_max) {\n            $rolling_max = $number;\n          \
    \  $rolling_max_index = 0;\n        }\n        if ($number == $rolling_max) {\n\
    \            $rolling_max_index++;\n        }\n        $result[] = $rolling_max;\n\
    \        $rolling_max = $numbers[$rolling_max_index];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \          $current = $number;\n        } else {\n            $current = $number;\n\
    \        }\n    }\n    $result[] = $current;\n    return $result;\n}\n", "   \
    \ $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $result = [];\n    $rolling_max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rolling_max) {\n           \
    \ $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n \
    \   return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $i;\n        }\n        $result[$i] = $number;\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $number;\n        }\n    }\n    return array_slice($numbers, 0, $max_index +\
    \ 1);\n}\n", "    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            $rolling_max = $rolling_max > $number\
    \ ? $rolling_max : $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n   \
    \     if ($number > $max) {\n            $max = $number;\n        }\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $result = [];\n    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $max_value;\n    for ($i = $max_index + 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $rolling_max = null;\n    foreach ($numbers as $number) {\n     \
    \   if ($rolling_max === null) {\n            $rolling_max = $number;\n      \
    \  } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n            continue;\n        }\n        if ($number > $rolling_max)\
    \ {\n            $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i == $max_index) {\n            $result[] = $numbers[$i];\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            $rolling_max = max($rolling_max, $number);\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($value > $max_value) {\n     \
    \       $max_value = $value;\n            $max_index = $index;\n        }\n  \
    \  }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] > $max_value) {\n            $result[] = $max_value;\n\
    \            $max_value = $numbers[$i];\n            $max_index = $i;\n      \
    \  }\n    }\n    $result[] = $max_value;\n    return $result;\n}\n", "    $result\
    \ = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $result[$i] = $number;\n\
    \        $i++;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ |>\n<| c |>\nI like this solution. Very elegant and simple. Thank you!\n<|/\
    \ c |>\n<| a tags=php,arrays,algorithm |>\n<code>", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n     \
    \       $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $result\
    \ = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($rolling_max === null)\
    \ {\n            $rolling_max = $number;\n            $rolling_max_index = 0;\n\
    \            $rolling_max_value = $number;\n        } else {\n            if ($number\
    \ > $rolling_max) {\n                $rolling_max = $number;\n               \
    \ $rolling_max_index = 0;\n                $rolling_max_value = $number;\n   \
    \         } else {\n                $rolling_max_index++;\n                if\
    \ ($rolling_max_index == $rolling_max) {\n                    $rolling_max_value\
    \ = $rolling_max;\n                }\n            }\n        }\n        $result[]\
    \ = $rolling_max_value;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $max = null;\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $result = [];\n    $rollingMax = array_shift($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rollingMax) {\n            $rollingMax\
    \ = $number;\n        }\n        $result[] = $rollingMax;\n    }\n    return $result;\n\
    }\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n     \
    \       $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $result\
    \ = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($rolling_max\
    \ === null) {\n            $rolling_max = $value;\n            $rolling_max_index\
    \ = $index;\n            $rolling_max_value = $value;\n        } else {\n    \
    \        if ($rolling_max > $value) {\n                $rolling_max = $value;\n\
    \                $rolling_max_index = $index;\n                $rolling_max_value\
    \ = $value;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    $result[] = $rolling_max_index;\n    $result[] = $rolling_max_value;\n  \
    \  return $result;\n}\n", "    $result = [];\n    $rolling_max = 0;\n    $rolling_max_index\
    \ = 0;\n    $rolling_max_value = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max_value) {\n            $rolling_max_value\
    \ = $number;\n            $rolling_max_index = $i;\n        }\n        $result[$i]\
    \ = $number;\n        $i++;\n    }\n    return $result;\n}\n", "    $result =\
    \ [];\n    $rolling_max = null;\n    $max_value = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $rolling_max\
    \ = $max_value;\n            $max_value = $number;\n        } else {\n       \
    \     $rolling_max = $number;\n        }\n        $result[] = $rolling_max;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = max($rolling_max, $number);\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $max = $numbers[0];\n    $max_index = 0;\n  \
    \  foreach ($numbers as $number) {\n        if ($number > $max) {\n          \
    \  $max = $number;\n            $max_index = $i;\n        }\n        $i++;\n \
    \   }\n    return $numbers[$max_index];\n}\n", "    $result = [];\n    $rolling_max\
    \ = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number > $rolling_max)\
    \ {\n            $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max\
    \ = $array[0];\nforeach ($array as $number) {\n    if ($number > $rolling_max)\
    \ {\n        $rolling_max = $number;\n    }\n    $result[] = $rolling_max;\n}\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max = $array[0];\nforeach\
    \ ($array as $number) {\n    if ($number > $rolling_max) {\n        $rolling_max\
    \ = $number;\n    }\n    $result[] = $rolling_max;\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = [1, 2, 3, 2, 3, 4,\
    \ 2];\n$result = [];\n$rolling_max = $array[0];\nforeach ($array as $number) {\n\
    \    if ($number > $rolling_max) {\n        $rolling_max = $number;\n    }\n \
    \   $result[] = $rolling_max;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 2, 3, 4, 2];\n$result\
    \ = [];\n$rolling_max = $array[0];\nforeach ($array as $number) {\n    if ($number\
    \ > $rolling_max) {\n        $rolling_max = $number;\n    }\n    $result[] = $rolling_max;\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n\
    $rolling_max = $array[0];\nforeach ($array as $number) {\n    if ($number > $rolling_max)\
    \ {\n        $rolling_max = $number;\n    }\n    $result[] = $rolling_max;\n}\n\
    print_r($result);\n</code>\n<|/ a tag", "    $result = [];\n    $rolling_max =\
    \ null;\n    $rolling_max_index = 0;\n    $rolling_max_value = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n            $rolling_max_index = 0;\n            $rolling_max_value\
    \ = $number;\n        } else {\n            if ($number > $rolling_max) {\n  \
    \              $rolling_max = $number;\n                $rolling_max_index = 0;\n\
    \                $rolling_max_value = $number;\n            } else {\n       \
    \         $rolling_max_index++;\n            }\n        }\n        if ($rolling_max_index\
    \ >= $numbers) {\n            $result[] = $rolling_max_value;\n            $rolling_max\
    \ = null;\n            $rolling_max_index = 0;\n            $rolling_max_value\
    \ = null;\n        }\n    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $i;\n        }\n  \
    \      $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like this solution, however it only works with integers.\
    \ If you try to use it with floats, it will return an array with floats instead\
    \ of integers.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,", "    $result = [];\n    $current = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $current) {\n            $result[]\
    \ = $current;\n        }\n        $current = $number;\n    }\n    $result[] =\
    \ $current;\n    return $result;\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    $i = 0;\n    foreach ($numbers as $number) {\n     \
    \   if ($number > $max_value) {\n            $max_value = $number;\n         \
    \   $max_index = $i;\n        }\n        $result[$i] = $number;\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $rolling_max = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max < $number) {\n\
    \            $rolling_max = $number;\n        }\n        $result[] = $rolling_max;\n\
    \    }\n    return $result;\n}\n", "    $max = -PHP_INT_MAX;\n    $max_index =\
    \ 0;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n   \
    \         $max = $number;\n            $max_index = 0;\n        } elseif ($number\
    \ == $max) {\n            $max_index++;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n    \
    \        $max_index = $i;\n        }\n    }\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i == $max_index) {\n            $result[] = $max_value;\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n", "    $max_element = null;\n    $max_index = 0;\n  \
    \  $max_value = null;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n", "    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        } else {\n \
    \           $max_rolling += $number;\n        }\n    }\n    return $max_rolling;\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = 0;\n        }\n   \
    \     $result[$max_index++] = $number;\n    }\n    return $result;\n}\n", "  \
    \  $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach\
    \ ($numbers as $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $i;\n        }\n        $result[$i] = $value;\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $rolling_max = null;\n  \
    \  foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n   \
    \         $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = max($rolling_max, $number);\n        }\n    }\n    return $rolling_max;\n\
    }\n", "    $result = [];\n    $max_value = array_shift($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    foreach ($numbers as $value) {\n        if ($value > $max_value) {\n    \
    \        $max_value = $value;\n            $max_index = $i;\n        }\n     \
    \   $result[$i] = $value;\n        $i++;\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach ($numbers as $number) {\n        if ($number ==\
    \ $max) {\n            $result[] = $max;\n        } else {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\nI used a recursive function and array_reduce:\n<code>",
  "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    $max_index2 = 0;\n    foreach ($numbers as $index => $value) {\n   \
    \     if ($value > $max_value) {\n            $max_value = $value;\n         \
    \   $max_index = $index;\n        }\n        if ($value == $max_value) {\n   \
    \         $max_index2 = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n", "    $max = null;\n    $max_index = null;\n    foreach\
    \ ($numbers as $index => $number) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n            $max_index = $index;\n        }\n    }\n    return\
    \ $numbers[$max_index];\n}\n", "    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    $max_indexs = [];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $max_indexs[] = $max_index;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] == $max_value)\
    \ {\n            $max_indexs[] = $i;\n        }\n    }\n    return $max_indexs;\n\
    }\n", "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    return $rolling_max;\n}\n", "    $max_rolling\
    \ = 0;\n    $max_rolling_pos = 0;\n    $max_rolling_neg = 0;\n    $max_rolling_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg = 0;\n\
    \    $max_rolling_neg_inc_neg_inc = 0;\n    $max_rolling_neg_inc_neg_inc_pos =\
    \ 0;\n    $max_rolling_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos = 0;\n  \
    \  $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos =\
    \ 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n\
    \    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc = 0;\n\
    \    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $max_value;\n            $max_index = $i;\n        }\n    }\n    return array_slice($result,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return $max_value;\n}\n", "    $result = [];\n\
    \    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    for ($i =\
    \ 0; $i < count($numbers); $i++) {\n        if ($i == $max_index) {\n        \
    \    $result[] = $numbers[$i];\n        } else {\n            $result[] = $numbers[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($value > $max_value) {\n            $max_value = $value;\n  \
    \          $max_index = $index;\n        }\n    }\n    $result[] = $max_value;\n\
    \    $result[] = $numbers[$max_index];\n    return $result;\n}\n", "    $result\
    \ = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $result[$i] = $number;\n\
    \        $i++;\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $result = array_filter($array, function($v) use ($max) {\n    return $v > $max;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array, function($v)\
    \ use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array,\
    \ function($v) use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $result = array_filter($array, function($v) use ($max) {\n    return $v > $max;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array, function($v)\
    \ use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $result = array_filter($array, function($v) use ($max) {\n    return $v > $max;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array,\
    \ function($v) use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, ", "    $max_element\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_element) {\n            $max_element\
    \ = $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return\
    \ array_slice($numbers, 0, $max_index + 1);\n}\n", "    $max = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $i = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $result[$i]) {\n            $result[$i]\
    \ = $number;\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $result = [];\n    $rolling_max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rolling_max) {\n           \
    \ $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n \
    \   return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26829144)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I thought this was a good answer to the question. My answer was\
    \ a solution to the problem as stated in the question. How does this not provide\
    \ an answer?\n<|/ c |>\n<| c |>\nThe OP asked for a solution to his problem, not\
    \ for a solution to his problem. Your answer does not provide an answer to the\
    \ question asked. Your answer does not provide an answer to the question asked.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought this was a good answer to the\
    \ question. My answer was a solution to the problem as stated in the question.\
    \ How does this not provide an answer?\n<|/ c |>\n<| c |>\nThe OP asked for a\
    \ solution to his problem, not for a solution to his problem. Your answer does\
    \ not provide an answer to the question asked. Your answer does not provide an\
    \ answer to the question asked.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr\
    \ = [1, 2, 3, 2, 3, 4, 2];\n$arr2 = [];\n$arr3 = [];\n$arr4 = [];\n$arr5 = [];\n\
    $arr6 = [];\n$arr7 = [];\n$arr8 = [];\n$arr9 = [];\n$arr10 = [];\n$arr11 = [];\n\
    $arr12 = [];\n$arr13 = [];\n$arr14 = [];\n$arr15 = [];\n$arr16 = [];\n$arr17 =\
    \ [];\n$arr18 = [];\n$arr19 = [];\n$arr20 = [];\n$arr21 = [];\n$arr22 = [];\n\
    $arr23 = [];\n$arr24", "    $result = [];\n    $current = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $current) {\n            $result[] = $current;\n\
    \        }\n        $current = $number;\n    }\n    $result[] = $current;\n  \
    \  return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n   \
    \     if ($number > $max) {\n            $max = $number;\n        }\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't answer the question. OP wants to find the maximum element in a rolling\
    \ window of size `n`, not just a single element.\n<|/ c |>\n<| c |>\nI agree with\
    \ you, my answer is not the best one, but I thought it could be helpful for someone.\
    \ Thanks for your comment.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers\
    \ = [1, 2, 3, 2, 3, 4, 2];\n$max = null;\n$result = [];\n$window = 3;\n$i = 0;\n\
    $j = 0;\nforeach ($numbers as $number) {\n    if ($number > $max) {\n        $max\
    \ = $number;\n    }\n    if ($j == $window) {\n        $result[] = $max;\n   \
    \     $j = 0;\n        $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$numbers = [1, 2, 3, 2, 3,\
    \ 4, 2];\n$max = null;\n$result = [];\n$window = 3;\n$i = 0;\n$j = 0;\nforeach\
    \ ($numbers as $number) {\n    if ($number > $max) {\n        $max = $number;\n\
    \    }\n    if ($j == $window) {\n        $result[] = $max;\n        $j = 0;\n\
    \        $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n\
    $max = null;\n$result = [];\n$window = 3;\n$i = 0;\n$j = 0;\nforeach ($numbers\
    \ as $number) {\n    if ($number > $max) {\n        $max = $number;\n    }\n \
    \   if ($j == $window) {\n        $result[] = $max;\n        $j = 0;\n       \
    \ $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n$max = null;\n\
    $result = [];\n$window = 3;\n$i = 0;\n$j = 0;\nforeach ($numbers as $number) {\n\
    \    if ($number > $max) {\n        $max", "    $result = [];\n    $rolling_max\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($rolling_max === null)\
    \ {\n            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = max($rolling_max, $number);\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$arr2 = array_chunk($arr, 3);\n$arr3\
    \ = array_map(function ($a) { return max($a); }, $arr2);\n$arr4 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr5 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr6 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr7 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr8 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr9 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr10 = array_map(function ($a) {\
    \ return array_sum($a); }, $arr2);\n$arr11 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr12 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr13 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr14 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr15 =\
    \ array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr16 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr17 = array_map(function ($a) {\
    \ return array_sum($a); }, $arr2);\n$arr18 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr19 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr20 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr21 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr22 =\
    \ array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr23 = array_map(function\
    \ ($a) { return array_sum($a); }, $", "    $result = [];\n    $rolling_max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n        } else {\n            if ($number\
    \ > $rolling_max) {\n                $rolling_max = $number;\n            }\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $i = 0;\n    $j = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $result[$i]) {\n            $result[$j] = $number;\n\
    \            $j++;\n        } else {\n            $i++;\n        }\n    }\n  \
    \  return array_slice($result, 0, $j);\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $numbers[$max_index];\n        }\n    }\n    return array_slice($numbers, 0,\
    \ $max_index + 1);\n}\n", "    $result = [];\n    $current = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $current) {\n            $result[]\
    \ = $current;\n        }\n        $current = $number;\n    }\n    $result[] =\
    \ $current;\n    return $result;\n}\n", "    $result = [];\n    $index = 0;\n\
    \    $max = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n            $index = 0;\n        }\n\
    \        $result[$index] = $max;\n        $index++;\n    }\n    return $result;\n\
    }\n", "    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n            $max_index = $i;\n        }\n        $i++;\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n    }\n    $result[] = $max;\n    return $result;\n\
    }\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n     \
    \       $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $rolling_max = null;\n  \
    \  foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n   \
    \         $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = max($rolling_max, $number);\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n", "    $result = [];\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    $result[] = $max;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $result[] = $number;\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = $arr[0];\n$result = [];\n\
    foreach ($arr as $number) {\n    if ($number > $max) {\n        $max = $number;\n\
    \    }\n    $result[] = $max;\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = $arr[0];\n\
    $result = [];\nforeach ($arr as $number) {\n    if ($number > $max) {\n      \
    \  $max = $number;\n    }\n    $result[] = $max;\n}\nprint_r($result);", "   \
    \ $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max = null;\n    $max_index = null;\n    $index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n \
    \           $max = $number;\n            $max_index = $index;\n        }\n   \
    \     $index++;\n    }\n    return $numbers[$max_index];\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $rolling_max = null;\n  \
    \  foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n   \
    \         $rolling_max = $number;\n        } else {\n            if ($number >\
    \ $rolling_max) {\n                $rolling_max = $number;\n            }\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n  \
    \  for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $max_indexs[] = $max_index;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $max_indexs[]\
    \ = $i;\n        }\n    }\n    return $max_indexs;\n}\n", "    $result = [];\n\
    \    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    for ($i =\
    \ 0; $i < count($numbers); $i++) {\n        if ($i == $max_index) {\n        \
    \    $result[] = $numbers[$i];\n        } else {\n            $result[] = $numbers[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $rolling_max\
    \ = null;\n    $rolling_max_index = 0;\n    $rolling_max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($rolling_max === null) {\n   \
    \         $rolling_max = $value;\n            $rolling_max_index = $index;\n \
    \           $rolling_max_value = $value;\n        } else {\n            if ($rolling_max\
    \ < $value) {\n                $rolling_max = $value;\n                $rolling_max_index\
    \ = $index;\n                $rolling_max_value = $value;\n            }\n   \
    \     }\n    }\n    $result[] = $rolling_max;\n    $result[] = $rolling_max_value;\n\
    \    $result[] = $rolling_max_index;\n    return $result;\n}\n", "    $max = null;\n\
    \    $max_index = 0;\n    $max_value = null;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max === null || $value > $max) {\n            $max\
    \ = $value;\n            $max_index = $index;\n            $max_value = $value;\n\
    \        }\n    }\n    return $numbers[$max_index];\n}\n", "    $result = [];\n\
    \    $max = null;\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return $max_value;\n}\n", "    $result = [];\n\
    \    $result[0] = $numbers[0];\n    $result[1] = $numbers[1];\n    $result[2]\
    \ = $numbers[2];\n    $result[3] = $numbers[3];\n    $result[4] = $numbers[4];\n\
    \    $result[5] = $numbers[5];\n    $result[6] = $numbers[6];\n    $result[7]\
    \ = $numbers[7];\n    $result[8] = $numbers[8];\n    $result[9] = $numbers[9];\n\
    \    $result[10] = $numbers[10];\n    $result[11] = $numbers[11];\n    $result[12]\
    \ = $numbers[12];\n    $result[13] = $numbers[13];\n    $result[14] = $numbers[14];\n\
    \    $result[15] = $numbers[15];\n    $result[16] = $numbers[16];\n    $result[17]\
    \ = $numbers[17];\n    $result[18] = $numbers[18];\n    $result[19] = $numbers[19];\n\
    \    $result[20] = $numbers[20];\n    $result[21] = $numbers[21];\n    $result[22]\
    \ = $numbers[22];\n    $result[23] = $numbers[23];\n    $result[24] = $numbers[24];\n\
    \    $result[25] = $numbers[25];\n    $result[26] = $numbers[26];\n    $result[27]\
    \ = $numbers[27];\n    $result[28] = $numbers[28];\n    $result[29] = $numbers[29];\n\
    \    $result[30] = $numbers[30];\n    $result[31] = $numbers[31];\n    $result[32]\
    \ = $numbers[32];\n    $result[33] = $numbers[33];\n    $result[34] = $numbers[34];\n\
    \    $result[35] = $numbers[35];\n    $result[36] = $numbers[36];\n    $result[37]\
    \ = $numbers[37];\n    $result[38] = $numbers[38];\n    $result[39] = $numbers[39];\n\
    \    $result[40] = $numbers[40];\n    $result[41] = $numbers[41];\n    $result[42]\
    \ = $numbers[42];\n    $result[43] = $numbers[43];\n    $result[44] = $numbers[44];\n\
    \    $result[45] = $numbers[45];\n    $result[46] = $numbers[46];\n    $result[47]\
    \ = $numbers[47];\n    $result[48] = $numbers[48];\n    $result[49] = $numbers[49];\n\
    \    $result[50] = $numbers[50];\n    $result[51] = $number", "    $max_element\
    \ = null;\n    $max_index = 0;\n    $max_value = null;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($max_value == null || $value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    return $max_value;\n}\n", "    $result = [];\n    $rolling_max\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($rolling_max === null)\
    \ {\n            $rolling_max = $number;\n        } else {\n            if ($number\
    \ > $rolling_max) {\n                $rolling_max = $number;\n            }\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\n", "    $max = null;\n    $max_index = null;\n  \
    \  $max_value = null;\n    foreach ($numbers as $i => $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n    }\n    $max = $numbers[$max_index];\n    return $max;\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    $index = 0;\n    foreach ($numbers as $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n        $result[$index] = $max_value;\n        $index++;\n    }\n    return\
    \ $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $rolling_max = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $rolling_max\
    \ = $max_value;\n            $max_value = $number;\n        } else {\n       \
    \     $rolling_max = $rolling_max > $number ? $rolling_max : $number;\n      \
    \  }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n        $i++;\n    }\n    return $max_value;\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n\
    }\n", "    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_element = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n", "    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n", "    $max_rolling = 0;\n\
    \    $max_rolling_pos = 0;\n    $max_rolling_neg = 0;\n    $max_rolling_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg = 0;\n\
    \    $max_rolling_neg_inc_pos_neg = 0;\n    $max_rolling_pos_neg_inc = 0;\n  \
    \  $max_rolling_pos_neg_inc_pos = 0;\n    $max_rolling_pos_neg_inc_neg = 0;\n\
    \    $max_rolling_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_neg_inc =\
    \ 0;\n    $max_rolling_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_",
  "    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n", "    $max_element = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($number > $max_element) {\n            $max_element = $number;\n          \
    \  $max_index = $index;\n        }\n    }\n    return array_slice($numbers, 0,\
    \ $max_index + 1);\n}\n", "    $result = [];\n    $rolling_max = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rolling_max) {\n           \
    \ $rolling_max = $number;\n        }\n        $result[] = $rolling_max;\n    }\n\
    \    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null || $value > $max)\
    \ {\n            $max = $value;\n            $max_index = $index;\n          \
    \  $max_value = $value;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n", "    $result = [];\n    $i = 0;\n    $j = 0;\n    $max = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number == $max) {\n            $result[$i] = $max;\n\
    \            $i++;\n        }\n        if ($number > $max) {\n            $result[$j]\
    \ = $max;\n            $j++;\n        }\n    }\n    return $result;\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n  \
    \  foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n        if ($value == $max_value) {\n            $max_indexs[] = $max_index;\n\
    \        }\n    }\n    return $max_indexs;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr\
    \ as $value) {\n    if ($value > $max[$i]) {\n        $max[$i] = $value;\n   \
    \ }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr\
    \ as $value) {\n    if ($value > $max[$i]) {\n        $max[$i] = $value;\n   \
    \ }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr\
    \ as $value) {\n    if ($value > $max[$i]) {\n        $max[$i] = $value;\n   \
    \ }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr\
    \ as $value) {\n    if ($value > $max[$i]) {\n        $max[$i] = $value;\n   \
    \ }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n\
    $arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr as $value) {\n\
    \    if ($value > $max[$i]) {\n        $max[$i] = $value;\n    }\n    $i++;\n\
    }\nprint_r($max);\n</code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr\
    \ as $value) {\n    if ($value > $max[$i]) {\n        $max[$i] = $value;\n   \
    \ }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/", "    $result = [];\n    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max_value) {\n            $max_value = $number;\n     \
    \       $max_index = $i;\n        }\n        $result[$i] = $number;\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n        $i++;\n    }\n    return $max_value;\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_element = null;\n    $max_index = 0;\n\
    \    $max_value = null;\n    $max_count = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max_value == null || $value > $max_value) {\n   \
    \         $max_value = $value;\n            $max_index = $index;\n        }\n\
    \        if ($max_count < $index) {\n            $max_count = $index;\n      \
    \  }\n    }\n    $max_element = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_count = $max_count;\n    $max_value = $max_value;\n    return $max_element;\n\
    }\n", "    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $current = $number;\n    \
    \        $result[] = $current;\n        }\n    }\n    return $result;\n}\n", " \
    \   $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i == $max_index) {\n            $result[] = $numbers[$i];\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    array_push($result, $max);\n    return $result;\n}\n",
  "    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2\
    \ = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    for ($i = 1; $i < count($numbers); $i++) {\n  \
    \      if ($numbers[$i] == $max_value) {\n            $max_index2 = $i;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", " \
    \   $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n    \
    \    if ($number > $max) {\n            $max = $number;\n        }\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $result = [];\n    $max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n            $result[] = $max;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n    $rolling_max_index\
    \ = 0;\n    $rolling_max_value = null;\n    foreach ($numbers as $number) {\n\
    \        if ($rolling_max === null) {\n            $rolling_max = $number;\n \
    \           $rolling_max_index = 0;\n            $rolling_max_value = $number;\n\
    \        } else {\n            if ($rolling_max > $number) {\n               \
    \ $rolling_max = $number;\n                $rolling_max_index = 0;\n         \
    \       $rolling_max_value = $number;\n            } else {\n                $rolling_max\
    \ = $rolling_max;\n                $rolling_max_index++;\n                $rolling_max_value\
    \ = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    for ($i = 0; $i < $rolling_max_index; $i++) {\n        $result[] = $rolling_max_value;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $rolling_max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n        } else {\n            if ($number\
    \ > $rolling_max) {\n                $rolling_max = $number;\n            }\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $rolling_max = null;\n  \
    \  foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n   \
    \         $rolling_max = $number;\n        } else {\n            if ($number >\
    \ $rolling_max) {\n                $rolling_max = $number;\n            }\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n", " \
    \   $max = null;\n    $max_index = null;\n    foreach ($numbers as $index => $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $numbers[$max_index];\n}\n", "    $result\
    \ = [];\n    $max = null;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n            $result[] = $max;\n    \
    \    }\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

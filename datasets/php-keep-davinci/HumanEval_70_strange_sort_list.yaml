name: HumanEval_70_strange_sort_list
language: php
prompt: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
  \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
  \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2, 3,\
  \ 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n// strange_sort_list([])\
  \ == []\nfunction strange_sort_list($lst) {\n"
tests: "function candidate(...$args) {\n    return strange_sort_list(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
  \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
  \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n\
    \    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n \
    \           $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n\
    \    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n \
    \           $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, [$max]);\n        if (!empty($lst)) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (count($lst) == 0) {\n        return [];\n\
    \    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "  if (empty($lst)) {\n    return\
    \ [];\n  }\n  $min = min($lst);\n  $max = max($lst);\n  $result = [];\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  $lst = array_diff($lst, [$min, $max]);\n  while\
    \ (!empty($lst)) {\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \  }\n  return $result;\n}\n", "    if (empty($lst)) return [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n    while\
    \ (!empty($lst)) {\n        $max = max($lst);\n        $result[] = $max;\n   \
    \     $lst = array_diff($lst, [$max]);\n        $lst = array_values($lst);\n \
    \       if (empty($lst)) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n       \
    \ $lst = array_values($lst);\n    }\n    return $result;\n}\n", "    $result =\
    \ [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n    if\
    \ (count($lst) == 0) {\n        return $result;\n    }\n    return array_merge($result,\
    \ strange_sort_list($lst));\n}\n", "    if (count($lst) == 0) {\n        return\
    \ [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n      \
    \  return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j\
    \ = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "  $result = [];\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $min_index = array_search($min, $lst);\n\
    \  $max_index = array_search($max, $lst);\n  $result[] = $min;\n  $result[] =\
    \ $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n  $lst = array_values($lst);\n\
    \  while (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n  \
    \  $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i < $count) {\n            $result[]\
    \ = $lst[$count - $i];\n            $i++;\n        }\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return [];\n    }\n    sort($lst);\n\
    \    $res = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        if ($i == $j) {\n            $res[] = $lst[$i];\n            break;\n\
    \        }\n        $res[] = $lst[$i];\n        $res[] = $lst[$j];\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n", "    $lst_len = count($lst);\n\
    \    if ($lst_len < 2) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst_min = array_filter($lst, function($x) use ($min)\
    \ {\n        return $x != $min;\n    });\n    $lst_max = array_filter($lst, function($x)\
    \ use ($max) {\n        return $x != $max;\n    });\n    $lst_min = strange_sort_list($lst_min);\n\
    \    $lst_max = strange_sort_list($lst_max);\n    $lst_min = array_merge([$min],\
    \ $lst_min);\n    $lst_max = array_merge([$max], $lst_max);\n    $lst_min_len\
    \ = count($lst_min);\n    $lst_max_len = count($lst_max);\n    $lst_res = [];\n\
    \    for ($i = 0; $i < $lst_min_len; $i++) {\n        $lst_res[] = $lst_min[$i];\n\
    \        if ($i < $lst_max_len) {\n            $lst_res[] = $lst_max[$i];\n  \
    \      }\n    }\n    return $lst_res;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $result[] = $min;\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $max = max($lst);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n    $sorted\
    \ = $lst;\n    sort($sorted);\n    $min = array_shift($sorted);\n    $max = array_pop($sorted);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    while (count($sorted) > 0)\
    \ {\n        $min = array_shift($sorted);\n        $max = array_pop($sorted);\n\
    \        $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n", "  if (count($lst) == 0) {\n    return [];\n  }\n  $min = min($lst);\n \
    \ $max = max($lst);\n  $result = [];\n  $result[] = $min;\n  $lst = array_diff($lst,\
    \ [$min]);\n  $result[] = $max;\n  $lst = array_diff($lst, [$max]);\n  $result\
    \ = array_merge($result, strange_sort_list($lst));\n  return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n    while (!empty($lst))\
    \ {\n        $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        $lst = array_values($lst);\n        if (empty($lst)) {\n \
    \           break;\n        }\n        $min = min($lst);\n        $result[] =\
    \ $min;\n        $lst = array_diff($lst, [$min]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) return [];\n    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i = 0;\n   \
    \ $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        if ($i != $j) $result[] = $lst[$j];\n        $i++;\n        $j--;\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i < $count) {\n\
    \            $result[] = $lst[$count - $i];\n            $i++;\n        }\n  \
    \  }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    while (count($lst) > 0) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n \
    \   return $result;\n}\n", "  $result = [];\n  $lst = array_unique($lst);\n  sort($lst);\n\
    \  $min = $lst[0];\n  $max = $lst[count($lst) - 1];\n  $result[] = $min;\n  $result[]\
    \ = $max;\n  $lst = array_diff($lst, [$min, $max]);\n  while (count($lst) > 0)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n   \
    \ $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  }\n  return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    return array_merge([$min, $max], strange_sort_list($lst));\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n      \
    \  return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result = [$min];\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $max;\n        $result[] = $min;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $lst[$min_index] = $max;\n  $lst[$max_index] = $min;\n  $result[] = $min;\n\
    \  $result[] = $max;\n  $lst = array_diff($lst, $result);\n  $lst = array_values($lst);\n\
    \  if (count($lst) > 0) {\n    $result = array_merge($result, strange_sort_list($lst));\n\
    \  }\n  return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n \
    \   }\n    $min = min($lst);\n    $max = max($lst);\n    $min_pos = array_search($min,\
    \ $lst);\n    $max_pos = array_search($max, $lst);\n    $lst[$min_pos] = $max;\n\
    \    $lst[$max_pos] = $min;\n    return $lst;\n}\n", "    $result = [];\n    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    $min = $lst[0];\n    $max = $lst[count($lst)\
    \ - 1];\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0)\
    \ {\n            $result[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = $lst[0];\n        } else {\n            $result[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = $lst[count($lst) - 1];\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst = array_values($lst);\n    while (!empty($lst)) {\n        $max = max($lst);\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n       \
    \ $lst = array_values($lst);\n        if (empty($lst)) {\n            break;\n\
    \        }\n        $min = min($lst);\n        $result[] = $min;\n        $lst\
    \ = array_diff($lst, [$min]);\n        $lst = array_values($lst);\n    }\n   \
    \ return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $lst = array_values($lst);\n    $lst = array_slice($lst,\
    \ 2);\n    return array_merge([$min, $max], strange_sort_list($lst));\n}\n", " \
    \   $result = [];\n    $count = count($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $count -= 2;\n\
    \    while ($count > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $count -= 2;\n\
    \    }\n    return $result;\n}\n", "  $result = [];\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  $i = 0;\n  while (count($lst) > 0) {\n    if ($i % 2 == 0) {\n\
    \      $result[] = $min;\n      $min = min($lst);\n    } else {\n      $result[]\
    \ = $max;\n      $max = max($lst);\n    }\n    $i++;\n  }\n  return $result;\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = [];\n    $res[] = $min;\n    $res[] = $max;\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst)) {\n    \
    \    $min = min($lst);\n        $max = max($lst);\n        $res[] = $min;\n  \
    \      $res[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n\
    \    return $res;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $lst_len = count($lst);\n    $i = 0;\n    $j = $lst_len\
    \ - 1;\n    while ($i < $lst_len) {\n        $result[] = $lst[$i];\n        if\
    \ ($i < $j) {\n            $result[] = $lst[$j];\n        }\n        $i++;\n \
    \       $j--;\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n   \
    \     return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n    \
    \    $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) return [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = [$min];\n    $lst = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n\
    \    while (!empty($lst)) {\n        $max = max($lst);\n        $res[] = $max;\n\
    \        $lst = array_diff($lst, [$max]);\n        $lst = array_values($lst);\n\
    \        if (empty($lst)) break;\n        $min = min($lst);\n        $res[] =\
    \ $min;\n        $lst = array_diff($lst, [$min]);\n        $lst = array_values($lst);\n\
    \    }\n    return $res;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result = [$min];\n\
    \    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n    return $result;\n}\n", "    if (count($lst) ==\
    \ 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $new_lst = [];\n    $new_lst[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    while (count($lst) > 0) {\n        $max = max($lst);\n        $new_lst[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n        if (count($lst) ==\
    \ 0) {\n            break;\n        }\n        $min = min($lst);\n        $new_lst[]\
    \ = $min;\n        $lst = array_diff($lst, [$min]);\n    }\n    return $new_lst;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n    \
    \    $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n\n    $result = [$min];\n    $lst[$min_index] =\
    \ null;\n    $lst[$max_index] = null;\n\n    while (count($lst) > 0) {\n     \
    \   $min = min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n\n        $result[]\
    \ = $max;\n        $result[] = $min;\n\n        $lst[$min_index] = null;\n   \
    \     $lst[$max_index] = null;\n    }\n\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) return [];\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$max]);\n    while (count($lst) > 0) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, [$min]);\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, [$max]);\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n    if\
    \ (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        if ($i != $j) {\n            $result[]\
    \ = $lst[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        $result[$i] = $min;\n        $i++;\n\
    \        $result[$i] = $max;\n        $i++;\n        $lst = array_diff($lst, [$min,\
    \ $max]);\n        $min = min($lst);\n        $max = max($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    $lst\
    \ = array_values($lst);\n    if (count($lst) > 0) {\n        $result = array_merge($result,\
    \ strange_sort_list($lst));\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    return\
    \ $lst;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n  \
    \  $lst[$max_index] = $min;\n    return [$min, $max] + strange_sort_list(array_slice($lst,\
    \ 2));\n}\n", "    $res = [];\n    $cnt = count($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while ($i < $cnt) {\n        if ($i %\
    \ 2 == 0) {\n            $res[] = $min;\n            $lst = array_diff($lst, [$min]);\n\
    \            $min = min($lst);\n        } else {\n            $res[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $res;\n}\n", "  if (count($lst) ==\
    \ 0) {\n    return [];\n  }\n  $min = min($lst);\n  $max = max($lst);\n  $res\
    \ = [];\n  $res[] = $min;\n  $res[] = $max;\n  $lst = array_diff($lst, [$min,\
    \ $max]);\n  while (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \  }\n  return $res;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return\
    \ [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    if (empty($lst)) return $lst;\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $res = [$min];\n    $lst =\
    \ array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        if (!empty($lst)) {\n            $res[] = $min;\n        \
    \    $lst = array_diff($lst, [$min]);\n        }\n    }\n    return $res;\n}\n",
  "  if (empty($lst)) return [];\n  $min = min($lst);\n  $max = max($lst);\n  $res\
    \ = [$min];\n  $lst = array_diff($lst, [$min]);\n  while (!empty($lst)) {\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    if (empty($lst)) break;\n    $res[] = $min;\n    $lst = array_diff($lst,\
    \ [$min]);\n  }\n  return $res;\n}\n", "  if (empty($lst)) {\n    return [];\n\
    \  }\n  $min = min($lst);\n  $max = max($lst);\n  $result = [$min];\n  $lst =\
    \ array_diff($lst, [$min]);\n  while (!empty($lst)) {\n    $max = max($lst);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    if (empty($lst))\
    \ {\n      break;\n    }\n    $min = min($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n  }\n  return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n   \
    \ $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    while (!empty($lst)) {\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $max = max($lst);\n    }\n    return $result;\n}\n", "    $result = [];\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $key = array_search($min, $lst);\n            unset($lst[$key]);\n      \
    \      $min = min($lst);\n        } else {\n            $result[] = $max;\n  \
    \          $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $sorted = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $sorted[] = $min;\n    $sorted[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $lst = array_values($lst);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $lst = array_values($lst);\n    }\n    return $sorted;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n", "  $result = [];\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  $min_index = array_search($min, $lst);\n  $max_index = array_search($max,\
    \ $lst);\n  $lst[$min_index] = $max;\n  $lst[$max_index] = $min;\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  $lst = array_diff($lst, $result);\n  $lst =\
    \ array_values($lst);\n  if (count($lst) == 0) {\n    return $result;\n  }\n \
    \ $result = array_merge($result, strange_sort_list($lst));\n  return $result;\n\
    }\n", "    if (empty($lst)) return [];\n    $sorted = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $sorted[] = $min;\n    $sorted[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $sorted[] = $min;\n       \
    \ $sorted[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n \
    \   return $sorted;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $result = [];\n    $lst_copy =\
    \ $lst;\n    $min = min($lst_copy);\n    $max = max($lst_copy);\n    $i = 0;\n\
    \    while (count($lst_copy) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst_copy = array_diff($lst_copy, [$min]);\n          \
    \  $min = min($lst_copy);\n        } else {\n            $result[] = $max;\n \
    \           $lst_copy = array_diff($lst_copy, [$max]);\n            $max = max($lst_copy);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $count = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n   \
    \ $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $i++;\n    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n\
    \        return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "  if (count($lst)\
    \ == 0) {\n    return [];\n  }\n  $min = min($lst);\n  $max = max($lst);\n  $new_lst\
    \ = [$min];\n  $lst = array_diff($lst, [$min]);\n  while (count($lst) > 0) {\n\
    \    $max = max($lst);\n    $new_lst[] = $max;\n    $lst = array_diff($lst, [$max]);\n\
    \    if (count($lst) == 0) {\n      break;\n    }\n    $min = min($lst);\n   \
    \ $new_lst[] = $min;\n    $lst = array_diff($lst, [$min]);\n  }\n  return $new_lst;\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    $res[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $res = array_merge($res,\
    \ strange_sort_list($lst));\n    return $res;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $lst\
    \ = array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $lst = array_values($lst);\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n  \
    \  $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $lst =\
    \ array_values($lst);\n    while (count($lst) > 0) {\n        $min = $lst[0];\n\
    \        $max = $lst[count($lst) - 1];\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$min, $max]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $lst_length = count($lst);\n\
    \    if ($lst_length == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst_length--;\n    $i = 0;\n    while ($lst_length > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = max($lst);\n            $lst = array_diff($lst,\
    \ [max($lst)]);\n        } else {\n            $result[] = min($lst);\n      \
    \      $lst = array_diff($lst, [min($lst)]);\n        }\n        $lst_length--;\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n  \
    \      return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_key\
    \ = array_search($min, $lst);\n    $max_key = array_search($max, $lst);\n    unset($lst[$min_key]);\n\
    \    unset($lst[$max_key]);\n    $lst = array_values($lst);\n    $res = [$min,\
    \ $max];\n    while (!empty($lst)) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $min_key = array_search($min, $lst);\n        $max_key\
    \ = array_search($max, $lst);\n        unset($lst[$min_key]);\n        unset($lst[$max_key]);\n\
    \        $lst = array_values($lst);\n        $res[] = $min;\n        $res[] =\
    \ $max;\n    }\n    return $res;\n}\n", "  if (empty($lst)) return [];\n  $min\
    \ = min($lst);\n  $max = max($lst);\n  $result = [$min];\n  $lst = array_diff($lst,\
    \ [$min]);\n  while (!empty($lst)) {\n    $max = max($lst);\n    $min = min($lst);\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    if (empty($lst))\
    \ break;\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n  }\n \
    \ return $result;\n}\n", "    if (empty($lst)) return [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    while (!empty($lst)) {\n        $max = max($lst);\n        $res[] = $max;\n\
    \        $lst = array_diff($lst, [$max]);\n        if (empty($lst)) break;\n \
    \       $min = min($lst);\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n    }\n    return $res;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n   \
    \ $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    while (count($lst) > 0) {\n   \
    \     $min = $lst[0];\n        $max = $lst[count($lst) - 1];\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return $lst;\n    }\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst = array_values($lst);\n    $result = array_merge($result, strange_sort_list($lst));\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n", "  $result = [];\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $i = 0;\n  while (count($lst) > 0) {\n    if ($i % 2 ==\
    \ 0) {\n      $result[] = min($lst);\n      $lst = array_diff($lst, [min($lst)]);\n\
    \    } else {\n      $result[] = max($lst);\n      $lst = array_diff($lst, [max($lst)]);\n\
    \    }\n    $i++;\n  }\n  return $result;\n}\n", "    if (count($lst) == 0) {\n\
    \        return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n\
    \    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[]\
    \ = $lst[$i];\n        if ($i != $j) $res[] = $lst[$j];\n        $i++;\n     \
    \   $j--;\n    }\n    return $res;\n}\n", "    if (empty($lst)) {\n        return\
    \ [];\n    }\n    $sorted = sort_list($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($sorted) - 1;\n    while ($i <= $j) {\n        $result[] = $sorted[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $sorted[$j];\n\
    \            $j--;\n        }\n    }\n    return $result;\n}\n", "    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = [];\n    $i = 0;\n    while (count($lst) >\
    \ 0) {\n        $res[$i] = $min;\n        $i++;\n        $res[$i] = $max;\n  \
    \      $i++;\n        $lst = array_diff($lst, [$min, $max]);\n        $min = min($lst);\n\
    \        $max = max($lst);\n    }\n    return $res;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    return\
    \ array_merge([$min], strange_sort_list(array_slice($lst, 1)));\n}\n", "  if (empty($lst))\
    \ {\n    return [];\n  }\n  $min = min($lst);\n  $max = max($lst);\n  $result\
    \ = [$min];\n  $lst = array_diff($lst, [$min]);\n  $lst = array_values($lst);\n\
    \  while (!empty($lst)) {\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst = array_values($lst);\n    if (empty($lst)) {\n      break;\n\
    \    }\n    $result[] = min($lst);\n    $lst = array_diff($lst, [min($lst)]);\n\
    \    $lst = array_values($lst);\n  }\n  return $result;\n}\n", "    $result =\
    \ [];\n    $lst_copy = $lst;\n    $lst_count = count($lst);\n    for ($i = 0;\
    \ $i < $lst_count; $i++) {\n        $min = min($lst_copy);\n        $max = max($lst_copy);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst_copy = array_diff($lst_copy,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $min = min($lst);\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \        } else {\n            $max = max($lst);\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $min = min($lst);\n    $max = max($lst);\n    $res = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $max\
    \ = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst, [$max]);\n\
    \        if (empty($lst)) break;\n        $min = min($lst);\n        $res[] =\
    \ $min;\n        $lst = array_diff($lst, [$min]);\n    }\n    return $res;\n}\n",
  "    if (empty($lst)) return $lst;\n    $res = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n    \
    \    $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n     \
    \   $lst = array_diff($lst, [$min, $max]);\n    }\n    return $res;\n}\n", " \
    \   if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    while (!empty($lst)) {\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $max = max($lst);\n    }\n    return $result;\n}\n", "    $result = [];\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $count = count($lst);\n    $i = 0;\n    while\
    \ ($i < $count) {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i\
    \ < $count) {\n            $result[] = $lst[$count - $i];\n            $i++;\n\
    \        }\n    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n \
    \       return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n \
    \   $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $sorted = sort_list($lst);\n    $result =\
    \ [];\n    $i = 0;\n    $j = count($sorted) - 1;\n    while ($i <= $j) {\n   \
    \     $result[] = $sorted[$i];\n        if ($i != $j) {\n            $result[]\
    \ = $sorted[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return $result;\n\
    }\n", "  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  $lst = array_diff($lst, [$min, $max]);\n  while\
    \ (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \  }\n  return $result;\n}\n", "    $res = [];\n    $len = count($lst);\n    if\
    \ ($len == 0) {\n        return $res;\n    }\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n \
    \       $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n  \
    \      $lst = array_diff($lst, [$min, $max]);\n    }\n    return $res;\n}\n",
  "    $result = [];\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n    \
    \    return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_", "  if(empty($lst))\
    \ {\n    return [];\n  }\n  sort($lst);\n  $result = [];\n  $i = 0;\n  $j = count($lst)\
    \ - 1;\n  while($i <= $j) {\n    $result[] = $lst[$i];\n    $i++;\n    if($i <=\
    \ $j) {\n      $result[] = $lst[$j];\n      $j--;\n    }\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (count($lst) == 0) {\n        return [];\n\
    \    }\n    $max = max($lst);\n    $min = min($lst);\n    $result = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    while (count($lst) > 0) {\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n        if (count($lst)\
    \ == 0) {\n            break;\n        }\n        $result[] = min($lst);\n   \
    \     $lst = array_diff($lst, [min($lst)]);\n    }\n    return $result;\n}\n",
  "    if (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n  \
    \  $len = count($lst);\n    $i = 0;\n    $j = $len - 1;\n    while ($i < $len)\
    \ {\n        $result[] = $lst[$i];\n        if ($i != $j) {\n            $result[]\
    \ = $lst[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    for ($i = 0; $i < $count - 2; $i++) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $result[] = $min;\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n    $lst\
    \ = array_diff($lst, [$min]);\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $lst = array_diff($lst, [$min]);\n        if (empty($lst))\
    \ {\n            break;\n        }\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] != $min && $lst[$i] != $max) {\n            $result[] = $lst[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n      \
    \  return [];\n    }\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $sorted[] = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $sorted[] = $min;\n        $sorted[] = $max;\n       \
    \ $lst = array_diff($lst, [$min, $max]);\n    }\n    return $sorted;\n}\n", " \
    \   $result = [];\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \        $i += 2;\n    }\n    return $result;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    while (count($lst) > 0) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $result[] = $min;\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n", "  $result = [];\n  $lst_len = count($lst);\n  if\
    \ ($lst_len == 0) {\n    return $result;\n  }\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $result[] = $min;\n  $lst = array_diff($lst, [$min]);\n  $lst_len = count($lst);\n\
    \  $i = 0;\n  while ($i < $lst_len) {\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n      break;\n\
    \    }\n    $min = min($lst);\n    $result[] = $min;\n    $lst = array_diff($lst,\
    \ [$min]);\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n      break;\n\
    \    }\n    $max = max($lst);\n    $i++;\n  }\n  return $result;\n}\n", "    if\
    \ (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    return [$min,\
    \ $max] + strange_sort_list($lst);\n}\n", "  if (empty($lst)) {\n    return [];\n\
    \  }\n  sort($lst);\n  $result = [];\n  $i = 0;\n  $j = count($lst) - 1;\n  while\
    \ ($i <= $j) {\n    $result[] = $lst[$i];\n    $i++;\n    if ($i <= $j) {\n  \
    \    $result[] = $lst[$j];\n      $j--;\n    }\n  }\n  return $result;\n}\n",
  "  if (count($lst) == 0) return $lst;\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $res = [$min];\n  $lst = array_diff($lst, [$min]);\n  while (count($lst) >\
    \ 0) {\n    $res[] = $max;\n    $lst = array_diff($lst, [$max]);\n    if (count($lst)\
    \ == 0) break;\n    $res[] = $min;\n    $lst = array_diff($lst, [$min]);\n   \
    \ if (count($lst) == 0) break;\n    $min = min($lst);\n    $max = max($lst);\n\
    \  }\n  return $res;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n    while (!empty($lst))\
    \ {\n        $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        $lst = array_values($lst);\n        if (empty($lst)) {\n \
    \           break;\n        }\n        $min = min($lst);\n        $result[] =\
    \ $min;\n        $lst = array_diff($lst, [$min]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n", "    if (empty($lst)) return\
    \ [];\n    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n \
    \   $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $max\
    \ = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n\
    \        if (empty($lst)) break;\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $lst = array_diff($lst, [$min]);\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return [];\n    }\n    if (count($lst) == 1) {\n        return\
    \ $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    return array_merge([$min, $max], strange_sort_list($lst));\n\
    }\n", "    $result = [];\n    $lst_len = count($lst);\n    for ($i = 0; $i < $lst_len;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result[] = min($lst);\n  \
    \      } else {\n            $result[] = max($lst);\n        }\n        $lst =\
    \ array_diff($lst, [$result[$i]]);\n    }\n    return $result;\n}\n", "    if\
    \ (empty($lst)) return $lst;\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $lst = array_unique($lst);\n    $lst = array_values($lst);\n    $res = [$min];\n\
    \    while (count($lst) > 1) {\n        $max = max($lst);\n        $min = min($lst);\n\
    \        $res[] = $max;\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ [$max, $min]);\n        $lst = array_values($lst);\n    }\n    if (!empty($lst))\
    \ $res[] = $lst[0];\n    return $res;\n}\n", "    if (count($lst) == 0) {\n  \
    \      return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n  \
    \  $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "  $res = [];\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $lst = array_diff($lst, [$min, $max]);\n\
    \  $res[] = $min;\n  $res[] = $max;\n  while (count($lst) > 0) {\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n  }\n  return $res;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n   \
    \ $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \ $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $min_index = array_search($min,\
    \ $lst);\n  $max_index = array_search($max, $lst);\n  $result[] = $min;\n  $result[]\
    \ = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n  $lst = array_values($lst);\n\
    \  while (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $lst_len = count($lst);\n    if ($lst_len == 0)\
    \ {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    while (count($lst) > 0) {\n   \
    \     $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        $lst_len = count($lst);\n        if ($lst_len == 0) {\n  \
    \          return $result;\n        }\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n        $lst_len = count($lst);\n\
    \        if ($lst_len == 0) {\n            return $result;\n        }\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            unset($lst[array_search($min, $lst)]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            unset($lst[array_search($max,\
    \ $lst)]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $count = count($lst);\n   \
    \ $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $result[] = $min;\n    $result[] = $max;\n    if ($count > 2) {\n\
    \        $result = array_merge($result, strange_sort_list($lst));\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $res = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n    \
    \    $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n     \
    \   $lst = array_diff($lst, [$min, $max]);\n    }\n    return $res;\n}\n", " \
    \   $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $min =\
    \ array_shift($lst);\n    $max = array_pop($lst);\n    $result[] = $min;\n   \
    \ $result[] = $max;\n    while (count($lst) > 0) {\n        $min = array_shift($lst);\n\
    \        $max = array_pop($lst);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n       \
    \ return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $lst = array_values($lst);\n\
    \    $lst = array_slice($lst, 2);\n    return array_merge([$min, $max], strange_sort_list($lst));\n\
    }\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n\
    \    while (!empty($lst)) {\n        $max = max($lst);\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$max]);\n        if (empty($lst)) {\n      \
    \      break;\n        }\n        $min = min($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, [$min]);\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $lst = array_unique($lst);\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, [$max]);\n        if (!empty($lst)) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n   \
    \ $result[] = $min;\n    $result[] = $max;\n    for ($i = 1; $i < count($lst)\
    \ - 1; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $lst[$i];\n\
    \        } else {\n            array_unshift($result, $lst[$i]);\n        }\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst", "\tif (empty($lst)) return [];\n\t$result = [];\n\t$min\
    \ = min($lst);\n\t$max = max($lst);\n\t$result[] = $min;\n\t$result[] = $max;\n\
    \t$lst = array_diff($lst, [$min, $max]);\n\twhile (!empty($lst)) {\n\t\t$min =\
    \ min($lst);\n\t\t$max = max($lst);\n\t\t$result[] = $min;\n\t\t$result[] = $max;\n\
    \t\t$lst = array_diff($lst, [$min, $max]);\n\t}\n\treturn $result;\n}\n", "\t\
    $result = [];\n\t$min = min($lst);\n\t$max = max($lst);\n\t$lst = array_diff($lst,\
    \ [$min, $max]);\n\t$result[] = $min;\n\t$result[] = $max;\n\twhile (count($lst)\
    \ > 0) {\n\t\t$min = min($lst);\n\t\t$max = max($lst);\n\t\t$lst = array_diff($lst,\
    \ [$min, $max]);\n\t\t$result[] = $min;\n\t\t$result[] = $max;\n\t}\n\treturn\
    \ $result;\n}\n", "    if (count($lst) == 0) return [];\n    $result = [];\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n       \
    \ $max = max($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n\
    \    }\n    return $result;\n}\n", "  $lst = array_unique($lst);\n  sort($lst);\n\
    \  $len = count($lst);\n  $result = [];\n  for ($i = 0; $i < $len; $i++) {\n \
    \   if ($i % 2 == 0) {\n      $result[] = array_shift($lst);\n    } else {\n \
    \     $result[] = array_pop($lst);\n    }\n  }\n  return $result;\n}\n", "   \
    \ $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $min = $lst[0];\n\
    \    $max = $lst[count($lst) - 1];\n    $i = 0;\n    $j = count($lst) - 1;\n \
    \   while ($i <= $j) {\n        if ($i == $j) {\n            $result[] = $lst[$i];\n\
    \            break;\n        }\n        $result[] = $lst[$i];\n        $result[]\
    \ = $lst[$j];\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i\
    \ < $count) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n   \
    \         $min = min(array_diff($lst, $result));\n        } else {\n         \
    \   $result[] = $max;\n            $max = max(array_diff($lst, $result));\n  \
    \      }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $result[] = $min;\n    $result[] = $max;\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n       \
    \ return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst\
    \ = [];\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0)\
    \ {\n            $new_lst[] = $min;\n            $lst = array_diff($lst, [$min]);\n\
    \            $min = min($lst);\n        } else {\n            $new_lst[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $new_lst;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $lst = array_diff($lst, [$min, $max]);\n    $res[] = $min;\n    $res[] = $max;\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $res[] = $min;\n    \
    \    $res[] = $max;\n    }\n    return $res;\n}\n", "    if (empty($lst)) {\n\
    \        return [];\n    }\n    sort($lst);\n    $result = [];\n    $min = 0;\n\
    \    $max = count($lst) - 1;\n    while ($min <= $max) {\n        $result[] =\
    \ $lst[$min];\n        if ($min != $max) {\n            $result[] = $lst[$max];\n\
    \        }\n        $min++;\n        $max--;\n    }\n    return $result;\n}\n",
  "    if (empty($lst)) {\n        return [];\n    }\n    $sorted = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $sorted[] = $min;\n    $sorted[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (!empty($lst))\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $sorted[] =\
    \ $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $sorted;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst = [];\n   \
    \ $new_lst[] = $min;\n    $new_lst[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    while (!empty($lst)) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $new_lst[] = $min;\n        $new_lst[] = $max;\n     \
    \   $lst = array_diff($lst, [$min, $max]);\n    }\n    return $new_lst;\n}\n",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n    return $result;\n}\n", "    $result = [];\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    if (count($lst) == 0) {\n        return [];\n    }\n  \
    \  sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n  \
    \  while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n       \
    \ }\n    }\n    return $result;\n}\n", "  $result = [];\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $min_index = array_search($min, $lst);\n  $max_index =\
    \ array_search($max, $lst);\n  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n\
    \  unset($lst[$max_index]);\n  $lst = array_values($lst);\n  while (count($lst)\
    \ > 0) {\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n  }\n  return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n \
    \       $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) return [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    return array_merge([$min, $max],\
    \ strange_sort_list($lst));\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    return [$min] + strange_sort_list(array_slice($lst,\
    \ 1, -1)) + [$max];\n}\n", "  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $result = [$min];\n  $lst = array_diff($lst,\
    \ [$min]);\n  while (count($lst) > 0) {\n    $max = max($lst);\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$max]);\n    if (count($lst) == 0) {\n\
    \      break;\n    }\n    $min = min($lst);\n    $result[] = $min;\n    $lst =\
    \ array_diff($lst, [$min]);\n  }\n  return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n    while (!empty($lst))\
    \ {\n        $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n   \
    \     if (empty($lst)) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n       \
    \ if (empty($lst)) {\n            break;\n        }\n        $max = max($lst);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = [$min];\n\
    \    $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n        $max\
    \ = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst, [$max]);\n\
    \        if (empty($lst)) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n\
    \    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $lst = array_values($lst);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $lst = array_values($lst);\n    }\n    return $res;\n\
    }\n", "    $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n  \
    \  $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_slice($lst, 1, count($lst) - 2);\n  \
    \  $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n      \
    \      $result[] = $lst[0];\n            array_shift($lst);\n        } else {\n\
    \            $result[] = $lst[count($lst) - 1];\n            array_pop($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = [];\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n       \
    \ } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = array_shift($lst);\n    \
    \    } else {\n            $result[] = array_pop($lst);\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    $lst_count = count($lst);\n\
    \    if ($lst_count == 0) {\n        return $result;\n    }\n    $lst_count_half\
    \ = $lst_count / 2;\n    $lst_count_half_ceil = ceil($lst_count_half);\n    $lst_count_half_floor\
    \ = floor($lst_count_half);\n    $lst_min = min($lst);\n    $lst_max = max($lst);\n\
    \    $lst_min_index = array_search($lst_min, $lst);\n    $lst_max_index = array_search($lst_max,\
    \ $lst);\n    $lst_min_index_next = $lst_min_index + 1;\n    $lst_max_index_next\
    \ = $lst_max_index + 1;\n    $lst_min_index_prev = $lst_min_index - 1;\n    $lst_max_index_prev\
    \ = $lst_max_index - 1;\n    $lst_min_index_next_value = $lst[$lst_min_index_next];\n\
    \    $lst_max_index_next_value = $lst[$lst_max_index_next];\n    $lst_min_index_prev_value\
    \ = $lst[$lst_min_index_prev];\n    $lst_max_index_prev_value = $lst[$lst_max_index_prev];\n\
    \    $lst_min_index_next_value_max = max($lst_min_index_next_value, $lst_max_index_next_value);\n\
    \    $lst_min_index_prev_value_max = max($lst_min_index_prev_value, $lst_max_index_prev_value);\n\
    \    $lst_min_index_next_value_min = min($lst_min_index_next_value, $lst_max_index_next_value);\n\
    \    $lst_min_index_prev_value_min", "    if (empty($lst)) {\n        return [];\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    return $lst;\n}\n", "    $result = [];\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    for ($i = 0; $i < $count - 2; $i++) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $result[] = $min;\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n", "    $res = [];\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    $len = count($lst);\n    $i = 0;\n    while ($i < $len)\
    \ {\n        $res[] = $lst[$i];\n        if ($i + 1 < $len) {\n            $res[]\
    \ = $lst[$len - $i - 1];\n        }\n        $i++;\n    }\n    return $res;\n\
    }\n", "    if (empty($lst)) return [];\n    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    while (!empty($lst)) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n       \
    \ $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n    }\n \
    \   return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n", "  $result = [];\n  $lst =\
    \ array_unique($lst);\n  sort($lst);\n  $len = count($lst);\n  $i = 0;\n  $j =\
    \ $len - 1;\n  while ($i < $len) {\n    $result[] = $lst[$i];\n    if ($i < $j)\
    \ {\n      $result[] = $lst[$j];\n    }\n    $i++;\n    $j--;\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $lst = array_unique($lst);\n    $lst\
    \ = array_values($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = [$min];\n    $lst = array_diff($lst, [$min]);\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n    return $result;\n}\n", "    if (empty($lst))\
    \ return [];\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n", "    if (empty($lst)) {\n   \
    \     return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = [$min];\n    $lst = array_diff($lst, [$min]);\n    while (!empty($lst)) {\n\
    \        $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        if (empty($lst)) {\n            break;\n        }\n      \
    \  $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n    }\n    return $result;\n}\n", "  if (count($lst) == 0) return\
    \ $lst;\n  $min = min($lst);\n  $max = max($lst);\n  $res = [];\n  $i = 0;\n \
    \ while (count($lst) > 0) {\n    if ($i % 2 == 0) {\n      $res[] = $min;\n  \
    \    $lst = array_diff($lst, [$min]);\n      $min = min($lst);\n    } else {\n\
    \      $res[] = $max;\n      $lst = array_diff($lst, [$max]);\n      $max = max($lst);\n\
    \    }\n    $i++;\n  }\n  return $res;\n}\n", "    if (empty($lst)) {\n      \
    \  return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result\
    \ = [$min];\n    $lst = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n\
    \    $result = array_merge($result, strange_sort_list($lst));\n    return $result;\n\
    }\n", "    if (empty($lst)) return $lst;\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = [$min];\n    $lst = array_diff($lst, [$min]);\n    while (!empty($lst))\
    \ {\n        $max = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        if (empty($lst)) break;\n        $min = min($lst);\n     \
    \   $res[] = $min;\n        $lst = array_diff($lst, [$min]);\n    }\n    return\
    \ $res;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [$min];\n    $lst = array_diff($lst,\
    \ [$min]);\n    $lst = array_values($lst);\n    $i = 0;\n    while (!empty($lst))\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = max($lst);\n        \
    \    $lst = array_diff($lst, [max($lst)]);\n        } else {\n            $result[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        }\n\
    \        $lst = array_values($lst);\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) return [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $lst\
    \ = array_values($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index]\
    \ = $min;\n    $lst = array_values($lst);\n    return $lst;\n}\n", "    if (empty($lst))\
    \ {\n        return [];\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    return\
    \ [$min] + strange_sort_list(array_slice($lst, 1, -1)) + [$max];\n}\n", "    $res\
    \ = [];\n    $len = count($lst);\n    if ($len == 0) {\n        return $res;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n   \
    \ $lst = array_diff($lst, [$min]);\n    $len = count($lst);\n    if ($len == 0)\
    \ {\n        return $res;\n    }\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $len = count($lst);\n    if ($len == 0) {\n        return $res;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n   \
    \ $lst = array_diff($lst, [$min]);\n    $len = count($lst);\n    if ($len == 0)\
    \ {\n        return $res;\n    }\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $len = count($lst);\n    if ($len == 0) {\n        return $res;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n   \
    \ $lst = array_diff($lst, [$min]);\n    $len = count($lst);\n    if ($len == 0)\
    \ {\n        return $res;\n    }\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $len = count($lst);\n    if ($len == 0) {\n        return $res;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res[] = $min;\n   \
    \ $lst = array_diff($lst, [$min]);\n    $len = count($lst);\n    if ($len == 0)\
    \ {\n        return $res;\n    }\n    $res[] = $max;\n    $lst = array_diff($l",
  "    if (count($lst) == 0) {\n        return [];\n    }\n    sort($lst);\n    $result\
    \ = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n    \
    \    $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n         \
    \   $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return [];\n    }\n    sort($lst);\n\
    \    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n \
    \           $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $lst =\
    \ array_values($lst);\n    $res = [$min, $max];\n    while (count($lst) > 0) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $lst = array_values($lst);\n        $res = array_merge($res,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n", "    $result = [];\n    $length\
    \ = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while ($i < $length) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    if (empty($lst)) {\n        return [];\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $lst = array_values($lst);\n    return [$min]\
    \ + strange_sort_list(array_slice($lst, 1));\n}\n", "    $result = [];\n    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    $min = $lst[0];\n    $max = $lst[count($lst)\
    \ - 1];\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0)\
    \ {\n            $result[] = $min;\n            $key = array_search($min, $lst);\n\
    \            unset($lst[$key]);\n            $min = min($lst);\n        } else\
    \ {\n            $result[] = $max;\n            $key = array_search($max, $lst);\n\
    \            unset($lst[$key]);\n            $max = max($lst);\n        }\n  \
    \      $i++;\n    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n\
    \        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result = [];\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    while (count($lst) > 0)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n", "    if\
    \ (empty($lst)) {\n        return [];\n    }\n    sort($lst);\n    $result = [];\n\
    \    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \ if (count($lst) == 0) {\n    return $lst;\n  }\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  $result = [$min];\n  $lst = array_diff($lst, [$min]);\n  while\
    \ (count($lst) > 0) {\n    $max = max($lst);\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$max]);\n    if (count($lst) == 0) {\n      break;\n   \
    \ }\n    $min = min($lst);\n    $result[] = $min;\n    $lst = array_diff($lst,\
    \ [$min]);\n  }\n  return $result;\n}\n", "    if (empty($lst)) {\n        return\
    \ [];\n    }\n\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n\n    while (!empty($lst)) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, [$min, $max]);\n    }\n\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

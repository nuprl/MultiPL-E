name: HumanEval_90_next_smallest
language: php
prompt: "<?php\n// You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\n// next_smallest([1, 2, 3, 4, 5]) == 2\n// next_smallest([5,\
  \ 1, 4, 3, 2]) == 2\n// next_smallest([]) == None\n// next_smallest([1, 1]) == None\n\
  function next_smallest($lst) {\n"
tests: "function candidate(...$args) {\n    return next_smallest(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 4, 3, 2)) !==\
  \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1))\
  \ !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1, 1, 1, 0)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-35,\
  \ 34, 12, -45)) !== -35) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (count($lst) < 2) {\n        return null;\n    }\n    $min =\
    \ $lst[0];\n    $next_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n\
    \        if ($lst[$i] < $min) {\n            $next_min = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $next_min || $next_min == null) {\n\
    \            $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n\
    }\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $item) {\n\
    \        if ($item > $min && $item < $min2) {\n            $min2 = $item;\n  \
    \      }\n    }\n    return $min2 == $min ? null : $min2;\n}\n", "    if (count($lst)\
    \ < 2) return null;\n    $smallest = $lst[0];\n    $second_smallest = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) return null;\n    $min = min($lst);\n    $lst\
    \ = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $lst[array_search($min, $lst)] = null;\n   \
    \ return min($lst);\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    $min_index\
    \ = 0;\n    $second_min = null;\n    foreach ($lst as $index => $value) {\n  \
    \      if ($value == $min) {\n            $min_count++;\n            $min_index\
    \ = $index;\n        }\n        if ($value < $min) {\n            $second_min\
    \ = $value;\n        }\n    }\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    if ($second_min == null) {\n        return null;\n    }\n    foreach\
    \ ($lst as $index => $value) {\n        if ($index != $min_index) {\n        \
    \    if ($value < $second_min) {\n                $second_min = $value;\n    \
    \        }\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count =\
    \ 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "  if (count($lst) < 2) return null;\n  $min = $lst[0];\n  $next_min = null;\n\
    \  for ($i = 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $min) {\n      $next_min\
    \ = $min;\n      $min = $lst[$i];\n    } else if ($lst[$i] < $next_min || $next_min\
    \ == null) {\n      $next_min = $lst[$i];\n    }\n  }\n  return $next_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = $min;\n    foreach ($lst as $v) {\n        if ($v > $min && $v <\
    \ $min2) {\n            $min2 = $v;\n        }\n    }\n    if ($min2 == $min)\
    \ {\n        return null;\n    }\n    return $min2;\n}\n", "  $min = $lst[0];\n\
    \  $min2 = null;\n  foreach ($lst as $n) {\n    if ($n < $min) {\n      $min2\
    \ = $min;\n      $min = $n;\n    } else if ($n < $min2 || $min2 === null) {\n\
    \      $min2 = $n;\n    }\n  }\n  return $min2;\n}\n", "    $min = min($lst);\n\
    \    $min2 = $min;\n    foreach ($lst as $item) {\n        if ($item > $min &&\
    \ $item < $min2) {\n            $min2 = $item;\n        }\n    }\n    return $min2\
    \ == $min ? null : $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } elseif ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $v) {\n        if ($v > $min) {\n            if ($min2 === null || $v < $min2)\
    \ {\n                $min2 = $v;\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count =\
    \ 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count == count($lst)) {\n   \
    \     return null;\n    }\n    $lst = array_unique($lst);\n    sort($lst);\n \
    \   return $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst) < 2) return\
    \ null;\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $n) {\n\
    \        if ($n != $min) {\n            if ($min2 === null || $n < $min2) $min2\
    \ = $n;\n        }\n    }\n    return $min2;\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $smallest = min($lst);\n    $second_smallest = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num == $smallest) {\n            continue;\n\
    \        }\n        if ($second_smallest === null || $num < $second_smallest)\
    \ {\n            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] > $min) {\n\
    \            if ($min2 == null || $lst[$i] < $min2) {\n                $min2 =\
    \ $lst[$i];\n            }\n        }\n    }\n    return $min2;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min || $second_min === null) {\n         \
    \   $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n",
  "    if (count($lst) < 2) return null;\n    $min = min($lst);\n    $min2 = $min;\n\
    \    foreach ($lst as $v) {\n        if ($v > $min && $v < $min2) {\n        \
    \    $min2 = $v;\n        }\n    }\n    return $min2 == $min ? null : $min2;\n\
    }\n", "  $smallest = null;\n  $secondSmallest = null;\n  foreach ($lst as $num)\
    \ {\n    if ($smallest === null) {\n      $smallest = $num;\n    } else if ($num\
    \ < $smallest) {\n      $secondSmallest = $smallest;\n      $smallest = $num;\n\
    \    } else if ($secondSmallest === null || $num < $secondSmallest) {\n      $secondSmallest\
    \ = $num;\n    }\n  }\n  return $secondSmallest;\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count = 0;\n\
    \    foreach ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $min_index = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n\
    \    return min($lst);\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    return count($lst) > 1 ? $lst[1] : null;\n}\n", "    $min = $lst[0];\n  \
    \  $min2 = null;\n    foreach ($lst as $i) {\n        if ($i < $min) {\n     \
    \       $min2 = $min;\n            $min = $i;\n        } elseif ($i < $min2 ||\
    \ $min2 === null) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min) {\n            if ($min2 === null\
    \ || $item < $min2) {\n                $min2 = $item;\n            }\n       \
    \ }\n    }\n    return $min2;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    foreach ($lst as $num) {\n        if ($num < $smallest) {\n   \
    \         $second_smallest = $smallest;\n            $smallest = $num;\n     \
    \   } elseif ($num < $second_smallest || $second_smallest === null) {\n      \
    \      $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count == count($lst)) {\n        return null;\n    }\n    $lst =\
    \ array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "\t$min = min($lst);\n\t$lst = array_diff($lst, [$min]);\n\
    \tif (empty($lst)) {\n\t\treturn null;\n\t}\n\treturn min($lst);\n}\n", "  if\
    \ (count($lst) < 2) {\n    return null;\n  }\n  $min = $lst[0];\n  $second = null;\n\
    \  for ($i = 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $min) {\n      $second\
    \ = $min;\n      $min = $lst[$i];\n    } else if ($lst[$i] < $second || $second\
    \ === null) {\n      $second = $lst[$i];\n    }\n  }\n  return $second;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2 || $min2 === null) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "  if (count($lst) < 2) {\n    return\
    \ null;\n  }\n  $min = min($lst);\n  $lst = array_diff($lst, [$min]);\n  return\
    \ min($lst);\n}\n", "    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $second = $min;\n            $min = $lst[$i];\n     \
    \   } else if ($lst[$i] < $second || $second === null) {\n            $second\
    \ = $lst[$i];\n        }\n    }\n    return $second;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = min($lst);\n    $lst =\
    \ array_diff($lst, [$smallest]);\n    return min($lst);\n}\n", "    $smallest\
    \ = null;\n    $next_smallest = null;\n    foreach ($lst as $item) {\n       \
    \ if ($smallest === null) {\n            $smallest = $item;\n        } else if\
    \ ($item < $smallest) {\n            $next_smallest = $smallest;\n           \
    \ $smallest = $item;\n        } else if ($next_smallest === null || $item < $next_smallest)\
    \ {\n            $next_smallest = $item;\n        }\n    }\n    return $next_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2 || $min2 === null) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n       \
    \     $second_min = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $second_min || $second_min === null) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n   \
    \ $lst = array_diff($lst, [$min]);\n    if (empty($lst)) {\n        return null;\n\
    \    }\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i]\
    \ < $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count =\
    \ count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    $min_key = array_search($min, $lst);\n    $lst[$min_key] = INF;\n\
    \    return min($lst);\n}\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach\
    \ ($lst as $i) {\n        if ($i > $min && $i < $min2) {\n            $min2 =\
    \ $i;\n        }\n    }\n    return $min2 == $min ? null : $min2;\n}\n", "  if\
    \ (count($lst) < 2) {\n    return null;\n  }\n  $min = $lst[0];\n  $next = null;\n\
    \  for ($i = 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $min) {\n      $next\
    \ = $min;\n      $min = $lst[$i];\n    } else if ($lst[$i] < $next || $next ==\
    \ null) {\n      $next = $lst[$i];\n    }\n  }\n  return $next;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n  \
    \  $min2 = null;\n    foreach ($lst as $e) {\n        if ($e > $min) {\n     \
    \       if ($min2 === null || $e < $min2) {\n                $min2 = $e;\n   \
    \         }\n        }\n    }\n    return $min2;\n}\n", "    $min = null;\n  \
    \  $second_min = null;\n    foreach ($lst as $val) {\n        if ($min === null)\
    \ {\n            $min = $val;\n        } elseif ($val < $min) {\n            $second_min\
    \ = $min;\n            $min = $val;\n        } elseif ($second_min === null ||\
    \ $val < $second_min) {\n            $second_min = $val;\n        }\n    }\n \
    \   return $second_min;\n}\n", "    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_count = 0;\n    $max_count = 0;\n    foreach ($lst as $item) {\n   \
    \     if ($item == $min) {\n            $min_count++;\n        }\n        if ($item\
    \ == $max) {\n            $max_count++;\n        }\n    }\n    if ($min_count\
    \ > 1 || $max_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "  if (count($lst) < 2) {\n    return\
    \ null;\n  }\n  $smallest = $lst[0];\n  $second_smallest = null;\n  for ($i =\
    \ 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $smallest) {\n      $second_smallest\
    \ = $smallest;\n      $smallest = $lst[$i];\n    } else if ($lst[$i] < $second_smallest\
    \ || $second_smallest == null) {\n      $second_smallest = $lst[$i];\n    }\n\
    \  }\n  return $second_smallest;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $next_min = null;\n    for ($i = 1; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i] < $next_min\
    \ || $next_min === null) {\n            $next_min = $lst[$i];\n        }\n   \
    \ }\n    return $next_min;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $lst = array_unique($lst);\n    sort($lst);\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $lst = array_diff($lst, [$min]);\n    return\
    \ min($lst);\n}\n", "  $min = min($lst);\n  $min2 = $min;\n  foreach ($lst as\
    \ $num) {\n    if ($num > $min && $num < $min2) {\n      $min2 = $num;\n    }\n\
    \  }\n  return $min2 == $min ? null : $min2;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n \
    \   foreach ($lst as $value) {\n        if ($value > $min && $value < $min2) {\n\
    \            $min2 = $value;\n        }\n    }\n    if ($min2 == $min) {\n   \
    \     return null;\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) return null;\n    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst\
    \ as $n) {\n        if ($n > $min && $n < $min2) $min2 = $n;\n    }\n    return\
    \ $min2 == $min ? null : $min2;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $e) {\n\
    \        if ($e > $min) {\n            if ($min2 === null || $e < $min2) {\n \
    \               $min2 = $e;\n            }\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_count = 0;\n    $second_min = null;\n\
    \    foreach ($lst as $element) {\n        if ($element == $min) {\n         \
    \   $min_count++;\n        } else if ($second_min == null || $element < $second_min)\
    \ {\n            $second_min = $element;\n        }\n    }\n    if ($min_count\
    \ > 1) {\n        return null;\n    }\n    return $second_min;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n  \
    \  $min2 = null;\n    foreach ($lst as $n) {\n        if ($n > $min) {\n     \
    \       if ($min2 === null || $n < $min2) {\n                $min2 = $n;\n   \
    \         }\n        }\n    }\n    return $min2;\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "  if (count($lst) < 2) {\n    return null;\n  }\n \
    \ $min = $lst[0];\n  $next_min = null;\n  for ($i = 1; $i < count($lst); $i++)\
    \ {\n    if ($lst[$i] < $min) {\n      $next_min = $min;\n      $min = $lst[$i];\n\
    \    } else if ($lst[$i] < $next_min || $next_min === null) {\n      $next_min\
    \ = $lst[$i];\n    }\n  }\n  return $next_min;\n}\n", "    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", "    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n \
    \   foreach ($lst as $item) {\n        if ($item < $min) {\n            $second_min\
    \ = $min;\n            $min = $item;\n        } elseif ($item < $second_min ||\
    \ $second_min === null) {\n            $second_min = $item;\n        }\n    }\n\
    \    return $second_min;\n}\n", "    if (count($lst) < 2) return null;\n    $min\
    \ = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item\
    \ == $min) continue;\n        if ($min2 == null || $item < $min2) $min2 = $item;\n\
    \    }\n    return $min2;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n\
    \    $second_min = null;\n    foreach ($lst as $num) {\n        if ($num == $min)\
    \ {\n            $min_count++;\n        } elseif ($second_min === null || $num\
    \ < $second_min) {\n            $second_min = $num;\n        }\n    }\n    return\
    \ $min_count == 1 ? $second_min : null;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = INF;\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = INF;\n    return min($lst);\n}\n", "    if (count($lst) < 2) return null;\n\
    \    $min = min($lst);\n    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_filter($lst, function($x) use ($min) {\n    \
    \    return $x > $min;\n    });\n    if (empty($lst)) {\n        return null;\n\
    \    }\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    return count($lst) > 1 ? $lst[1] : null;\n}\n", "    $min = $lst[0];\n  \
    \  $min2 = null;\n    foreach ($lst as $i) {\n        if ($i < $min) {\n     \
    \       $min2 = $min;\n            $min = $i;\n        } elseif ($i < $min2 ||\
    \ $min2 === null) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) return null;\n    $min = min($lst);\n    $min2\
    \ = null;\n    foreach ($lst as $x) {\n        if ($x > $min) {\n            if\
    \ ($min2 === null || $x < $min2) {\n                $min2 = $x;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = $lst[0];\n    $next_min = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n       \
    \     $next_min = $min;\n            $min = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $next_min || $next_min === null) {\n            $next_min = $lst[$i];\n  \
    \      }\n    }\n    return $next_min;\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $smallest\
    \ = null;\n    $second_smallest = null;\n    foreach ($lst as $num) {\n      \
    \  if ($smallest === null) {\n            $smallest = $num;\n        } else if\
    \ ($num < $smallest) {\n            $second_smallest = $smallest;\n          \
    \  $smallest = $num;\n        } else if ($second_smallest === null || $num < $second_smallest)\
    \ {\n            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $max = max($lst);\n    $min_count = 0;\n   \
    \ $max_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n\
    \            $min_count++;\n        }\n        if ($item == $max) {\n        \
    \    $max_count++;\n        }\n    }\n    if ($min_count > 1 || $max_count > 1)\
    \ {\n        return null;\n    }\n    return $min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $item) {\n        if ($item > $min) {\n            if ($min2 === null ||\
    \ $item < $min2) {\n                $min2 = $item;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n\
    \    if (count($lst) < 2) return null;\n    sort($lst);\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n\necho next_smallest([1, 2, 3, 4,\
    \ 5]) . \"\\n\";\necho next_smallest([5, 1, 4, 3, 2]) . \"\\n\";\necho next_smallest([])\
    \ . \"\\n\";\necho next_smallest([1, 1]) . \"\\n\";", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n \
    \   foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n", "  $min =\
    \ min($lst);\n  $min_count = 0;\n  $second_min = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item == $min) {\n      $min_count++;\n    } else if ($second_min\
    \ == null || $item < $second_min) {\n      $second_min = $item;\n    }\n  }\n\
    \  return $min_count > 1 ? null : $second_min;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n \
    \   foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "  if (count($lst) < 2) {\n    return\
    \ null;\n  }\n  $smallest = min($lst);\n  $lst = array_diff($lst, [$smallest]);\n\
    \  return min($lst);\n}\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach\
    \ ($lst as $item) {\n        if ($item > $min && $item < $min2) {\n          \
    \  $min2 = $item;\n        }\n    }\n    return $min2 == $min ? null : $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, [$min]);\n    if (count($lst) > 0)\
    \ {\n        return min($lst);\n    }\n    return null;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ elseif ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = INF;\n    return min($lst);\n}\n", "    if (count($lst) < 2) return null;\n\
    \    $min = $lst[0];\n    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $min2 || $min2 == null) {\n     \
    \       $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min || $second_min === null) {\n         \
    \   $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n",
  "  if (count($lst) < 2) return null;\n  $min = min($lst);\n  $min_index = array_search($min,\
    \ $lst);\n  unset($lst[$min_index]);\n  $min2 = min($lst);\n  return $min2;\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return NULL;\n    }\n    $min = min($lst);\n    $min2 = NULL;\n\
    \    foreach ($lst as $num) {\n        if ($num > $min) {\n            if ($min2\
    \ === NULL || $num < $min2) {\n                $min2 = $num;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) return null;\n\
    \    $min = $lst[0];\n    $next_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min || $next_min\
    \ == null) {\n            $next_min = $lst[$i];\n        }\n    }\n    return\
    \ $next_min;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    $min_index\
    \ = 0;\n    foreach ($lst as $key => $value) {\n        if ($value == $min) {\n\
    \            $min_count++;\n            $min_index = $key;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst[$min_index]\
    \ = null;\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n  \
    \          $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n   \
    \ sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n    return\
    \ $lst[1];\n}\n", "    if (empty($lst)) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $lst = array_diff($lst, [$min]);\n    if (empty($lst)) {\n\
    \        return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min === null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n",
  "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $value) {\n  \
    \      if ($value == $min) {\n            $min_count++;\n        }\n    }\n  \
    \  if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = PHP_INT_MAX;\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n \
    \       return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $elem) {\n\
    \        if ($elem > $min && $elem < $min2) {\n            $min2 = $elem;\n  \
    \      }\n    }\n    return $min2 == $min ? null : $min2;\n}\n", "    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return empty($lst) ? null : min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) return null;\n    $min = $lst[0];\n    $second_min\
    \ = null;\n    foreach ($lst as $val) {\n        if ($val < $min) {\n        \
    \    $second_min = $min;\n            $min = $val;\n        } elseif ($val < $second_min\
    \ || $second_min === null) {\n            $second_min = $val;\n        }\n   \
    \ }\n    return $second_min;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n\
    \        if ($item == $min) {\n            $min_count++;\n        } elseif ($second_min\
    \ === null || $item < $second_min) {\n            $second_min = $item;\n     \
    \   }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $e) {\n      \
    \  if ($e != $min) {\n            if ($min2 == null || $e < $min2) {\n       \
    \         $min2 = $e;\n            }\n        }\n    }\n    return $min2;\n}\n",
  "    if (count($lst) < 2) return null;\n    $min = $lst[0];\n    $second_min = null;\n\
    \    foreach ($lst as $item) {\n        if ($item < $min) {\n            $second_min\
    \ = $min;\n            $min = $item;\n        } elseif ($item < $second_min ||\
    \ $second_min === null) {\n            $second_min = $item;\n        }\n    }\n\
    \    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $smallest = null;\n\
    \    $second_smallest = null;\n    foreach ($lst as $num) {\n        if ($smallest\
    \ === null) {\n            $smallest = $num;\n        } else if ($num < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $num;\n\
    \        } else if ($second_smallest === null || $num < $second_smallest) {\n\
    \            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n\necho next_smallest([1, 2, 3, 4, 5]) . \"\\n\";\necho next_smallest([5, 1,\
    \ 4, 3, 2]) . \"\\n\";\necho next_smallest([]) . \"\\n\";\necho next_smallest([1,\
    \ 1]) . \"\\n\";", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$smallest = $lst[0];\n\
    \t$second_smallest = null;\n\tfor ($i = 1; $i < count($lst); $i++) {\n\t\tif ($lst[$i]\
    \ < $smallest) {\n\t\t\t$second_smallest = $smallest;\n\t\t\t$smallest = $lst[$i];\n\
    \t\t} elseif ($lst[$i] < $second_smallest || $second_smallest === null) {\n\t\t\
    \t$second_smallest = $lst[$i];\n\t\t}\n\t}\n\treturn $second_smallest;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", "  if (count($lst)\
    \ < 2) {\n    return null;\n  }\n  $min = min($lst);\n  $min_count = 0;\n  foreach\
    \ ($lst as $item) {\n    if ($item == $min) {\n      $min_count++;\n    }\n  }\n\
    \  if ($min_count > 1) {\n    return null;\n  }\n  $lst = array_diff($lst, [$min]);\n\
    \  return min($lst);\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    if (empty($lst)) {\n        return null;\n    }\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $e) {\n        if ($e > $min) {\n   \
    \         if ($min2 === null || $e < $min2) {\n                $min2 = $e;\n \
    \           }\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i\
    \ = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n           \
    \ $second_min = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $second_min || $second_min === null) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n   \
    \ $min2 = null;\n    foreach ($lst as $e) {\n        if ($e != $min) {\n     \
    \       if ($min2 == null || $e < $min2) {\n                $min2 = $e;\n    \
    \        }\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $next_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $next_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $next_smallest || $next_smallest\
    \ == null) {\n            $next_smallest = $lst[$i];\n        }\n    }\n    return\
    \ $next_smallest;\n}\n", "    if (count($lst) < 2) {\n        return null;\n \
    \   }\n    $min = min($lst);\n    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    if (empty($lst)) {\n        return null;\n    }\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "  if (count($lst) < 2) {\n    return null;\n  }\n  $min = min($lst);\n\
    \  $lst = array_diff($lst, [$min]);\n  return min($lst);\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    $min_index = 0;\n    foreach ($lst as $key => $value)\
    \ {\n        if ($value == $min) {\n            $min_count++;\n            $min_index\
    \ = $key;\n        }\n    }\n    if ($min_count == 1) {\n        unset($lst[$min_index]);\n\
    \        return min($lst);\n    } else {\n        return null;\n    }\n}\n", " \
    \   $smallest = null;\n    $second_smallest = null;\n    foreach ($lst as $num)\
    \ {\n        if ($smallest === null) {\n            $smallest = $num;\n      \
    \  } elseif ($num < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $num;\n        } elseif ($second_smallest === null ||\
    \ $num < $second_smallest) {\n            $second_smallest = $num;\n        }\n\
    \    }\n    return $second_smallest;\n}\n", "  $min = min($lst);\n  $min2 = $min;\n\
    \  foreach ($lst as $v) {\n    if ($v > $min && $v < $min2) {\n      $min2 = $v;\n\
    \    }\n  }\n  return $min2 == $min ? null : $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n", "    $smallest = null;\n\
    \    $next_smallest = null;\n    foreach ($lst as $item) {\n        if ($smallest\
    \ === null) {\n            $smallest = $item;\n        } else if ($item < $smallest)\
    \ {\n            $next_smallest = $smallest;\n            $smallest = $item;\n\
    \        } else if ($next_smallest === null || $item < $next_smallest) {\n   \
    \         $next_smallest = $item;\n        }\n    }\n    return $next_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $val) {\n        if ($val == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n}\n", "  \
    \  if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $next_min = null;\n\
    \    foreach ($lst as $item) {\n        if ($item < $min) {\n            $next_min\
    \ = $min;\n            $min = $item;\n        } elseif ($item < $next_min || $next_min\
    \ === null) {\n            $next_min = $item;\n        }\n    }\n    return $next_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $v) {\n        if ($v > $min) {\n   \
    \         if ($min2 === null || $v < $min2) {\n                $min2 = $v;\n \
    \           }\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $v) {\n\
    \        if ($v < $min2 && $v != $min) {\n            $min2 = $v;\n        }\n\
    \    }\n    return $min2;\n}\n", "    if (count($lst) < 2) return null;\n    $min\
    \ = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n\
    \        if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) return null;\n    $sorted = $lst;\n    sort($sorted);\n\
    \    $smallest = $sorted[0];\n    $second_smallest = null;\n    foreach ($sorted\
    \ as $i => $e) {\n        if ($e > $smallest) {\n            $second_smallest\
    \ = $e;\n            break;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2 || $min2 === null) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  array_splice($lst, $min_index, 1);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) return null;\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) $min_count++;\n    }\n    if ($min_count\
    \ > 1) return null;\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = PHP_INT_MAX;\n    return min($lst);\n}\n", "    if (count($lst) < 2) return\
    \ null;\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "  if (count($lst) < 2) {\n    return null;\n  }\n  $min\
    \ = min($lst);\n  $min_index = array_search($min, $lst);\n  unset($lst[$min_index]);\n\
    \  return min($lst);\n}\n", "  if (count($lst) < 2) return null;\n  $min = min($lst);\n\
    \  $min2 = $min;\n  foreach ($lst as $i) {\n    if ($i > $min && $i < $min2) $min2\
    \ = $i;\n  }\n  return $min2 == $min ? null : $min2;\n}\n", "    if (count($lst)\
    \ < 2) return null;\n    $min = $lst[0];\n    $second_min = null;\n    for ($i\
    \ = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n           \
    \ $second_min = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $second_min || $second_min === null) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "  if (count($lst) < 2) {\n\
    \    return null;\n  }\n  $smallest = $lst[0];\n  $next_smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($item < $smallest) {\n      $next_smallest = $smallest;\n\
    \      $smallest = $item;\n    } else if ($item < $next_smallest || $next_smallest\
    \ === null) {\n      $next_smallest = $item;\n    }\n  }\n  return $next_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "  $smallest = null;\n  $next_smallest = null;\n \
    \ foreach ($lst as $item) {\n    if ($smallest === null) {\n      $smallest =\
    \ $item;\n    } elseif ($item < $smallest) {\n      $next_smallest = $smallest;\n\
    \      $smallest = $item;\n    } elseif ($next_smallest === null || $item < $next_smallest)\
    \ {\n      $next_smallest = $item;\n    }\n  }\n  return $next_smallest;\n}\n",
  "  $smallest = min($lst);\n  $smallest_count = 0;\n  foreach ($lst as $num) {\n\
    \    if ($num == $smallest) {\n      $smallest_count++;\n    }\n  }\n  if ($smallest_count\
    \ > 1) {\n    return null;\n  }\n  $smallest_index = array_search($smallest, $lst);\n\
    \  $lst[$smallest_index] = PHP_INT_MAX;\n  return min($lst);\n}\n", "  if (count($lst)\
    \ < 2) return null;\n  $min = min($lst);\n  $min_count = 0;\n  $second_min = null;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    if ($lst[$i] == $min) {\n     \
    \ $min_count++;\n    } else if ($second_min == null || $lst[$i] < $second_min)\
    \ {\n      $second_min = $lst[$i];\n    }\n  }\n  if ($min_count > 1) return null;\n\
    \  return $second_min;\n}\n", "  $min = min($lst);\n  $min2 = null;\n  foreach\
    \ ($lst as $e) {\n    if ($e > $min && ($min2 === null || $e < $min2)) {\n   \
    \   $min2 = $e;\n    }\n  }\n  return $min2;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    if (count($lst) == 0) {\n        return null;\n    }\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } elseif ($lst[$i] < $next_min) {\n      \
    \      $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n", " \
    \   if (count($lst) < 2) return null;\n    $min = $lst[0];\n    $next_min = null;\n\
    \    foreach ($lst as $num) {\n        if ($num < $min) {\n            $next_min\
    \ = $min;\n            $min = $num;\n        } elseif ($num < $next_min || $next_min\
    \ === null) {\n            $next_min = $num;\n        }\n    }\n    return $next_min;\n\
    }\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    return $lst[1];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

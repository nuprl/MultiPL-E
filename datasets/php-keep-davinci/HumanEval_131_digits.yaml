name: HumanEval_131_digits
language: php
prompt: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
  // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
  \  == 0\n// digits(235) == 15\nfunction digits($n) {\n"
tests: "function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
  \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
  \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $result = 1;\n  $n = str_split($n);\n  foreach ($n as $num) {\n \
    \   if ($num % 2 != 0) {\n      $result *= $num;\n    }\n  }\n  return $result;\n\
    }\n", "  $digits = str_split($n);\n  $odd_digits = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 !== 0;\n  });\n  return array_product($odd_digits)\
    \ ?: 0;\n}\n", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as\
    \ $value) {\n        if ($value % 2 != 0) {\n            $result *= $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \ $arr = str_split($n);\n  $result = 1;\n  foreach ($arr as $value) {\n    if\
    \ ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "    $digits = str_split($n);\n    $odds = array_filter($digits,\
    \ function($digit) {\n        return $digit % 2 == 1;\n    });\n    return array_product($odds);\n\
    }\n", "  $result = 1;\n  $n = str_split($n);\n  foreach ($n as $value) {\n   \
    \ if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $digit) {\n\
    \        if ($digit % 2 == 1) {\n            $result *= $digit;\n        }\n \
    \   }\n    return $result;\n}\n", "    $n = str_split($n);\n    $result = 1;\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\n", "    $result = 1;\n\
    \    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "    $odds = 1;\n    $n = (string)$n;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n        \
    \    $odds *= $n[$i];\n        }\n    }\n    return $odds;\n}\n", "    $arr =\
    \ str_split($n);\n    $result = 1;\n    foreach ($arr as $value) {\n        if\
    \ ($value % 2 == 1) {\n            $result *= $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n\
    \ as $value) {\n        if ($value % 2 != 0) {\n            $result *= $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \ $result = 1;\n  $n = str_split($n);\n  foreach ($n as $value) {\n    if ($value\
    \ % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n}\n",
  "  $digits = str_split($n);\n  $oddDigits = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 === 1;\n  });\n  return array_product($oddDigits) ?:\
    \ 0;\n}\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $value)\
    \ {\n        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n\
    \    }\n    return $result;\n}\n", "    $number = $n;\n    $result = 1;\n    while\
    \ ($number > 0) {\n        $digit = $number % 10;\n        if ($digit % 2 != 0)\
    \ {\n            $result *= $digit;\n        }\n        $number = (int)($number\
    \ / 10);\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}", "    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \ $n = str_split($n);\n  $sum = 1;\n  foreach ($n as $key => $value) {\n    if\
    \ ($value % 2 !== 0) {\n      $sum *= $value;\n    }\n  }\n  return $sum;\n}",
  "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ($n[$i] % 2 == 1) {\n            $result *= $n[$i];\n        }\n\
    \    }\n    return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) .\
    \ \"\\n\";\necho digits(235) . \"\\n\";", "  $odds = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $odds *= $digit;\n\
    \    }\n  }\n  return $odds;\n}\n", "  $odds = 1;\n  $digits = str_split($n);\n\
    \  foreach ($digits as $digit) {\n    if ($digit % 2 != 0) {\n      $odds *= $digit;\n\
    \    }\n  }\n  return $odds;\n}\n", "  $n = str_split($n);\n  $odd = 1;\n  foreach\
    \ ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $odd *= $digit;\n    }\n\
    \  }\n  return $odd;\n}\n", "  $result = 1;\n  $n = (string)$n;\n  for ($i = 0;\
    \ $i < strlen($n); $i++) {\n    if ($n[$i] % 2 !== 0) {\n      $result *= $n[$i];\n\
    \    }\n  }\n  return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";", "  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $number) {\n    if ($number % 2 !== 0) {\n      $result\
    \ *= $number;\n    }\n  }\n  return $result;\n}\n", "    $result = 1;\n    $n\
    \ = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "  $n = str_split($n);\n  $sum = 1;\n  foreach\
    \ ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $sum *= $value;\n\
    \    }\n  }\n  return $sum;\n}\n", "    $n = str_split($n);\n    $odd = 1;\n \
    \   foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n            $odd\
    \ *= $digit;\n        }\n    }\n    return $odd;\n}\n", "    $result = 1;\n  \
    \  $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 == 1) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value) {\n   \
    \ if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value) {\n   \
    \ if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n\
    \        if ($value % 2 !== 0) {\n            $result *= $value;\n        }\n\
    \    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $total = 1;\n  foreach\
    \ ($n as $number) {\n    if ($number % 2 != 0) {\n      $total *= $number;\n \
    \   }\n  }\n  return $total;\n}\n", "  $n = str_split($n);\n  $result = 1;\n \
    \ foreach ($n as $value) {\n    if ($value % 2 !== 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}", "  $n = str_split($n);\n  $result = 1;\n \
    \ foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n\
    \  foreach ($n as $value) {\n    if ($value % 2 !== 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";", "    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $n = str_split($n);\n    $result = 1;\n    foreach ($n as $number) {\n   \
    \     if ($number % 2 !== 0) {\n            $result *= $number;\n        }\n \
    \   }\n    return $result;\n}\n", "  $result = 1;\n  $n = str_split($n);\n  foreach\
    \ ($n as $num) {\n    if ($num % 2 !== 0) {\n      $result *= $num;\n    }\n \
    \ }\n  return $result;\n}\n\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\n\
    echo digits(235) . PHP_EOL;", "    $digits = str_split($n);\n    $odds = array_filter($digits,\
    \ function($digit) {\n        return $digit % 2 !== 0;\n    });\n    return array_product($odds);\n\
    }\n", "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n);\
    \ $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $value) {\n    if ($value % 2 == 1) {\n    \
    \  $result *= $value;\n    }\n  }\n  return $result;\n}", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $key => $value) {\n    if ($value % 2 != 0)\
    \ {\n      $result *= $value;\n    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $key => $value) {\n    if ($value % 2 != 0)\
    \ {\n      $result *= $value;\n    }\n  }\n  return $result;\n}\n", "    $n =\
    \ str_split($n);\n    $odd = 1;\n    foreach ($n as $number) {\n        if ($number\
    \ % 2 != 0) {\n            $odd *= $number;\n        }\n    }\n    return $odd;\n\
    }\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $key => $value)\
    \ {\n    if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $key\
    \ => $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n    }\n\
    \  }\n  return $result;\n}\n", "  $digits = str_split($n);\n  $odds = array_filter($digits,\
    \ function($digit) {\n    return $digit % 2 !== 0;\n  });\n  return array_product($odds)\
    \ ?: 0;\n}\n", "    $odd_digits = array_filter(str_split($n), function($digit)\
    \ {\n        return $digit % 2 != 0;\n    });\n    return array_product($odd_digits)\
    \ ?: 0;\n}\n", "  $result = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n);\
    \ $i++) {\n    if ($n[$i] % 2 !== 0) {\n      $result *= $n[$i];\n    }\n  }\n\
    \  return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n\
    \ as $key => $value) {\n    if ($value % 2 !== 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}", "  $n = str_split($n);\n  $odd = 1;\n  foreach\
    \ ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $odd *= $value;\n\
    \    }\n  }\n  return $odd;\n}\n", "  $n = str_split($n);\n  $result = 1;\n  foreach\
    \ ($n as $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n   \
    \ }\n  }\n  return $result;\n}", "    $result = 1;\n    $n = (string)$n;\n   \
    \ for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n    \
    \        $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", "  \
    \  $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n \
    \   for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n  \
    \          $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \ $n = str_split($n);\n  $sum = 1;\n  foreach ($n as $key => $value) {\n    if\
    \ ($value % 2 != 0) {\n      $sum *= $value;\n    }\n  }\n  return $sum;\n}\n\n\
    echo digits(1);\necho digits(4);\necho digits(235);", "    $odds = array_filter(str_split($n),\
    \ function($digit) {\n        return $digit % 2 == 1;\n    });\n    return array_product($odds)\
    \ ?: 0;\n}\n", "  $n = str_split($n);\n  $product = 1;\n  foreach ($n as $number)\
    \ {\n    if ($number % 2 != 0) {\n      $product *= $number;\n    }\n  }\n  return\
    \ $product;\n}\n\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235)\
    \ . PHP_EOL;\n", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as\
    \ $value) {\n        if ($value % 2 !== 0) {\n            $result *= $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $sum\
    \ *= $value;\n        }\n    }\n    return $sum;\n}\n", "  $n = str_split($n);\n\
    \  $sum = 1;\n  foreach ($n as $key => $value) {\n    if ($value % 2 != 0) {\n\
    \      $sum *= $value;\n    }\n  }\n  return $sum;\n}\n", "    $digits = str_split($n);\n\
    \    $oddDigits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 === 1;\n    });\n    return array_product($oddDigits);\n}", "    $n = str_split($n);\n\
    \    $product = 1;\n    foreach ($n as $number) {\n        if ($number % 2 !==\
    \ 0) {\n            $product *= $number;\n        }\n    }\n    return $product;\n\
    }\n", "    $n = str_split($n);\n    $odds = array_filter($n, function($v) {\n\
    \        return $v % 2 != 0;\n    });\n    return array_product($odds) ?: 0;\n\
    }\n", "  $n = str_split($n);\n  $product = 1;\n  foreach ($n as $num) {\n    if\
    \ ($num % 2 != 0) {\n      $product *= $num;\n    }\n  }\n  return $product;\n\
    }", "  $result = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++)\
    \ {\n    if ($n[$i] % 2 != 0) {\n      $result *= $n[$i];\n    }\n  }\n  return\
    \ $result;\n}", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as\
    \ $value) {\n        if ($value % 2 !== 0) {\n            $result *= $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $arr = str_split($n);\n   \
    \ $result = 1;\n    foreach ($arr as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\n",
  "  $n = str_split($n);\n  $odds = array_filter($n, function($num) {\n    return\
    \ $num % 2 !== 0;\n  });\n  return array_product($odds) ?: 0;\n}\n", "    $result\
    \ = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n        if ($value\
    \ % 2 != 0) {\n            $result *= $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $number)\
    \ {\n        if ($number % 2 !== 0) {\n            $result *= $number;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $n = str_split($n);\n    $result\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 !== 0) {\n      \
    \      $result *= $value;\n        }\n    }\n    return $result;\n}\n", "  $result\
    \ = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i]\
    \ % 2 != 0) {\n      $result *= $n[$i];\n    }\n  }\n  return $result;\n}", " \
    \   $n = str_split($n);\n    $result = 1;\n    foreach ($n as $num) {\n      \
    \  if ($num % 2 != 0) {\n            $result *= $num;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $digits = str_split($n);\n  $odds = array_filter($digits,\
    \ function($digit) {\n    return $digit % 2 == 1;\n  });\n  return array_reduce($odds,\
    \ function($product, $digit) {\n    return $product * $digit;\n  }, 1);\n}\n",
  "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n     \
    \   if ($value % 2 != 0) {\n            $result *= $value;\n        }\n    }\n\
    \    return $result;\n}\necho digits(1) . \"<br>\";\necho digits(4) . \"<br>\"\
    ;\necho digits(235) . \"<br>\";", "    $odds = 1;\n    $n = (string)$n;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n        \
    \    $odds *= $n[$i];\n        }\n    }\n    return $odds;\n}\n", "  $result =\
    \ 1;\n  $n = str_split($n);\n  foreach ($n as $value) {\n    if ($value % 2 !=\
    \ 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n}\n", "  $digits\
    \ = str_split($n);\n  $odd_digits = array_filter($digits, function($digit) {\n\
    \    return $digit % 2 == 1;\n  });\n  if (empty($odd_digits)) {\n    return 0;\n\
    \  }\n  return array_reduce($odd_digits, function($carry, $digit) {\n    return\
    \ $carry * $digit;\n  }, 1);\n}\n", "  $result = 1;\n  $n = str_split($n);\n \
    \ foreach ($n as $number) {\n    if ($number % 2 !== 0) {\n      $result *= $number;\n\
    \    }\n  }\n  return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\n", "    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 !== 0) {\n           \
    \ $result *= $number;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n    \
    \    if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n\
    \    return $result;\n}", "    $odds = 1;\n    $n = str_split($n);\n    foreach\
    \ ($n as $value) {\n        if ($value % 2 != 0) {\n            $odds *= $value;\n\
    \        }\n    }\n    return $odds;\n}\n", "    $n = str_split($n);\n    $result\
    \ = 1;\n    foreach ($n as $number) {\n        if ($number % 2 !== 0) {\n    \
    \        $result *= $number;\n        }\n    }\n    return $result;\n}\n", " \
    \ $n = str_split($n);\n  $result = 1;\n  foreach ($n as $key => $value) {\n  \
    \  if ($value % 2 == 1) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }", "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n);\
    \ $i++) {\n        if ($n[$i] % 2 == 1) {\n            $result *= $n[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $sum = 0;\n\
    \  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $sum += $value;\n\
    \    }\n  }\n  return $sum;\n}\n", "  $result = 1;\n  $n = (string)$n;\n  for\
    \ ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 != 0) {\n      $result\
    \ *= $n[$i];\n    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $num) {\n    if ($num % 2 != 0) {\n      $result *= $num;\n\
    \    }\n  }\n  return $result;\n}\n", "    $n = str_split($n);\n    $result =\
    \ 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $result\
    \ *= $num;\n        }\n    }\n    return $result;\n}\n", "    $result = 1;\n \
    \   $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value) {\n   \
    \ if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }", "    $odds = array_filter(str_split($n), function($v) {\n        return $v\
    \ % 2;\n    });\n    return array_product($odds) ?: 0;\n}\n", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $number) {\n        if ($number % 2 !==\
    \ 0) {\n            $result *= $number;\n        }\n    }\n    return $result;\n\
    }", "    $arr = str_split($n);\n    $result = 1;\n    foreach ($arr as $value)\
    \ {\n        if ($value % 2 !== 0) {\n            $result *= $value;\n       \
    \ }\n    }\n    return $result;\n}\n\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;", "    $odds = 1;\n    $digits = str_split($n);\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 == 1) {\n         \
    \   $odds *= $digit;\n        }\n    }\n    return $odds;\n}", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 !== 0)\
    \ {\n            $result *= $value;\n        }\n    }\n    return $result;\n}\n",
  "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value) {\n    if ($value\
    \ % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n}\n",
  "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n     \
    \   if ($value % 2 != 0) {\n            $result *= $value;\n        }\n    }\n\
    \    return $result;\n}", "    $result = 1;\n    $n = (string)$n;\n    for ($i\
    \ = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 !== 0) {\n           \
    \ $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;", "  $n =\
    \ str_split($n);\n  $product = 1;\n  foreach ($n as $digit) {\n    if ($digit\
    \ % 2 !== 0) {\n      $product *= $digit;\n    }\n  }\n  return $product;\n}\n",
  "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n \
    \   for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n  \
    \          $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n    \
    \    if ($value % 2 != 0) {\n            $result *= $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n    for ($i\
    \ = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result\
    \ *= $n[$i];\n        }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $value) {\n    if ($value % 2 == 1) {\n    \
    \  $result *= $value;\n    }\n  }\n  return $result;\n}", "  $arr = str_split($n);\n\
    \  $result = 1;\n  foreach ($arr as $value) {\n    if ($value % 2 != 0) {\n  \
    \    $result *= $value;\n    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n    \
    \  $result *= $value;\n    }\n  }\n  return $result;\n}\n", "  $arr = str_split($n);\n\
    \  $result = 1;\n  foreach ($arr as $value) {\n    if ($value % 2 !== 0) {\n \
    \     $result *= $value;\n    }\n  }\n  return $result;\n}\n", "    $sum = 1;\n\
    \    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $sum *= $n[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $number)\
    \ {\n        if ($number % 2 !== 0) {\n            $result *= $number;\n     \
    \   }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n\
    \  foreach ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}", "  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}", "    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\necho digits(123456789) . \"\\n\";\necho digits(0) . \"\\n\";\necho digits(1234567890123456789)\
    \ . \"\\n\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345",
  "  $odds = 1;\n  $n = str_split($n);\n  foreach ($n as $digit) {\n    if ($digit\
    \ % 2 == 1) {\n      $odds *= $digit;\n    }\n  }\n  return $odds;\n}\n", "  \
    \  $n = str_split($n);\n    $result = 1;\n    foreach ($n as $num) {\n       \
    \ if ($num % 2 == 1) {\n            $result *= $num;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $odds = 1;\n  $n = str_split($n);\n  foreach ($n as $num)\
    \ {\n    if ($num % 2 == 1) {\n      $odds *= $num;\n    }\n  }\n  return $odds;\n\
    }\n", "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n);\
    \ $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}", "  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}\n", "    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 !== 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\n", "    $result = 1;\n\
    \    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\
    \\n\";", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $number)\
    \ {\n        if ($number % 2 != 0) {\n            $result *= $number;\n      \
    \  }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n\
    \  foreach ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n  $product\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 !== 0) {\n      $product\
    \ *= $value;\n    }\n  }\n  return $product;\n}\n\necho digits(1) . \"\\n\";\n\
    echo digits(4) . \"\\n\";\necho digits(235) . \"\\n\";", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 == 1)\
    \ {\n            $result *= $digit;\n        }\n    }\n    return $result;\n}\n",
  "  $n = str_split($n);\n  $odd = 1;\n  foreach ($n as $value) {\n    if ($value\
    \ % 2 !== 0) {\n      $odd *= $value;\n    }\n  }\n  return $odd;\n}", "    $n\
    \ = str_split($n);\n    $odd = 1;\n    foreach ($n as $number) {\n        if ($number\
    \ % 2 != 0) {\n            $odd *= $number;\n        }\n    }\n    return $odd;\n\
    }", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $digit) {\n\
    \        if ($digit % 2 != 0) {\n            $result *= $digit;\n        }\n \
    \   }\n    return $result;\n}", "    $n = str_split($n);\n    $product = 1;\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n", "    $result = 1;\n\
    \    $n = str_split($n);\n    foreach ($n as $value) {\n        if ($value % 2\
    \ != 0) {\n            $result *= $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $result = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++)\
    \ {\n    if ($n[$i] % 2 != 0) {\n      $result *= $n[$i];\n    }\n  }\n  return\
    \ $result;\n}", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value)\
    \ {\n    if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $product = 1;\n    $n = str_split($n);\n    foreach ($n\
    \ as $digit) {\n        if ($digit % 2 != 0) {\n            $product *= $digit;\n\
    \        }\n    }\n    return $product;\n}\n", "    $n = str_split($n);\n    $result\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $result *= $num;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n        if ($value\
    \ % 2 != 0) {\n            $result *= $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $n = str_split($n);\n  $product = 1;\n  foreach ($n as $value) {\n  \
    \  if ($value % 2 != 0) {\n      $product *= $value;\n    }\n  }\n  return $product;\n\
    }", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "    $arr = str_split($n);\n    $result = 1;\n\
    \    foreach ($arr as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\n", "    $result = 1;\n\
    \    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "  $result = 1;\n  $n = str_split($n);\n  foreach\
    \ ($n as $num) {\n    if ($num % 2 !== 0) {\n      $result *= $num;\n    }\n \
    \ }\n  return $result;\n}", "  $arr = str_split($n);\n  $result = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value % 2 == 1) {\n      $result *= $value;\n \
    \   }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n\
    \  foreach ($n as $number) {\n    if ($number % 2 !== 0) {\n      $result *= $number;\n\
    \    }\n  }\n  return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";", "    $n = str_split($n);\n    $sum\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n       \
    \     $sum *= $value;\n        }\n    }\n    return $sum;\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;", "    $result\
    \ = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n    \
    \    if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = 1;\n    $n = (string)$n;\n    for ($i\
    \ = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result\
    \ *= $n[$i];\n        }\n    }\n    return $result;\n}\n", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0)\
    \ {\n            $result *= $digit;\n        }\n    }\n    return $result;\n}",
  "  $digits = str_split($n);\n  $odd_digits = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 == 1;\n  });\n  if (count($odd_digits) == 0) {\n  \
    \  return 0;\n  }\n  return array_reduce($odd_digits, function($product, $digit)\
    \ {\n    return $product * $digit;\n  }, 1);\n}\n", "  $n = str_split($n);\n \
    \ $odds = [];\n  foreach ($n as $num) {\n    if ($num % 2 !== 0) {\n      $odds[]\
    \ = $num;\n    }\n  }\n  if (count($odds) === 0) {\n    return 0;\n  }\n  return\
    \ array_product($odds);\n}\n", "    $arr = str_split($n);\n    $odd = [];\n  \
    \  foreach ($arr as $value) {\n        if ($value % 2 != 0) {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (empty($odd)) {\n        return 0;\n   \
    \ }\n    return array_product($odd);\n}\n", "  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $value) {\n    if ($value % 2 == 1) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}", "  $n = str_split($n);\n  $result = 1;\n \
    \ foreach ($n as $num) {\n    if ($num % 2 !== 0) {\n      $result *= $num;\n\
    \    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n  $result = 1;\n\
    \  foreach ($n as $number) {\n    if ($number % 2 != 0) {\n      $result *= $number;\n\
    \    }\n  }\n  return $result;\n}", "    $n = str_split($n);\n    $sum = 1;\n\
    \    foreach ($n as $item) {\n        if ($item % 2 != 0) {\n            $sum\
    \ *= $item;\n        }\n    }\n    return $sum;\n}\n\necho digits(1);\necho \"\
    <br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\necho \"<br>\";\n\
    echo digits(123456789);\necho \"<br>\";\necho digits(1234567890123456789);\necho\
    \ \"<br>\";\necho digits(12345678901234567890123456789);\necho \"<br>\";\necho\
    \ digits(123456789012345678901234567890123456789);\necho \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567",
  "    $result = 1;\n    $n = str_split($n);\n    foreach ($n as $digit) {\n     \
    \   if ($digit % 2 !== 0) {\n            $result *= $digit;\n        }\n    }\n\
    \    return $result;\n}", "    $result = 1;\n    $n = (string)$n;\n    for ($i\
    \ = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result\
    \ *= $n[$i];\n        }\n    }\n    return $result;\n}\n", "    $digits = str_split($n);\n\
    \    $oddDigits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    return array_product($oddDigits);\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $key => $value) {\n    if ($value % 2 == 1)\
    \ {\n      $result *= $value;\n    }\n  }\n  return $result;\n}", "    $n = str_split($n);\n\
    \    $sum = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n   \
    \         $sum *= $num;\n        }\n    }\n    return $sum;\n}\n", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0)\
    \ {\n            $result *= $digit;\n        }\n    }\n    return $result;\n}\n",
  "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $value) {\n    if ($value\
    \ % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n}", " \
    \   $result = 1;\n    $n = str_split($n);\n    foreach ($n as $number) {\n   \
    \     if ($number % 2 !== 0) {\n            $result *= $number;\n        }\n \
    \   }\n    return $result;\n}\n", "  $result = 1;\n  $n = (string)$n;\n  for ($i\
    \ = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 != 0) {\n      $result *=\
    \ $n[$i];\n    }\n  }\n  return $result;\n}", "  $digits = str_split($n);\n  $product\
    \ = 1;\n  foreach ($digits as $digit) {\n    if ($digit % 2 == 1) {\n      $product\
    \ *= $digit;\n    }\n  }\n  return $product;\n}\n\necho digits(1) . \"\\n\";\n\
    echo digits(4) . \"\\n\";\necho digits(235) . \"\\n\";", "  $odds = array_filter(str_split($n),\
    \ function($n) { return $n % 2; });\n  return array_product($odds) ?: 0;\n}",
  "  $digits = str_split($n);\n  $odd_digits = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 != 0;\n  });\n  return array_product($odd_digits);\n\
    }\n", "  $result = 1;\n  $n = str_split($n);\n  foreach ($n as $value) {\n   \
    \ if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }", "  $n = str_split($n);\n  $result = 1;\n  foreach ($n as $key => $value) {\n\
    \    if ($value % 2 != 0) {\n      $result *= $value;\n    }\n  }\n  return $result;\n\
    }\n", "    $digits = str_split($n);\n    $odds = array_filter($digits, function($digit)\
    \ {\n        return $digit % 2 != 0;\n    });\n    return array_product($odds);\n\
    }\n", "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n\
    \        if ($value % 2 != 0) {\n            $result *= $value;\n        }\n \
    \   }\n    return $result;\n}\n", "    $odd = 1;\n    $n = (string)$n;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n        \
    \    $odd *= $n[$i];\n        }\n    }\n    return $odd;\n}", "  $n = str_split($n);\n\
    \  $product = 1;\n  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n   \
    \   $product *= $digit;\n    }\n  }\n  return $product;\n}\n", "    $str = strval($n);\n\
    \    $arr = str_split($str);\n    $result = 1;\n    foreach ($arr as $item) {\n\
    \        if ($item % 2 != 0) {\n            $result *= $item;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $result = 1;\n    $n = str_split($n);\n \
    \   foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $number) {\n    if ($number % 2 !== 0) {\n \
    \     $result *= $number;\n    }\n  }\n  return $result;\n}\n", "  $result = 1;\n\
    \  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] %\
    \ 2 != 0) {\n      $result *= $n[$i];\n    }\n  }\n  return $result;\n}\n", " \
    \   $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "    $digits = str_split($n);\n    $oddDigits\
    \ = array_filter($digits, function($digit) {\n        return $digit % 2 != 0;\n\
    \    });\n    return array_product($oddDigits);\n}\n", "  $digits = str_split($n);\n\
    \  $odds = array_filter($digits, function($digit) {\n    return $digit % 2 !==\
    \ 0;\n  });\n  return array_product($odds) ?: 0;\n}\n", "    $n = (string)$n;\n\
    \    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $value) {\n   \
    \     if ($value % 2 !== 0) {\n            $result *= $value;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $n = str_split($n);\n    $result = 1;\n \
    \   foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $result\
    \ *= $num;\n        }\n    }\n    return $result;\n}\n", "    $n = str_split($n);\n\
    \    $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0)\
    \ {\n            $result *= $value;\n        }\n    }\n    return $result;\n}\n",
  "    $n = str_split($n);\n    $result = 1;\n    foreach ($n as $number) {\n    \
    \    if ($number % 2 != 0) {\n            $result *= $number;\n        }\n   \
    \ }\n    return $result;\n}\n", "  $n = str_split($n);\n  $sum = 1;\n  foreach\
    \ ($n as $key => $value) {\n    if ($value % 2 != 0) {\n      $sum *= $value;\n\
    \    }\n  }\n  return $sum;\n}\n", "    $digits = str_split($n);\n    $oddDigits\
    \ = array_filter($digits, function($digit) {\n        return $digit % 2 !== 0;\n\
    \    });\n    return array_product($oddDigits);\n}\n", "  $digits = str_split($n);\n\
    \  $result = 1;\n  foreach ($digits as $digit) {\n    if ($digit % 2 == 1) {\n\
    \      $result *= $digit;\n    }\n  }\n  return $result;\n}\n", "  $n = str_split($n);\n\
    \  $result = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n    \
    \  $result *= $value;\n    }\n  }\n  return $result;\n}", "    $result = 1;\n\
    \    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n);\
    \ $i++) {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $number) {\n    if ($number % 2 != 0) {\n      $result *= $number;\n\
    \    }\n  }\n  return $result;\n}\n", "    $n = str_split($n);\n    $result =\
    \ 1;\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n            $result\
    \ *= $num;\n        }\n    }\n    return $result;\n}\n", "    $arr = str_split($n);\n\
    \    $product = 1;\n    foreach ($arr as $num) {\n        if ($num % 2 !== 0)\
    \ {\n            $product *= $num;\n        }\n    }\n    return $product;\n}\n\
    \necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

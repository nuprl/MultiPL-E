name: HumanEval_87_get_row
language: php
prompt: "<?php\n// You are given a 2 dimensional data, as a nested lists,\n// which\
  \ is similar to matrix, however, unlike matrices,\n// each row may contain a different\
  \ number of columns.\n// Given lst, and integer x, find integers x in the list,\n\
  // and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n// each tuple\
  \ is a coordinate - (row, columns), starting with 0.\n// Sort coordinates initially\
  \ by rows in ascending order.\n// Also, sort coordinates of the row by columns in\
  \ descending order.\n// Examples:\n// get_row([\n// [1,2,3,4,5,6],\n// [1,2,3,4,1,6],\n\
  // [1,2,3,4,5,1]\n// ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n// get_row([],\
  \ 1) == []\n// get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]\nfunction get_row($lst,\
  \ $x) {\n"
tests: "function candidate(...$args) {\n    return get_row(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3,\
  \ 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 4), array(1,\
  \ 0), array(2, 5), array(2, 0))) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1,\
  \ 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2,\
  \ 3, 4, 5, 6)), 2) !== array(array(0, 1), array(1, 1), array(2, 1), array(3, 1),\
  \ array(4, 1), array(5, 1))) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 1,\
  \ 3, 4, 5, 6), array(1, 2, 1, 4, 5, 6), array(1, 2, 3, 1, 5, 6), array(1, 2, 3,\
  \ 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 0), array(2,\
  \ 1), array(2, 0), array(3, 2), array(3, 0), array(4, 3), array(4, 0), array(5,\
  \ 4), array(5, 0), array(6, 5), array(6, 0))) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(), 1) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(array(1)), 2) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(array(), array(1), array(1, 2, 3)),\
  \ 3) !== array(array(2, 2))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach\
    \ ($columns as $column => $value) {\n      if ($value == $x) {\n        $result[]\
    \ = [$row, $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n\
    \    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0]\
    \ - $b[0];\n  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $row => $cols) {\n        foreach ($cols as $col => $val) {\n           \
    \ if ($val == $x) {\n                $result[] = [$row, $col];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $res =\
    \ [];\n    foreach ($lst as $k => $v) {\n        $res = array_merge($res, array_map(function\
    \ ($i) use ($k) {\n            return [$k, $i];\n        }, array_keys($v, $x)));\n\
    \    }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $res;\n}", "  $res = [];\n  foreach ($lst as $row => $cols)\
    \ {\n    foreach ($cols as $col => $val) {\n      if ($val == $x) {\n        $res[]\
    \ = [$row, $col];\n      }\n    }\n  }\n  usort($res, function($a, $b) {\n   \
    \ if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0]\
    \ - $b[0];\n  });\n  return $res;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols as $col =>\
    \ $val) {\n            if ($val == $x) {\n                $result[] = [$row, $col];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst as\
    \ $col => $val) {\n            if ($val == $x) {\n                $result[] =\
    \ [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $row_lst) {\n    foreach ($row_lst\
    \ as $col => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $col];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0]\
    \ == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $key => $value) {\n        $temp = array_keys($value, $x);\n\
    \        foreach ($temp as $k => $v) {\n            $result[] = [$key, $v];\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $i => $row) {\n        foreach ($row as $j => $value) {\n         \
    \   if ($value == $x) {\n                $result[] = [$i, $j];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $key => $value) {\n        $index = array_search($x, $value);\n   \
    \     if ($index !== false) {\n            $result[] = [$key, $index];\n     \
    \   }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result = [];\n  foreach\
    \ ($lst as $row => $columns) {\n    foreach ($columns as $column => $value) {\n\
    \      if ($value == $x) {\n        $result[] = [$row, $column];\n      }\n  \
    \  }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n  \
    \    return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $cols) {\n\
    \        foreach ($cols as $col => $val) {\n            if ($val == $x) {\n  \
    \              $result[] = [$row, $col];\n            }\n        }\n    }\n  \
    \  usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n       \
    \     return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns)\
    \ {\n        foreach ($columns as $column => $value) {\n            if ($value\
    \ == $x) {\n                $result[] = [$row, $column];\n            }\n    \
    \    }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $key\
    \ => $value) {\n        foreach ($value as $k => $v) {\n            if ($v ==\
    \ $x) {\n                $result[] = [$key, $k];\n            }\n        }\n \
    \   }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $row_index => $row) {\n        foreach ($row as $column_index\
    \ => $value) {\n            if ($value == $x) {\n                $result[] = [$row_index,\
    \ $column_index];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        $count = 0;\n\
    \        foreach ($value as $k => $v) {\n            if ($v == $x) {\n       \
    \         $result[] = [$key, $k];\n                $count++;\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $res = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $res[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $res;\n}", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j\
    \ = 0; $j < count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n\
    \                $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols\
    \ as $col => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $cols) {\n\
    \        foreach ($cols as $col => $val) {\n            if ($val == $x) {\n  \
    \              $result[] = [$row, $col];\n            }\n        }\n    }\n  \
    \  usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n       \
    \     return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns)\
    \ {\n        foreach ($columns as $column => $value) {\n            if ($value\
    \ == $x) {\n                $result[] = [$row, $column];\n            }\n    \
    \    }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $key => $row) {\n        foreach ($row as $k => $val) {\n            if ($val\
    \ == $x) {\n                $result[] = [$key, $k];\n            }\n        }\n\
    \    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $res = [];\n    foreach ($lst as $i =>\
    \ $row) {\n        foreach ($row as $j => $val) {\n            if ($val == $x)\
    \ {\n                $res[] = [$i, $j];\n            }\n        }\n    }\n   \
    \ usort($res, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n           \
    \ return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n \
    \   return $res;\n}\n", "    $result = [];\n    foreach ($lst as $key => $value)\
    \ {\n        foreach ($value as $key2 => $value2) {\n            if ($value2 ==\
    \ $x) {\n                $result[] = [$key, $key2];\n            }\n        }\n\
    \    }\n    $result = array_map(function ($item) {\n        return [$item[0],\
    \ -$item[1]];\n    }, $result);\n    usort($result, function ($a, $b) {\n    \
    \    if ($a[0] == $b[0]) {\n            return $a[1] - $b[1];\n        }\n   \
    \     return $a[0] - $b[0];\n    });\n    $result = array_map(function ($item)\
    \ {\n        return [$item[0], -$item[1]];\n    }, $result);\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $key => $value) {\n        $index\
    \ = array_search($x, $value);\n        if ($index !== false) {\n            $result[]\
    \ = [$key, $index];\n        }\n    }\n    usort($result, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j =>\
    \ $item) {\n      if ($item == $x) {\n        $result[] = [$i, $j];\n      }\n\
    \    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n\
    \      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $res = [];\n    foreach ($lst as $k => $v) {\n        foreach\
    \ ($v as $k1 => $v1) {\n            if ($v1 == $x) {\n                $res[] =\
    \ [$k, $k1];\n            }\n        }\n    }\n    usort($res, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}", "    $result\
    \ = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n   \
    \   }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $key => $row) {\n        foreach ($row as $k => $value) {\n       \
    \     if ($value == $x) {\n                $result[] = [$key, $k];\n         \
    \   }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n        return\
    \ $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $res = [];\n    foreach\
    \ ($lst as $i => $row) {\n        foreach ($row as $j => $val) {\n           \
    \ if ($val == $x) {\n                $res[] = [$i, $j];\n            }\n     \
    \   }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $res;\n}\n", "    $res = [];\n    foreach ($lst as $row =>\
    \ $cols) {\n        foreach ($cols as $col => $val) {\n            if ($val ==\
    \ $x) {\n                $res[] = [$row, $col];\n            }\n        }\n  \
    \  }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n   \
    \         return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n  \
    \  });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n$lst = [\n  \
    \  [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5, 1]\n];\n\
    print_r(get_row($lst, 1));", "    $result = [];\n    foreach ($lst as $row =>\
    \ $columns) {\n        foreach ($columns as $column => $value) {\n           \
    \ if ($value == $x) {\n                $result[] = [$row, $column];\n        \
    \    }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row_index => $row) {\n        foreach\
    \ ($row as $col_index => $value) {\n            if ($value == $x) {\n        \
    \        $result[] = [$row_index, $col_index];\n            }\n        }\n   \
    \ }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $row_lst) {\n        foreach ($row_lst as $col => $item) {\n       \
    \     if ($item == $x) {\n                $result[] = [$row, $col];\n        \
    \    }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $item)\
    \ {\n            if ($item == $x) {\n                $result[] = [$i, $j];\n \
    \           }\n        }\n    }\n    usort($result, function ($a, $b) {\n    \
    \    if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n   \
    \     return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j\
    \ => $val) {\n            if ($val == $x) {\n                $res[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($res, function ($a, $b) {\n      \
    \  if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n     \
    \   return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n\
    \    foreach ($lst as $row => $columns) {\n        foreach ($columns as $column\
    \ => $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n\n$lst = [\n  [1,2,3,4,5,6],\n  [1,2,3,4,1,6],\n\
    \  [1,2,3,4,5,1]\n];\nprint_r(get_row($lst, 1));", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $res = [];\n    foreach ($lst as $k => $v) {\n        foreach ($v as $k1 =>\
    \ $v1) {\n            if ($v1 == $x) {\n                $res[] = [$k, $k1];\n\
    \            }\n        }\n    }\n    $res = array_map(function ($v) {\n     \
    \   return [$v[0], -$v[1]];\n    }, $res);\n    array_multisort($res);\n    $res\
    \ = array_map(function ($v) {\n        return [$v[0], -$v[1]];\n    }, $res);\n\
    \    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row => $cols)\
    \ {\n        foreach ($cols as $col => $value) {\n            if ($value == $x)\
    \ {\n                $result[] = [$row, $col];\n            }\n        }\n   \
    \ }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "  $result = [];\n  foreach ($lst as $row\
    \ => $columns) {\n    foreach ($columns as $column => $value) {\n      if ($value\
    \ == $x) {\n        $result[] = [$row, $column];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $res = [];\n    foreach ($lst as $row =>\
    \ $cols) {\n        foreach ($cols as $col => $val) {\n            if ($val ==\
    \ $x) {\n                $res[] = [$row, $col];\n            }\n        }\n  \
    \  }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n   \
    \         return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n  \
    \  });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $key => $value) {\n        foreach ($value as $key2 => $value2)\
    \ {\n            if ($value2 == $x) {\n                $result[] = [$key, $key2];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols as\
    \ $col => $val) {\n            if ($val == $x) {\n                $res[] = [$row,\
    \ $col];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $key2\
    \ => $value2) {\n            if ($value2 == $x) {\n                $result[] =\
    \ [$key, $key2];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n\
    \        }\n        return $a[0] <=> $b[0];\n    });\n    return $result;\n}",
  "    $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j\
    \ => $val) {\n            if ($val == $x) {\n                $res[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($res, function ($a, $b) {\n      \
    \  if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n     \
    \   return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n\
    \    foreach ($lst as $key => $value) {\n        foreach ($value as $k => $v)\
    \ {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n  \
    \          }\n        }\n    }\n    usort($result, function ($a, $b) {\n     \
    \   if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n  \
    \      return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n    \
    \    }\n        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $row) {\n        foreach ($row\
    \ as $key2 => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$key, $key2];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n\
    \        }\n        return $a[0] <=> $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row_index => $row)\
    \ {\n        foreach ($row as $column_index => $value) {\n            if ($value\
    \ == $x) {\n                $result[] = [$row_index, $column_index];\n       \
    \     }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result = [];\n  foreach\
    \ ($lst as $key => $value) {\n    foreach ($value as $key2 => $value2) {\n   \
    \   if ($value2 == $x) {\n        $result[] = [$key, $key2];\n      }\n    }\n\
    \  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return\
    \ $b[1] <=> $a[1];\n    }\n    return $a[0] <=> $b[0];\n  });\n  return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row\
    \ as $j => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        $index = array_search($x,\
    \ $value);\n        if ($index !== false) {\n            $result[] = [$key, $index];\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}", "    $res = [];\n    foreach ($lst\
    \ as $k => $v) {\n        foreach ($v as $kk => $vv) {\n            if ($vv ==\
    \ $x) {\n                $res[] = [$k, $kk];\n            }\n        }\n    }\n\
    \    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n        \
    \    return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns)\
    \ {\n        foreach ($columns as $column => $value) {\n            if ($value\
    \ == $x) {\n                $result[] = [$row, $column];\n            }\n    \
    \    }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $key\
    \ => $value) {\n        foreach ($value as $key2 => $value2) {\n            if\
    \ ($value2 == $x) {\n                $result[] = [$key, $key2];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $key => $value) {\n        foreach ($value as $k => $v) {\n       \
    \     if ($v == $x) {\n                $result[] = [$key, $k];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $item)\
    \ {\n            if ($item == $x) {\n                $result[] = [$i, $j];\n \
    \           }\n        }\n    }\n    usort($result, function ($a, $b) {\n    \
    \    if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n   \
    \     return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result =\
    \ [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "  $result = [];\n  foreach ($lst as $row_index => $row) {\n\
    \    foreach ($row as $col_index => $col) {\n      if ($col == $x) {\n       \
    \ $result[] = [$row_index, $col_index];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row_index => $row) {\n        foreach\
    \ ($row as $column_index => $column) {\n            if ($column == $x) {\n   \
    \             $result[] = [$row_index, $column_index];\n            }\n      \
    \  }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n\n$lst = [\n    [1, 2, 3, 4, 5, 6],\n    [1,\
    \ 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5, 1]\n];\n$x = 1;\nvar_dump(get_row($lst,\
    \ $x));", "    $res = [];\n    foreach ($lst as $i => $row) {\n        foreach\
    \ ($row as $j => $col) {\n            if ($col == $x) {\n                $res[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($res, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "  \
    \  $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $col) {\n            if ($col == $x) {\n                $result[] = [$i,\
    \ $j];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n$lst =\
    \ [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5, 1]\n\
    ];\n$x = 1;\nprint_r(get_row($lst, $x));", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $res =\
    \ [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $el)\
    \ {\n            if ($el == $x) {\n                $res[] = [$i, $j];\n      \
    \      }\n        }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $i => $row) {\n        foreach ($row as $j => $col) {\n            if ($col\
    \ == $x) {\n                $result[] = [$i, $j];\n            }\n        }\n\
    \    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $key => $value) {\n        foreach ($value as $k => $v) {\n            if ($v\
    \ == $x) {\n                $result[] = [$key, $k];\n            }\n        }\n\
    \    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $b[1] <=> $a[1];\n        }\n        return $a[0] <=> $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n$lst = [\n  \
    \  [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5, 1]\n];\n\n\
    print_r(get_row($lst, 1));", "    $result = [];\n    foreach ($lst as $i => $row)\
    \ {\n        foreach ($row as $j => $value) {\n            if ($value == $x) {\n\
    \                $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row\
    \ as $j => $cell) {\n            if ($cell == $x) {\n                $res[] =\
    \ [$i, $j];\n            }\n        }\n    }\n    usort($res, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j => $value)\
    \ {\n      if ($value == $x) {\n        $result[] = [$i, $j];\n      }\n    }\n\
    \  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return\
    \ $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $k => $v) {\n        foreach ($v\
    \ as $k1 => $v1) {\n            if ($v1 == $x) {\n                $result[] =\
    \ [$k, $k1];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $item) {\n            if ($item == $x) {\n                $result[] =\
    \ [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n    \
    \    }\n        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $key => $value) {\n    foreach ($value as $key2 =>\
    \ $value2) {\n      if ($value2 == $x) {\n        $result[] = [$key, $key2];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] <=> $a[1];\n    }\n    return $a[0] <=> $b[0];\n  });\n\
    \  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns)\
    \ {\n        foreach ($columns as $column => $value) {\n            if ($value\
    \ == $x) {\n                $result[] = [$row, $column];\n            }\n    \
    \    }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $res = [];\n    foreach\
    \ ($lst as $i => $row) {\n        foreach ($row as $j => $col) {\n           \
    \ if ($col == $x) {\n                $res[] = [$i, $j];\n            }\n     \
    \   }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}", "    $res = [];\n    foreach\
    \ ($lst as $key => $value) {\n        foreach ($value as $k => $v) {\n       \
    \     if ($v == $x) {\n                $res[] = [$key, $k];\n            }\n \
    \       }\n    }\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", "  $result\
    \ = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $key => $value) {\n\
    \        foreach ($value as $k => $v) {\n            if ($v == $x) {\n       \
    \         $result[] = [$key, $k];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ <=> $a[1];\n        }\n        return $a[0] <=> $b[0];\n    });\n    return\
    \ $result;\n}", "    $result = [];\n    foreach ($lst as $key => $value) {\n \
    \       foreach ($value as $k => $v) {\n            if ($v == $x) {\n        \
    \        $result[] = [$key, $k];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ <=> $a[1];\n        }\n        return $a[0] <=> $b[0];\n    });\n    return\
    \ $result;\n}", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result = [];\n  foreach\
    \ ($lst as $row => $columns) {\n    foreach ($columns as $column => $value) {\n\
    \      if ($value == $x) {\n        $result[] = [$row, $column];\n      }\n  \
    \  }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n  \
    \    return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $res = [];\n    foreach ($lst as $i => $row) {\n      \
    \  foreach ($row as $j => $col) {\n            if ($col == $x) {\n           \
    \     $res[] = [$i, $j];\n            }\n        }\n    }\n    usort($res, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $k => $v) {\n        $result = array_merge($result,\
    \ array_keys($v, $x));\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach ($lst as $row => $columns) {\n        foreach ($columns as $column\
    \ => $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        return $a[0] - $b[0];\n    });\n    foreach ($result as $key\
    \ => $value) {\n        $result[$key] = [$value[0], -$value[1]];\n    }\n    usort($result,\
    \ function ($a, $b) {\n        return $a[0] - $b[0];\n    });\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = [$value[0], -$value[1]];\n   \
    \ }\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as $i =>\
    \ $row) {\n        foreach ($row as $j => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$i, $j];\n            }\n        }\n   \
    \ }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "  $result = [];\n  foreach ($lst as $row\
    \ => $columns) {\n    foreach ($columns as $column => $value) {\n      if ($value\
    \ == $x) {\n        $result[] = [$row, $column];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $res = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j => $val)\
    \ {\n      if ($val == $x) {\n        $res[] = [$i, $j];\n      }\n    }\n  }\n\
    \  usort($res, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1]\
    \ - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return $res;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "  $result = [];\n  foreach ($lst as $i => $row)\
    \ {\n    foreach ($row as $j => $value) {\n      if ($value == $x) {\n       \
    \ $result[] = [$i, $j];\n      }\n    }\n  }\n  usort($result, function($a, $b)\
    \ {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return\
    \ $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $res = [];\n    foreach\
    \ ($lst as $i => $row) {\n        foreach ($row as $j => $val) {\n           \
    \ if ($val == $x) {\n                $res[] = [$i, $j];\n            }\n     \
    \   }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $res;\n}\n\n$lst = [\n    [1,2,3,4,5,6],\n    [1,2,3,4,1,6],\n\
    \    [1,2,3,4,5,1]\n];\nprint_r(get_row($lst, 1));", "    $result = [];\n    foreach\
    \ ($lst as $key => $value) {\n        foreach ($value as $k => $v) {\n       \
    \     if ($v == $x) {\n                $result[] = [$key, $k];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n        return $a[0]\
    \ <=> $b[0];\n    });\n    return $result;\n}", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j\
    \ = 0; $j < count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n\
    \                $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $res = [];\n    foreach ($lst as $k => $v) {\n        $res = array_merge($res,\
    \ array_map(function ($i) use ($k) {\n            return [$k, $i];\n        },\
    \ array_keys($v, $x)));\n    }\n    usort($res, function ($a, $b) {\n        return\
    \ $a[0] == $b[0] ? $b[1] - $a[1] : $a[0] - $b[0];\n    });\n    return $res;\n\
    }", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "  $result = [];\n  foreach ($lst as $row =>\
    \ $columns) {\n    foreach ($columns as $column => $value) {\n      if ($value\
    \ == $x) {\n        $result[] = [$row, $column];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $key => $value) {\n\
    \        $index = array_search($x, $value);\n        if ($index !== false) {\n\
    \            $result[] = [$key, $index];\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach\
    \ ($row as $j => $item) {\n            if ($item == $x) {\n                $result[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $i =>\
    \ $row) {\n        foreach ($row as $j => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$i, $j];\n            }\n        }\n   \
    \ }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        for ($j = 0; $j < count($lst[$i]); $j++) {\n \
    \           if ($lst[$i][$j] == $x) {\n                $result[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n\
    \        return $a[0] <=> $b[0];\n    });\n    return $result;\n}", "  $res =\
    \ [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j => $col) {\n\
    \      if ($col == $x) {\n        $res[] = [$i, $j];\n      }\n    }\n  }\n  usort($res,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $res;\n}\n", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n\
    $lst = [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5,\
    \ 1]\n];\n$x = 1;\n$result = get_row($lst, $x);\nprint_r($result);", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}", " \
    \   $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j\
    \ => $val) {\n            if ($val == $x) {\n                $res[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($res, function ($a, $b) {\n      \
    \  if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n     \
    \   return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "  $result = [];\n\
    \  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column => $value)\
    \ {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n      }\n\
    \    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n\
    \      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "  $result = [];\n  foreach ($lst as $row => $columns) {\n \
    \   foreach ($columns as $column => $value) {\n      if ($value == $x) {\n   \
    \     $result[] = [$row, $column];\n      }\n    }\n  }\n  usort($result, function($a,\
    \ $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return\
    \ $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $cols) {\n        foreach ($cols as $col => $val) {\n     \
    \       if ($val == $x) {\n                $result[] = [$row, $col];\n       \
    \     }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $row => $columns) {\n        foreach ($columns as $column =>\
    \ $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

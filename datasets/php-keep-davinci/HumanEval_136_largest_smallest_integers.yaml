name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns a tuple (a, b), where 'a' is\n//\
  \ the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in a list.\n// If there is no negative or positive integers, return them as None.\n\
  // Examples:\n// largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n//\
  \ largest_smallest_integers([]) == (None, None)\n// largest_smallest_integers([0])\
  \ == (None, None)\nfunction largest_smallest_integers($lst) {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $neg = [];\n    $pos = [];\n    foreach ($lst as $v) {\n      \
    \  if ($v < 0) {\n            $neg[] = $v;\n        } elseif ($v > 0) {\n    \
    \        $pos[] = $v;\n        }\n    }\n    return [max($neg), min($pos)];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n    \
    \    if ($num < 0) {\n            if ($neg == null || $num > $neg) {\n       \
    \         $neg = $num;\n            }\n        } else if ($num > 0) {\n      \
    \      if ($pos == null || $num < $pos) {\n                $pos = $num;\n    \
    \        }\n        }\n    }\n    return array($neg, $pos);\n}\n", "    $neg =\
    \ null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0)\
    \ {\n            if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n   \
    \ foreach ($lst as $num) {\n        if ($num < 0) {\n            if ($neg ===\
    \ null || $num > $neg) {\n                $neg = $num;\n            }\n      \
    \  } else if ($num > 0) {\n            if ($pos === null || $num < $pos) {\n \
    \               $pos = $num;\n            }\n        }\n    }\n    return [$neg,\
    \ $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $v)\
    \ {\n        if ($v < 0) {\n            if ($neg === null || $v > $neg) {\n  \
    \              $neg = $v;\n            }\n        } else if ($v > 0) {\n     \
    \       if ($pos === null || $v < $pos) {\n                $pos = $v;\n      \
    \      }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n\
    \    $pos = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n     \
    \       $neg[] = $num;\n        } elseif ($num > 0) {\n            $pos[] = $num;\n\
    \        }\n    }\n    if (count($neg) > 0) {\n        $neg = max($neg);\n   \
    \ } else {\n        $neg = null;\n    }\n    if (count($pos) > 0) {\n        $pos\
    \ = min($pos);\n    } else {\n        $pos = null;\n    }\n    return [$neg, $pos];\n\
    }\n", "  $neg = null;\n  $pos = null;\n  foreach ($lst as $v) {\n    if ($v <\
    \ 0) {\n      if ($neg === null || $v > $neg) {\n        $neg = $v;\n      }\n\
    \    } else if ($v > 0) {\n      if ($pos === null || $v < $pos) {\n        $pos\
    \ = $v;\n      }\n    }\n  }\n  return array($neg, $pos);\n}\n", "  $neg = [];\n\
    \  $pos = [];\n  foreach ($lst as $n) {\n    if ($n < 0) {\n      $neg[] = $n;\n\
    \    } elseif ($n > 0) {\n      $pos[] = $n;\n    }\n  }\n  return [max($neg),\
    \ min($pos)];\n}\n", "  $max = null;\n  $min = null;\n  foreach ($lst as $num)\
    \ {\n    if ($num < 0) {\n      if ($max === null || $num > $max) {\n        $max\
    \ = $num;\n      }\n    } elseif ($num > 0) {\n      if ($min === null || $num\
    \ < $min) {\n        $min = $num;\n      }\n    }\n  }\n  return [$max, $min];\n\
    }\n", "    $neg = array_filter($lst, function($x) { return $x < 0; });\n    $pos\
    \ = array_filter($lst, function($x) { return $x > 0; });\n    return [max($neg),\
    \ min($pos)];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num\
    \ > 0) {\n            $pos[] = $num;\n        }\n    }\n    $neg = empty($neg)\
    \ ? null : max($neg);\n    $pos = empty($pos) ? null : min($pos);\n    return\
    \ [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $v)\
    \ {\n        if ($v < 0) {\n            $neg[] = $v;\n        } elseif ($v > 0)\
    \ {\n            $pos[] = $v;\n        }\n    }\n    if (empty($neg)) {\n    \
    \    $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n    if (empty($pos))\
    \ {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n    }\n  \
    \  return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos === null || $num < $pos) {\n            \
    \    $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if\
    \ ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n  \
    \          $pos[] = $num;\n        }\n    }\n    if (count($neg) > 0) {\n    \
    \    $neg = max($neg);\n    } else {\n        $neg = null;\n    }\n    if (count($pos)\
    \ > 0) {\n        $pos = min($pos);\n    } else {\n        $pos = null;\n    }\n\
    \    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num >\
    \ 0) {\n      $pos[] = $num;\n    }\n  }\n  if (empty($neg) || empty($pos)) {\n\
    \    return [null, null];\n  }\n  return [max($neg), min($pos)];\n}\n", "    $neg\
    \ = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num <\
    \ 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $elem) {\n        if ($elem < 0) {\n           \
    \ if ($neg === null || $elem > $neg) {\n                $neg = $elem;\n      \
    \      }\n        } else if ($elem > 0) {\n            if ($pos === null || $elem\
    \ < $pos) {\n                $pos = $elem;\n            }\n        }\n    }\n\
    \    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $val) {\n        if ($val < 0) {\n            $neg[] = $val;\n    \
    \    } else if ($val > 0) {\n            $pos[] = $val;\n        }\n    }\n  \
    \  if (count($neg) == 0) {\n        $neg = null;\n    } else {\n        $neg =\
    \ max($neg);\n    }\n    if (count($pos) == 0) {\n        $pos = null;\n    }\
    \ else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", " \
    \ $positives = [];\n  $negatives = [];\n  foreach ($lst as $num) {\n    if ($num\
    \ > 0) {\n      $positives[] = $num;\n    } elseif ($num < 0) {\n      $negatives[]\
    \ = $num;\n    }\n  }\n  if (empty($positives) && empty($negatives)) {\n    return\
    \ [null, null];\n  } elseif (empty($positives)) {\n    return [max($negatives),\
    \ null];\n  } elseif (empty($negatives)) {\n    return [null, min($positives)];\n\
    \  } else {\n    return [max($negatives), min($positives)];\n  }\n}\n", "    $neg\
    \ = [];\n    $pos = [];\n    foreach ($lst as $val) {\n        if ($val < 0) {\n\
    \            $neg[] = $val;\n        } elseif ($val > 0) {\n            $pos[]\
    \ = $val;\n        }\n    }\n    if (empty($neg) && empty($pos)) {\n        return\
    \ [null, null];\n    } elseif (empty($neg)) {\n        return [null, min($pos)];\n\
    \    } elseif (empty($pos)) {\n        return [max($neg), null];\n    } else {\n\
    \        return [max($neg), min($pos)];\n    }\n}\n", "  $neg = null;\n  $pos\
    \ = null;\n  foreach ($lst as $v) {\n    if ($v < 0) {\n      if ($neg === null\
    \ || $v > $neg) {\n        $neg = $v;\n      }\n    } else if ($v > 0) {\n   \
    \   if ($pos === null || $v < $pos) {\n        $pos = $v;\n      }\n    }\n  }\n\
    \  return array($neg, $pos);\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos === null || $num < $pos) {\n            \
    \    $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $negatives = array_filter($lst, function($x) { return $x < 0; });\n\
    \    $positives = array_filter($lst, function($x) { return $x > 0; });\n    return\
    \ [max($negatives), min($positives)];\n}\n", "    $neg = null;\n    $pos = null;\n\
    \    foreach ($lst as $x) {\n        if ($x < 0) {\n            if ($neg === null\
    \ || $x > $neg) {\n                $neg = $x;\n            }\n        } elseif\
    \ ($x > 0) {\n            if ($pos === null || $x < $pos) {\n                $pos\
    \ = $x;\n            }\n        }\n    }\n    return array($neg, $pos);\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $elem) {\n        if ($elem\
    \ < 0) {\n            if ($neg === null || $elem > $neg) {\n                $neg\
    \ = $elem;\n            }\n        } else if ($elem > 0) {\n            if ($pos\
    \ === null || $elem < $pos) {\n                $pos = $elem;\n            }\n\
    \        }\n    }\n    return [$neg, $pos];\n}\n", "    $negatives = [];\n   \
    \ $positives = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n  \
    \          $negatives[] = $num;\n        } elseif ($num > 0) {\n            $positives[]\
    \ = $num;\n        }\n    }\n    if (empty($negatives) && empty($positives)) {\n\
    \        return [null, null];\n    } elseif (empty($negatives)) {\n        return\
    \ [null, min($positives)];\n    } elseif (empty($positives)) {\n        return\
    \ [max($negatives), null];\n    } else {\n        return [max($negatives), min($positives)];\n\
    \    }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n\
    \                $neg = $num;\n            }\n        } elseif ($num > 0) {\n\
    \            if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ [];\n    $pos = [];\n    foreach ($lst as $item) {\n        if ($item < 0) {\n\
    \            $neg[] = $item;\n        } elseif ($item > 0) {\n            $pos[]\
    \ = $item;\n        }\n    }\n    if (empty($neg) && empty($pos)) {\n        return\
    \ [null, null];\n    } elseif (empty($neg)) {\n        return [null, min($pos)];\n\
    \    } elseif (empty($pos)) {\n        return [max($neg), null];\n    } else {\n\
    \        return [max($neg), min($pos)];\n    }\n}\n", "  $neg = null;\n  $pos\
    \ = null;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($neg ===\
    \ null || $item > $neg) {\n        $neg = $item;\n      }\n    } elseif ($item\
    \ > 0) {\n      if ($pos === null || $item < $pos) {\n        $pos = $item;\n\
    \      }\n    }\n  }\n  return array($neg, $pos);\n}\n", "    $negatives = array_filter($lst,\
    \ function($n) { return $n < 0; });\n    $positives = array_filter($lst, function($n)\
    \ { return $n > 0; });\n    $negatives = empty($negatives) ? null : max($negatives);\n\
    \    $positives = empty($positives) ? null : min($positives);\n    return [$negatives,\
    \ $positives];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $num) {\n\
    \    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num > 0) {\n      $pos[]\
    \ = $num;\n    }\n  }\n  if (empty($neg) || empty($pos)) {\n    return [null,\
    \ null];\n  }\n  return [max($neg), min($pos)];\n}\n", "    $neg = null;\n   \
    \ $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n      \
    \      if ($neg === null || $num > $neg) {\n                $neg = $num;\n   \
    \         }\n        } elseif ($num > 0) {\n            if ($pos === null || $num\
    \ < $pos) {\n                $pos = $num;\n            }\n        }\n    }\n \
    \   return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos === null || $num < $pos) {\n            \
    \    $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if\
    \ ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n  \
    \          $pos[] = $num;\n        }\n    }\n    $neg = empty($neg) ? null : max($neg);\n\
    \    $pos = empty($pos) ? null : min($pos);\n    return [$neg, $pos];\n}\n", " \
    \ $neg = [];\n  $pos = [];\n  foreach ($lst as $v) {\n    if ($v < 0) {\n    \
    \  $neg[] = $v;\n    } elseif ($v > 0) {\n      $pos[] = $v;\n    }\n  }\n  if\
    \ (count($neg) > 0) {\n    $neg = max($neg);\n  } else {\n    $neg = null;\n \
    \ }\n  if (count($pos) > 0) {\n    $pos = min($pos);\n  } else {\n    $pos = null;\n\
    \  }\n  return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos === null || $num < $pos) {\n            \
    \    $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "  $negatives = [];\n  $positives = [];\n  foreach ($lst as $num) {\n  \
    \  if ($num < 0) {\n      $negatives[] = $num;\n    } else if ($num > 0) {\n \
    \     $positives[] = $num;\n    }\n  }\n  if (count($negatives) == 0) {\n    $negatives\
    \ = null;\n  } else {\n    $negatives = max($negatives);\n  }\n  if (count($positives)\
    \ == 0) {\n    $positives = null;\n  } else {\n    $positives = min($positives);\n\
    \  }\n  return [$negatives, $positives];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            if\
    \ ($neg === null || $num > $neg) {\n                $neg = $num;\n           \
    \ }\n        } elseif ($num > 0) {\n            if ($pos === null || $num < $pos)\
    \ {\n                $pos = $num;\n            }\n        }\n    }\n    return\
    \ [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num\
    \ > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (empty($neg) &&\
    \ empty($pos)) {\n        return [null, null];\n    } elseif (empty($neg)) {\n\
    \        return [null, min($pos)];\n    } elseif (empty($pos)) {\n        return\
    \ [max($neg), null];\n    } else {\n        return [max($neg), min($pos)];\n \
    \   }\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $num) {\n    if ($num\
    \ < 0) {\n      $neg[] = $num;\n    } elseif ($num > 0) {\n      $pos[] = $num;\n\
    \    }\n  }\n  if (empty($neg) && empty($pos)) {\n    return [null, null];\n \
    \ } elseif (empty($neg)) {\n    return [null, min($pos)];\n  } elseif (empty($pos))\
    \ {\n    return [max($neg), null];\n  } else {\n    return [max($neg), min($pos)];\n\
    \  }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n\
    \        if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n  \
    \              $neg = $num;\n            }\n        } elseif ($num > 0) {\n  \
    \          if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0)\
    \ {\n            if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $negs = array_filter($lst, function($n)\
    \ { return $n < 0; });\n    $pos = array_filter($lst, function($n) { return $n\
    \ > 0; });\n    return [max($negs), min($pos)];\n}\n", "    $neg = [];\n    $pos\
    \ = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n            $neg[]\
    \ = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n        }\n  \
    \  }\n    return [max($neg), min($pos)];\n}\n", "    $negatives = [];\n    $positives\
    \ = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            $negatives[]\
    \ = $num;\n        } elseif ($num > 0) {\n            $positives[] = $num;\n \
    \       }\n    }\n    if (empty($negatives) && empty($positives)) {\n        return\
    \ [null, null];\n    } elseif (empty($negatives)) {\n        return [null, min($positives)];\n\
    \    } elseif (empty($positives)) {\n        return [max($negatives), null];\n\
    \    } else {\n        return [max($negatives), min($positives)];\n    }\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            if ($neg === null || $item > $neg) {\n                $neg\
    \ = $item;\n            }\n        } elseif ($item > 0) {\n            if ($pos\
    \ === null || $item < $pos) {\n                $pos = $item;\n            }\n\
    \        }\n    }\n    return array($neg, $pos);\n}\n", "    $neg = [];\n    $pos\
    \ = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[]\
    \ = $num;\n        } elseif ($num > 0) {\n            $pos[] = $num;\n       \
    \ }\n    }\n    if (empty($neg) || empty($pos)) {\n        return [null, null];\n\
    \    }\n    return [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos =\
    \ [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[]\
    \ = $num;\n        } elseif ($num > 0) {\n            $pos[] = $num;\n       \
    \ }\n    }\n    if (empty($neg) || empty($pos)) {\n        return [null, null];\n\
    \    }\n    return [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos =\
    \ [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[]\
    \ = $num;\n        } elseif ($num > 0) {\n            $pos[] = $num;\n       \
    \ }\n    }\n    $neg = empty($neg) ? null : max($neg);\n    $pos = empty($pos)\
    \ ? null : min($pos);\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos\
    \ = [];\n    foreach ($lst as $val) {\n        if ($val < 0) {\n            $neg[]\
    \ = $val;\n        } elseif ($val > 0) {\n            $pos[] = $val;\n       \
    \ }\n    }\n    if (empty($neg) && empty($pos)) {\n        return [null, null];\n\
    \    } elseif (empty($neg)) {\n        return [null, min($pos)];\n    } elseif\
    \ (empty($pos)) {\n        return [max($neg), null];\n    } else {\n        return\
    \ [max($neg), min($pos)];\n    }\n}\n", "  $neg = array_filter($lst, function($n)\
    \ { return $n < 0; });\n  $pos = array_filter($lst, function($n) { return $n >\
    \ 0; });\n  if (count($neg) == 0) {\n    $neg = null;\n  } else {\n    $neg =\
    \ max($neg);\n  }\n  if (count($pos) == 0) {\n    $pos = null;\n  } else {\n \
    \   $pos = min($pos);\n  }\n  return array($neg, $pos);\n}\n", "    $neg = [];\n\
    \    $pos = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n     \
    \       $neg[] = $num;\n        } elseif ($num > 0) {\n            $pos[] = $num;\n\
    \        }\n    }\n    if (empty($neg) && empty($pos)) {\n        return [null,\
    \ null];\n    } elseif (empty($neg)) {\n        return [null, min($pos)];\n  \
    \  } elseif (empty($pos)) {\n        return [max($neg), null];\n    } else {\n\
    \        return [max($neg), min($pos)];\n    }\n}\n", "    $neg = [];\n    $pos\
    \ = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n            $neg[]\
    \ = $v;\n        } else if ($v > 0) {\n            $pos[] = $v;\n        }\n \
    \   }\n    if (empty($neg)) {\n        $neg = null;\n    } else {\n        $neg\
    \ = max($neg);\n    }\n    if (empty($pos)) {\n        $pos = null;\n    } else\
    \ {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg\
    \ = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num <\
    \ 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $i) {\n        if ($i < 0) {\n            if ($neg\
    \ === null || $i > $neg) {\n                $neg = $i;\n            }\n      \
    \  } elseif ($i > 0) {\n            if ($pos === null || $i < $pos) {\n      \
    \          $pos = $i;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $item) {\n       \
    \ if ($item < 0) {\n            $neg[] = $item;\n        } elseif ($item > 0)\
    \ {\n            $pos[] = $item;\n        }\n    }\n    if (empty($neg) && empty($pos))\
    \ {\n        return [null, null];\n    } elseif (empty($neg)) {\n        return\
    \ [null, min($pos)];\n    } elseif (empty($pos)) {\n        return [max($neg),\
    \ null];\n    } else {\n        return [max($neg), min($pos)];\n    }\n}\n", " \
    \   $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    if (count($neg) > 0) {\n        $neg\
    \ = max($neg);\n    } else {\n        $neg = null;\n    }\n    if (count($pos)\
    \ > 0) {\n        $pos = min($pos);\n    } else {\n        $pos = null;\n    }\n\
    \    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } else\
    \ if ($num > 0) {\n            if ($pos === null || $num < $pos) {\n         \
    \       $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n    \
    \    if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n      \
    \          $neg = $num;\n            }\n        } elseif ($num > 0) {\n      \
    \      if ($pos === null || $num < $pos) {\n                $pos = $num;\n   \
    \         }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n\
    \    $pos = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n         \
    \   $neg[] = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n    \
    \    }\n    }\n    if (empty($neg)) {\n        $neg = null;\n    } else {\n  \
    \      $neg = max($neg);\n    }\n    if (empty($pos)) {\n        $pos = null;\n\
    \    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    if (empty($neg) && empty($pos)) {\n\
    \        return [null, null];\n    } elseif (empty($neg)) {\n        return [null,\
    \ min($pos)];\n    } elseif (empty($pos)) {\n        return [max($neg), null];\n\
    \    } else {\n        return [max($neg), min($pos)];\n    }\n}\n", "    $neg\
    \ = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num <\
    \ 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $item) {\n        if ($item < 0) {\n           \
    \ if ($neg == null) {\n                $neg = $item;\n            } else {\n \
    \               $neg = max($neg, $item);\n            }\n        } else if ($item\
    \ > 0) {\n            if ($pos == null) {\n                $pos = $item;\n   \
    \         } else {\n                $pos = min($pos, $item);\n            }\n\
    \        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos =\
    \ [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[]\
    \ = $num;\n        } else if ($num > 0) {\n            $pos[] = $num;\n      \
    \  }\n    }\n    if (count($neg) == 0) {\n        $neg = null;\n    } else {\n\
    \        $neg = max($neg);\n    }\n    if (count($pos) == 0) {\n        $pos =\
    \ null;\n    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if\
    \ ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n  \
    \          $pos[] = $num;\n        }\n    }\n    if (empty($neg) && empty($pos))\
    \ {\n        return [null, null];\n    } elseif (empty($neg)) {\n        return\
    \ [null, min($pos)];\n    } elseif (empty($pos)) {\n        return [max($neg),\
    \ null];\n    } else {\n        return [max($neg), min($pos)];\n    }\n}\n", " \
    \   $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    $neg = count($neg) ? max($neg) : null;\n\
    \    $pos = count($pos) ? min($pos) : null;\n    return [$neg, $pos];\n}\n", " \
    \   $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    if (count($neg) > 0) {\n        $a\
    \ = max($neg);\n    } else {\n        $a = null;\n    }\n    if (count($pos) >\
    \ 0) {\n        $b = min($pos);\n    } else {\n        $b = null;\n    }\n   \
    \ return [$a, $b];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            if ($neg === null || $num >\
    \ $neg) {\n                $neg = $num;\n            }\n        } elseif ($num\
    \ > 0) {\n            if ($pos === null || $num < $pos) {\n                $pos\
    \ = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", " \
    \   $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n\
    \    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n\
    \        } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n\
    \    $neg = empty($neg) ? null : max($neg);\n    $pos = empty($pos) ? null : min($pos);\n\
    \    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $v) {\n        if ($v < 0) {\n            $neg[] = $v;\n        } elseif\
    \ ($v > 0) {\n            $pos[] = $v;\n        }\n    }\n    if (count($neg)\
    \ == 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n   \
    \ }\n    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n       \
    \ $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n   \
    \         if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = array_filter($lst, function($n)\
    \ { return $n < 0; });\n    $pos = array_filter($lst, function($n) { return $n\
    \ > 0; });\n    return [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos\
    \ = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n            $neg[]\
    \ = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n        }\n  \
    \  }\n    if (count($neg) == 0) {\n        $neg = null;\n    } else {\n      \
    \  $neg = max($neg);\n    }\n    if (count($pos) == 0) {\n        $pos = null;\n\
    \    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $pos = null;\n    $neg = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ > 0) {\n            if ($pos === null || $num < $pos) {\n                $pos\
    \ = $num;\n            }\n        } elseif ($num < 0) {\n            if ($neg\
    \ === null || $num > $neg) {\n                $neg = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = $pos = null;\n  \
    \  foreach ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null\
    \ || $v > $neg) {\n                $neg = $v;\n            }\n        } elseif\
    \ ($v > 0) {\n            if ($pos === null || $v < $pos) {\n                $pos\
    \ = $v;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "  \
    \  $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n\
    \    foreach ($lst as $i) {\n        if ($i < 0) {\n            $neg[] = $i;\n\
    \        } elseif ($i > 0) {\n            $pos[] = $i;\n        }\n    }\n   \
    \ $a = count($neg) ? max($neg) : null;\n    $b = count($pos) ? min($pos) : null;\n\
    \    return [$a, $b];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif\
    \ ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (count($neg)\
    \ == 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n   \
    \ }\n    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n       \
    \ $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n   \
    \         if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "  $neg = null;\n  $pos = null;\n  foreach\
    \ ($lst as $i) {\n    if ($i < 0) {\n      if ($neg === null || $i > $neg) {\n\
    \        $neg = $i;\n      }\n    } else if ($i > 0) {\n      if ($pos === null\
    \ || $i < $pos) {\n        $pos = $i;\n      }\n    }\n  }\n  return array($neg,\
    \ $pos);\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n\
    \                $neg = $num;\n            }\n        } elseif ($num > 0) {\n\
    \            if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n\
    \  $pos = [];\n  foreach ($lst as $n) {\n    if ($n < 0) {\n      $neg[] = $n;\n\
    \    } elseif ($n > 0) {\n      $pos[] = $n;\n    }\n  }\n  $neg = count($neg)\
    \ ? max($neg) : null;\n  $pos = count($pos) ? min($pos) : null;\n  return [$neg,\
    \ $pos];\n}\n", "    $neg_max = null;\n    $pos_min = null;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            if ($neg_max === null || $num\
    \ > $neg_max) {\n                $neg_max = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos_min === null || $num < $pos_min) {\n    \
    \            $pos_min = $num;\n            }\n        }\n    }\n    return [$neg_max,\
    \ $pos_min];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as\
    \ $num) {\n        if ($num < 0) {\n            if ($neg === null || $num > $neg)\
    \ {\n                $neg = $num;\n            }\n        } elseif ($num > 0)\
    \ {\n            if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ [];\n    $pos = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n   \
    \         $neg[] = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n\
    \        }\n    }\n    if (empty($neg)) {\n        $neg = null;\n    } else {\n\
    \        $neg = max($neg);\n    }\n    if (empty($pos)) {\n        $pos = null;\n\
    \    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $neg = [];\n    $pos = [];\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $neg[] = $item;\n        } else if ($item > 0) {\n     \
    \       $pos[] = $item;\n        }\n    }\n    if (count($neg) == 0) {\n     \
    \   $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n    if (count($pos)\
    \ == 0) {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n   \
    \ }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num >\
    \ 0) {\n      $pos[] = $num;\n    }\n  }\n  if (empty($neg) && empty($pos)) {\n\
    \    return [null, null];\n  } elseif (empty($neg)) {\n    return [null, min($pos)];\n\
    \  } elseif (empty($pos)) {\n    return [max($neg), null];\n  } else {\n    return\
    \ [max($neg), min($pos)];\n  }\n}\n", "    if (empty($lst)) {\n        return\
    \ [null, null];\n    }\n    $negatives = array_filter($lst, function ($n) {\n\
    \        return $n < 0;\n    });\n    $positives = array_filter($lst, function\
    \ ($n) {\n        return $n > 0;\n    });\n    if (empty($negatives) || empty($positives))\
    \ {\n        return [null, null];\n    }\n    return [max($negatives), min($positives)];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n    \
    \    if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n      \
    \          $neg = $num;\n            }\n        } elseif ($num > 0) {\n      \
    \      if ($pos === null || $num < $pos) {\n                $pos = $num;\n   \
    \         }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n   \
    \         if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n   \
    \ foreach ($lst as $num) {\n        if ($num < 0) {\n            if ($neg ===\
    \ null || $num > $neg) {\n                $neg = $num;\n            }\n      \
    \  } else if ($num > 0) {\n            if ($pos === null || $num < $pos) {\n \
    \               $pos = $num;\n            }\n        }\n    }\n    return [$neg,\
    \ $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $num) {\n    if\
    \ ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num > 0) {\n      $pos[]\
    \ = $num;\n    }\n  }\n  if (count($neg) == 0) {\n    $neg = null;\n  } else {\n\
    \    $neg = max($neg);\n  }\n  if (count($pos) == 0) {\n    $pos = null;\n  }\
    \ else {\n    $pos = min($pos);\n  }\n  return [$neg, $pos];\n}\n", "    $neg\
    \ = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n\
    \            $neg[] = $num;\n        } elseif ($num > 0) {\n            $pos[]\
    \ = $num;\n        }\n    }\n    $neg = count($neg) ? max($neg) : null;\n    $pos\
    \ = count($pos) ? min($pos) : null;\n    return [$neg, $pos];\n}\n", "  $neg =\
    \ null;\n  $pos = null;\n  foreach ($lst as $num) {\n    if ($num < 0) {\n   \
    \   if ($neg === null || $num > $neg) {\n        $neg = $num;\n      }\n    }\
    \ else if ($num > 0) {\n      if ($pos === null || $num < $pos) {\n        $pos\
    \ = $num;\n      }\n    }\n  }\n  return [$neg, $pos];\n}\n", "  $neg = [];\n\
    \  $pos = [];\n  foreach ($lst as $num) {\n    if ($num < 0) {\n      $neg[] =\
    \ $num;\n    } elseif ($num > 0) {\n      $pos[] = $num;\n    }\n  }\n  return\
    \ [max($neg), min($pos)];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null || $v >\
    \ $neg) {\n                $neg = $v;\n            }\n        } else if ($v >\
    \ 0) {\n            if ($pos === null || $v < $pos) {\n                $pos =\
    \ $v;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg\
    \ = null;\n    $pos = null;\n    foreach ($lst as $i) {\n        if ($i < 0) {\n\
    \            if ($neg === null || $i > $neg) {\n                $neg = $i;\n \
    \           }\n        } else if ($i > 0) {\n            if ($pos === null ||\
    \ $i < $pos) {\n                $pos = $i;\n            }\n        }\n    }\n\
    \    return [$neg, $pos];\n}\n", "  $neg = null;\n  $pos = null;\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      if ($neg === null || $num > $neg) {\n\
    \        $neg = $num;\n      }\n    } elseif ($num > 0) {\n      if ($pos ===\
    \ null || $num < $pos) {\n        $pos = $num;\n      }\n    }\n  }\n  return\
    \ [$neg, $pos];\n}\n", "    $negatives = array_filter($lst, function($x) { return\
    \ $x < 0; });\n    $positives = array_filter($lst, function($x) { return $x >\
    \ 0; });\n    $negatives = empty($negatives) ? null : max($negatives);\n    $positives\
    \ = empty($positives) ? null : min($positives);\n    return array($negatives,\
    \ $positives);\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item < 0) {\n            $neg[] = $item;\n        } elseif ($item\
    \ > 0) {\n            $pos[] = $item;\n        }\n    }\n    if (count($neg) ==\
    \ 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n\
    \    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n        $pos\
    \ = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = $pos = null;\n\
    \    foreach ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null\
    \ || $v > $neg) {\n                $neg = $v;\n            }\n        } elseif\
    \ ($v > 0) {\n            if ($pos === null || $v < $pos) {\n                $pos\
    \ = $v;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "  \
    \  $negatives = array_filter($lst, function($n) { return $n < 0; });\n    $positives\
    \ = array_filter($lst, function($n) { return $n > 0; });\n    return [max($negatives),\
    \ min($positives)];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $num)\
    \ {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num > 0) {\n  \
    \    $pos[] = $num;\n    }\n  }\n  $a = empty($neg) ? null : max($neg);\n  $b\
    \ = empty($pos) ? null : min($pos);\n  return [$a, $b];\n}\n", "  $neg = [];\n\
    \  $pos = [];\n  foreach ($lst as $v) {\n    if ($v < 0) {\n      $neg[] = $v;\n\
    \    } elseif ($v > 0) {\n      $pos[] = $v;\n    }\n  }\n  if (count($neg) ==\
    \ 0) {\n    $neg = null;\n  } else {\n    $neg = max($neg);\n  }\n  if (count($pos)\
    \ == 0) {\n    $pos = null;\n  } else {\n    $pos = min($pos);\n  }\n  return\
    \ [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $i)\
    \ {\n        if ($i < 0) {\n            $neg[] = $i;\n        } elseif ($i > 0)\
    \ {\n            $pos[] = $i;\n        }\n    }\n    if (count($neg) == 0) {\n\
    \        $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n    if\
    \ (count($pos) == 0) {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n\
    \    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $elem) {\n        if ($elem < 0) {\n            $neg[] = $elem;\n \
    \       } elseif ($elem > 0) {\n            $pos[] = $elem;\n        }\n    }\n\
    \    if (count($neg) > 0) {\n        $a = max($neg);\n    } else {\n        $a\
    \ = null;\n    }\n    if (count($pos) > 0) {\n        $b = min($pos);\n    } else\
    \ {\n        $b = null;\n    }\n    return [$a, $b];\n}\n", "  $neg = [];\n  $pos\
    \ = [];\n  foreach ($lst as $v) {\n    if ($v < 0) {\n      $neg[] = $v;\n   \
    \ } elseif ($v > 0) {\n      $pos[] = $v;\n    }\n  }\n  $neg = empty($neg) ?\
    \ null : max($neg);\n  $pos = empty($pos) ? null : min($pos);\n  return [$neg,\
    \ $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $num) {\n    if\
    \ ($num < 0) {\n      $neg[] = $num;\n    } else if ($num > 0) {\n      $pos[]\
    \ = $num;\n    }\n  }\n  if (empty($neg) && empty($pos)) {\n    return [null,\
    \ null];\n  } else if (empty($neg)) {\n    return [null, min($pos)];\n  } else\
    \ if (empty($pos)) {\n    return [max($neg), null];\n  } else {\n    return [max($neg),\
    \ min($pos)];\n  }\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as\
    \ $val) {\n        if ($val < 0) {\n            $neg[] = $val;\n        } else\
    \ if ($val > 0) {\n            $pos[] = $val;\n        }\n    }\n    if (empty($neg)\
    \ && empty($pos)) {\n        return [null, null];\n    } else if (empty($neg))\
    \ {\n        return [null, min($pos)];\n    } else if (empty($pos)) {\n      \
    \  return [max($neg), null];\n    } else {\n        return [max($neg), min($pos)];\n\
    \    }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $v) {\n\
    \        if ($v < 0) {\n            if ($neg === null || $v > $neg) {\n      \
    \          $neg = $v;\n            }\n        } else if ($v > 0) {\n         \
    \   if ($pos === null || $v < $pos) {\n                $pos = $v;\n          \
    \  }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n  \
    \  $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n     \
    \       if ($neg === null || $num > $neg) {\n                $neg = $num;\n  \
    \          }\n        } elseif ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n   \
    \ foreach ($lst as $n) {\n        if ($n < 0) {\n            if ($neg === null\
    \ || $n > $neg) {\n                $neg = $n;\n            }\n        } else if\
    \ ($n > 0) {\n            if ($pos === null || $n < $pos) {\n                $pos\
    \ = $n;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "  $neg\
    \ = [];\n  $pos = [];\n  foreach ($lst as $num) {\n    if ($num < 0) {\n     \
    \ $neg[] = $num;\n    } elseif ($num > 0) {\n      $pos[] = $num;\n    }\n  }\n\
    \  if (empty($neg) || empty($pos)) {\n    return [null, null];\n  }\n  return\
    \ [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ if (empty($neg) || empty($pos)) {\n        return [null, null];\n    }\n   \
    \ return [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ return [max($neg), min($pos)];\n}\n", "    $neg = null;\n    $pos = null;\n\
    \    foreach ($lst as $num) {\n        if ($num < 0) {\n            if ($neg ===\
    \ null || $num > $neg) {\n                $neg = $num;\n            }\n      \
    \  } elseif ($num > 0) {\n            if ($pos === null || $num < $pos) {\n  \
    \              $pos = $num;\n            }\n        }\n    }\n    return [$neg,\
    \ $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n\
    \        if ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num >\
    \ 0) {\n            $pos[] = $num;\n        }\n    }\n    if (empty($neg) || empty($pos))\
    \ {\n        return [null, null];\n    }\n    return [max($neg), min($pos)];\n\
    }\n", "  $neg = null;\n  $pos = null;\n  foreach ($lst as $num) {\n    if ($num\
    \ < 0) {\n      if ($neg === null || $num > $neg) {\n        $neg = $num;\n  \
    \    }\n    } elseif ($num > 0) {\n      if ($pos === null || $num < $pos) {\n\
    \        $pos = $num;\n      }\n    }\n  }\n  return [$neg, $pos];\n}\n", "  \
    \  $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    if (empty($neg) && empty($pos)) {\n\
    \        return [null, null];\n    } elseif (empty($neg)) {\n        return [null,\
    \ min($pos)];\n    } elseif (empty($pos)) {\n        return [max($neg), null];\n\
    \    } else {\n        return [max($neg), min($pos)];\n    }\n}\n", "    $negatives\
    \ = [];\n    $positives = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $negatives[] = $num;\n        } elseif ($num > 0) {\n  \
    \          $positives[] = $num;\n        }\n    }\n    $a = empty($negatives)\
    \ ? null : max($negatives);\n    $b = empty($positives) ? null : min($positives);\n\
    \    return [$a, $b];\n}\n", "    $min = null;\n    $max = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > 0) {\n            if ($min === null ||\
    \ $item < $min) {\n                $min = $item;\n            }\n        } elseif\
    \ ($item < 0) {\n            if ($max === null || $item > $max) {\n          \
    \      $max = $item;\n            }\n        }\n    }\n    return [$max, $min];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $item) {\n   \
    \     if ($item < 0) {\n            if ($neg === null || $item > $neg) {\n   \
    \             $neg = $item;\n            }\n        } elseif ($item > 0) {\n \
    \           if ($pos === null || $item < $pos) {\n                $pos = $item;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num < 0) {\n\
    \            $neg[] = $num;\n        } elseif ($num > 0) {\n            $pos[]\
    \ = $num;\n        }\n    }\n    if (empty($neg) && empty($pos)) {\n        return\
    \ [null, null];\n    } elseif (empty($neg)) {\n        return [null, min($pos)];\n\
    \    } elseif (empty($pos)) {\n        return [max($neg), null];\n    } else {\n\
    \        return [max($neg), min($pos)];\n    }\n}\n", "    $neg = null;\n    $pos\
    \ = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n           \
    \ if ($neg === null || $num > $neg) {\n                $neg = $num;\n        \
    \    }\n        } elseif ($num > 0) {\n            if ($pos === null || $num <\
    \ $pos) {\n                $pos = $num;\n            }\n        }\n    }\n   \
    \ return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null || $v >\
    \ $neg) {\n                $neg = $v;\n            }\n        } elseif ($v > 0)\
    \ {\n            if ($pos === null || $v < $pos) {\n                $pos = $v;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ null;\n    $pos = null;\n    foreach ($lst as $v) {\n        if ($v < 0) {\n\
    \            if ($neg === null || $v > $neg) {\n                $neg = $v;\n \
    \           }\n        } else if ($v > 0) {\n            if ($pos === null ||\
    \ $v < $pos) {\n                $pos = $v;\n            }\n        }\n    }\n\
    \    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ if (empty($neg) && empty($pos)) {\n        return [null, null];\n    } elseif\
    \ (empty($neg)) {\n        return [null, min($pos)];\n    } elseif (empty($pos))\
    \ {\n        return [max($neg), null];\n    } else {\n        return [max($neg),\
    \ min($pos)];\n    }\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif\
    \ ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (count($neg)\
    \ == 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n   \
    \ }\n    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n       \
    \ $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n   \
    \         if ($neg === null || $num > $neg) {\n                $neg = $num;\n\
    \            }\n        } else if ($num > 0) {\n            if ($pos === null\
    \ || $num < $pos) {\n                $pos = $num;\n            }\n        }\n\
    \    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ if (empty($neg) || empty($pos)) {\n        return [null, null];\n    }\n   \
    \ return [max($neg), min($pos)];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ $neg = count($neg) > 0 ? max($neg) : null;\n    $pos = count($pos) > 0 ? min($pos)\
    \ : null;\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n \
    \   foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n\
    \        } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n\
    \    if (empty($neg) && empty($pos)) {\n        return [null, null];\n    } elseif\
    \ (empty($neg)) {\n        return [null, min($pos)];\n    } elseif (empty($pos))\
    \ {\n        return [max($neg), null];\n    } else {\n        return [max($neg),\
    \ min($pos)];\n    }\n}\n", "    $min = null;\n    $max = null;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            if ($max === null || $num >\
    \ $max) {\n                $max = $num;\n            }\n        } elseif ($num\
    \ > 0) {\n            if ($min === null || $num < $min) {\n                $min\
    \ = $num;\n            }\n        }\n    }\n    return [$max, $min];\n}\n", " \
    \   $positive = null;\n    $negative = null;\n    foreach ($lst as $num) {\n \
    \       if ($num > 0) {\n            if ($positive === null || $num < $positive)\
    \ {\n                $positive = $num;\n            }\n        } elseif ($num\
    \ < 0) {\n            if ($negative === null || $num > $negative) {\n        \
    \        $negative = $num;\n            }\n        }\n    }\n    return [$negative,\
    \ $positive];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $elem)\
    \ {\n        if ($elem < 0) {\n            $neg[] = $elem;\n        } elseif ($elem\
    \ > 0) {\n            $pos[] = $elem;\n        }\n    }\n    $a = count($neg)\
    \ > 0 ? max($neg) : null;\n    $b = count($pos) > 0 ? min($pos) : null;\n    return\
    \ [$a, $b];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif ($num\
    \ > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (count($neg) ==\
    \ 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n\
    \    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n        $pos\
    \ = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n   \
    \ $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n      \
    \      if ($neg === null || $num > $neg) {\n                $neg = $num;\n   \
    \         }\n        } elseif ($num > 0) {\n            if ($pos === null || $num\
    \ < $pos) {\n                $pos = $num;\n            }\n        }\n    }\n \
    \   return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as\
    \ $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num > 0)\
    \ {\n      $pos[] = $num;\n    }\n  }\n  if (empty($neg) && empty($pos)) {\n \
    \   return [null, null];\n  } elseif (empty($neg)) {\n    return [null, min($pos)];\n\
    \  } elseif (empty($pos)) {\n    return [max($neg), null];\n  } else {\n    return\
    \ [max($neg), min($pos)];\n  }\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } else if ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n  \
    \  if (count($neg) == 0) {\n        $neg = null;\n    } else {\n        $neg =\
    \ max($neg);\n    }\n    if (count($pos) == 0) {\n        $pos = null;\n    }\
    \ else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", " \
    \   $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $i) {\n        if ($i < 0) {\n            if ($neg\
    \ === null || $i > $neg) {\n                $neg = $i;\n            }\n      \
    \  } else if ($i > 0) {\n            if ($pos === null || $i < $pos) {\n     \
    \           $pos = $i;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $i) {\n      \
    \  if ($i < 0) {\n            if ($neg === null || $i > $neg) {\n            \
    \    $neg = $i;\n            }\n        } elseif ($i > 0) {\n            if ($pos\
    \ === null || $i < $pos) {\n                $pos = $i;\n            }\n      \
    \  }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n\
    \    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n\
    \        } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n\
    \    if (empty($neg) && empty($pos)) {\n        return [null, null];\n    } elseif\
    \ (empty($neg)) {\n        return [null, min($pos)];\n    } elseif (empty($pos))\
    \ {\n        return [max($neg), null];\n    } else {\n        return [max($neg),\
    \ min($pos)];\n    }\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif\
    \ ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (empty($neg)\
    \ && empty($pos)) {\n        return [null, null];\n    } elseif (empty($neg))\
    \ {\n        return [null, min($pos)];\n    } elseif (empty($pos)) {\n       \
    \ return [max($neg), null];\n    } else {\n        return [max($neg), min($pos)];\n\
    \    }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $v) {\n\
    \        if ($v < 0) {\n            if ($neg === null || $v > $neg) {\n      \
    \          $neg = $v;\n            }\n        } else if ($v > 0) {\n         \
    \   if ($pos === null || $v < $pos) {\n                $pos = $v;\n          \
    \  }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n  \
    \  $pos = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n     \
    \       if ($neg === null || $num > $neg) {\n                $neg = $num;\n  \
    \          }\n        } else if ($num > 0) {\n            if ($pos === null ||\
    \ $num < $pos) {\n                $pos = $num;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $item) {\n        if ($item < 0) {\n            $neg[] = $item;\n \
    \       } elseif ($item > 0) {\n            $pos[] = $item;\n        }\n    }\n\
    \    $a = count($neg) ? max($neg) : null;\n    $b = count($pos) ? min($pos) :\
    \ null;\n    return [$a, $b];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ if (empty($neg) && empty($pos)) {\n        return [null, null];\n    } elseif\
    \ (empty($neg)) {\n        return [null, min($pos)];\n    } elseif (empty($pos))\
    \ {\n        return [max($neg), null];\n    } else {\n        return [max($neg),\
    \ min($pos)];\n    }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst\
    \ as $val) {\n        if ($val < 0) {\n            if ($neg === null || $val >\
    \ $neg) {\n                $neg = $val;\n            }\n        } elseif ($val\
    \ > 0) {\n            if ($pos === null || $val < $pos) {\n                $pos\
    \ = $val;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", " \
    \   $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n\
    \    foreach ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n\
    \        } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n\
    \    $neg = empty($neg) ? null : max($neg);\n    $pos = empty($pos) ? null : min($pos);\n\
    \    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num >\
    \ 0) {\n      $pos[] = $num;\n    }\n  }\n  $neg = empty($neg) ? null : max($neg);\n\
    \  $pos = empty($pos) ? null : min($pos);\n  return [$neg, $pos];\n}\n", "   \
    \ $negative = null;\n    $positive = null;\n    foreach ($lst as $num) {\n   \
    \     if ($num < 0) {\n            if ($negative === null || $num > $negative)\
    \ {\n                $negative = $num;\n            }\n        } elseif ($num\
    \ > 0) {\n            if ($positive === null || $num < $positive) {\n        \
    \        $positive = $num;\n            }\n        }\n    }\n    return [$negative,\
    \ $positive];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as\
    \ $n) {\n        if ($n < 0) {\n            if ($neg === null || $n > $neg) {\n\
    \                $neg = $n;\n            }\n        } else if ($n > 0) {\n   \
    \         if ($pos === null || $n < $pos) {\n                $pos = $n;\n    \
    \        }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $n) {\n        if ($n < 0) {\n       \
    \     if ($neg === null || $n > $neg) {\n                $neg = $n;\n        \
    \    }\n        } elseif ($n > 0) {\n            if ($pos === null || $n < $pos)\
    \ {\n                $pos = $n;\n            }\n        }\n    }\n    return [$neg,\
    \ $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num)\
    \ {\n        if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n\
    \                $neg = $num;\n            }\n        } elseif ($num > 0) {\n\
    \            if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg =\
    \ null;\n    $pos = null;\n    foreach ($lst as $i) {\n        if ($i < 0) {\n\
    \            if ($neg === null || $i > $neg) {\n                $neg = $i;\n \
    \           }\n        } elseif ($i > 0) {\n            if ($pos === null || $i\
    \ < $pos) {\n                $pos = $i;\n            }\n        }\n    }\n   \
    \ return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n        } elseif\
    \ ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n    if (count($neg)\
    \ == 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n   \
    \ }\n    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n       \
    \ $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $v) {\n        if ($v < 0) {\n       \
    \     if ($neg === null || $v > $neg) {\n                $neg = $v;\n        \
    \    }\n        } else if ($v > 0) {\n            if ($pos === null || $v < $pos)\
    \ {\n                $pos = $v;\n            }\n        }\n    }\n    return [$neg,\
    \ $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $v) {\n\
    \        if ($v < 0) {\n            $neg[] = $v;\n        } elseif ($v > 0) {\n\
    \            $pos[] = $v;\n        }\n    }\n    if (count($neg) == 0) {\n   \
    \     $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n    if (count($pos)\
    \ == 0) {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $min = null;\n    $max = null;\n   \
    \ foreach ($lst as $num) {\n        if ($num < 0) {\n            if ($max ===\
    \ null || $num > $max) {\n                $max = $num;\n            }\n      \
    \  } elseif ($num > 0) {\n            if ($min === null || $num < $min) {\n  \
    \              $min = $num;\n            }\n        }\n    }\n    return [$max,\
    \ $min];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $n) {\n    if\
    \ ($n < 0) {\n      $neg[] = $n;\n    } else if ($n > 0) {\n      $pos[] = $n;\n\
    \    }\n  }\n  if (count($neg) == 0) {\n    $neg = null;\n  } else {\n    $neg\
    \ = max($neg);\n  }\n  if (count($pos) == 0) {\n    $pos = null;\n  } else {\n\
    \    $pos = min($pos);\n  }\n  return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos\
    \ = [];\n  foreach ($lst as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n\
    \    } elseif ($num > 0) {\n      $pos[] = $num;\n    }\n  }\n  if (empty($neg)\
    \ && empty($pos)) {\n    return [null, null];\n  } elseif (empty($neg)) {\n  \
    \  return [null, min($pos)];\n  } elseif (empty($pos)) {\n    return [max($neg),\
    \ null];\n  } else {\n    return [max($neg), min($pos)];\n  }\n}\n", "    $neg\
    \ = [];\n    $pos = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n \
    \           $neg[] = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n\
    \        }\n    }\n    if (empty($neg)) {\n        $neg = null;\n    } else {\n\
    \        $neg = max($neg);\n    }\n    if (empty($pos)) {\n        $pos = null;\n\
    \    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $n) {\n        if ($n\
    \ < 0) {\n            if ($neg === null || $n > $neg) {\n                $neg\
    \ = $n;\n            }\n        } else if ($n > 0) {\n            if ($pos ===\
    \ null || $n < $pos) {\n                $pos = $n;\n            }\n        }\n\
    \    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $v) {\n        if ($v < 0) {\n            $neg[] = $v;\n        } elseif\
    \ ($v > 0) {\n            $pos[] = $v;\n        }\n    }\n    return [max($neg)\
    \ ?: null, min($pos) ?: null];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ if (empty($neg) && empty($pos)) {\n        return [null, null];\n    } elseif\
    \ (empty($neg)) {\n        return [null, min($pos)];\n    } elseif (empty($pos))\
    \ {\n        return [max($neg), null];\n    } else {\n        return [max($neg),\
    \ min($pos)];\n    }\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            if ($neg === null || $num >\
    \ $neg) {\n                $neg = $num;\n            }\n        } elseif ($num\
    \ > 0) {\n            if ($pos === null || $num < $pos) {\n                $pos\
    \ = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", " \
    \   $neg = [];\n    $pos = [];\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            $neg[] = $num;\n        } elseif ($num > 0) {\n        \
    \    $pos[] = $num;\n        }\n    }\n    if (count($neg) == 0) {\n        $neg\
    \ = null;\n    } else {\n        $neg = max($neg);\n    }\n    if (count($pos)\
    \ == 0) {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n   \
    \ }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num >\
    \ 0) {\n      $pos[] = $num;\n    }\n  }\n  $neg = empty($neg) ? null : max($neg);\n\
    \  $pos = empty($pos) ? null : min($pos);\n  return [$neg, $pos];\n}\n", "  $neg\
    \ = null;\n  $pos = null;\n  foreach ($lst as $n) {\n    if ($n < 0) {\n     \
    \ if ($neg === null || $n > $neg) {\n        $neg = $n;\n      }\n    } else if\
    \ ($n > 0) {\n      if ($pos === null || $n < $pos) {\n        $pos = $n;\n  \
    \    }\n    }\n  }\n  return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos =\
    \ [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n            $neg[] =\
    \ $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n        }\n    }\n\
    \    if (count($neg) == 0) {\n        $neg = null;\n    } else {\n        $neg\
    \ = max($neg);\n    }\n    if (count($pos) == 0) {\n        $pos = null;\n   \
    \ } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } else if ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n\
    \    foreach ($lst as $v) {\n        if ($v < 0) {\n            $neg[] = $v;\n\
    \        } elseif ($v > 0) {\n            $pos[] = $v;\n        }\n    }\n   \
    \ $neg = empty($neg) ? null : max($neg);\n    $pos = empty($pos) ? null : min($pos);\n\
    \    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            if ($neg === null ||\
    \ $num > $neg) {\n                $neg = $num;\n            }\n        } elseif\
    \ ($num > 0) {\n            if ($pos === null || $num < $pos) {\n            \
    \    $pos = $num;\n            }\n        }\n    }\n    return [$neg, $pos];\n\
    }\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n    \
    \    if ($num < 0) {\n            if ($neg === null || $num > $neg) {\n      \
    \          $neg = $num;\n            }\n        } elseif ($num > 0) {\n      \
    \      if ($pos === null || $num < $pos) {\n                $pos = $num;\n   \
    \         }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n\
    \    $pos = null;\n    foreach ($lst as $val) {\n        if ($val < 0) {\n   \
    \         if ($neg === null || $val > $neg) {\n                $neg = $val;\n\
    \            }\n        } elseif ($val > 0) {\n            if ($pos === null ||\
    \ $val < $pos) {\n                $pos = $val;\n            }\n        }\n   \
    \ }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst\
    \ as $num) {\n    if ($num < 0) {\n      $neg[] = $num;\n    } elseif ($num >\
    \ 0) {\n      $pos[] = $num;\n    }\n  }\n  return [max($neg), min($pos)];\n}\n",
  "    $neg = [];\n    $pos = [];\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $neg[] = $item;\n        } elseif ($item > 0) {\n      \
    \      $pos[] = $item;\n        }\n    }\n    if (count($neg) == 0) {\n      \
    \  $neg = null;\n    } else {\n        $neg = max($neg);\n    }\n    if (count($pos)\
    \ == 0) {\n        $pos = null;\n    } else {\n        $pos = min($pos);\n   \
    \ }\n    return [$neg, $pos];\n}\n", "    $neg = array_filter($lst, function($n)\
    \ { return $n < 0; });\n    $pos = array_filter($lst, function($n) { return $n\
    \ > 0; });\n    return [max($neg), min($pos)];\n}\n", "    $neg = null;\n    $pos\
    \ = null;\n    foreach ($lst as $num) {\n        if ($num < 0) {\n           \
    \ if ($neg === null || $num > $neg) {\n                $neg = $num;\n        \
    \    }\n        } elseif ($num > 0) {\n            if ($pos === null || $num <\
    \ $pos) {\n                $pos = $num;\n            }\n        }\n    }\n   \
    \ return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach\
    \ ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null || $v >\
    \ $neg) {\n                $neg = $v;\n            }\n        } else if ($v >\
    \ 0) {\n            if ($pos === null || $v < $pos) {\n                $pos =\
    \ $v;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "    $neg\
    \ = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num <\
    \ 0) {\n            if (is_null($neg) || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if (is_null($pos)\
    \ || $num < $pos) {\n                $pos = $num;\n            }\n        }\n\
    \    }\n    return [$neg, $pos];\n}\n", "  $neg = null;\n  $pos = null;\n  foreach\
    \ ($lst as $n) {\n    if ($n < 0) {\n      if ($neg === null || $n > $neg) {\n\
    \        $neg = $n;\n      }\n    } else if ($n > 0) {\n      if ($pos === null\
    \ || $n < $pos) {\n        $pos = $n;\n      }\n    }\n  }\n  return [$neg, $pos];\n\
    }\n", "  $neg = [];\n  $pos = [];\n  foreach ($lst as $val) {\n    if ($val <\
    \ 0) {\n      $neg[] = $val;\n    } elseif ($val > 0) {\n      $pos[] = $val;\n\
    \    }\n  }\n  return [max($neg), min($pos)];\n}\n", "    $neg = $pos = null;\n\
    \    foreach ($lst as $v) {\n        if ($v < 0) {\n            if ($neg === null\
    \ || $v > $neg) {\n                $neg = $v;\n            }\n        } elseif\
    \ ($v > 0) {\n            if ($pos === null || $v < $pos) {\n                $pos\
    \ = $v;\n            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "\t\
    $neg = null;\n\t$pos = null;\n\tforeach ($lst as $num) {\n\t\tif ($num < 0) {\n\
    \t\t\tif ($neg === null || $num > $neg) {\n\t\t\t\t$neg = $num;\n\t\t\t}\n\t\t\
    } elseif ($num > 0) {\n\t\t\tif ($pos === null || $num < $pos) {\n\t\t\t\t$pos\
    \ = $num;\n\t\t\t}\n\t\t}\n\t}\n\treturn [$neg, $pos];\n}\n", "  $negatives =\
    \ array_filter($lst, function($n) { return $n < 0; });\n  $positives = array_filter($lst,\
    \ function($n) { return $n > 0; });\n  return [\n    count($negatives) > 0 ? max($negatives)\
    \ : null,\n    count($positives) > 0 ? min($positives) : null\n  ];\n}\n", " \
    \   $neg = null;\n    $pos = null;\n    foreach ($lst as $num) {\n        if ($num\
    \ < 0) {\n            if ($neg === null || $num > $neg) {\n                $neg\
    \ = $num;\n            }\n        } elseif ($num > 0) {\n            if ($pos\
    \ === null || $num < $pos) {\n                $pos = $num;\n            }\n  \
    \      }\n    }\n    return [$neg, $pos];\n}\n", "    $neg = null;\n    $pos =\
    \ null;\n    foreach ($lst as $item) {\n        if ($item < 0) {\n           \
    \ if ($neg === null || $item > $neg) {\n                $neg = $item;\n      \
    \      }\n        } elseif ($item > 0) {\n            if ($pos === null || $item\
    \ < $pos) {\n                $pos = $item;\n            }\n        }\n    }\n\
    \    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach\
    \ ($lst as $num) {\n        if ($num < 0) {\n            $neg[] = $num;\n    \
    \    } elseif ($num > 0) {\n            $pos[] = $num;\n        }\n    }\n   \
    \ $neg = count($neg) > 0 ? max($neg) : null;\n    $pos = count($pos) > 0 ? min($pos)\
    \ : null;\n    return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n \
    \   foreach ($lst as $item) {\n        if ($item < 0) {\n            $neg[] =\
    \ $item;\n        } elseif ($item > 0) {\n            $pos[] = $item;\n      \
    \  }\n    }\n    $neg = count($neg) > 0 ? max($neg) : null;\n    $pos = count($pos)\
    \ > 0 ? min($pos) : null;\n    return [$neg, $pos];\n}\n", "    $neg = [];\n \
    \   $pos = [];\n    foreach ($lst as $v) {\n        if ($v < 0) {\n          \
    \  $neg[] = $v;\n        } elseif ($v > 0) {\n            $pos[] = $v;\n     \
    \   }\n    }\n    if (empty($neg)) {\n        $neg = null;\n    } else {\n   \
    \     $neg = max($neg);\n    }\n    if (empty($pos)) {\n        $pos = null;\n\
    \    } else {\n        $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $v) {\n        if ($v\
    \ < 0) {\n            if ($neg === null || $v > $neg) {\n                $neg\
    \ = $v;\n            }\n        } else if ($v > 0) {\n            if ($pos ===\
    \ null || $v < $pos) {\n                $pos = $v;\n            }\n        }\n\
    \    }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n  $pos = [];\n  foreach\
    \ ($lst as $v) {\n    if ($v < 0) {\n      $neg[] = $v;\n    } elseif ($v > 0)\
    \ {\n      $pos[] = $v;\n    }\n  }\n  return [max($neg), min($pos)];\n}\n", " \
    \   $neg = $pos = null;\n    foreach ($lst as $v) {\n        if ($v < 0) {\n \
    \           if ($neg === null || $v > $neg) {\n                $neg = $v;\n  \
    \          }\n        } elseif ($v > 0) {\n            if ($pos === null || $v\
    \ < $pos) {\n                $pos = $v;\n            }\n        }\n    }\n   \
    \ return [$neg, $pos];\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst\
    \ as $val) {\n        if ($val < 0) {\n            $neg[] = $val;\n        } elseif\
    \ ($val > 0) {\n            $pos[] = $val;\n        }\n    }\n    if (empty($neg)\
    \ || empty($pos)) {\n        return [null, null];\n    }\n    return [max($neg),\
    \ min($pos)];\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as\
    \ $num) {\n        if ($num < 0) {\n            if ($neg === null || $num > $neg)\
    \ {\n                $neg = $num;\n            }\n        } else if ($num > 0)\
    \ {\n            if ($pos === null || $num < $pos) {\n                $pos = $num;\n\
    \            }\n        }\n    }\n    return [$neg, $pos];\n}\n", "  $neg = [];\n\
    \  $pos = [];\n  foreach ($lst as $num) {\n    if ($num < 0) {\n      $neg[] =\
    \ $num;\n    } elseif ($num > 0) {\n      $pos[] = $num;\n    }\n  }\n  if (count($neg)\
    \ === 0) {\n    $neg = null;\n  } else {\n    $neg = max($neg);\n  }\n  if (count($pos)\
    \ === 0) {\n    $pos = null;\n  } else {\n    $pos = min($pos);\n  }\n  return\
    \ [$neg, $pos];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"\
  ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nfunction solve($s) {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $result = [];\n    $result2 = [];\n    $result3\
    \ = [];\n    $result4 = [];\n    foreach ($s as $key => $value) {\n        if\
    \ (in_array($value, $letters)) {\n            $result[] = $value;\n        }\n\
    \        if (in_array($value, $letters2)) {\n            $result2[] = $value;\n\
    \        }\n    }\n    if (count($result) == 0 && count($result2) == 0) {\n  \
    \      return strrev($s);\n    }\n    foreach ($s as $key => $value) {\n     \
    \   if (in_array($value, $letters)) {\n            $result3[] = strtoupper($value);\n\
    \        } else if (in_array($value, $letters2)) {\n            $result3[] = strtolower($value);\n\
    \        } else {\n            $result3[] = $value;\n        }\n    }\n    return\
    \ implode(\"\", $result3);\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, strtolower($s[$i]))\
    \ !== false) {\n            $result .= strtoupper($s[$i]);\n        } else {\n\
    \            $result .= strtolower($s[$i]);\n        }\n    }\n    return $result;\n\
    }\necho solve(\"#a@C\");", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ strlen($result) === 0 ? strrev($s) : $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $hasLetter = true;\n   \
    \         $result[] = strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    if\
    \ (!$hasLetter) {\n        $result = array_reverse($result);\n    }\n    return\
    \ implode('', $result);\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters_upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $letters_upper = str_split($letters_upper);\n    $s = str_split($s);\n  \
    \  foreach ($s as $key => $value) {\n        if (in_array($value, $letters)) {\n\
    \            $result .= strtoupper($value);\n        } elseif (in_array($value,\
    \ $letters_upper)) {\n            $result .= strtolower($value);\n        } else\
    \ {\n            $result .= $value;\n        }\n    }\n    return $result;\n}\n\
    echo solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho\
    \ solve(\"#a@C\");\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br", "    $s\
    \ = str_split($s);\n    $letters = array_filter($s, function($v) {\n        return\
    \ ctype_alpha($v);\n    });\n    if (count($letters) === 0) {\n        return\
    \ strrev($s);\n    }\n    foreach ($s as $k => $v) {\n        if (ctype_alpha($v))\
    \ {\n            $s[$k] = strtoupper($v) === $v ? strtolower($v) : strtoupper($v);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) === 0 ? $s : implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    $flag = false;\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $flag = true;\n\
    \            $res[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return $flag\
    \ ? implode('', $res) : strrev($s);\n}\n", "    $s = str_split($s);\n    $res\
    \ = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $res[] = ctype_upper($char) ?\
    \ strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return $isLetter ? implode('', $res) : strrev(implode('',\
    \ $res));\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  } else {\n            $result[] = $value;\n        }\n    }\n    if (count($letters)\
    \ > 0) {\n        $letters = array_reverse($letters);\n        foreach ($letters\
    \ as $key => $value) {\n            $result[] = $value;\n        }\n    } else\
    \ {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n", "    $letters = array_filter(str_split($s), function($item)\
    \ {\n        return ctype_alpha($item);\n    });\n    if (count($letters) ===\
    \ 0) {\n        return strrev($s);\n    }\n    $result = '';\n    foreach (str_split($s)\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $result .= ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode('', $result);\n}\n", "    $letters = str_split($s);\n\
    \    $result = \"\";\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = preg_split('//u',\
    \ $s, -1, PREG_SPLIT_NO_EMPTY);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result[] = ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n}\n",
  "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] === strtolower($s[$i]) ?\
    \ strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $new_string = \"\";\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $new_string .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $new_string .= $letter;\n\
    \        }\n    }\n    return $new_string;\n}\n", "    $s = str_split($s);\n \
    \   $result = '';\n    $isLetter = false;\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result\
    \ .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n   \
    \     } else {\n            $result .= $char;\n        }\n    }\n    return $isLetter\
    \ ? $result : strrev($result);\n}\n", "    $letters = str_split(preg_replace('/[^a-z]/i',\
    \ '', $s));\n    $result = '';\n    foreach ($letters as $letter) {\n        $result\
    \ .= ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n    }\n\
    \    return $result ? str_replace(array_keys($letters), str_split($result), $s)\
    \ : strrev($s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters\
    \ = str_split($letters);\n    $s = str_split($s);\n    $result = \"\";\n    foreach\
    \ ($s as $char) {\n        if (in_array($char, $letters)) {\n            if (ctype_lower($char))\
    \ {\n                $result .= strtoupper($char);\n            } else {\n   \
    \             $result .= strtolower($char);\n            }\n        } else {\n\
    \            $result .= $char;\n        }\n    }\n    return $result;\n}\n", " \
    \   $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (is_numeric($value)) {\n            $numbers[]\
    \ = $value;\n        } else {\n            $letters[] = $value;\n        }\n \
    \   }\n    if (count($letters) == 0) {\n        return strrev(implode('', $numbers));\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_lower($value))\
    \ {\n            $letters[$key] = strtoupper($value);\n        } else {\n    \
    \        $letters[$key] = strtolower($value);\n        }\n    }\n    return implode('',\
    \ $letters) . implode('', $numbers);\n}\n", "    $letters = str_split($s);\n \
    \   $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ count($result) > 0 ? implode('', $result) : strrev($s);\n}\n", "    $s = str_split($s);\n\
    \    $res = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $res[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return implode($res);\n}\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    if(!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    $result = '';\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $s = str_split($s);\n    $result =\
    \ [];\n    $flag = false;\n    foreach ($s as $key => $value) {\n        if (in_array($value,\
    \ $letters)) {\n            $flag = true;\n            if (ctype_lower($value))\
    \ {\n                $result[] = strtoupper($value);\n            } else {\n \
    \               $result[] = strtolower($value);\n            }\n        } else\
    \ {\n            $result[] = $value;\n        }\n    }\n    if ($flag) {\n   \
    \     return implode(\"\", $result);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters =\
    \ str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $value) {\n        if (in_array($value, $letters)) {\n            $result[]\
    \ = strtolower($value) == $value ? strtoupper($value) : strtolower($value);\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = str_split($s);\n    $result = '';\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $result .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $letters = str_split($s);\n    $result = [];\n    $hasLetters = false;\n \
    \   foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n   \
    \         $hasLetters = true;\n            $result[] = ctype_upper($letter) ?\
    \ strtolower($letter) : strtoupper($letter);\n        } else {\n            $result[]\
    \ = $letter;\n        }\n    }\n    return $hasLetters ? implode('', $result)\
    \ : strrev($s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $numbers\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (is_numeric($value))\
    \ {\n            $numbers[] = $value;\n        } else {\n            $letters[]\
    \ = $value;\n        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $numbers));\n    }\n    foreach ($letters as $key => $value) {\n        if (ctype_lower($value))\
    \ {\n            $letters[$key] = strtoupper($value);\n        } else {\n    \
    \        $letters[$key] = strtolower($value);\n        }\n    }\n    return implode('',\
    \ $letters) . implode('', $numbers);\n}\n", "    $result = '';\n    $letters =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n     \
    \       $result .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $res = [];\n    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            if (ctype_lower($char))\
    \ {\n                $res[] = strtoupper($char);\n            } else {\n     \
    \           $res[] = strtolower($char);\n            }\n        } else {\n   \
    \         $res[] = $char;\n        }\n    }\n    return implode('', $res);\n}\n",
  "    $s = str_split($s);\n    $res = [];\n    $letters = [];\n    for ($i = 0; $i\
    \ < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $letters[]\
    \ = $s[$i];\n        } else {\n            $res[] = $s[$i];\n        }\n    }\n\
    \    if (count($letters) == 0) {\n        return strrev(implode('', $res));\n\
    \    }\n    foreach ($letters as $letter) {\n        if (ctype_upper($letter))\
    \ {\n            $res[] = strtolower($letter);\n        } else {\n           \
    \ $res[] = strtoupper($letter);\n        }\n    }\n    return implode('', $res);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $res[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $res[] = $char;\n        }\n    }\n    return implode('', $res);\n}\n",
  "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters =\
    \ str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode($result);\n}\n", "    $letters = str_split($s);\n   \
    \ $result = [];\n    $hasLetters = false;\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $hasLetters = true;\n      \
    \      if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    if ($hasLetters) {\n        return implode('', $result);\n    } else\
    \ {\n        return strrev($s);\n    }\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return $isLetter ? implode('',\
    \ $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n \
    \   $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $new_s = [];\n  \
    \  foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $new_s[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $new_s[] = $char;\n        }\n    }\n    return implode('',\
    \ $new_s);\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ count($result) === 0 ? $s : implode('', $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            if (ctype_upper($char)) {\n                $result[] = strtolower($char);\n\
    \            } else {\n                $result[] = strtoupper($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    return implode('', $result);\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $result = [];\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[]\
    \ = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            if\
    \ (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode('', $result);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) > 0 ? implode('', $result) : strrev($s);\n\
    }\n", "    $s = str_split($s);\n    $new_s = '';\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $new_s .= strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $new_s .= $char;\n        }\n    }\n    return $new_s;\n}\n", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $str = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $str .= ctype_upper($s[$i]) ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $str\
    \ .= $s[$i];\n        }\n    }\n    return $str;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode('', $result);\n}\n", "    if(ctype_alpha($s)){\n    \
    \    return strtoupper($s);\n    }\n    if(ctype_upper($s)){\n        return strtolower($s);\n\
    \    }\n    return strrev($s);\n}\n", "    $letters = str_split(preg_replace('/[^a-zA-Z]/',\
    \ '', $s));\n    $result = [];\n    foreach ($letters as $letter) {\n        $result[]\
    \ = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n    }\n\
    \    return empty($result) ? strrev($s) : str_replace($letters, $result, $s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $reversed = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $reversed[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $reversed[] = $letter;\n        }\n    }\n    return\
    \ implode($reversed);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    $s = array_map(function($v) use ($letters) {\n        if(isset($letters[$v]))\
    \ {\n            return $v == strtoupper($v) ? strtolower($v) : strtoupper($v);\n\
    \        }\n        return $v;\n    }, $s);\n    return implode('', $s);\n}\n",
  "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) === 0 ? $s : implode('', $result);\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n        }\
    \ else {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $letters[] =\
    \ $letter;\n        }\n    }\n    if (count($letters) == 0) {\n        return\
    \ strrev($s);\n    }\n    foreach ($s as $key => $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $s[$key] = strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        }\n    }\n    return implode('', $s);\n}\n",
  "    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result .= strtoupper($char) == $char\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $str = '';\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $str .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $str .= $s[$i];\n        }\n    }\n    return $str;\n\
    }\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve(\"1234\"\
    ) . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;",
  "    $res = '';\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $res .= strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $res;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    $result = '';\n \
    \   for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ count($result) > 0 ? implode('', $result) : strrev($s);\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($char) {\n        return ctype_alpha($char);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = \"\";\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = \"\";\n    $isLetter\
    \ = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $isLetter = true;\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $isLetter ? $result\
    \ : strrev($s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $notLetters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        } else {\n            $notLetters[] = $char;\n\
    \        }\n    }\n    $letters = array_reverse($letters);\n    $letters = array_map(function($letter)\
    \ {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        } else {\n            return strtoupper($letter);\n        }\n    },\
    \ $letters);\n    $s = array_merge($letters, $notLetters);\n    return implode('',\
    \ $s);\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ count($result) === 0 ? $s : implode('', $result);\n}\n\necho solve(\"1234\"\
    ) . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\n\
    echo solve(\"\") . \"\\n\";", "    $letters = str_split($s);\n    $result = [];\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $result[] = strtoupper($letter) === $letter ? strtolower($letter) :\
    \ strtoupper($letter);\n        } else {\n            $result[] = $letter;\n \
    \       }\n    }\n    return count($result) > 0 ? implode('', $result) : strrev($s);\n\
    }\n", "    $result = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n \
    \   $letters = $letters . strtoupper($letters);\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i])\
    \ == $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            }\
    \ else {\n                $result .= strtolower($s[$i]);\n            }\n    \
    \    } else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    if(preg_match('/[a-zA-Z]/', $s)){\n        return strtolower($s) ^\
    \ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    foreach ($letters as\
    \ $key => $value) {\n        if (ctype_upper($s[$value])) {\n            $s[$value]\
    \ = strtolower($s[$value]);\n        } else {\n            $s[$value] = strtoupper($s[$value]);\n\
    \        }\n    }\n    return implode($s);\n}\n", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $arr = str_split($s);\n    $result = [];\n    $is_letter = false;\n\
    \    foreach ($arr as $key => $value) {\n        if (ctype_alpha($value)) {\n\
    \            $is_letter = true;\n            if (ctype_upper($value)) {\n    \
    \            $result[] = strtolower($value);\n            } else {\n         \
    \       $result[] = strtoupper($value);\n            }\n        } else {\n   \
    \         $result[] = $value;\n        }\n    }\n    if ($is_letter) {\n     \
    \   return implode('', $result);\n    } else {\n        return strrev($s);\n \
    \   }\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            if (ctype_upper($letter))\
    \ {\n                $result[] = strtolower($letter);\n            } else {\n\
    \                $result[] = strtoupper($letter);\n            }\n        } else\
    \ {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    if (preg_match('/[a-z]/', $s)) {\n       \
    \ return strtoupper($s);\n    } else if (preg_match('/[A-Z]/', $s)) {\n      \
    \  return strtolower($s);\n    } else {\n        return strrev($s);\n    }\n}\n",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\"\
    );", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result == '' ? strrev($s)\
    \ : $result;\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n      \
    \  } else {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = array_filter(str_split($s), function($c) {\n\
    \        return ctype_alpha($c);\n    });\n    if (empty($letters)) {\n      \
    \  return strrev($s);\n    }\n    $result = [];\n    foreach (str_split($s) as\
    \ $c) {\n        if (ctype_alpha($c)) {\n            $result[] = strtoupper($c)\
    \ === $c ? strtolower($c) : strtoupper($c);\n        } else {\n            $result[]\
    \ = $c;\n        }\n    }\n    return implode('', $result);\n}\n", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n}\n",
  "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (in_array($s[$i], $letters)) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if ($s[$i] == strtoupper($s[$i])) {\n            \
    \    $result .= strtolower($s[$i]);\n            } else {\n                $result\
    \ .= strtoupper($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $isLetter = true;\n    \
    \        $result[] = strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ $isLetter ? implode('', $result) : strrev($s);\n}\n\necho solve(\"1234\") .\
    \ PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho\
    \ solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\"\
    ) . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] === strtolower($s[$i]) ?\
    \ strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) === 0 ? $s : implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $newStr = \"\";\n    $isLetter = false;\n\
    \    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $isLetter = true;\n            if (ctype_upper($s[$i])) {\n     \
    \           $newStr .= strtolower($s[$i]);\n            } else {\n           \
    \     $newStr .= strtoupper($s[$i]);\n            }\n        } else {\n      \
    \      $newStr .= $s[$i];\n        }\n    }\n    if ($isLetter) {\n        return\
    \ $newStr;\n    } else {\n        return strrev($newStr);\n    }\n}\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters = [];\n \
    \   for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $letters[] = $s[$i];\n        }\n    }\n    if (count($letters) ===\
    \ 0) {\n        return strrev($s);\n    }\n    $letters = array_reverse($letters);\n\
    \    $result = '';\n    $j = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            $result .= $letters[$j];\n   \
    \         $j++;\n        } else {\n            $result .= $s[$i];\n        }\n\
    \    }\n    return $result;\n}\n\necho solve(\"1234\");\necho solve(\"ab\");\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    $result = [];\n \
    \   foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n      \
    \      $result[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $res = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return implode('', $res);\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($char) {\n        return ctype_alpha($char);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $s\
    \ = str_split($s);\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char))\
    \ {\n            $s[$key] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return count($result) > 0 ? implode('', $result) : strrev($s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n\necho solve(\"1234\") . \"\\n\";\n\
    echo solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ strrev($result);\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"\
    #a@C\");", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;", "    $s = str_split($s);\n    $letters = [];\n\
    \    $numbers = [];\n    $result = [];\n    foreach ($s as $key => $value) {\n\
    \        if (is_numeric($value)) {\n            $numbers[] = $value;\n       \
    \ } else {\n            $letters[] = $value;\n        }\n    }\n    $letters =\
    \ array_reverse($letters);\n    $numbers = array_reverse($numbers);\n    foreach\
    \ ($s as $key => $value) {\n        if (is_numeric($value)) {\n            $result[]\
    \ = array_pop($numbers);\n        } else {\n            $result[] = array_pop($letters);\n\
    \        }\n    }\n    return implode($result);\n}\n", "    $result = '';\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n      \
    \  } else {\n            $result[] = $letter;\n        }\n    }\n    return ctype_alpha($s)\
    \ ? implode('', $result) : strrev($s);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= $s[$i] ===\
    \ strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n",
  "    $letters = str_split(strtolower($s));\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n      \
    \  } else {\n            $result[] = $letter;\n        }\n    }\n    return implode($result);\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    $hasLetters = false;\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $hasLetters = true;\n            $result[] = ctype_upper($letter) ?\
    \ strtolower($letter) : strtoupper($letter);\n        } else {\n            $result[]\
    \ = $letter;\n        }\n    }\n    return $hasLetters ? implode('', $result)\
    \ : strrev($s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $letter) {\n        if (ctype_lower($s[$letter]))\
    \ {\n            $s[$letter] = strtoupper($s[$letter]);\n        } else {\n  \
    \          $s[$letter] = strtolower($s[$letter]);\n        }\n    }\n    return\
    \ implode($s);\n}\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (in_array($value, $letters)) {\n          \
    \  $result[] = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = range('a', 'z');\n    $letters\
    \ = array_merge($letters, range('A', 'Z'));\n    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n   \
    \         $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n    $result = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[]\
    \ = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode($result);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $lettersUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $lettersUpper = str_split($lettersUpper);\n    $s = str_split($s);\n    for\
    \ ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n\
    \            $result .= strtoupper($s[$i]);\n        } else if (in_array($s[$i],\
    \ $lettersUpper)) {\n            $result .= strtolower($s[$i]);\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n",
  "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    $symbols =\
    \ [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } elseif (ctype_digit($value))\
    \ {\n            $numbers[] = $value;\n        } else {\n            $symbols[]\
    \ = $value;\n        }\n    }\n    $letters = array_map(function($letter) {\n\
    \        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    $numbers = array_reverse($numbers);\n    $symbols = array_reverse($symbols);\n\
    \    return implode('', $letters) . implode('', $numbers) . implode('', $symbols);\n\
    }\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($char) {\n        return ctype_alpha($char);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $s\
    \ = str_split($s);\n    foreach ($s as $i => $char) {\n        if (ctype_alpha($char))\
    \ {\n            $s[$i] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode($s);\n}\n", "    $s = str_split($s);\n \
    \   $res = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $res[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return implode('', $res);\n}\n", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    $letters = str_split($s);\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = array_filter(str_split($s), function($char)\
    \ {\n        return ctype_alpha($char);\n    });\n    if (empty($letters)) {\n\
    \        return strrev($s);\n    }\n    $s = str_split($s);\n    foreach ($s as\
    \ $key => $char) {\n        if (ctype_alpha($char)) {\n            $s[$key] =\
    \ strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n     \
    \   }\n    }\n    return implode('', $s);\n}\n", "    $letters = str_split($s);\n\
    \    $new_string = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $new_string .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $new_string .= $letter;\n\
    \        }\n    }\n    return $new_string;\n}\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    if(preg_match('/[a-zA-Z]/', $s))\
    \ {\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n    } else {\n    \
    \    return strrev($s);\n    }\n}\n", "    $letters = array_filter(str_split($s),\
    \ function($v) {\n        return ctype_alpha($v);\n    });\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    $s = str_split($s);\n    foreach ($s\
    \ as $k => $v) {\n        if (ctype_alpha($v)) {\n            $s[$k] = strtoupper($v)\
    \ === $v ? strtolower($v) : strtoupper($v);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    $letters = str_split($s);\n    $result = \"\";\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\n", "    $result\
    \ = '';\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    if (ctype_alpha($s)) {\n    \
    \    return strtoupper($s);\n    } else {\n        return strrev($s);\n    }\n\
    }\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n\
    \            $result[] = $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $result = [];\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $s = str_split($s);\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $result[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n", "    $letters\
    \ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    $lettersUpper =\
    \ ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else if (in_array($s[$i],\
    \ $lettersUpper)) {\n            $result .= strtolower($s[$i]);\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n",
  "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (in_array($s[$i], $letters)) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            if (ctype_lower($char)) {\n                $result[]\
    \ = strtoupper($char);\n            } else {\n                $result[] = strtolower($char);\n\
    \            }\n        } else {\n            $result[] = $char;\n        }\n\
    \    }\n    return implode('', $result);\n}\n", "    $letters = str_split($s);\n\
    \    $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return strlen($result) == 0 ? strrev($s) : $result;\n}\n",
  "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            if (ctype_upper($letter))\
    \ {\n                $result[] = strtolower($letter);\n            } else {\n\
    \                $result[] = strtoupper($letter);\n            }\n        } else\
    \ {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $reversed = [];\n    $hasLetters = false;\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $hasLetters = true;\n  \
    \          $reversed[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $reversed[] = $letter;\n\
    \        }\n    }\n    return $hasLetters ? implode('', $reversed) : strrev($s);\n\
    }\n", "    if (preg_match('/[a-z]/', $s)) {\n        $s = strtolower($s);\n  \
    \  } elseif (preg_match('/[A-Z]/', $s)) {\n        $s = strtoupper($s);\n    }\n\
    \    return $s;\n}\n", "    $letters = str_split($s);\n    $result = '';\n   \
    \ foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n     \
    \       $result .= strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $res = [];\n    $isLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $res[] = $char === strtoupper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return $isLetter ? implode('', $res) : strrev(implode('', $res));\n\
    }\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtoupper($char) == $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\necho solve(\"1234\") . \"\
    \\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "   \
    \ $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    $result = '';\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $result .= strtolower($s[$i]);\n            } else {\n  \
    \              $result .= strtoupper($s[$i]);\n            }\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    if (ctype_alpha($result))\
    \ {\n        return strrev($result);\n    } else {\n        return $result;\n\
    \    }\n}", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ count($result) === 0 ? $s : implode('', $result);\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\"\
    ) . PHP_EOL;", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (isset($letters[$s[$i]]))\
    \ {\n            $result .= $s[$i] == strtolower($s[$i]) ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $newString = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $newString .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $newString .= $letter;\n\
    \        }\n    }\n    return $newString;\n}\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $s = array_map(function($v) {\n\
    \        if (ctype_alpha($v)) {\n            return strtoupper($v) == $v ? strtolower($v)\
    \ : strtoupper($v);\n        }\n        return $v;\n    }, $s);\n    return implode('',\
    \ $s);\n}\n", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $result[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode($result);\n}\n", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $letters = str_split($s);\n    $new_string = \"\";\n    $has_letter\
    \ = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $has_letter = true;\n            if (ctype_upper($letter)) {\n\
    \                $new_string .= strtolower($letter);\n            } else {\n \
    \               $new_string .= strtoupper($letter);\n            }\n        }\
    \ else {\n            $new_string .= $letter;\n        }\n    }\n    if ($has_letter)\
    \ {\n        return $new_string;\n    } else {\n        return strrev($s);\n \
    \   }\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $lettersUpper = strtoupper($letters);\n    $lettersUpper = str_split($lettersUpper);\n\
    \    $s = str_split($s);\n    $result = \"\";\n    foreach ($s as $value) {\n\
    \        if (in_array($value, $letters)) {\n            $key = array_search($value,\
    \ $letters);\n            $result .= $lettersUpper[$key];\n        } elseif (in_array($value,\
    \ $lettersUpper)) {\n            $key = array_search($value, $lettersUpper);\n\
    \            $result .= $letters[$key];\n        } else {\n            $result\
    \ .= $value;\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            $result .= $char === strtolower($char)\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = preg_replace('/[^a-zA-Z]/',\
    \ '', $s);\n    if (empty($letters)) {\n        return strrev($s);\n    }\n  \
    \  $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $result = '';\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $result = '';\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ strrev($result);\n}\n", "    $letters = str_split($s);\n    $result = [];\n\
    \    $hasLetter = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $hasLetter = true;\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    if ($hasLetter) {\n \
    \       return implode('', $result);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $isLetter = true;\n    \
    \        $result[] = strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ $isLetter ? implode('', $result) : strrev($s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($letters as $value) {\n \
    \       if (ctype_upper($s[$value])) {\n            $s[$value] = strtolower($s[$value]);\n\
    \        } else {\n            $s[$value] = strtoupper($s[$value]);\n        }\n\
    \    }\n    return implode('', $s);\n}\n", "    if(preg_match(\"/[a-zA-Z]/\",\
    \ $s)){\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n    }\n    return\
    \ strrev($s);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\necho solve(\"1234\") .\
    \ \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, strtolower($s[$i]))\
    \ !== false) {\n            $result .= strtoupper($s[$i]);\n        } else {\n\
    \            $result .= strtolower($s[$i]);\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $result = \"\";\n    $flag = false;\n    for ($i\
    \ = 0; $i < count($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n  \
    \          $flag = true;\n            $result .= strtoupper($s[$i]);\n       \
    \ } else if (in_array($s[$i], $letters2)) {\n            $flag = true;\n     \
    \       $result .= strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if ($flag) {\n        return $result;\n  \
    \  } else {\n        return strrev($s);\n    }\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    foreach ($s as\
    \ $char) {\n        if (isset($letters[$char])) {\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n",
  "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters =\
    \ str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            if (ctype_upper($char)) {\n                $result[] = strtolower($char);\n\
    \            } else {\n                $result[] = strtoupper($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    if (count($result) === 0) {\n        return strrev($s);\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = str_split($s);\n    $result = '';\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $result .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $result) : strrev($s);\n}\n", "    $letters = str_split($s);\n\
    \    $reversed = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $reversed[] = ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $reversed[] = $letter;\n        }\n    }\n    return\
    \ implode('', $reversed);\n}\n", "    $letters = str_split($s);\n    $new_letters\
    \ = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $new_letters[] = strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $new_letters[] = $letter;\n\
    \        }\n    }\n    return implode('', $new_letters);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

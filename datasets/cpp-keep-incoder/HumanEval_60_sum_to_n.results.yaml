name: HumanEval_60_sum_to_n
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long cur = 1;\n    while(cur\
    \ < n) {\n        sum += cur;\n        cur++;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmploszl3d5: /tmp/tmploszl3d5.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while(i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 0);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i;\n    for (i = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long cur = 1;\n    while\
    \ (cur < n) {\n        sum += cur;\n        cur *= 2;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  stdout: ''
  stderr: "tmpid6ripj1: /tmp/tmpid6ripj1.cpp:25: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 0);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i<=n)\
    \ {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i;\n    for (i = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    long i = 1;\n    while (i\
    \ <= n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n\
    // 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n\
    // 1\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

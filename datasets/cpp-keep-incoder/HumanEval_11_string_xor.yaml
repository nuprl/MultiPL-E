name: HumanEval_11_string_xor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input are two strings a and\
  \ b consisting only of 1s and 0s.\n// Perform binary XOR on these inputs and return\
  \ result also as a string.\n// >>> string_xor('010', '110')\n// '100'\nstd::string\
  \ string_xor(std::string a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = string_xor;\n    assert(candidate((\"\
  111000\"), (\"101010\")) == (\"010010\"));\n    assert(candidate((\"1\"), (\"1\"\
  )) == (\"0\"));\n    assert(candidate((\"0101\"), (\"0000\")) == (\"0101\"));\n\
  }\n"
completions: ["    std::string s = a + b;\n    std::string t = \"\";\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        t += std::bitset<8>(s[i]).to_ulong() ^\
    \ std::bitset<8>(a[i]).to_ulong();\n    }\n    return t;", "    std::string ans\
    \ = \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < n && j < m) {\n        if (a[i] != '0' && b[j] != '0')\
    \ {\n            ans += '0';\n        } else if (a[i] != '0' && b[j] == '0') {\n\
    \            ans += '1';\n        } else if (a[i] == '0' && b[j] == '0') {\n \
    \           ans += '0';\n        } else {\n            ans += '1';\n        }\n\
    \        i++;\n        j++;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::stoi(a[i])\
    \ ^ std::stoi(b[i])));\n    }\n    return ans;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n   \
    \ }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != b[j]) {\n            ans += a[i];\n            i++;\n        } else {\n \
    \           ans += a[i];\n            i++;\n            j++;\n        }\n    }\n\
    \    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n    while (j\
    \ < m) {\n        ans += b[j];\n        j++;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = z >> 1;\n    }\n\
    \    if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string\
    \ ans = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n    int\
    \ i = 0;\n    while (i < lena) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \        i++;\n    }\n    while (i < lenb) {\n        ans += (std::tolower(b[i])\
    \ ^ std::tolower(a[i]));\n        i++;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        ans = std::to_string(z % 10) +\
    \ ans;\n    }\n    if (carry != 0)\n        ans = std::to_string(carry) + ans;\n\
    \    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(1, z);\n    }\n    if (carry != 0) {\n      \
    \  result.append(1, carry);\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string s = a;\n    for (int i\
    \ = 0; i < b.size(); i++) {\n        s += b[i];\n    }\n    return s;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i]) ^ int(a[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        ans += (z % 10);\n    }\n    if\
    \ (carry != 0)\n        ans += '1';\n    return ans;", "    std::string ans =\
    \ \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for (int i = 0; i < a.size(); i++) {\n        ans += a[i] ^ b[i];\n \
    \   }\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i <\
    \ a.size(); i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int sum = (int)a[i] - b[i] -\
    \ carry;\n        ans += (sum < 0) ? \"0\" : \"\";\n        ans += (sum > 0) ?\
    \ \"1\" : \"\";\n        carry = sum;\n    }\n    ans += carry;\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - b[i] + carry;\n        carry = val / 2;\n \
    \       val = val % 2;\n        result.append(1, val);\n    }\n    if (carry !=\
    \ 0) {\n        result.append(1, carry);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::tolower(a[i])\
    \ ^ std::tolower(b[i]));\n    }\n    return ans;", "    std::string result;\n\
    \    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n \
    \   }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(int(b[i]) ^ int(a[i])));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        if (a[i] != b[j]) {\n            ans += '0';\n        } else\
    \ {\n            ans += '1';\n        }\n        i++;\n        j++;\n    }\n \
    \   return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        ans\
    \ = std::to_string(z % 10) + ans;\n    }\n    if (carry != 0)\n        ans = std::to_string(carry)\
    \ + ans;\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = z >> 1;\n    }\n\
    \    if (carry != 0) ans += '1';\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        carry +=\
    \ (a[i] ^ b[i]) + 1;\n        result.append(carry % 2, 1);\n        carry /= 2;\n\
    \    }\n    if (carry != 0)\n        result.append(carry, 1);\n    return result;",
  "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.length();\
    \ i++) {\n        int x = a.at(i) - '0';\n        int y = b.at(i) - '0';\n   \
    \     int z = x + y + carry;\n        carry = z / 10;\n        result += z % 10;\n\
    \    }\n    if (carry != 0) {\n        result += carry;\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - '0';\n        int val2 = b[i] - '0';\n    \
    \    int res = val + val2 + carry;\n        carry = res / 10;\n        result\
    \ += (res % 10);\n    }\n    if (carry != 0) {\n        result += carry;\n   \
    \ }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::to_string(static_cast<int>(a[i]) ^\
    \ static_cast<int>(b[i])));\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val\
    \ = a[i] - b[i] - carry;\n        carry = val / 2;\n        val = val % 2;\n \
    \       result.append(1, val);\n    }\n    if (carry != 0)\n        result.append(1,\
    \ carry);\n    return result;", "    std::string ans = \"\";\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z\
    \ <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 6;\n    }\n    if\
    \ (carry != 0) {\n        ans += 'a' + carry;\n    }\n    return ans;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n      \
    \  int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    if (carry != 0) {\n        ans\
    \ += '1';\n    }\n    return ans;", "    std::string result;\n    for(int i =\
    \ 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        char c = a[i];\n        char d = b[i];\n\
    \        int x = c ^ d;\n        carry += x;\n        result += to_string(carry\
    \ % 2);\n        carry /= 2;\n    }\n    return result + to_string(carry);", " \
    \   std::string ans = \"\";\n    int len1 = a.length();\n    int len2 = b.length();\n\
    \    int carry = 0;\n    for (int i = 0; i < len1; i++) {\n        int val = a[i]\
    \ - '0';\n        int val2 = b[i] - '0';\n        int res = val + val2 + carry;\n\
    \        ans += (val < 10 ? '0' + res : res);\n        carry = res / 10;\n   \
    \     ans += (res % 10);\n    }\n    if (carry) {\n        ans += '1';\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size();\
    \ i++) {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int n = a.size();\n  \
    \  int m = b.size();\n    for(int i = 0; i < n; i++) {\n        result += a[i]\
    \ ^ b[i];\n    }\n    return result;", "    std::string ans = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.length(); i++) {\n        int sum = a[i] - b[i]\
    \ + carry;\n        ans += (sum < 10) ? sum + '0' : sum - 10;\n        carry =\
    \ sum / 10;\n    }\n    if (carry != 0) {\n        ans += carry;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != '0' && b[j] != '0') {\n            ans += '0';\n        } else if (a[i] !=\
    \ '0' && b[j] == '0') {\n            ans += '1';\n        } else if (a[i] == '0'\
    \ && b[j] == '0') {\n            ans += '0';\n        } else {\n            ans\
    \ += '1';\n        }\n        i++;\n        j++;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n  \
    \  for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != b[j]) {\n            ans += '0';\n        } else {\n            ans += '1';\n\
    \        }\n        i++;\n        j++;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n\
    \    if (carry) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int sum = a[i] - b[i] + carry;\n        carry = sum / 2;\n        sum +=\
    \ carry % 2;\n        result.push_back(sum % 2);\n    }\n    if (carry != 0)\n\
    \        result.push_back(carry);\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n\
    \    }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n  \
    \  return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] + carry;\n        carry\
    \ = x >> 1;\n        result += (char)(x & 1);\n    }\n    if (carry != 0)\n  \
    \      result += (char)(carry);\n    return result;", "    std::string result\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result += z +\
    \ '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1) + '0';\n\
    \        carry = (z >> 1);\n    }\n    if (carry != 0) {\n        ans += '1';\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n   \
    \     z = z % 10;\n        result.push_back(z + '0');\n    }\n    if (carry !=\
    \ 0) {\n        result.push_back(carry + '0');\n    }\n    return result;", " \
    \   std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n   \
    \ for(int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.length(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] -\
    \ '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? z + '0' : z\
    \ - 10;\n        carry = (z <= 9) ? 1 : 0;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = z >> 1;\n    }\n\
    \    if (carry) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(a[i]))\
    \ ^ std::to_string(int(b[i])));\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val\
    \ = a[i] - '0';\n        int val2 = b[i] - '0';\n        int res = val + val2\
    \ + carry;\n        carry = res / 10;\n        result += (res % 10) + '0';\n \
    \   }\n    if (carry != 0) {\n        result += carry + '0';\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int lena = a.length();\n    int\
    \ lenb = b.length();\n    int i = 0;\n    int j = 0;\n    while (i < lena && j\
    \ < lenb) {\n        if (a[i] != '0' && b[j] != '0') {\n            ans += a[i];\n\
    \            i++;\n        } else if (a[i] != '0' && b[j] == '0') {\n        \
    \    ans += '0';\n            i++;\n        } else if (a[i] != '0' && b[j] !=\
    \ '0') {\n            ans += b[j];\n            j++;\n        } else if (a[i]\
    \ != '0' && b[j] == '0') {\n            ans += '0';\n            j++;\n      \
    \  } else {\n            ans += '0';\n            i++;\n            j++;\n   \
    \     }\n    }\n    return ans;", "    std::string result;\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int sum = x + y + carry;\n        carry = sum\
    \ / 10;\n        sum += carry % 10;\n        result[i] = '0' + sum % 10;\n   \
    \ }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n \
    \   return result;", "    std::string ans = \"\";\n    int i = 0;\n    int j =\
    \ 0;\n    while (i < a.size() && j < b.size()) {\n        int k = a[i] - b[j];\n\
    \        if (k > 0) {\n            ans += '1';\n            i += 1;\n        }\
    \ else if (k < 0) {\n            ans += '0';\n            j += 1;\n        } else\
    \ {\n            ans += '0';\n            i += 1;\n            j += 1;\n     \
    \   }\n    }\n    while (i < a.size()) {\n        ans += '0';\n        i += 1;\n\
    \    }\n    while (j < b.size()) {\n        ans += '0';\n        j += 1;\n   \
    \ }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(1, z);\n    }\n    if (carry != 0) {\n      \
    \  result.append(1, carry);\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int val = a[i] - b[i] + carry;\n        ans += (val < 10) ? val + '0' : val\
    \ - 10 + 'a';\n        carry = val / 10;\n    }\n    if (carry != 0)\n       \
    \ ans += (ans.size() % 2 == 1) ? '1' : '0';\n    return ans;", "    std::string\
    \ result;\n    int n = a.size();\n    int m = b.size();\n    for(int i = 0; i\
    \ < n; i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", " \
    \   std::string s = a + b;\n    std::string t = \"\";\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        t += std::to_string(int(s[i]) ^ int(s[i + 1]));\n\
    \    }\n    return t;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int sum = x + y + carry;\n        carry = sum / 10;\n\
    \        sum += carry % 10;\n        result.append(sum + '0');\n    }\n    if\
    \ (carry != 0)\n        result.append(carry + '0');\n    return result;", "  \
    \  std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val\
    \ = a[i] - '0';\n        int val2 = b[i] - '0';\n        int res = val + val2\
    \ + carry;\n        ans += (res % 10) + '0';\n        carry = res / 10;\n    }\n\
    \    if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    char c = a[i];\n        int d = b[i];\n        result += (char)(c ^ d);\n\
    \        carry = carry ^ d;\n    }\n    if (carry != 0) {\n        result += (char)\
    \ carry;\n    }\n    return result;", "    std::string ans = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry !=\
    \ 0)\n        ans = std::to_string(carry) + ans;\n    return ans;", "    std::string\
    \ result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        result +=\
    \ (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i])\
    \ ^ int(a[i])));\n    }\n    return ans;", "    std::string s = a;\n    s += b;\n\
    \    s += b;\n    s += a;\n    s += a;\n    return s;", "    std::string ans =\
    \ \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < n && j < m) {\n        if (a[i] != b[j]) {\n        \
    \    ans += '0';\n        } else {\n            ans += '1';\n        }\n     \
    \   i++;\n        j++;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int sum\
    \ = (int)a[i] - b[i] - carry;\n        ans += (sum < 0) ? \"1\" : \"0\";\n   \
    \     carry = sum > 0 ? 1 : 0;\n    }\n    if (carry != 0) {\n        ans += \"\
    1\";\n    }\n    return ans;", "    std::string result = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i]\
    \ + carry;\n        carry = val / 2;\n        val = val % 2;\n        result +=\
    \ val;\n    }\n    if (carry != 0) {\n        result += carry;\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != b[j]) {\n            ans += '0';\n        } else {\n            ans += '1';\n\
    \        }\n        i++;\n        j++;\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '0' + carry;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(int(a[i])) ^ std::to_string(int(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n\
    \        int val2 = b[i] - '0';\n        int res = val + val2 + carry;\n     \
    \   ans += (val % 10 + '0');\n        carry = res / 10;\n    }\n    if (carry\
    \ != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string result;\n\
    \    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n \
    \   }\n    return result;", "    std::string ans = \"\";\n    for(int i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.length(); i++) {\n        int x = a[i] - '0';\n        int\
    \ y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n \
    \       z = z % 10;\n        result.append(z + '0');\n    }\n    if (carry !=\
    \ 0)\n        result.append(carry + '0');\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int val = a[i] - b[i] - carry;\n        if (val >= 10) {\n            carry\
    \ = 1;\n            val = val - 10;\n        } else {\n            carry = 0;\n\
    \        }\n        result += std::to_string(val);\n    }\n    if (carry) {\n\
    \        result += std::to_string(carry);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int sum = a[i] - b[i] + carry;\n        carry = sum / 2;\n        sum +=\
    \ sum % 2;\n        result.push_back(sum + '0');\n    }\n    if (carry != 0) {\n\
    \        result.push_back(carry + '0');\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z % 10) + '0';\n        carry = z / 10;\n    }\n\
    \    if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = z >> 6;\n    }\n    if (carry) {\n        ans += 'a';\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(z\
    \ + '0');\n    }\n    if (carry != 0) {\n        result.append(carry + '0');\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int lena = a.length();\n\
    \    int lenb = b.length();\n    int i = 0;\n    while (i < lena) {\n        ans\
    \ += (std::to_string(std::stoi(a[i])) ^ std::stoi(b[i]));\n        i++;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n        ans += (val\
    \ + carry) % 2;\n        carry = val / 2;\n    }\n    for (int i = 0; i < b.size();\
    \ i++) {\n        int val = b[i] - '0';\n        ans += (val + carry) % 2;\n \
    \       carry = val / 2;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n  \
    \  int j = 0;\n    while (i < lena && j < lenb) {\n        ans += (std::tolower(a[i])\
    \ ^ std::tolower(b[j]));\n        i++;\n        j++;\n    }\n    while (i < lena)\
    \ {\n        ans += std::tolower(a[i]);\n        i++;\n    }\n    while (j < lenb)\
    \ {\n        ans += std::tolower(b[j]);\n        j++;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n\
    \        result.append(z + '0');\n    }\n    if (carry != 0) {\n        result.append(carry\
    \ + '0');\n    }\n    return result;", "    std::string ans = \"\";\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n        int\
    \ val2 = b[i] - '0';\n        int res = val + val2 + carry;\n        carry = res\
    \ / 10;\n        result += (res % 10);\n    }\n    if (carry != 0) {\n       \
    \ result += to_string(carry);\n    }\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result.append(1, z);\n \
    \   }\n    if (carry != 0) {\n        result.append(1, carry);\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n  \
    \  return ans;", "    std::string result;\n    int n = a.size();\n    int m =\
    \ b.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++)\
    \ {\n            if(a[i] != b[j]) {\n                result += a[i];\n       \
    \     }\n        }\n    }\n    return result;", "    std::string result = \"\"\
    ;\n    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n \
    \   }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry != 0)\n   \
    \     ans = std::to_string(carry) + ans;\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int\
    \ x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n     \
    \   ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n \
    \   }\n    if (carry != 0) {\n        ans += 'a' + carry;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        ans = std::to_string(z\
    \ % 10) + ans;\n    }\n    if (carry != 0) {\n        ans = std::to_string(carry)\
    \ + ans;\n    }\n    return ans;", "    std::string ans = \"\";\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z\
    \ <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 0;\n    }\n    if\
    \ (carry) {\n        ans += 'a';\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int\
    \ x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n    if (carry)\
    \ {\n        ans += '1';\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    int len1 = a.length();\n    int len2 = b.length();\n    int i = 0;\n  \
    \  int j = 0;\n    while (i < len1 && j < len2) {\n        ans += (std::tolower(a[i])\
    \ ^ std::tolower(b[j]));\n        i++;\n        j++;\n    }\n    while (i < len1)\
    \ {\n        ans += std::tolower(a[i]);\n        i++;\n    }\n    while (j < len2)\
    \ {\n        ans += std::tolower(b[j]);\n        j++;\n    }\n    return ans;",
  "    std::string s = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        s\
    \ += (char)('0' + z);\n    }\n    if (carry != 0) {\n        s += (char)('0' +\
    \ carry);\n    }\n    return s;", "    std::string result = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    for (int i = 0; i < n; i++) {\n        ans += (std::to_string(std::stoi(a[i]))\
    \ ^ std::stoi(b[i])) + \"\";\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i])\
    \ ^ int(a[i])));\n    }\n    return ans;", "    std::string ans = \"\";\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n   \
    \     z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0) {\n\
    \        result[a.size()] = '1' + carry;\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string result;\n\
    \    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n   \
    \ }\n    return result;", "    std::string s = a;\n    s += b;\n    s += a;\n\
    \    s += b;\n    return s;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;", "    std::string result = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.length(); i++) {\n        int x = a[i] - '0';\n   \
    \     int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z /\
    \ 10;\n        z = z % 10;\n        result += z + '0';\n    }\n    if (carry !=\
    \ 0) {\n        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^\
    \ y;\n        ans += (z & 1) ? \"1\" : \"0\";\n        carry = z >> 1;\n    }\n\
    \    if (carry != 0) {\n        ans += \"1\";\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = (z <= 9) ? (z - 10 + 'a') : 0;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::stoi(a[i])\
    \ ^ std::stoi(b[i])) + \"\");\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n      \
    \  int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n\
    \    }\n    for (int i = a.size() - 1; i >= 0; i--) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans\
    \ += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int\
    \ m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n\
    \        int k = a[i] - '0';\n        int l = b[j] - '0';\n        ans += (k ^\
    \ l);\n        i += 1;\n        j += 1;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    for(int i = 0;\
    \ i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    char c = a[i] - '0';\n        int d = b[i] - '0';\n        int res = c ^\
    \ d;\n        if (res > 9) {\n            carry = 1;\n            res = res -\
    \ 10;\n        }\n        result += (res + '0');\n    }\n    if (carry == 1) {\n\
    \        result += '1';\n    }\n    return result;", "    std::string result =\
    \ \"\";\n    for (int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        if (a[i] != b[j]) {\n            ans += a[i];\n            i++;\n\
    \            j++;\n        } else {\n            i++;\n            j++;\n    \
    \    }\n    }\n    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n\
    \    while (j < m) {\n        ans += b[j];\n        j++;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n\
    \        carry = z >> 4;\n    }\n    for (int i = a.size() - 1; i >= 0; i--) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = z >> 4;\n    }\n    if (carry != 0) {\n        ans += '1';\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n\
    \        ans += (std::to_string(int(a[i])) ^ std::to_string(int(b[i])));\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? z +\
    \ '0' : z - 10;\n        carry = (z <= 9) ? 1 : 0;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z <= 9) ? z + '0' : z - 10;\n        carry\
    \ = (z > 9) ? 1 : 0;\n    }\n    for (int i = a.size() - 1; i >= 0; i--) {\n \
    \       int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? z + '0' : z - 10;\n        carry = (z\
    \ > 9) ? 1 : 0;\n    }\n    return ans;", "    std::string ans = \"\";\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::binary_function<int,\
    \ int, int>()(\n                a[i], b[i], 0)));\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i]))).substr(1);\n\
    \    }\n    return ans;", "    std::string s = \"\";\n    int carry = 0;\n   \
    \ for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] - carry;\n\
    \        s += (x % 2);\n        carry = x / 2;\n    }\n    if (carry != 0) {\n\
    \        s += 1;\n    }\n    return s;", "    std::string ans = \"\";\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i] ^ b[i])\
    \ + \"\");\n    }\n    return ans;", "    std::string ans = \"\";\n    int n =\
    \ a.size();\n    int m = b.size();\n    for (int i = 0; i < n; i++) {\n      \
    \  ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        ans += (z % 10) + '0';\n    }\n    if (carry\
    \ != 0)\n        ans += '1';\n    return ans;", "    std::string result;\n   \
    \ int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val =\
    \ a[i] - '0';\n        result += to_string(val + carry);\n        carry = (val\
    \ > 0) ? (val + 1) : 0;\n    }\n    for (int i = 0; i < b.size(); i++) {\n   \
    \     int val = b[i] - '0';\n        result += to_string(val + carry);\n     \
    \   carry = (val > 0) ? (val + 1) : 0;\n    }\n    if (carry != 0) {\n       \
    \ result += to_string(carry);\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n  \
    \      int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y\
    \ + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = (z <= 9) ? (0) : (1);\n    }\n    for (int i = a.length(); i < b.length();\
    \ i++) {\n        int x = b[i] - '0';\n        int y = carry;\n        int z =\
    \ x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n    \
    \    carry = (z <= 9) ? (0) : (1);\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int\
    \ x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        ans += (z & 1) + '0';\n        carry = z >> 1;\n    }\n    if (carry\
    \ != 0) {\n        ans += carry;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n  \
    \  if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string result;\n\
    \    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n   \
    \ }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int sum = (int)a[i] - b[i] +\
    \ carry;\n        ans += (sum < 10 ? '0' : '') + sum;\n        carry = sum / 10;\n\
    \    }\n    if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int sum = a[i] - b[i] + carry;\n        carry = sum / 2;\n        sum +=\
    \ carry % 2;\n        result.append(1, sum % 2);\n    }\n    if (carry != 0)\n\
    \        result.append(1, carry);\n    return result;", "    std::string ans =\
    \ \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < n && j < m) {\n        if (a[i] != b[j]) {\n        \
    \    ans += '0';\n        } else {\n            ans += '1';\n        }\n     \
    \   i++;\n        j++;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int j = 0;\n\
    \    while (i < n && j < m) {\n        if (a[i] != b[j]) {\n            ans +=\
    \ '0';\n        } else {\n            ans += '1';\n        }\n        i++;\n \
    \       j++;\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string result;\n    int n = a.size();\n  \
    \  int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j <\
    \ m) {\n        if (a[i] != '0' && a[i] != '1') break;\n        if (b[j] != '0'\
    \ && b[j] != '1') break;\n        result += a[i++] - '0';\n        result += b[j++]\
    \ - '0';\n    }\n    while (i < n) {\n        result += a[i++] - '0';\n    }\n\
    \    while (j < m) {\n        result += b[j++] - '0';\n    }\n    return result;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z & 1) + '0';\n        carry = z >> 1;\n\
    \    }\n    if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n\
    \    int j = 0;\n    while (i < n && j < m) {\n        int k = a[i] - '0';\n \
    \       int l = b[j] - '0';\n        ans += (k ^ l);\n        i++;\n        j++;\n\
    \    }\n    while (i < n) {\n        int k = a[i] - '0';\n        ans += k;\n\
    \        i++;\n    }\n    while (j < m) {\n        int l = b[j] - '0';\n     \
    \   ans += l;\n        j++;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n\
    \    int j = 0;\n    while (i < lena && j < lenb) {\n        if (a[i] != '0' ||\
    \ b[j] != '0') {\n            ans += '0';\n        } else {\n            ans +=\
    \ a[i++];\n            ans += b[j++];\n        }\n    }\n    while (i < lena)\
    \ {\n        ans += '0';\n        i++;\n    }\n    while (j < lenb) {\n      \
    \  ans += '0';\n        j++;\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int sum = x + y + carry;\n\
    \        carry = sum / 10;\n        sum += carry % 10;\n        result[i] = '0'\
    \ + sum % 10;\n    }\n    if (carry != 0)\n        result[result.size() - 1] =\
    \ '1' + carry;\n    return result;", "    std::string result;\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] +\
    \ carry;\n        carry = x >> 1;\n        result += (char) x;\n    }\n    if\
    \ (carry != 0)\n        result += (char) carry;\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int val = a[i] - b[i] + carry;\n        ans += (val < 10) ? val + '0'\
    \ : val - 10 + 'A';\n        carry = val / 10;\n    }\n    if (carry != 0)\n \
    \       ans += carry + 'A';\n    return ans;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if\
    \ (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n    return result;",
  "    std::string ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans\
    \ += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n    }\n \
    \   return ans;", "    std::string result;\n    int carry = 0;\n    for (int i\
    \ = 0; i < a.size(); i++) {\n        char c = a[i];\n        char d = b[i];\n\
    \        int x = c ^ d;\n        carry = x >> 1;\n        result += to_string(carry);\n\
    \    }\n    if (carry != 0) {\n        result += to_string(carry);\n    }\n  \
    \  return result;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size();\
    \ i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n    }\n \
    \   return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i] + carry;\n      \
    \  ans += (val < 10 ? \"0\" : \"\") + val;\n        carry = val / 10;\n    }\n\
    \    if (carry != 0) {\n        ans += (ans.size() == a.size() ? \"0\" : \"\"\
    ) + carry;\n    }\n    return ans;", "    std::string result;\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        char c = a[i] - '0';\n\
    \        char d = b[i] - '0';\n        char res = c + d + (carry > 0 ? 1 : 0);\n\
    \        carry = res / 10;\n        result += (res % 10);\n    }\n    if (carry\
    \ > 0) {\n        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[a.size()] = '1' + carry;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n      \
    \  int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    if (carry != 0) {\n        ans\
    \ += '1';\n    }\n    return ans;", "    std::string ans = \"\";\n    int n =\
    \ a.size();\n    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while\
    \ (i < n && j < m) {\n        if (a[i] != b[j]) {\n            ans += '0';\n \
    \       } else {\n            ans += '1';\n        }\n        i++;\n        j++;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        if (a[i] != b[j]) {\n            ans += '0';\n        } else\
    \ {\n            ans += '1';\n        }\n        i++;\n        j++;\n    }\n \
    \   return ans;", "    std::string s = a + b;\n    std::string result = \"\";\n\
    \    for (int i = 0; i < s.size(); i++) {\n        result += std::bitset<8>(s[i])\
    \ ^ std::bitset<8>(s[s.size() - i - 1]);\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result += z +\
    \ '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? (z\
    \ + '0') : (z - 10 + 'a');\n        carry = z >> 6;\n    }\n    if (carry != 0)\
    \ {\n        ans += carry;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int lena = a.length();\n    int lenb = b.length();\n    int i = 0;\n\
    \    while (i < lena) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \        i++;\n    }\n    while (i < lenb) {\n        ans += (std::tolower(b[i])\
    \ ^ std::tolower(a[i]));\n        i++;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) ? '1' : '0';\n        carry = (z >> 1);\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n      \
    \  int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry != 0) {\n \
    \       ans = std::to_string(carry) + ans;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    int i = 0;\n\
    \    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] != '0' && b[j]\
    \ != '0') {\n            ans += '0';\n        } else {\n            ans += a[i];\n\
    \        }\n        i++;\n        j++;\n    }\n    while (i < n) {\n        ans\
    \ += '0';\n        i++;\n    }\n    while (j < m) {\n        ans += '0';\n   \
    \     j++;\n    }\n    return ans;", "    std::string result;\n    for(int i =\
    \ 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       ans += (z <= 9) ? z + '0' : z - 10;\n        carry = z >> 4;\n    }\n\
    \    if (carry != 0) {\n        ans += carry;\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - b[i] - carry;\n        carry = x >> 1;\n        result +=\
    \ (char)(x & 1);\n    }\n    if (carry != 0) result += (char)(carry);\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(int(b[i]) ^ int(a[i])));\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++)\
    \ {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int i = 0;\n    int j = 0;\n    while (i < a.size() && j <\
    \ b.size()) {\n        if (a[i] != b[j]) {\n            ans += '0';\n        }\
    \ else {\n            ans += '1';\n        }\n        i++;\n        j++;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1) + '0';\n\
    \        carry = z >> 1;\n    }\n    if (carry) {\n        ans += '1';\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int\
    \ m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n\
    \        int k = a[i] - '0';\n        int l = b[j] - '0';\n        if (k > 0 &&\
    \ l > 0) {\n            ans += '1';\n            i += 1;\n            j += 1;\n\
    \        } else if (k > 0) {\n            ans += '0';\n            i += 1;\n \
    \       } else {\n            ans += '0';\n            j += 1;\n        }\n  \
    \  }\n    while (i < n) {\n        ans += '0';\n        i += 1;\n    }\n    while\
    \ (j < m) {\n        ans += '0';\n        j += 1;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n      \
    \  ans += (std::to_string(std::bitset<8>(a[i]) ^ std::bitset<8>(b[i])));\n   \
    \ }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.length(); i++) {\n        int val = a[i] - b[i] - carry;\n    \
    \    carry = val / 2;\n        val = val % 2;\n        result.append(1, val);\n\
    \    }\n    if (carry != 0)\n        result.append(1, carry);\n    return result;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int val = a[i] - '0';\n        int val2 = b[i] - '0';\n    \
    \    int res = val + val2 + carry;\n        ans += (res % 10) + '0';\n       \
    \ carry = (res / 10);\n    }\n    if (carry != 0)\n        ans += carry + '0';\n\
    \    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0')\
    \ : (z - 10 + 'a');\n        carry = z >> 4;\n    }\n    for (int i = a.size()\
    \ - 1; i >= 0; i--) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10\
    \ + 'a');\n        carry = z >> 4;\n    }\n    return ans;", "    std::string\
    \ result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        result +=\
    \ std::to_string(a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    int i = 0;\n    int j = 0;\n    while (i < a.size() && j < b.size())\
    \ {\n        if (a[i] != b[j]) {\n            ans += a[i];\n            i++;\n\
    \        } else {\n            ans += b[j];\n            j++;\n        }\n   \
    \ }\n    while (i < a.size()) {\n        ans += a[i];\n        i++;\n    }\n \
    \   while (j < b.size()) {\n        ans += b[j];\n        j++;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    for (int i = 0; i < n; i++) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[i]));\n\
    \    }\n    return ans;"]
stop_tokens:
- "\n}"

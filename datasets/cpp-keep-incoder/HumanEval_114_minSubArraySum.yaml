name: HumanEval_114_minSubArraySum
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array of integers\
  \ nums, find the minimum sum of any non-empty sub-array\n// of nums.\n// Example\n\
  // minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\n\
  long minSubArraySum(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = minSubArraySum;\n    assert(candidate((std::vector<long>({2,\
  \ 3, 4, 1, 2, 4}))) == (1));\n    assert(candidate((std::vector<long>({-1, -2, -3})))\
  \ == (-6));\n    assert(candidate((std::vector<long>({-1, -2, -3, 2, -10}))) ==\
  \ (-14));\n    assert(candidate((std::vector<long>({-9999999999999999}))) == (-9999999999999999));\n\
  \    assert(candidate((std::vector<long>({0, 10, 20, 1000000}))) == (0));\n    assert(candidate((std::vector<long>({-1,\
  \ -2, -3, 10, -5}))) == (-6));\n    assert(candidate((std::vector<long>({100, -1,\
  \ -2, -3, 10, -5}))) == (-6));\n    assert(candidate((std::vector<long>({10, 11,\
  \ 13, 8, 3, 4}))) == (3));\n    assert(candidate((std::vector<long>({100, -33, 32,\
  \ -1, 0, -2}))) == (-33));\n    assert(candidate((std::vector<long>({-10}))) ==\
  \ (-10));\n    assert(candidate((std::vector<long>({7}))) == (7));\n    assert(candidate((std::vector<long>({1,\
  \ -1}))) == (-1));\n}\n"
completions: ["    // Write your code here\n    long min = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    // Write your code here\n    long min = INT_MAX;\n\
    \    long sum = 0;\n    long n = nums.size();\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    while (i < n) {\n        sum = sum + nums[i];\n        i++;\n\
    \    }\n    while (j < n) {\n        sum = sum + nums[j];\n        j++;\n    }\n\
    \    while (k < n) {\n        sum = sum + nums[k];\n        k++;\n    }\n    if\
    \ (sum < min) {\n        min = sum;\n    }\n    return min;", "    long min =\
    \ std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n \
    \           min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n    }\n    return\
    \ min;", "    // Your code here\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = i; j <\
    \ nums.size(); j++) {\n            sum += nums[j];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n    }\n    return min;",
  "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n       \
    \ ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    //\
    \ Your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long curr = nums[i];\n\
    \        long min = INT_MAX;\n        for (long j = i; j < nums.size(); j++) {\n\
    \            long next = nums[j];\n            min = std::min(min, curr + next);\n\
    \        }\n        ans = std::min(ans, min);\n    }\n    return ans;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long sum\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long min = INT_MAX;\n   \
    \ long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    // Write your code here\n    long ans = nums[0];\n   \
    \ for(long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n \
    \       }\n    }\n    return min;", "    // Your code here\n    long sum = 0;\n\
    \    long minSum = std::numeric_limits<long>::max();\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    // Your\
    \ code here\n    long min = std::numeric_limits<long>::max();\n    long sum =\
    \ 0;\n    long n = nums.size();\n    long i = 0;\n    while(i < n){\n        sum\
    \ += nums[i];\n        if(sum < min){\n            min = sum;\n        }\n   \
    \     i++;\n    }\n    return min;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min)\n            min = sum;\n\
    \        if (sum > max)\n            max = sum;\n    }\n    return max;", "  \
    \  // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long sum = 0;\n    long min =\
    \ INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long sum = 0;\n    long minSum = INT_MAX;\n\
    \    long minIndex = -1;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \            minIndex = i;\n        }\n    }\n    return minSum;", "    // Write\
    \ your code here\n    long min = INT_MAX;\n    long sum = 0;\n    long count =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        if (nums[i] > 0) {\n\
    \            sum += nums[i];\n            count++;\n        }\n    }\n    if (count\
    \ > 0) {\n        min = sum / count;\n    }\n    return min;", "    // Your code\
    \ here\n    long minSum = INT_MIN;\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long ans\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long ans = nums[0];\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.subvector(i\
    \ + 1, nums.size())));\n    }\n    return ans;", "    // Your code here\n    long\
    \ sum = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Write\
    \ your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = nums[0];\n    long i = 0;\n    while (i < nums.size()) {\n   \
    \     sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n    \
    \    }\n        i++;\n    }\n    return ans;", "    // Write your code here\n\
    \    long min = INT_MAX;\n    long sum = 0;\n    long sumOfSubArray = 0;\n   \
    \ long count = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    \
    \    if (sum == min) {\n            sumOfSubArray += nums[i];\n            count++;\n\
    \        }\n    }\n    return sumOfSubArray;", "    // Your code here\n    long\
    \ sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\n\
    \            min = sum;\n        if (sum > max)\n            max = sum;\n    }\n\
    \    return max;", "    long ans = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long curSum = nums[i];\n        for (long j = i + 1; j < nums.size();\
    \ j++) {\n            curSum += nums[j];\n            if (curSum < ans) {\n  \
    \              ans = curSum;\n            }\n        }\n    }\n    return ans;",
  "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    // Your code here\n    long ans\
    \ = INT_MIN;\n    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n   \
    \         min = sum;\n        }\n    }\n    return min;", "    // Write your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;", "    long ans = INT_MAX;\n    long sum =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    long ans = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n          \
    \  if (i != j) {\n                sum += nums[j];\n            }\n        }\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    // Your code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            sum += nums[j];\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    long mid = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \       if (sum > max) {\n            max = sum;\n        }\n    }\n    mid =\
    \ (min + max) / 2;\n    long sum2 = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum2 += nums[i];\n        if (sum2 < mid) {\n            mid\
    \ = sum2;\n        }\n    }\n    return mid;", "    // Your code here\n    long\
    \ minSum = nums[0];\n    long sum = 0;\n    for(long i = 0; i < nums.size(); i++){\n\
    \        sum += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n\
    \        }\n    }\n    return minSum;", "    long ans = nums[0];\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans)\n            ans = sum;\n    }\n    return ans;", "  \
    \  // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long min\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n \
    \       }\n    }\n    return min;", "    // Your code here\n    long minSum =\
    \ std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \    }\n    return sum;", "    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n\
    \    }\n    return min;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    // Write your code here\n   \
    \ long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    return max;", "    // Write your code here\n\
    \    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long min = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    // Write your code here\n    long sum = 0;\n   \
    \ long min = INT_MAX;\n    long max = INT_MIN;\n    long mid = INT_MAX;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n        if (sum == max) {\n            mid = i;\n\
    \        }\n    }\n    return mid;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    return min;", "    // Your code here\n    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    //\
    \ Your code here\n    long ans = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            if (i != j) {\n                sum += nums[j];\n            }\n\
    \        }\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long sum = 0;\n    long minSum\
    \ = std::numeric_limits<long>::max();\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    long ans = INT_MAX;\n  \
    \  for (auto &num : nums) {\n        ans = min(ans, num + minSubArraySum(nums));\n\
    \    }\n    return ans;", "    // Write your code here\n    long sum = 0;\n  \
    \  long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n       \
    \ sum += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n\
    \    }\n    return min;", "    // Write your code here\n    long sum = 0;\n  \
    \  long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    long min = INT_MAX;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    long\
    \ ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans =\
    \ std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min)\n            min = sum;\n        if\
    \ (sum > max)\n            max = sum;\n    }\n    return max;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans)\n            ans = sum;\n   \
    \ }\n    return ans;", "    long ans = nums[0];\n    long long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        if (nums[i] < min) {\n\
    \            min = nums[i];\n        }\n        if (nums[i] > max) {\n       \
    \     max = nums[i];\n        }\n    }\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return min;", "    long min = INT_MAX;\n    long sum = 0;\n    long\
    \ n = nums.size();\n    long i = 0;\n    long j = 0;\n    while (i < n) {\n  \
    \      sum += nums[i];\n        if (sum < min) {\n            min = sum;\n   \
    \     }\n        i++;\n    }\n    while (j < n) {\n        sum += nums[j];\n \
    \       if (sum < min) {\n            min = sum;\n        }\n        j++;\n  \
    \  }\n    return min;", "    // Your code here\n    long min = INT_MAX;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n\
    \    }\n    return min;", "    // Write your code here\n    long sum = 0;\n  \
    \  long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return sum;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    long ans = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i != j) {\n      \
    \          sum += nums[j];\n            }\n        }\n        if (sum < ans) {\n\
    \            ans = sum;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long ans = nums[0];\n    for(long i = 1; i < nums.size(); i++) {\n\
    \        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    // Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    long\
    \ ans = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        for (long j = 0; j < nums.size(); j++) {\n            if (j !=\
    \ i) {\n                sum += nums[j];\n            }\n        }\n        if\
    \ (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", " \
    \   // Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    long\
    \ ans = INT_MIN;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans)\n            ans = sum;\n\
    \    }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    long minSum = std::numeric_limits<long>::max();\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n  \
    \  return minSum;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    // Your code here\n    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Write your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for(long\
    \ i = 0; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n        if(sum > max){\n            max =\
    \ sum;\n        }\n    }\n    return min;", "    long sum = 0;\n    long minSum\
    \ = std::numeric_limits<long>::max();\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    long ans = INT_MIN;\n  \
    \  for (long i = 0; i < nums.size(); i++) {\n        long curr = nums[i];\n  \
    \      for (long j = i + 1; j < nums.size(); j++) {\n            long next = nums[j];\n\
    \            ans = min(ans, curr + next);\n        }\n    }\n    return ans;",
  "    // Write your code here\n    long minSum = nums[0];\n    long sum = 0;\n  \
    \  for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n       \
    \ if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1, nums.size()\
    \ - i)));\n    }\n    return ans;", "    // Your code here\n    long minSum =\
    \ std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long ans\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    // Write your code here\n    long sum\
    \ = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n    }\n    return max;", "    // Write your code here\n \
    \   long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\n\
    \            min = sum;\n        if (sum > max)\n            max = sum;\n    }\n\
    \    return max;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n   \
    \ return max;", "    // Your code here\n    long min = INT_MAX;\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    long long ans = INT_MIN;\n    long long sum = 0;\n    for(long long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = nums[0];\n    long sum = nums[0];\n    for (long i = 1; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    long ans = nums[0];\n    for (long i\
    \ = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i -\
    \ 1]);\n    }\n    return ans;", "    // Your code here\n    long ans = nums[0];\n\
    \    for(long i = 1; i < nums.size(); i++){\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Write your code here\n   \
    \ long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long long ans = nums[0];\n  \
    \  for (long long i = 0; i < nums.size(); i++) {\n        ans = std::min(ans,\
    \ nums[i] + nums[nums.size() - i - 1]);\n    }\n    return ans;", "    // Your\
    \ code here\n    long min = std::numeric_limits<long>::max();\n    long sum =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Write your code here\n    long sum = 0;\n    long minSum = INT_MAX;\n  \
    \  long minIndex = -1;\n    for(long i = 0; i < nums.size(); i++) {\n        if(sum\
    \ < nums[i]) {\n            sum = nums[i];\n            minIndex = i;\n      \
    \  }\n    }\n    for(long i = 0; i < nums.size(); i++) {\n        if(sum == nums[i])\
    \ {\n            sum += minSum;\n            if(sum < minSum) {\n            \
    \    minSum = sum;\n                minIndex = i;\n            }\n        }\n\
    \    }\n    return minSum;", "    // Write your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min)\n            min = sum;\n\
    \        if (sum > max)\n            max = sum;\n    }\n    return max;", "  \
    \  long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++) {\n       \
    \ ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1)));\n    }\n\
    \    return ans;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i +\
    \ 1)));\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    return min;", "    // Your code here\n    long sum = 0;\n   \
    \ long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long min\
    \ = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        min = std::min(min,\
    \ nums[i]);\n    }\n    return min;", "    // Your code here\n    long min = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    long minSum = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    // Write your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    // Write your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long ans = nums[0];\n    for\
    \ (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] +\
    \ nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long minSum = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long long\
    \ ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans =\
    \ min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Write your code here\n   \
    \ long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Write your code here\n   \
    \ long ans = nums[0];\n    for(long i = 1; i < nums.size(); i++)\n    {\n    \
    \    ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", " \
    \   long ans = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n      \
    \  long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n         \
    \   if (i != j) {\n                sum += nums[j];\n            }\n        }\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long ans = INT_MIN;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long min = INT_MAX;\n    long\
    \ sum = 0;\n    long n = nums.size();\n    for (int i = 0; i < n; i++) {\n   \
    \     sum += nums[i];\n        if (sum < min) {\n            min = sum;\n    \
    \    }\n    }\n    return min;", "    // Write your code here\n    long sum =\
    \ 0;\n    long min = INT_MAX;\n    for(long i = 0; i < nums.size(); i++){\n  \
    \      sum += nums[i];\n        if(sum < min){\n            min = sum;\n     \
    \   }\n    }\n    return min;", "    long ans = nums[0];\n    for (long i = 1;\
    \ i < nums.size(); i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n  \
    \  }\n    return ans;", "    // Write your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return min;", "    // Your code here\n    long min = INT_MAX;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    // Write your code here\n    long ans = INT_MAX;\n   \
    \ long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Write your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long minSum = INT_MIN;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    // Your code here\n    long min = INT_MAX;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        if (nums[i] < min) {\n            min =\
    \ nums[i];\n        }\n    }\n    return min;", "    long min = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i +\
    \ 1, nums.size() - i)));\n    }\n    return ans;", "    // Write your code here\n\
    \    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    long minSum = std::numeric_limits<long>::max();\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long\
    \ i = 0; i < nums.size(); i++){\n        if(nums[i] < 0){\n            sum +=\
    \ nums[i];\n            min = std::min(min, sum);\n        }\n        else{\n\
    \            sum += nums[i];\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long sum = 0;\n    long\
    \ min = std::numeric_limits<long>::max();\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Your code here\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \    }\n    return sum;", "    // Your code here\n    long min = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i != j) {\n      \
    \          sum += nums[j];\n            }\n        }\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    long ans = INT_MIN;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        long curr\
    \ = nums[i];\n        for (long j = i + 1; j < nums.size(); j++) {\n         \
    \   long next = nums[j];\n            ans = min(ans, curr + next);\n        }\n\
    \    }\n    return ans;", "    // Your code here\n    long ans = INT_MIN;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long min = INT_MAX;\n    long sum\
    \ = 0;\n    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    // Write your code\
    \ here\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n   \
    \         if (i != j) {\n                sum += nums[j];\n            }\n    \
    \    }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n \
    \   return min;", "    // Your code here\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n      \
    \  }\n    }\n    return minSum;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return min;", "    long long ans = nums[0];\n    for (long i = 1;\
    \ i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n\
    \    }\n    return ans;", "    // Write your code here\n    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long ans = INT_MAX;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for\
    \ (long j = i; j < nums.size(); j++) {\n            sum += nums[j];\n        \
    \    if (sum < ans) {\n                ans = sum;\n            }\n        }\n\
    \    }\n    return ans;", "    // Your code here\n    long min = INT_MAX;\n  \
    \  long sum = 0;\n    long long count = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   if (sum - nums[i] < min) {\n            min = sum - nums[i];\n        }\n\
    \    }\n    return min;", "    // Your code here\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n    }\n    return sum;",
  "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n       \
    \ ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long\
    \ min = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Write\
    \ your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long ans = nums[0];\n    for\
    \ (long i = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + nums[i\
    \ - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    return min;", "    long ans = nums[0];\n    long long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long sum = 0;\n    long minSum\
    \ = std::numeric_limits<long>::max();\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    long ans = nums[0];\n  \
    \  for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n    }\n    return max;", "    // Write your code here\n \
    \   long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    return min;", "    long ans = INT_MIN;\n \
    \   long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n       \
    \ if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n\
    \            ans = sum;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Write your code here\n   \
    \ long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Your code here\n    long sum\
    \ = 0;\n    long minSum = std::numeric_limits<long>::max();\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    //\
    \ Your code here\n    long sum = 0;\n    long minSum = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    long\
    \ ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n    for(long i\
    \ = 0; i < n; i++) {\n        sum += nums[i];\n        if(sum < ans) {\n     \
    \       ans = sum;\n        }\n    }\n    return ans;", "    // Write your code\
    \ here\n    long minSum = nums[0];\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Write your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    // Your code here\n\
    \    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n    long\
    \ minIndex = -1;\n    for(long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if(sum < minSum) {\n            minSum = sum;\n          \
    \  minIndex = i;\n        }\n    }\n    return minSum;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;", "    long ans = nums[0];\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i\
    \ + 1, nums.size())));\n    }\n    return ans;", "    long ans = INT_MAX;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long min = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;"]
stop_tokens:
- "\n}"

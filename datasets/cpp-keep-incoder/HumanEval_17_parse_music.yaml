name: HumanEval_17_parse_music
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string representing musical notes in a special ASCII format.\n// Your task is\
  \ to parse this string and return list of integers corresponding to how many beats\
  \ does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts four\
  \ beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts one\
  \ beat\n// >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n// [4, 2, 1, 2, 2,\
  \ 1, 1, 1, 1, 4, 4]\nstd::vector<long> parse_music(std::string music_string) {\n"
tests: "}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
  \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({4,\
  \ 4, 4, 4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({1,\
  \ 1, 1, 1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({2,\
  \ 2, 1, 1, 4, 4, 4, 4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
  \ (std::vector<long>({2, 1, 2, 1, 4, 2, 4, 2})));\n}\n"
completions: []
stop_tokens:
- "\n}"

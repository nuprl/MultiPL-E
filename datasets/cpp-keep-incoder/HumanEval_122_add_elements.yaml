name: HumanEval_122_add_elements
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty array of\
  \ integers arr and an integer k, return\n// the sum of the elements with at most\
  \ two digits from the first k elements of arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9],\
  \ k = 4\n// Output: 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <=\
  \ 100\n// 2. 1 <= k <= len(arr)\nlong add_elements(std::vector<long> arr, long k)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = add_elements;\n    assert(candidate((std::vector<long>({1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99})), (3)) == (-4));\n    assert(candidate((std::vector<long>({111,\
  \ 121, 3, 4000, 5, 6})), (2)) == (0));\n    assert(candidate((std::vector<long>({11,\
  \ 21, 3, 90, 5, 6, 7, 8, 9})), (4)) == (125));\n    assert(candidate((std::vector<long>({111,\
  \ 21, 3, 4000, 5, 6, 7, 8, 9})), (4)) == (24));\n    assert(candidate((std::vector<long>({1})),\
  \ (1)) == (1));\n}\n"
completions: []
stop_tokens:
- "\n}"

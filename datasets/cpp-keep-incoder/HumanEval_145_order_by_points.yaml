name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\n// >>> order_by_points([1,\
  \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
  std::vector<long> order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({1,\
  \ 11, -1, -11, -12}))) == (std::vector<long>({-1, -11, 1, -12, 11})));\n    assert(candidate((std::vector<long>({1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}))) == (std::vector<long>({0,\
  \ 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({1, -11, -32,\
  \ 43, 54, -98, 2, -3}))) == (std::vector<long>({-3, -32, -98, -11, 1, 2, 43, 54})));\n\
  \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11})))\
  \ == (std::vector<long>({1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})));\n    assert(candidate((std::vector<long>({0,\
  \ 6, 6, -76, -21, 23, 4}))) == (std::vector<long>({-76, -21, 0, 4, 23, 6, 6})));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

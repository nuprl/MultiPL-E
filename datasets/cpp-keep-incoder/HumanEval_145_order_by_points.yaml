name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\n// >>> order_by_points([1,\
  \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
  std::vector<long> order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({1,\
  \ 11, -1, -11, -12}))) == (std::vector<long>({-1, -11, 1, -12, 11})));\n    assert(candidate((std::vector<long>({1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}))) == (std::vector<long>({0,\
  \ 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({1, -11, -32,\
  \ 43, 54, -98, 2, -3}))) == (std::vector<long>({-3, -32, -98, -11, 1, 2, 43, 54})));\n\
  \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11})))\
  \ == (std::vector<long>({1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})));\n    assert(candidate((std::vector<long>({0,\
  \ 6, 6, -76, -21, 23, 4}))) == (std::vector<long>({-76, -21, 0, 4, 23, 6, 6})));\n\
  }\n"
completions: ["    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n \
    \       result.push_back(i);\n    }\n    std::sort(result.begin(), result.end(),\
    \ [&sum](long a, long b){return sum - a < sum - b;});\n    return result;", " \
    \   std::vector<long> numsSorted(nums.size());\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            if (i == j) {\n                continue;\n            }\n   \
    \         sum += nums[j];\n        }\n        numsSorted[i] = sum;\n    }\n  \
    \  std::sort(numsSorted.begin(), numsSorted.end());\n    return numsSorted;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        long sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n  \
    \  }\n    long index = 0;\n    std::vector<long> sorted_nums;\n    while (index\
    \ < nums.size()) {\n        long cur = nums[index];\n        long cur_sum = sum\
    \ - cur;\n        if (cur_sum > 0) {\n            sorted_nums.push_back(cur);\n\
    \            sum += cur;\n        }\n        index++;\n    }\n    return sorted_nums;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a - b < 0;});\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here\n    long sum = 0;\n    long temp = 0;\n    long index = 0;\n\
    \    std::vector<long> result;\n    for (auto &i : nums) {\n        sum += i;\n\
    \    }\n    for (auto &i : nums) {\n        temp += i;\n        if (temp == sum)\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> result;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return result;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) {\n        return sum - a + b < sum - a + b;\n    });\n    return\
    \ nums2;", "    // Write your code here.\n    std::vector<long> nums1;\n    long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums1.push_back(i);\n\
    \    }\n    std::sort(nums1.begin(), nums1.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums1;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a + b < sum - b + a;});\n \
    \   return nums2;", "    // Write your code here\n    std::vector<long> nums1;\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n    }\n    long max = 0;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        if (sum - nums[i] >= max) {\n          \
    \  nums1.push_back(nums[i]);\n        }\n    }\n    for (long i = 0; i < nums2.size();\
    \ i++) {\n        if (sum - nums2[i] >= max) {\n            nums2.push_back(nums2[i]);\n\
    \        }\n    }\n    long min = 0;\n    for (long i = 0; i < nums2.size(); i++)\
    \ {\n        if (sum - nums2[i] <= min) {\n            nums1.push_back(nums2[i]);\n\
    \        }\n    }\n    for (long i = 0; i < nums1.size(); i++) {\n        nums1.push_back(nums1[i]);\n\
    \    }\n    return nums1;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // Write your code here.\n    std::vector<long> nums2;\n\
    \    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long j=0;j<nums.size();j++){\n\
    \            if(nums[j]>0){\n                sum+=nums[j];\n            }\n  \
    \      }\n        if(sum==0){\n            nums2.push_back(nums[i]);\n       \
    \ }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        int sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> numsCopy(nums);\n\
    \    std::sort(numsCopy.begin(), numsCopy.end(), [](long a, long b){\n       \
    \ return a + b < 0;\n    });\n    return numsCopy;", "    // Write your code here.\n\
    \    std::vector<long> result;\n    long sum = 0;\n    for (long num : nums) {\n\
    \        sum += num;\n        result.push_back(sum);\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long &num : nums) {\n        nums2.push_back(num);\n    }\n\
    \    std::sort(nums2.begin(), nums2.end(), [](long &a, long &b){\n        return\
    \ a + b < 0;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum - a + b < sum - b + a;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) {\n        return\
    \ sum - a + b < sum - a + b;\n    });\n    return nums2;", "    // Write your\
    \ code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n    \
    \    return a + b < 0;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - b\
    \ + a;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    std::sort(nums_copy.begin(), nums_copy.end(), [sum](int\
    \ a, int b) -> bool {\n        return sum - a < sum - b;\n    });\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n  \
    \  long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [sum](long a, long b) -> bool\
    \ {\n        return a + b == sum;\n    });\n    return nums2;", "    // Write\
    \ your code here\n    long sum = 0;\n    std::vector<long> result;\n    for(long\
    \ &num: nums) {\n        sum += num;\n        result.push_back(sum);\n    }\n\
    \    std::sort(result.begin(), result.end());\n    return result;", "    std::vector<long>\
    \ numsCopy(nums);\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){\n        return a + b < 0;\n    });\n    return numsCopy;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        nums2.push_back(nums[i]);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // Write your code here\n    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return result;", "    std::vector<long>\
    \ numsCopy(nums);\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return numsCopy;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long max = 0;\n    for (long i : nums2) {\n        if (sum > max) {\n\
    \            max = sum;\n        }\n        sum += i;\n    }\n    std::vector<long>\
    \ nums3;\n    for (long i : nums2) {\n        if (sum == max) {\n            nums3.push_back(i);\n\
    \        }\n    }\n    return nums3;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    long max = 0;\n    for (long i : nums) {\n \
    \       sum += i;\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    for (long i : nums) {\n        if (sum == max) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum - a - b < 0;});\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) < std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n  \
    \  for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for\
    \ (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n        }\n\
    \        if (sum == nums[i]) {\n            nums2.push_back(nums[i]);\n      \
    \  }\n    }\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<nums.size();j++){\n            if(j==i){\n                continue;\n\
    \            }\n            sum+=nums[j];\n        }\n        if(sum==0){\n  \
    \          nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;", " \
    \   // Write your code here.\n    std::vector<long> nums2;\n    for (long i :\
    \ nums) {\n        long sum = 0;\n        while (i != 0) {\n            sum +=\
    \ i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n  \
    \  }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long min_sum = sum;\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        long tmp = sum - i;\n        if (tmp\
    \ < min_sum) {\n            tmp = i;\n            min_sum = tmp;\n        }\n\
    \        result.push_back(tmp);\n    }\n    return result;", "    std::vector<long>\
    \ numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){return a+b<0;});\n    std::vector<long> ans;\n    long sum = 0;\n  \
    \  for(long i : numsCopy){\n        sum += i;\n        ans.push_back(i);\n   \
    \ }\n    for(long i : numsCopy){\n        if(sum != i){\n            ans.push_back(i);\n\
    \            sum -= i;\n        }\n    }\n    return ans;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    for (long i : nums) {\n       \
    \ nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return sum -\
    \ a - b < 0;});\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for(long num : nums){\n        sum += num;\n\
    \        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(), nums2.end());\n\
    \    return nums2;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < 0;\n    });\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [sum](long a, long b) -> bool {\n        return sum - a < sum -\
    \ b;\n    });\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ numsSorted = nums;\n    std::sort(numsSorted.begin(), numsSorted.end(), [](long\
    \ a, long b) {\n        return a + b < 0;\n    });\n    return numsSorted;", " \
    \   std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long i :\
    \ nums_copy) {\n        sum += i;\n    }\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [sum](long a, long b) {\n        return sum - a + b < sum - b + a;\n    });\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) {\n   \
    \     return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) {\n        return\
    \ sum - a + b < sum - a + b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){return a+b<0;});\n    std::vector<long> nums_copy2;\n    long sum = 0;\n\
    \    for(long i : nums_copy){\n        sum += i;\n        nums_copy2.push_back(sum);\n\
    \    }\n    sort(nums_copy2.begin(), nums_copy2.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy3;\n    long sum2 = 0;\n    for(long\
    \ i : nums_copy2){\n        sum2 += i;\n        nums_copy3.push_back(sum2);\n\
    \    }\n    sort(nums_copy3.begin(), nums_copy3.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy4;\n    long sum3 = 0;\n    for(long\
    \ i : nums_copy3){\n        sum3 += i;\n        nums_copy4.push_back(sum3);\n\
    \    }\n    sort(nums_copy4.begin(), nums_copy4.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy5;\n    long sum4 = 0;\n    for(long\
    \ i : nums_copy4){\n        sum4 += i;\n        nums_copy5.push_back(sum4);\n\
    \    }\n    sort(nums_copy5.begin(), nums_copy5.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy6;\n    long sum5 = 0;\n    for(long\
    \ i : nums_copy5){\n        sum5 += i;\n        nums_copy6.push_back(sum5);\n\
    \    }\n    sort(nums_copy6.begin(), nums_copy6.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy7;\n    long sum6 = 0;\n    for(long\
    \ i : nums_copy6){\n        sum6 += i;\n        nums_copy7.push_back(sum6);\n\
    \    }\n    sort(nums_copy7.begin(), nums_copy7.end(), [](long a, long b){return\
    \ a+b<0;});\n    std::vector<long> nums_copy8;\n    long sum7 = 0;\n    for(long\
    \ i : nums_copy7){\n        sum7 += i;\n        nums_copy8.push_back(sum7);\n\
    \    }\n    sort(nums_copy8.begin(), nums_copy8.end(), [](long a, long b){return ",
  "    // Write your code here\n    std::vector<long> result;\n    long sum = 0;\n\
    \    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n  \
    \      return sum - a - b < 0;\n    });\n    return nums2;", "    // Write your\
    \ code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long j=0;j<nums.size();j++){\n\
    \            if(nums[j]==i){\n                sum+=nums[j];\n            }\n \
    \       }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),nums2.end());\n\
    \    return nums2;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here.\n    long sum = 0;\n   \
    \ std::vector<long> result;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // Write your code here.\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n \
    \       return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(),\
    \ [](long a, long b){\n        long sum = 0;\n        while (a != 0) {\n     \
    \       sum += a % 10;\n            a /= 10;\n        }\n        while (a != 0)\
    \ {\n            sum += a % 10;\n            a /= 10;\n        }\n        return\
    \ sum - b < 0;\n    });\n    return nums2;", "    // Write your code here\n  \
    \  std::vector<long> nums1;\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        nums1.push_back(i);\n    }\n    long maxSum = sum;\n\
    \    std::vector<long> nums2;\n    for (long i : nums1) {\n        if (sum - i\
    \ > maxSum) {\n            maxSum = sum - i;\n            nums2.push_back(i);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    long\
    \ sum = 0;\n    std::vector<long> result;\n    for (long i : nums) {\n       \
    \ sum += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [&sum](long a, long b){return sum - a < sum - b;});\n    return\
    \ result;", "    // Write your code here.\n    std::vector<long> result;\n   \
    \ long sum = 0;\n    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n  \
    \      return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here.\n    long sum = 0;\n    std::vector<long> result;\n  \
    \  for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n  \
    \  }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b){return\
    \ sum - a - b < 0;});\n    return result;", "    // Write your code here\n   \
    \ std::vector<long> numsSorted(nums.size());\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            sum += nums[j];\n            if (sum > 0) {\n               \
    \ numsSorted[i] = j;\n                break;\n            }\n        }\n    }\n\
    \    return numsSorted;", "    // Write your code here\n    long sum = 0;\n  \
    \  long max = 0;\n    long min = 0;\n    long index = 0;\n    std::vector<long>\
    \ result;\n    for (auto i : nums) {\n        sum += i;\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n        if (sum < min) {\n           \
    \ min = sum;\n        }\n    }\n    for (auto i : nums) {\n        if (sum ==\
    \ i) {\n            result.push_back(i);\n        }\n    }\n    for (auto i :\
    \ result) {\n        std::cout << i << std::endl;\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        long sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> numsCopy = nums;\n\
    \    long sum = 0;\n    for (long i : numsCopy) {\n        sum += i;\n    }\n\
    \    long maxSum = sum;\n    std::vector<long> numsCopyCopy = numsCopy;\n    for\
    \ (long i : numsCopyCopy) {\n        sum -= i;\n        if (sum < 0) {\n     \
    \       sum = 0;\n        }\n        if (sum > maxSum) {\n            maxSum =\
    \ sum;\n        }\n    }\n    return numsCopy;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for(long i : nums){\n  \
    \      sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a - b < 0;});\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(), nums2.end());\n\
    \    return nums2;", "    // Write your code here.\n    long sum = 0;\n    std::vector<long>\
    \ result;\n    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums2;", "    // Write your code here.\n\
    \    long sum = 0;\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b){\n        sum = (a + b) % 10;\n    \
    \    return sum < 0;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> numsSorted(nums.size());\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        int sum = 0;\n        for (long j = 0; j < nums.size();\
    \ j++) {\n            sum += nums[j];\n            if (sum == i) {\n         \
    \       numsSorted[j] = i;\n            }\n        }\n    }\n    return numsSorted;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums2;", "    // Write your code here.\n\
    \    long sum = 0;\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b) {\n        sum -= a;\n        sum +=\
    \ b;\n        return sum > 0;\n    });\n    return nums_copy;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> numsSorted(nums.size());\n \
    \   long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(),\
    \ numsSorted.end());\n    return numsSorted;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](int a, int b){return sum - a + b < sum - a + b;});\n   \
    \ return nums2;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < 0;\n    });\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    std::vector<long> result;\n    long\
    \ sum = 0;\n    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){\n   \
    \     return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here.\n    std::vector<long> result;\n    long sum = 0;\n  \
    \  for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long maxSum = sum;\n    long maxSumIndex = 0;\n    for (long i = 0;\
    \ i < nums2.size(); i++) {\n        long sum2 = sum - nums2[i];\n        if (sum2\
    \ > maxSum) {\n            maxSum = sum2;\n            maxSumIndex = i;\n    \
    \    }\n    }\n    std::vector<long> ans;\n    ans.push_back(nums2[maxSumIndex]);\n\
    \    for (long i = maxSumIndex + 1; i < nums2.size(); i++) {\n        long sum2\
    \ = sum - nums2[i];\n        if (sum2 > maxSum) {\n            ans.push_back(nums2[i]);\n\
    \            maxSum = sum2;\n            maxSumIndex = i;\n        }\n    }\n\
    \    return ans;", "    // Write your code here.\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n \
    \       return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return sum -\
    \ a - b < 0;});\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n   \
    \ for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n\
    \    std::sort(nums2.begin(), nums2.end(), [sum](long a, long b){return sum -\
    \ a + b < sum - b + a;});\n    return nums2;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n  \
    \  for (long i : nums) {\n        long sum = 0;\n        while (i != 0) {\n  \
    \          sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    std::vector<long>\
    \ numsCopy = nums;\n    sort(numsCopy.begin(), numsCopy.end(), [](long a, long\
    \ b){\n        return a + b < 0;\n    });\n    return numsCopy;", "    // Write\
    \ your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ 0;\n    });\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum - a + b < sum - b + a;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums_copy = nums;\n    long sum\
    \ = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum\
    \ = 0;\n    long max_index = 0;\n    for (long i : nums_copy) {\n        if (sum\
    \ == max_sum) {\n            max_index = i;\n        }\n        if (sum > max_sum)\
    \ {\n            max_sum = sum;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        if (i == max_index) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<nums.size();j++){\n            if(nums[j]==i){\n                sum+=nums[j];\n\
    \            }\n        }\n        nums2.push_back(sum);\n    }\n    sort(nums2.begin(),nums2.end());\n\
    \    return nums2;", "    // Write your code here\n    long sum = 0;\n    std::vector<long>\
    \ result;\n    for (auto &i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b) {\n\
    \        return sum - a - b < 0;\n    });\n    return result;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<nums.size();j++){\n            if(nums[j]==i){\n                sum+=nums[j];\n\
    \            }\n        }\n        if(sum==0){\n            nums2.push_back(i);\n\
    \        }\n    }\n    std::sort(nums2.begin(),nums2.end(),[](long a,long b){return\
    \ a+b<0;});\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums2;", "    // Write your code here.\n    long sum = 0;\n\
    \    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [&sum](long a, long b) {\n        sum += std::abs(a - b);\n        return sum\
    \ > 0;\n    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum - a + b < sum - b + a;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j <\
    \ nums.size(); j++) {\n            sum += nums[j];\n        }\n        if (sum\
    \ == nums[i]) {\n            nums2.push_back(nums[i]);\n        }\n    }\n   \
    \ return nums2;", "    // Write your code here.\n    std::vector<long> nums2;\n\
    \    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long j=0;j<nums.size();j++){\n\
    \            if(nums[j]==i){\n                sum+=nums[j];\n            }\n \
    \       }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),nums2.end());\n\
    \    return nums2;", "    // Write your code here\n    std::vector<long> numsSorted(nums.size());\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        numsSorted[sum\
    \ - i] = i;\n    }\n    return numsSorted;", "    // Write your code here\n  \
    \  std::vector<long> nums2;\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n     \
    \       sum += nums[j];\n        }\n        if (sum == nums[i]) {\n          \
    \  nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;", "    std::vector<long>\
    \ numsCopy(nums);\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){\n        return a + b < 0;\n    });\n    return numsCopy;", "    //\
    \ Write your code here.\n    std::vector<long> nums2;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size();\
    \ j++) {\n            sum += nums[j];\n        }\n        if (sum == nums[i])\
    \ {\n            nums2.push_back(i);\n        }\n    }\n    return nums2;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b){\n     \
    \   return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    // Write\
    \ your code here.\n    std::vector<long> nums2;\n    for(long i=0;i<nums.size();i++){\n\
    \        long sum=0;\n        for(long j=0;j<nums.size();j++){\n            if(nums[j]==i){\n\
    \                sum+=nums[j];\n            }\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(),nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> result;\n    long sum = 0;\n   \
    \ for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long maxSum = sum;\n    long maxSumIndex = 0;\n    for (long i = 0;\
    \ i < nums2.size(); i++) {\n        long sum2 = sum - nums2[i];\n        if (sum2\
    \ > maxSum) {\n            maxSum = sum2;\n            maxSumIndex = i;\n    \
    \    }\n    }\n    std::vector<long> ans;\n    ans.push_back(maxSum);\n    ans.push_back(maxSumIndex);\n\
    \    return ans;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    long maxSum = sum;\n    long maxIndex = 0;\n    for (long i = 0; i\
    \ < nums2.size(); i++) {\n        long sum2 = sum - nums2[i];\n        if (sum2\
    \ > maxSum) {\n            maxSum = sum2;\n            maxIndex = i;\n       \
    \ }\n    }\n    std::vector<long> ans;\n    ans.push_back(maxIndex);\n    return\
    \ ans;", "    // Write your code here\n    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n      \
    \          continue;\n            }\n            sum += nums[j];\n        }\n\
    \        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(), numsSorted.end());\n\
    \    return numsSorted;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int\
    \ a, int b) {\n        return sum - a + b < sum - b + a;\n    });\n    return\
    \ nums2;", "    // Write your code here\n    std::vector<long> result;\n    long\
    \ sum = 0;\n    long index = 0;\n    for (auto num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    for (auto num : result) {\n        std::cout << num << \" \";\n    }\n  \
    \  return result;", "    std::vector<long> numsSorted(nums.size());\n    for (size_t\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (size_t j\
    \ = 0; j < nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        numsSorted[i]\
    \ = sum;\n    }\n    std::sort(numsSorted.begin(), numsSorted.end());\n    return\
    \ numsSorted;", "    std::vector<long> numsSorted(nums.size());\n    for (size_t\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (size_t j\
    \ = 0; j < nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        numsSorted[i]\
    \ = sum;\n    }\n    std::sort(numsSorted.begin(), numsSorted.end());\n    return\
    \ numsSorted;", "    // Write your code here.\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", " \
    \   // Write your code here.\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    long temp = 0;\n    std::vector<long> result;\n\
    \    for (auto i : nums) {\n        sum += i;\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    for (auto i : nums) {\n        temp = sum - i;\n      \
    \  if (temp > 0) {\n            result.push_back(temp);\n        }\n    }\n  \
    \  for (auto i : result) {\n        index = result.size() - i - 1;\n        if\
    \ (index > 0) {\n            result.insert(result.begin() + index, i);\n     \
    \   }\n    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    long sum =\
    \ 0;\n    std::vector<long> result;\n    for (long i : nums) {\n        sum +=\
    \ i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(), result.end(),\
    \ [sum](long a, long b){return sum - a + b < sum - b + a;});\n    return result;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n  \
    \  return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n \
    \       return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size();\
    \ j++) {\n            sum += nums[j];\n        }\n        if (sum == nums[i])\
    \ {\n            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    // Write your code here.\n    std::vector<long> numsSorted = nums;\n    std::sort(numsSorted.begin(),\
    \ numsSorted.end(), [](const long &a, const long &b) -> bool {\n        return\
    \ std::abs(a) > std::abs(b);\n    });\n    return numsSorted;", "    std::vector<long>\
    \ numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){\n        return std::abs(a) < std::abs(b);\n    });\n    return numsCopy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int i, int j) {\n    \
    \    return sum - j;\n    });\n    return nums2;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](const long &a,\
    \ const long &b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here.\n    std::vector<long> nums2;\n \
    \   long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here.\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", " \
    \   std::vector<long> numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return numsCopy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    long sum = 0;\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [&sum](long\
    \ a, long b){\n        sum += std::abs(a - b);\n        return sum > 0;\n    });\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums1;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums1.push_back(i);\n\
    \    }\n    std::sort(nums1.begin(), nums1.end(), [&sum](long a, long b) {\n \
    \       return sum - a - b < 0;\n    });\n    return nums1;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a + b < sum - b + a;});\n \
    \   return nums2;", "    std::vector<long> numsCopy = nums;\n    std::sort(numsCopy.begin(),\
    \ numsCopy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return numsCopy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy =\
    \ nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n \
    \       result.push_back(i);\n    }\n    std::sort(result.begin(), result.end(),\
    \ [&sum](long a, long b) -> bool {\n        return sum - a < sum - b;\n    });\n\
    \    return result;", "    std::vector<long> result;\n    long sum = 0;\n    for\
    \ (auto num : nums) {\n        sum += num;\n        result.push_back(sum);\n \
    \   }\n    std::sort(result.begin(), result.end());\n    return result;", "  \
    \  // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums2;", "    // Write your code here.\n\
    \    std::vector<long> nums1;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n   \
    \         if (i != j) {\n                sum += nums[j];\n            }\n    \
    \    }\n        if (sum > 0) {\n            nums1.push_back(nums[i]);\n      \
    \  }\n    }\n    return nums1;", "    // Write your code here\n    std::vector<long>\
    \ numsSorted(nums.size());\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(),\
    \ numsSorted.end());\n    return numsSorted;", "    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n      \
    \          continue;\n            }\n            sum += nums[j];\n        }\n\
    \        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(), numsSorted.end());\n\
    \    return numsSorted;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n\
    \        }\n        if (sum == nums[i]) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [sum](int\
    \ a, int b) -> bool {\n        return sum - a + b < sum - a - b;\n    });\n  \
    \  return nums2;", "    std::vector<long> numsCopy(nums);\n    std::sort(numsCopy.begin(),\
    \ numsCopy.end(), [](const long &a, const long &b){\n        return std::abs(a)\
    \ < std::abs(b);\n    });\n    return numsCopy;", "    // Write your code here.\n\
    \    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n  \
    \  return nums_copy;", "    // Write your code here.\n    long sum = 0;\n    std::vector<long>\
    \ result;\n    for(long i : nums)\n    {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b){return\
    \ sum - a < sum - b;});\n    return result;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](const long &a,\
    \ const long &b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here.\n    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n    \
    \        if (sum > 0) {\n                numsSorted[i] = j;\n                break;\n\
    \            }\n        }\n    }\n    return numsSorted;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        nums2.push_back(nums[i]);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums2;", "    // Write your code here.\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ sum - a + b;\n    });\n    return nums2;", "    // Write your code here.\n \
    \   std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n \
    \       sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [sum](int a, int b){return sum - a + b < sum - b + a;});\n    return\
    \ nums2;", "    // Write your code here\n    std::vector<long> nums2;\n    long\
    \ sum = 0;\n    for(long i : nums)\n    {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a + b < sum - b + a;});\n    return nums2;", "    // Write your code here.\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ 0;\n    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    long\
    \ min = nums2[0];\n    for (long i : nums2) {\n        if (sum - i < min) {\n\
    \            min = sum - i;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums2) {\n        if (sum - i == min) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a < sum - b;\n    });\n    return\
    \ nums2;", "    // Write your code here.\n    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a) < std::abs(b);\n    });\n    return nums_copy;", "    //\
    \ Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n   \
    \ for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n\
    \    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n\
    \        return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    std::vector<long> numsCopy(nums);\n\
    \    std::sort(numsCopy.begin(), numsCopy.end(), [](long a, long b){\n       \
    \ return std::abs(a) > std::abs(b);\n    });\n    return numsCopy;", "    // Write\
    \ your code here\n    std::vector<long> nums2;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            sum += nums[j];\n        }\n        if (sum == nums[i]) {\n \
    \           nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;", " \
    \   // Write your code here.\n    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n    \
    \        if (sum > 0) {\n                numsSorted[i] = j;\n                break;\n\
    \            }\n        }\n    }\n    return numsSorted;", "    // Write your\
    \ code here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    long sum =\
    \ 0;\n    long max_sum = 0;\n    std::vector<long> result;\n    for (long num\
    \ : nums) {\n        sum += num;\n        if (sum > max_sum) {\n            result.clear();\n\
    \            result.push_back(sum);\n            max_sum = sum;\n        } else\
    \ if (sum == max_sum) {\n            result.push_back(sum);\n        }\n    }\n\
    \    return result;", "    // Write your code here.\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) - std::abs(b));\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long &num : nums) {\n        nums2.push_back(num);\n    }\n\
    \    std::sort(nums2.begin(), nums2.end(), [](long &a, long &b){\n        return\
    \ a + b < 0;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n\
    \        }\n        if (sum == nums[i]) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [sum](long\
    \ a, long b) -> bool {\n        return sum - a + b < 0;\n    });\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    std::vector<long> numsSorted(nums.size());\n    long sum = 0;\n    for (long\
    \ num : nums) {\n        sum += num;\n        numsSorted[sum % 10] = num;\n  \
    \  }\n    return numsSorted;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;"]
stop_tokens:
- "\n}"

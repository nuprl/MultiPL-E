name: HumanEval_3_below_zero
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You're given a list of deposit\
  \ and withdrawal operations on a bank account that starts with\n// zero balance.\
  \ Your task is to detect if at any point the balance of account fallls below zero,\
  \ and\n// at that point function should return True. Otherwise it should return\
  \ False.\n// >>> below_zero([1, 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n\
  // True\nbool below_zero(std::vector<long> operations) {\n"
tests: "}\nint main() {\n    auto candidate = below_zero;\n    assert(candidate((std::vector<long>()))\
  \ == (false));\n    assert(candidate((std::vector<long>({1, 2, -3, 1, 2, -3})))\
  \ == (false));\n    assert(candidate((std::vector<long>({1, 2, -4, 5, 6}))) == (true));\n\
  \    assert(candidate((std::vector<long>({1, -1, 2, -2, 5, -5, 4, -4}))) == (false));\n\
  \    assert(candidate((std::vector<long>({1, -1, 2, -2, 5, -5, 4, -5}))) == (true));\n\
  \    assert(candidate((std::vector<long>({1, -2, 2, -2, 5, -5, 4, -4}))) == (true));\n\
  }\n"
completions: ["    long balance = operations[0];\n    for (long i = 1; i < operations.size();\
    \ i++) {\n        if (operations[i] < 0)\n            return true;\n        balance\
    \ += operations[i];\n    }\n    return balance < 0;", "    long balance = 0;\n\
    \    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  long balance = operations[0];\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        if (operations[i] < 0) {\n            return false;\n      \
    \  }\n        balance += operations[i];\n        if (balance < 0) {\n        \
    \    return true;\n        }\n    }\n    return false;", "    long balance = 0;\n\
    \    for (auto i : operations) {\n        balance += i;\n        if (balance <\
    \ 0) {\n            return true;\n        }\n    }\n    return false;", "    long\
    \ balance = 0;\n    for (auto i : operations) {\n        balance += i;\n     \
    \   if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (long i = 0; i <\
    \ operations.size(); i++) {\n        sum += operations[i];\n    }\n    if (sum\
    \ < 0)\n        return false;\n    return true;", "    int sum = 0;\n    for (int\
    \ i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n    }\n\
    \    if (sum < 0) {\n        return false;\n    }\n    return true;", "    long\
    \ balance = operations[0];\n    for (long i = 1; i < operations.size(); i++) {\n\
    \        balance += operations[i];\n        if (balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    long sum = 0;\n    for (auto\
    \ i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n        return\
    \ false;\n    return true;", "    long balance = 0;\n    for (auto &op : operations)\
    \ {\n        balance += op;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    long balance = 0;\n    for (long i\
    \ = 0; i < operations.size(); i++) {\n        balance += operations[i];\n    \
    \    if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (long i = 0; i <\
    \ operations.size(); i++) {\n        sum += operations[i];\n    }\n    if (sum\
    \ < 0)\n        return true;\n    else\n        return false;", "    int sum =\
    \ 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n    return sum\
    \ < 0;", "    int sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    return sum < 0;", "    long balance = 0;\n    for (auto op : operations)\
    \ {\n        balance += op;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    long balance = operations[0];\n  \
    \  for (long i = 1; i < operations.size(); i++) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (long i = 0; i <\
    \ operations.size(); i++) {\n        sum += operations[i];\n    }\n    if (sum\
    \ < 0) {\n        return false;\n    }\n    return true;", "    long balance =\
    \ operations.front();\n    for (long i = operations.size() - 1; i >= 0; i--) {\n\
    \        if (operations[i] < balance) {\n            return true;\n        }\n\
    \        balance -= operations[i];\n    }\n    return false;", "    // Your code\
    \ here\n    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    if (sum < 0)\n        return true;\n    return false;", "    int sum\
    \ = 0;\n    for (int i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0)\n        return false;\n    return true;", "    // Your\
    \ code here\n    long sum = 0;\n    for (long i = 0; i < operations.size(); i++)\
    \ {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    long balance = operations.front();\n\
    \    for (long i : operations) {\n        if (i < 0) {\n            return false;\n\
    \        }\n        balance -= i;\n    }\n    return balance < 0;", "    long\
    \ balance = 0;\n    for (auto i : operations) {\n        balance += i;\n     \
    \   if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (long i = 0; i <\
    \ operations.size(); i++) {\n        sum += operations[i];\n    }\n    if (sum\
    \ < 0) {\n        return false;\n    }\n    return true;", "    // Your code here\n\
    \    long sum = 0;\n    for (long i = 0; i < operations.size(); i++) {\n     \
    \   sum += operations[i];\n    }\n    if (sum < 0)\n        return true;\n   \
    \ return false;", "    int n = operations.size();\n    long balance = 0;\n   \
    \ for (int i = 0; i < n; i++) {\n        balance += operations[i];\n        if\
    \ (balance < 0) {\n            return true;\n        }\n    }\n    return false;",
  "    // Your code goes here\n    long sum = 0;\n    for (auto i : operations) {\n\
    \        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    int sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    if (sum < 0)\n        return false;\n    return true;", "    long\
    \ balance = 0;\n    for (auto i : operations) {\n        balance += i;\n    }\n\
    \    return balance < 0;", "    long balance = operations.front();\n    for (long\
    \ i = operations.size() - 1; i >= 0; i--) {\n        if (operations[i] < balance)\
    \ {\n            return true;\n        }\n        balance -= operations[i];\n\
    \    }\n    return false;", "    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    int sum = 0;\n    for\
    \ (int i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n \
    \   }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   // Your code goes here\n    long sum = 0;\n    for (auto i : operations) {\n\
    \        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    int sum = 0;\n    for(int i = 0; i < operations.size(); i++){\n\
    \        sum += operations[i];\n    }\n    return sum < 0;", "    int sum = 0;\n\
    \    for (auto i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n\
    \        return false;\n    return true;", "    long balance = operations.front();\n\
    \    for (long i = 1, size = operations.size(); i < size; i++) {\n        if (balance\
    \ < 0)\n            return true;\n        balance += operations[i];\n    }\n \
    \   return false;", "    // Your code here\n    long sum = 0;\n    for (auto i\
    \ : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n        return\
    \ true;\n    return false;", "    int sum = 0;\n    for (int i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    return sum < 0;", "    long\
    \ balance = operations[0];\n    for (long i = 1; i < operations.size(); i++) {\n\
    \        balance += operations[i];\n        if (balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    long balance = 0;\n    for\
    \ (auto op : operations) {\n        balance += op;\n        if (balance < 0) {\n\
    \            return true;\n        }\n    }\n    return false;", "    // Your\
    \ code here\n    long sum = 0;\n    for (long i = 0; i < operations.size(); i++)\
    \ {\n        sum += operations[i];\n    }\n    if (sum < 0)\n        return false;\n\
    \    return true;", "    // Your code here\n    long sum = 0;\n    for (long i\
    \ = 0; i < operations.size(); i++) {\n        sum += operations[i];\n    }\n \
    \   if (sum < 0)\n        return true;\n    return false;", "    // Your code\
    \ here\n    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   long balance = operations.front();\n    for (long i = operations.size() -\
    \ 1; i >= 0; i--) {\n        balance += operations[i];\n        if (balance <\
    \ 0) {\n            return true;\n        }\n    }\n    return false;", "    long\
    \ balance = operations.front();\n    for (long i = operations.size() - 1; i >=\
    \ 0; i--) {\n        balance += operations[i];\n        if (balance < 0) {\n \
    \           return true;\n        }\n    }\n    return false;", "    long balance\
    \ = 0;\n    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code goes here\n    long sum = 0;\n    for(long i = 0; i < operations.size();\
    \ i++){\n        sum += operations[i];\n    }\n    if(sum < 0){\n        return\
    \ true;\n    }\n    return false;", "    // Your code here\n    long sum = 0;\n\
    \    for (auto i : operations) {\n        sum += i;\n    }\n    if (sum < 0) {\n\
    \        return false;\n    }\n    return true;", "    // Your code here\n   \
    \ long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n \
    \   if (sum < 0)\n        return true;\n    return false;", "    // Your code\
    \ here\n    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   long balance = 0;\n    for (auto i : operations) {\n        balance += i;\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    int n = operations.size();\n    long balance = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        balance += operations[i];\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  long balance = operations.front();\n    for (auto &op : operations) {\n   \
    \     if (op < 0) {\n            return false;\n        }\n        balance -=\
    \ op;\n    }\n    return balance < 0;", "    int sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    int n = operations.size();\n\
    \    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0)\n        return false;\n    return true;", "    // Your\
    \ code here\n    long sum = 0;\n    for (auto i : operations) {\n        sum +=\
    \ i;\n    }\n    if (sum < 0)\n        return true;\n    return false;", "   \
    \ // Your code here\n    long sum = 0;\n    for (auto i : operations) {\n    \
    \    sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return true;",
  "    // Your code here\n    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0)\n        return\
    \ false;\n    return true;", "    // Your code here\n    long sum = 0;\n    for\
    \ (auto &op : operations) {\n        sum += op;\n    }\n    if (sum < 0) {\n \
    \       return false;\n    }\n    return true;", "    long balance = 0;\n    for\
    \ (auto i : operations) {\n        balance += i;\n    }\n    return balance <\
    \ 0;", "    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n\
    \    }\n    return sum < 0;", "    long balance = operations.front();\n    for\
    \ (long i = operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    int sum = 0;\n    for (int i = 0; i < operations.size(); i++)\
    \ {\n        sum += operations[i];\n    }\n    if (sum < 0)\n        return false;\n\
    \    return true;", "    long balance = operations.front();\n    for (long i =\
    \ operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n \
    \       if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    long balance = 0;\n    for (auto op : operations) {\n        balance\
    \ += op;\n        if (balance < 0) {\n            return true;\n        }\n  \
    \  }\n    return false;", "    // Your code here\n    long sum = 0;\n    for (auto\
    \ i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n        return\
    \ true;\n    return false;", "    int n = operations.size();\n    long balance\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for(long i = 0; i <\
    \ operations.size(); i++){\n        sum += operations[i];\n    }\n    if(sum <\
    \ 0){\n        return true;\n    }\n    return false;", "    int n = operations.size();\n\
    \    long balance = 0;\n    for (int i = 0; i < n; i++) {\n        balance +=\
    \ operations[i];\n        if (balance < 0) {\n            return true;\n     \
    \   }\n    }\n    return false;", "    // Your code here\n    long sum = 0;\n\
    \    for (auto i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n\
    \        return false;\n    return true;", "    // Your code here\n    long sum\
    \ = 0;\n    long balance = 0;\n    for (auto i : operations) {\n        sum +=\
    \ i;\n        balance += i;\n    }\n    if (balance < 0) {\n        return false;\n\
    \    }\n    return true;", "    int sum = 0;\n    for (auto i : operations) {\n\
    \        sum += i;\n    }\n    return sum < 0;", "    // Your code here\n    long\
    \ sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n    if\
    \ (sum < 0)\n        return false;\n    return true;", "    // Your code here\n\
    \    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n\
    \    if (sum < 0)\n        return true;\n    return false;", "    long balance\
    \ = 0;\n    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code here\n    long sum = 0;\n    for (auto i : operations) {\n   \
    \     sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return true;",
  "    int sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n \
    \   return sum < 0;", "    // Your code here\n    long sum = 0;\n    for (auto\
    \ i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n        return\
    \ false;\n    return true;", "    // Your code here\n    long sum = 0;\n    for\
    \ (auto i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n      \
    \  return false;\n    return true;", "    long balance = operations.front();\n\
    \    for (long i : operations) {\n        if (i < 0) {\n            return false;\n\
    \        }\n        balance += i;\n    }\n    return balance < 0;", "    // Your\
    \ code here\n    long sum = 0;\n    for (auto i : operations) {\n        sum +=\
    \ i;\n    }\n    if (sum < 0)\n        return false;\n    return true;", "   \
    \ long balance = 0;\n    for (long i = 0; i < operations.size(); i++) {\n    \
    \    balance += operations[i];\n        if (balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    int sum = 0;\n    for (auto\
    \ i : operations) {\n        sum += i;\n    }\n    return sum < 0;", "    long\
    \ sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n    if\
    \ (sum < 0)\n        return false;\n    return true;", "    // Your code here\n\
    \    long sum = 0;\n    for (long i = 0; i < operations.size(); i++) {\n     \
    \   sum += operations[i];\n    }\n    if (sum < 0) {\n        return false;\n\
    \    }\n    return true;", "    long sum = 0;\n    for (auto &op : operations)\
    \ {\n        sum += op;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    long balance = 0;\n    for (auto i : operations) {\n        balance\
    \ += i;\n        if (balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;", "    long balance = operations[0];\n    for (long i =\
    \ 1; i < operations.size(); i++) {\n        if (operations[i] < 0) {\n       \
    \     return false;\n        }\n        balance += operations[i];\n        if\
    \ (balance < 0) {\n            return true;\n        }\n    }\n    return false;",
  "    // Your code here\n    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ true;\n    }\n    return false;", "    // Your code here\n    long sum = 0;\n\
    \    long sum2 = 0;\n    for (auto i : operations) {\n        sum += i;\n    \
    \    sum2 += i;\n    }\n    if (sum < 0)\n        return true;\n    if (sum2 >\
    \ 0)\n        return false;\n    if (sum == 0)\n        return true;\n    return\
    \ false;", "    long balance = 0;\n    for (auto op : operations) {\n        balance\
    \ += op;\n        if (balance < 0) {\n            return true;\n        }\n  \
    \  }\n    return false;", "    long balance = operations[0];\n    for (long i\
    \ = 1; i < operations.size(); i++) {\n        balance += operations[i];\n    \
    \    if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = operations.front();\n    for (long i = operations.size()\
    \ - 1; i >= 0; i--) {\n        balance += operations[i];\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code here\n    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ true;\n    }\n    return false;", "    long balance = 0;\n    for (auto i :\
    \ operations) {\n        balance += i;\n    }\n    if (balance < 0) {\n      \
    \  return false;\n    }\n    return true;", "    long balance = 0;\n    for (long\
    \ i = 0; i < operations.size(); i++) {\n        balance += operations[i];\n  \
    \      if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code goes here\n    long sum = 0;\n    for (long i = 0;\
    \ i < operations.size(); i++) {\n        sum += operations[i];\n    }\n    if\
    \ (sum < 0) {\n        return false;\n    }\n    return true;", "    long balance\
    \ = operations.front();\n    for (auto i : operations) {\n        if (balance\
    \ < 0)\n            return true;\n        balance -= i;\n    }\n    return false;",
  "    long balance = operations.front();\n    for (long i : operations) {\n     \
    \   if (i < 0) {\n            return false;\n        }\n        balance -= i;\n\
    \    }\n    return balance < 0;", "    long balance = 0;\n    for (auto i : operations)\
    \ {\n        balance += i;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    long balance = operations.front();\n\
    \    for (long i = 0; i < operations.size(); i++) {\n        if (operations[i]\
    \ < 0)\n            return true;\n        balance -= operations[i];\n        if\
    \ (balance < 0)\n            return true;\n    }\n    return false;", "    long\
    \ balance = operations[0];\n    for (long i = 1; i < operations.size(); i++) {\n\
    \        if (operations[i] < balance) {\n            return true;\n        }\n\
    \        balance -= operations[i];\n    }\n    return false;", "    long balance\
    \ = 0;\n    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  int sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n \
    \   if (sum < 0) {\n        return false;\n    }\n    return true;", "    // Your\
    \ code here\n    long sum = 0;\n    for (auto i : operations) {\n        sum +=\
    \ i;\n    }\n    if (sum < 0)\n        return true;\n    return false;", "   \
    \ int n = operations.size();\n    long balance = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        balance += operations[i];\n        if (balance < 0) {\n    \
    \        return true;\n        }\n    }\n    return false;", "    long balance\
    \ = 0;\n    for (auto i : operations) {\n        balance += i;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code goes here\n    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    // Your code here\n    long sum = 0;\n\
    \    for (long i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   long balance = operations[0];\n    for (long i = 1; i < operations.size();\
    \ i++) {\n        balance += operations[i];\n        if (balance < 0) {\n    \
    \        return true;\n        }\n    }\n    return false;", "    long balance\
    \ = 0;\n    for (auto i : operations) {\n        balance += i;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code here\n    long sum = 0;\n    for (auto &i : operations) {\n  \
    \      sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return true;",
  "    // Your code here\n    long sum = 0;\n    for(long i = 0; i < operations.size();\
    \ i++){\n        sum += operations[i];\n    }\n    if(sum < 0){\n        return\
    \ true;\n    }\n    return false;", "    long balance = 0;\n    for (auto op :\
    \ operations) {\n        balance += op;\n        if (balance < 0) {\n        \
    \    return true;\n        }\n    }\n    return false;", "    long balance = operations.front();\n\
    \    for (long i : operations) {\n        if (i < 0) {\n            return false;\n\
    \        }\n        balance += i;\n    }\n    return balance < 0;", "    // Your\
    \ code here\n    long sum = 0;\n    for (auto &i : operations) {\n        sum\
    \ += i;\n    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;",
  "    long balance = 0;\n    for (auto i : operations) {\n        balance += i;\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0) {\n        return false;\n   \
    \ }\n    return true;", "    int sum = 0;\n    for(int i = 0; i < operations.size();\
    \ i++){\n        sum += operations[i];\n    }\n    if(sum < 0){\n        return\
    \ true;\n    }\n    return false;", "    int sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    long balance = 0;\n\
    \    for (auto &op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code goes here\n    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    long balance = operations.front();\n\
    \    for (long i = operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (long i = 0; i <\
    \ operations.size(); i++) {\n        sum += operations[i];\n    }\n    if (sum\
    \ < 0)\n        return false;\n    return true;", "    int n = operations.size();\n\
    \    long balance = 0;\n    for (int i = 0; i < n; i++) {\n        balance +=\
    \ operations[i];\n        if (balance < 0) {\n            return true;\n     \
    \   }\n    }\n    return false;", "    long balance = operations[0];\n    for\
    \ (long i = 1; i < operations.size(); i++) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = operations.front();\n    for (long i : operations)\
    \ {\n        if (i < 0) {\n            return false;\n        }\n        balance\
    \ += i;\n    }\n    return balance < 0;", "    long balance = 0;\n    for (auto\
    \ i : operations) {\n        balance += i;\n        if (balance < 0) {\n     \
    \       return true;\n        }\n    }\n    return false;", "    long sum = 0;\n\
    \    for (auto i : operations) {\n        sum += i;\n    }\n    if (sum < 0) {\n\
    \        return false;\n    }\n    return true;", "    int n = operations.size();\n\
    \    long balance = 0;\n    for (int i = 0; i < n; i++) {\n        balance +=\
    \ operations[i];\n        if (balance < 0) {\n            return true;\n     \
    \   }\n    }\n    return false;", "    int sum = 0;\n    for (int i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    long balance = operations.front();\n\
    \    for (long i = 1, size = operations.size(); i < size; i++) {\n        balance\
    \ += operations[i];\n        if (balance < 0) {\n            return true;\n  \
    \      }\n    }\n    return false;", "    long balance = 0;\n    for (auto i :\
    \ operations) {\n        balance += i;\n        if (balance < 0) {\n         \
    \   return true;\n        }\n    }\n    return false;", "    // Your code here\n\
    \    long sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n\
    \    if (sum < 0) {\n        return false;\n    }\n    return true;", "    long\
    \ balance = 0;\n    for (auto op : operations) {\n        balance += op;\n   \
    \     if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = operations.front();\n    for (long i = 0; i < operations.size()\
    \ - 1; i++) {\n        balance += operations[i];\n        if (balance < 0) {\n\
    \            return true;\n        }\n    }\n    return false;", "    int sum\
    \ = 0;\n    for (int i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    return sum < 0;", "    // Your code goes here\n    long sum = 0;\n\
    \    for (long i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   long balance = operations.front();\n    for (long i = operations.size() -\
    \ 1; i >= 0; i--) {\n        balance += operations[i];\n        if (balance <\
    \ 0) {\n            return true;\n        }\n    }\n    return false;", "    int\
    \ sum = 0;\n    for(int i = 0; i < operations.size(); i++){\n        sum += operations[i];\n\
    \    }\n    return sum < 0;", "    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    long balance = 0;\n    for (auto i : operations) {\n        balance\
    \ += i;\n        if (balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;", "    long balance = operations.front();\n    for (long\
    \ i = operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0) {\n        return false;\n   \
    \ }\n    return true;", "    int sum = 0;\n    for (int i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    int sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    // Your code here\n    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return\
    \ true;", "    int sum = 0;\n    for (int i = 0; i < operations.size(); i++) {\n\
    \        sum += operations[i];\n    }\n    if (sum < 0) {\n        return false;\n\
    \    }\n    return true;", "    long balance = operations.front();\n    for (long\
    \ i = operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = operations.front();\n    for (long i : operations)\
    \ {\n        if (i < 0) {\n            return true;\n        }\n        balance\
    \ += i;\n        if (balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;", "    // Your code here\n    long sum = 0;\n    for (auto\
    \ i : operations) {\n        sum += i;\n    }\n    if (sum < 0)\n        return\
    \ true;\n    return false;", "    int sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    // Your code here\n\
    \    long sum = 0;\n    for(auto i : operations){\n        sum += i;\n    }\n\
    \    return sum < 0;", "    int sum = 0;\n    for (auto i : operations) {\n  \
    \      sum += i;\n    }\n    if (sum < 0) {\n        return false;\n    }\n  \
    \  return true;", "    // Your code here\n    long sum = 0;\n    for (auto i :\
    \ operations) {\n        sum += i;\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    int sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    long balance = 0;\n\
    \    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  // Your code here\n    long sum = 0;\n    for(long i = 0; i < operations.size();\
    \ i++){\n        sum += operations[i];\n    }\n    if(sum < 0){\n        return\
    \ true;\n    }\n    return false;", "    // Your code here\n    long sum = 0;\n\
    \    for (long i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   int n = operations.size();\n    long balance = 0;\n    long sum = 0;\n   \
    \ for (int i = 0; i < n; i++) {\n        sum += operations[i];\n        balance\
    \ += operations[i];\n    }\n    if (balance < 0) {\n        return false;\n  \
    \  }\n    if (sum < 0) {\n        return true;\n    }\n    return false;", " \
    \   // Your code goes here\n    long sum = 0;\n    for (auto i : operations) {\n\
    \        sum += i;\n    }\n    return sum < 0;", "    // Your code here\n    long\
    \ sum = 0;\n    for(auto i : operations){\n        sum += i;\n    }\n    if(sum\
    \ < 0){\n        return true;\n    }\n    return false;", "    long sum = 0;\n\
    \    for (auto i : operations) {\n        sum += i;\n    }\n    return sum < 0;",
  "    int sum = 0;\n    for (auto i : operations) {\n        sum += i;\n    }\n \
    \   if (sum < 0)\n        return false;\n    return true;", "    long balance\
    \ = 0;\n    for (auto i : operations) {\n        balance += i;\n    }\n    return\
    \ balance < 0;", "    long balance = 0;\n    for (auto i : operations) {\n   \
    \     balance += i;\n        if (balance < 0) {\n            return true;\n  \
    \      }\n    }\n    return false;", "    // Your code here\n    long sum = 0;\n\
    \    for (long i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0) {\n        return true;\n    }\n    return false;", " \
    \   long balance = 0;\n    for (long i = 0; i < operations.size(); i++) {\n  \
    \      balance += operations[i];\n        if (balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    // Your code here\n    long\
    \ sum = 0;\n    for (long i = 0; i < operations.size(); i++) {\n        sum +=\
    \ operations[i];\n    }\n    if (sum < 0)\n        return false;\n    return true;",
  "    int n = operations.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;", "    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    return sum < 0;", "    long balance = 0;\n\
    \    for (auto op : operations) {\n        balance += op;\n        if (balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;", "  \
    \  int sum = 0;\n    for (int i = 0; i < operations.size(); i++) {\n        sum\
    \ += operations[i];\n    }\n    return sum < 0;", "    long balance = 0;\n   \
    \ for (long i = 0; i < operations.size(); i++) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code goes here\n    long sum = 0;\n    for (auto i : operations)\
    \ {\n        sum += i;\n    }\n    if (sum < 0)\n        return true;\n    return\
    \ false;", "    // Your code here\n    long sum = 0;\n    for(long i = 0; i <\
    \ operations.size(); i++){\n        sum += operations[i];\n    }\n    if(sum <\
    \ 0){\n        return true;\n    }\n    return false;", "    // Your code here\n\
    \    long sum = 0;\n    for (long i = 0; i < operations.size(); i++) {\n     \
    \   sum += operations[i];\n    }\n    if (sum < 0) {\n        return false;\n\
    \    }\n    return true;", "    long balance = 0;\n    for (auto &op : operations)\
    \ {\n        balance += op;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    long balance = operations.front();\n\
    \    for (long i = operations.size() - 1; i >= 0; i--) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = 0;\n    for (auto op : operations) {\n        balance\
    \ += op;\n        if (balance < 0) {\n            return true;\n        }\n  \
    \  }\n    return false;", "    long balance = 0;\n    for (auto i : operations)\
    \ {\n        balance += i;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    // Your code here\n    long sum =\
    \ 0;\n    long balance = 0;\n    for (long i = 0; i < operations.size(); i++)\
    \ {\n        sum += operations[i];\n        balance += operations[i];\n    }\n\
    \    if (balance < 0) {\n        return true;\n    }\n    return false;", "  \
    \  // Your code here\n    long sum = 0;\n    for(long i = 0; i < operations.size();\
    \ i++){\n        sum += operations[i];\n    }\n    if(sum < 0){\n        return\
    \ true;\n    }\n    return false;", "    long balance = 0;\n    for (auto &op\
    \ : operations) {\n        balance += op;\n        if (balance < 0) {\n      \
    \      return true;\n        }\n    }\n    return false;", "    int n = operations.size();\n\
    \    long balance = 0;\n    for (int i = 0; i < n; i++) {\n        balance +=\
    \ operations[i];\n        if (balance < 0) {\n            return true;\n     \
    \   }\n    }\n    return false;", "    long balance = 0;\n    for (auto op : operations)\
    \ {\n        balance += op;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    int sum = 0;\n    for (int i = 0;\
    \ i < operations.size(); i++) {\n        sum += operations[i];\n    }\n    return\
    \ sum < 0;", "    long balance = operations.front();\n    for (long i : operations)\
    \ {\n        if (balance < 0)\n            return true;\n        balance -= i;\n\
    \    }\n    return false;", "    // Your code goes here\n    long sum = 0;\n \
    \   for (long i = 0; i < operations.size(); i++) {\n        sum += operations[i];\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   long balance = 0;\n    for (auto i : operations) {\n        balance += i;\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    int sum = 0;\n    for(auto i : operations) {\n        sum += i;\n\
    \    }\n    if(sum < 0) {\n        return false;\n    }\n    return true;", " \
    \   int sum = 0;\n    for (int i = 0; i < operations.size(); i++) {\n        sum\
    \ += operations[i];\n    }\n    if (sum < 0) {\n        return false;\n    }\n\
    \    return true;", "    long balance = 0;\n    for (auto op : operations) {\n\
    \        balance += op;\n        if (balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    long balance = operations[0];\n  \
    \  for (long i = 1; i < operations.size(); i++) {\n        balance += operations[i];\n\
    \        if (balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    long balance = operations.front();\n    for (long i : operations)\
    \ {\n        if (i < 0) {\n            return false;\n        }\n        balance\
    \ += i;\n    }\n    return balance < 0;", "    // Your code goes here\n    long\
    \ sum = 0;\n    for(long i = 0; i < operations.size(); i++){\n        sum += operations[i];\n\
    \    }\n    if(sum < 0){\n        return true;\n    }\n    return false;", " \
    \   // Your code here\n    long sum = 0;\n    for (auto i : operations) {\n  \
    \      sum += i;\n    }\n    if (sum < 0)\n        return false;\n    return true;",
  "    int sum = 0;\n    for (int i = 0; i < operations.size(); i++) {\n        sum\
    \ += operations[i];\n    }\n    if (sum < 0) {\n        return false;\n    }\n\
    \    return true;", "    long sum = 0;\n    for (long i = 0; i < operations.size();\
    \ i++) {\n        sum += operations[i];\n    }\n    if (sum < 0) {\n        return\
    \ false;\n    }\n    return true;"]
stop_tokens:
- "\n}"

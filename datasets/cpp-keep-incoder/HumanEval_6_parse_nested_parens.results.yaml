name: HumanEval_6_parse_nested_parens
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto &c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmptpkbj5z_: /tmp/tmptpkbj5z_.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp6kyx_q5k: /tmp/tmp6kyx_q5k.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    for (auto\
    \ c : paren_string) {\n        if (c == '(') {\n            current_level += c;\n\
    \            current_level_size += 1;\n        } else if (c == ')') {\n      \
    \      current_level_size = std::max(current_level_size, levels.size());\n   \
    \         levels.push_back(current_level_size);\n            current_level.clear();\n\
    \        } else {\n            current_level += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdqwidhw_.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpdqwidhw_.cpp:17:76: error: no matching function for call to \u2018\
    max(long int&, std::vector<long int>::size_type)\u2019\n   17 |             current_level_size\
    \ = std::max(current_level_size, levels.size());\n      |                    \
    \                                                        ^\nIn file included from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdqwidhw_.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:222:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const\
    \ _Tp&, const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdqwidhw_.cpp:17:76: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    })\n   17 |             current_level_size = std::max(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n \
    \                from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdqwidhw_.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:268:5: note:\
    \ candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp& std::max(const\
    \ _Tp&, const _Tp&, _Compare)\u2019\n  268 |     max(const _Tp& __a, const _Tp&\
    \ __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdqwidhw_.cpp:17:76:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019})\n   17 |             current_level_size = std::max(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdqwidhw_.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3462:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::max(std::initializer_list<_Tp>)\u2019\
    \n 3462 |     max(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3462:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdqwidhw_.cpp:17:76:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   17 |             current_level_size = std::max(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdqwidhw_.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::max(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3468 |     max(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdqwidhw_.cpp:17:76: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   17 |             current_level_size = std::max(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_parens = \"\";\n    for (auto c : paren_string) {\n    \
    \    if (c == '(') {\n            curr_parens += c;\n        } else if (c == ')')\
    \ {\n            curr_parens = curr_parens.substr(0, curr_parens.size() - 1);\n\
    \            long curr_level = levels.size();\n            long curr_level_parens\
    \ = curr_parens.size();\n            long curr_level_open = levels.size();\n \
    \           long curr_level_closed = levels.size();\n            long curr_level_open_p\
    \ = levels.size();\n            long curr_level_closed_p = levels.size();\n  \
    \          long curr_level_open_c = levels.size();\n            long curr_level_closed_c\
    \ = levels.size();\n            long curr_level_open_p_c = levels.size();\n  \
    \          long curr_level_closed_p_c = levels.size();\n            long curr_level_open_c_p\
    \ = levels.size();\n            long curr_level_closed_c_p = levels.size();\n\
    \            long curr_level_open_p_c_p = levels.size();\n            long curr_level_closed_p_c_p\
    \ = levels.size();\n            long curr_level_open_c_c_p = levels.size();\n\
    \            long curr_level_closed_c_c_p = levels.size();\n            long curr_level_open_p_c_c_p\
    \ = levels.size();\n            long curr_level_closed_p_c_c_p = levels.size();\n\
    \            long curr_level_open_c_c_c_p = levels.size();\n            long curr_level_closed_c_c_c_p\
    \ = levels.size();\n            long curr_level_open_p_c_c_c_p = levels.size();\n\
    \            long curr_level_closed_p_c_c_c_p = levels.size();\n            long\
    \ curr_level_open_c_c_c_c_p = levels.size();\n            long curr_level_closed_c_c_c_c_p\
    \ = levels.size();\n            long curr_level_open_p_c_c_c_c_p = levels.size();\n\
    \            long curr_level_closed_p_c_c_c_c_p = levels.size();\n           \
    \ long curr_level_open_c_c_c_c_c_p = levels.size();\n            long curr_level_closed_c_c_c_c_c_p\
    \ = levels.size();\n            long curr_level_open_p_c_c_c_c_c_p = levels.size();\n\
    \            long curr_level_closed_p_c_c_c_c_c_p = levels.size();\n         \
    \   long curr_level_open_c_c_c_c_c_c_p = levels.size();\n            long curr_level_closed_c_c_c_c_c_c_p\
    \ = levels.size();\n            long curr_level_open_p_c_c_c_c_c_c_p = levels.size();\n\
    \            long curr_level_closed_p_c_c_c_c_c_c_p = levels.size();\n       \
    \     long curr_level_\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp3brt2vj_.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp3brt2vj_.cpp:51:1: error: expected initializer before \u2018}\u2019\
    \ token\n   51 | }\n      | ^\n/tmp/tmp3brt2vj_.cpp:52:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   52 | int main() {\n     \
    \ |            ^\n/tmp/tmp3brt2vj_.cpp:57:1: error: expected \u2018}\u2019 at\
    \ end of input\n   57 | }\n      | ^\n/tmp/tmp3brt2vj_.cpp:11:33: note: to match\
    \ this \u2018{\u2019\n   11 |     for (auto c : paren_string) {\n      |     \
    \                            ^\n/tmp/tmp3brt2vj_.cpp:57:1: error: expected \u2018\
    }\u2019 at end of input\n   57 | }\n      | ^\n/tmp/tmp3brt2vj_.cpp:8:65: note:\
    \ to match this \u2018{\u2019\n    8 | std::vector<long> parse_nested_parens(std::string\
    \ paren_string) {\n      |                                                   \
    \              ^\n/tmp/tmp3brt2vj_.cpp:57:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   57 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n            current_level\
    \ = paren_level;\n        } else if (c == ')') {\n            paren_level--;\n\
    \            current_level = paren_level;\n        }\n        paren_levels[paren_level]\
    \ = current_level;\n    }\n    return paren_levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     paren_level = paren_string.substr(0, i);\n            level++;\n       \
    \ } else if (paren_string[i] == ')') {\n            level--;\n            if (level\
    \ == 0) {\n                levels.push_back(level);\n            }\n        }\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpvswtw5q6: /tmp/tmpvswtw5q6.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    bool is_first_paren =\
    \ true;\n    for (auto c : paren_string) {\n        if (c == '(') {\n        \
    \    if (is_first_paren) {\n                is_first_paren = false;\n        \
    \        level++;\n                paren_level = std::to_string(level);\n    \
    \        } else {\n                levels[level - 1]++;\n            }\n     \
    \   } else if (c == ')') {\n            if (is_first_paren) {\n              \
    \  is_first_paren = false;\n                level--;\n                paren_level\
    \ = std::to_string(level);\n            } else {\n                levels[level\
    \ - 1]--;\n            }\n        } else {\n            levels[level - 1]++;\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long paren_level = 0;\n  long\
    \ paren_level_count = 0;\n  long paren_level_max_count = 0;\n  for (size_t i =\
    \ 0; i < paren_string.size(); i++) {\n    if (paren_string[i] == '(') {\n    \
    \  paren_level_count++;\n      if (paren_level_count > paren_level_max_count)\
    \ {\n        paren_level_max_count = paren_level_count;\n      }\n      paren_levels.push_back(paren_level);\n\
    \      paren_level_count = 0;\n    } else if (paren_string[i] == ')') {\n    \
    \  paren_level_count--;\n      if (paren_level_count < 0) {\n        throw std::runtime_error(\"\
    Invalid input\");\n      }\n      paren_levels.push_back(paren_level);\n     \
    \ paren_level_count = 0;\n    } else {\n      paren_level_count = 0;\n    }\n\
    \  }\n  paren_levels.push_back(paren_level);\n  return paren_levels;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::runtime_error'\n \
    \ what():  Invalid input\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    for (auto c :\
    \ paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \        } else if (c == ')') {\n            paren_level_count--;\n          \
    \  if (paren_level_count == 0) {\n                paren_levels.push_back(paren_level);\n\
    \                paren_level_count = 0;\n            }\n        }\n        paren_level++;\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpfrszzl8x: /tmp/tmpfrszzl8x.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpp9eqf3qi: /tmp/tmpp9eqf3qi.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpcb45n6q2: /tmp/tmpcb45n6q2.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels = paren_string.substr(1, paren_string.length() - 2).split(' ');\n\
    \  long max_level = 0;\n  for (long i = 0; i < paren_levels.size(); i++) {\n \
    \   if (paren_levels[i] > max_level) {\n      max_level = paren_levels[i];\n \
    \   }\n  }\n  std::vector<long> nested_paren_levels;\n  for (long i = 0; i < paren_levels.size();\
    \ i++) {\n    nested_paren_levels.push_back(max_level);\n  }\n  return nested_paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy0fbycin.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpy0fbycin.cpp:10:68: error: \u2018class std::__cxx11::basic_string<char>\u2019\
    \ has no member named \u2018split\u2019\n   10 |   paren_levels = paren_string.substr(1,\
    \ paren_string.length() - 2).split(' ');\n      |                            \
    \                                        ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    bool is_open = false;\n    bool is_closed = false;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n        } else if (c == ')') {\n            is_closed = true;\n   \
    \     } else if (is_open && is_closed) {\n            result.push_back(level);\n\
    \            is_open = false;\n            is_closed = false;\n        } else\
    \ if (is_open) {\n            level++;\n        } else if (is_closed) {\n    \
    \        level--;\n        }\n    }\n    if (is_open || is_closed) {\n       \
    \ result.push_back(level);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpqh07m6hh: /tmp/tmpqh07m6hh.cpp:35: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max_count\
    \ = 1;\n    long paren_level_max_paren_level = 1;\n    long paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_count = 1;\n    long paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_count = 1;\n    long\
    \ paren_level_max_paren_level_max_paren_level_max_count = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_max_paren_level_count\
    \ = 1;\n    long paren_level_max_paren_level_max_paren_\n}\nint main() {\n   \
    \ auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnqjqcmsk.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpnqjqcmsk.cpp:34:1: error: expected initializer before \u2018}\u2019\
    \ token\n   34 | }\n      | ^\n/tmp/tmpnqjqcmsk.cpp:34:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_start =\
    \ 0;\n    long paren_level_end = 0;\n    long paren_level_end_index = 0;\n   \
    \ long paren_level_end_index2 = 0;\n    long paren_level_end_index3 = 0;\n   \
    \ long paren_level_end_index4 = 0;\n    long paren_level_end_index5 = 0;\n   \
    \ long paren_level_end_index6 = 0;\n    long paren_level_end_index7 = 0;\n   \
    \ long paren_level_end_index8 = 0;\n    long paren_level_end_index9 = 0;\n   \
    \ long paren_level_end_index10 = 0;\n    long paren_level_end_index11 = 0;\n \
    \   long paren_level_end_index12 = 0;\n    long paren_level_end_index13 = 0;\n\
    \    long paren_level_end_index14 = 0;\n    long paren_level_end_index15 = 0;\n\
    \    long paren_level_end_index16 = 0;\n    long paren_level_end_index17 = 0;\n\
    \    long paren_level_end_index18 = 0;\n    long paren_level_end_index19 = 0;\n\
    \    long paren_level_end_index20 = 0;\n    long paren_level_end_index21 = 0;\n\
    \    long paren_level_end_index22 = 0;\n    long paren_level_end_index23 = 0;\n\
    \    long paren_level_end_index24 = 0;\n    long paren_level_end_index25 = 0;\n\
    \    long paren_level_end_index26 = 0;\n    long paren_level_end_index27 = 0;\n\
    \    long paren_level_end_index28 = 0;\n    long paren_level_end_index29 = 0;\n\
    \    long paren_level_end_index30 = 0;\n    long paren_level_end_index31 = 0;\n\
    \    long paren_level_end_index32 = 0;\n    long paren_level_end_index33 = 0;\n\
    \    long paren_level_end_index34 = 0;\n    long paren_level_end_index35 = 0;\n\
    \    long paren_level_end_index36 = 0;\n    long paren_level_end_index37 = 0;\n\
    \    long paren_level_end_index38 = 0;\n    long paren_level_end_index39 = 0;\n\
    \    long paren_level_end_index40 = 0;\n    long paren_level_end_index41 = 0;\n\
    \    long paren_level_end_index42 = 0;\n    long paren_level_end_index43 = 0;\n\
    \    long paren_level_end_index44 = 0;\n    long paren_level_end_index45 = 0;\n\
    \    long paren_level_end_index46 = 0;\n    long paren_level_end_index47 = 0;\n\
    \    long paren_level_end_index48 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpgqbgmpc1: /tmp/tmpgqbgmpc1.cpp:66: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels[0] = 1;\n    long paren_level = 0;\n    long paren_level_count\
    \ = 0;\n    long paren_level_count_max = 0;\n    long paren_level_count_max_index\
    \ = 0;\n    long paren_level_count_min = 0;\n    long paren_level_count_min_index\
    \ = 0;\n    long paren_level_count_max_paren = 0;\n    long paren_level_count_min_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren = 0;\n    long paren_level_count_min_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren = 0;\n    long paren_level_count_min_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren_paren = 0;\n    long\
    \ paren_level_count_min_paren_paren_paren_paren = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren = 0;\n  \
    \  long paren_level_count_max_paren_paren_paren_paren_paren_paren = 0;\n    long\
    \ paren_level_count_min_paren_paren_paren_paren_paren_paren = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n    long paren_level_count_max_paren_paren_\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw0sgjd8e.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpw0sgjd8e.cpp:35:10: error: redeclaration of \u2018long int paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\u2019\
    \n   35 |     long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw0sgjd8e.cpp:33:10: note: \u2018long int paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\u2019\
    \ previously declared here\n   33 |     long paren_level_count_max_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw0sgjd8e.cpp:36:10: error: redeclaration of \u2018long int paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\u2019\
    \n   36 |     long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw0sgjd8e.cpp:34:10: note: \u2018long int paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\u2019\
    \ previously declared here\n   34 |     long paren_level_count_min_paren_paren_paren_paren_paren_paren_paren_paren_paren\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw0sgjd8e.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpw0sgjd8e.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   ++level;\n    } else if (c == ')') {\n      --level;\n    }\n    result.push_back(level);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpfsmrkn7r: /tmp/tmpfsmrkn7r.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long max_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_levels.push_back(max_level);\n            max_level++;\n\
    \        } else if (c == ')') {\n            max_level = std::max(max_level, paren_levels.back());\n\
    \            paren_levels.pop_back();\n        } else {\n            max_level\
    \ = std::max(max_level, paren_levels.back());\n        }\n    }\n    paren_levels.push_back(max_level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpfo9t9nst: /tmp/tmpfo9t9nst.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            level++;\n            paren_char = \"\
    (\";\n        } else if (c == ')') {\n            level--;\n            paren_char\
    \ = \")\";\n        } else {\n            paren_char += c;\n        }\n      \
    \  if (level == 0 && paren_char != \"()\") {\n            levels.push_back(level);\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpxyo7uqo8: /tmp/tmpxyo7uqo8.cpp:30: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp70wtj1kp: /tmp/tmp70wtj1kp.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long max_level = 0;\n    long level = 0;\n    long index = 0;\n    bool is_open\
    \ = false;\n    bool is_closed = false;\n    for (auto c : paren_string) {\n \
    \       if (c == '(') {\n            is_open = true;\n            level++;\n \
    \       }\n        else if (c == ')') {\n            is_closed = true;\n     \
    \       level--;\n        }\n        else if (c == ' ') {\n            if (is_open)\
    \ {\n                result.push_back(level);\n                is_open = false;\n\
    \            }\n        }\n        else if (is_open) {\n            is_closed\
    \ = false;\n        }\n    }\n    if (is_open) {\n        result.push_back(level);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpj45couj9: /tmp/tmpj45couj9.cpp:41: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_count =\
    \ 0;\n    long paren_level_max = 0;\n    long paren_level_max_count = 0;\n   \
    \ long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n}\n\
    int main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq7d2megi.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpq7d2megi.cpp:16:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   16 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:17:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   17 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:18:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   18 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:19:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   19 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:20:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   20 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:21:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   21 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:22:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   22 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:23:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   23 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:24:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   24 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:25:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   25 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:26:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   26 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:27:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   27 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:28:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   28 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:29:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   29 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:30:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   30 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:31:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   31 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:32:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   32 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:33:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   33 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:34:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   34 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:35:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   35 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:36:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   36 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:37:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   37 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:38:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   38 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:39:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   39 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:40:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   40 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:41:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   41 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:42:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   42 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:43:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   43 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:44:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   44 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:45:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   45 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:46:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   46 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:47:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   47 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:48:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   48 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:49:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   49 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:50:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   50 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:51:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   51 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:52:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   52 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:53:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   53 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:54:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   54 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:55:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   55 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:56:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   56 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:57:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   57 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:58:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   58 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:59:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   59 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:60:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   60 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:61:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   61 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:62:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   62 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:63:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   63 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:64:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   64 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:65:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   65 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:66:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   66 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:67:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   67 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:68:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   68 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:14:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   14 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:69:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   69 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpq7d2megi.cpp:15:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   15 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpq7d2megi.cpp:70:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   70 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long curr_level_length = 0;\n    bool is_first_level\
    \ = true;\n    for (auto c : paren_string) {\n        if (c == '(') {\n      \
    \      curr_level = curr_level + c;\n            curr_level_length++;\n      \
    \  } else if (c == ')') {\n            curr_level = curr_level.substr(0, curr_level_length);\n\
    \            curr_level_length--;\n            if (curr_level_length == 0) {\n\
    \                levels.push_back(curr_level.length());\n                is_first_level\
    \ = false;\n            }\n        } else {\n            curr_level = curr_level\
    \ + c;\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpov6x8clf: /tmp/tmpov6x8clf.cpp:32: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long max_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            current_level++;\n            if (current_level\
    \ > max_level) {\n                max_level = current_level;\n            }\n\
    \        } else if (c == ')') {\n            current_level--;\n        }\n   \
    \     paren_levels.push_back(current_level);\n    }\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp68wwityh: /tmp/tmp68wwityh.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels[0] = 0;\n    long paren_level = 0;\n    for (size_t i = 0; i\
    \ < paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n     \
    \       paren_levels[paren_level] = paren_level + 1;\n        } else if (paren_string[i]\
    \ == ')') {\n            paren_levels[paren_level] = paren_levels[paren_level\
    \ - 1];\n        }\n    }\n    return paren_levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    for (auto c : paren_string) {\n        if (c == '(') {\n         \
    \   paren_level++;\n            paren_level_counter++;\n        } else if (c ==\
    \ ')') {\n            paren_level--;\n            paren_level_counter--;\n   \
    \         if (paren_level == 0 && paren_level_counter == 0) {\n              \
    \  paren_levels[paren_levels.size() - 1] = current_level;\n                current_level++;\n\
    \            }\n        }\n    }\n    return paren_levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_count\
    \ = 0;\n    long paren_level_count_max = 0;\n    long paren_level_count_min =\
    \ 0;\n    long paren_level_count_sum = 0;\n    long paren_level_count_sum2 = 0;\n\
    \    long paren_level_count_sum3 = 0;\n    long paren_level_count_sum4 = 0;\n\
    \    long paren_level_count_sum5 = 0;\n    long paren_level_count_sum6 = 0;\n\
    \    long paren_level_count_sum7 = 0;\n    long paren_level_count_sum8 = 0;\n\
    \    long paren_level_count_sum9 = 0;\n    long paren_level_count_sum10 = 0;\n\
    \    long paren_level_count_sum11 = 0;\n    long paren_level_count_sum12 = 0;\n\
    \    long paren_level_count_sum13 = 0;\n    long paren_level_count_sum14 = 0;\n\
    \    long paren_level_count_sum15 = 0;\n    long paren_level_count_sum16 = 0;\n\
    \    long paren_level_count_sum17 = 0;\n    long paren_level_count_sum18 = 0;\n\
    \    long paren_level_count_sum19 = 0;\n    long paren_level_count_sum20 = 0;\n\
    \    long paren_level_count_sum21 = 0;\n    long paren_level_count_sum22 = 0;\n\
    \    long paren_level_count_sum23 = 0;\n    long paren_level_count_sum24 = 0;\n\
    \    long paren_level_count_sum25 = 0;\n    long paren_level_count_sum26 = 0;\n\
    \    long paren_level_count_sum27 = 0;\n    long paren_level_count_sum28 = 0;\n\
    \    long paren_level_count_sum29 = 0;\n    long paren_level_count_sum30 = 0;\n\
    \    long paren_level_count_sum31 = 0;\n    long paren_level_count_sum32 = 0;\n\
    \    long paren_level_count_sum33 = 0;\n    long paren_level_count_sum34 = 0;\n\
    \    long paren_level_count_sum35 = 0;\n    long paren_level_count_sum36 = 0;\n\
    \    long paren_level_count_sum37 = 0;\n    long paren_level_count_sum38 = 0;\n\
    \    long paren_level_count_sum39 = 0;\n    long paren_level_count_sum40 = 0;\n\
    \    long paren_level_count_sum41 = 0;\n    long paren_level_count_sum42 = 0;\n\
    \    long paren_level_count_sum43 = 0;\n    long paren_level_count_sum44 = 0;\n\
    \    long paren_level_count_sum45 = 0;\n    long paren_level_count_sum46 = 0;\n\
    \    long paren_level_count_sum47 = 0;\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp02i6h5sn: /tmp/tmp02i6h5sn.cpp:65: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    for (auto c : paren_string) {\n        if\
    \ (c == '(') {\n            current_level = current_level + \"(\";\n        }\
    \ else if (c == ')') {\n            current_level = current_level.substr(0, current_level.size()-1);\n\
    \            levels.push_back(std::stoi(current_level));\n            current_level.clear();\n\
    \        } else {\n            current_level = current_level + c;\n        }\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_parens = \"\";\n    std::string curr_level = \"\";\n   \
    \ for (auto c : paren_string) {\n        if (c == '(') {\n            curr_parens\
    \ += c;\n        } else if (c == ')') {\n            curr_parens = curr_parens.substr(0,\
    \ curr_parens.size() - 1);\n            long curr_level = std::count(curr_parens.begin(),\
    \ curr_parens.end(), '(');\n            curr_level = std::max(curr_level, std::count(curr_parens.begin(),\
    \ curr_parens.end(), ')'));\n            curr_level++;\n            curr_parens\
    \ = \"\";\n            levels.push_back(curr_level);\n        } else {\n     \
    \       curr_parens += c;\n        }\n    }\n    return levels;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpctjyqn02: /tmp/tmpctjyqn02.cpp:30: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpcv6l6lrb: /tmp/tmpcv6l6lrb.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp2gtzeidg: /tmp/tmp2gtzeidg.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_stack;\n    long level = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_stack += c;\n        } else if\
    \ (c == ')') {\n            long new_level = level;\n            while (paren_stack.size()\
    \ > 0) {\n                if (paren_stack.back() == '(') {\n                 \
    \   new_level++;\n                    paren_stack.pop_back();\n              \
    \  } else if (paren_stack.back() == ')') {\n                    new_level--;\n\
    \                    paren_stack.pop_back();\n                }\n            }\n\
    \            levels[level++] = new_level;\n            paren_stack = \"\";\n \
    \       } else {\n            paren_stack += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels = paren_string.substr(0, paren_string.find('(')).split(' ').size();\n\
    \  std::vector<long> paren_levels_temp;\n  paren_levels_temp.push_back(paren_levels);\n\
    \  long paren_levels_sum = 0;\n  while (paren_levels_sum < paren_levels) {\n \
    \   paren_levels_sum += paren_levels_temp[paren_levels_sum];\n    paren_levels_temp.push_back(paren_levels_sum);\n\
    \  }\n  return paren_levels_temp;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpzs9hvu4o.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpzs9hvu4o.cpp:10:65: error: \u2018class std::__cxx11::basic_string<char>\u2019\
    \ has no member named \u2018split\u2019\n   10 |   paren_levels = paren_string.substr(0,\
    \ paren_string.find('(')).split(' ').size();\n      |                        \
    \                                         ^~~~~\n/tmp/tmpzs9hvu4o.cpp:12:43: error:\
    \ no matching function for call to \u2018std::vector<long int>::push_back(std::vector<long\
    \ int>&)\u2019\n   12 |   paren_levels_temp.push_back(paren_levels);\n      |\
    \                                           ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const\
    \ value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmpzs9hvu4o.cpp:14:27: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018long int\u2019 and \u2018std::vector<long int>\u2019)\n   14\
    \ |   while (paren_levels_sum < paren_levels) {\n      |          ~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~\n      |          |                  |\n      |          long\
    \ int           std::vector<long int>\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124 |     operator<(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1124:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum\
    \ < paren_levels) {\n      |                             ^~~~~~~~~~~~\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1272 |     operator<(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1272:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::pair<_T1, _T2>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched\
    \ types \u2018const std::reverse_iterator<_Iterator>\u2019 and \u2018long int\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n\
    \      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const\
    \ basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum <\
    \ paren_levels) {\n      |                             ^~~~~~~~~~~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6254:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018const std::error_code&\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |             ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:282:3:\
    \ note: candidate: \u2018bool std::operator<(const std::error_condition&, const\
    \ std::error_condition&)\u2019\n  282 |   operator<(const error_condition& __lhs,\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::deque<_Tp, _Alloc>\u2019 and \u2018\
    long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      | \
    \                            ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/array:262:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator<(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const array<_Tp,\
    \ _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::array<_Tp, _Nm>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::tuple<_Tps\
    \ ...>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note: \
    \  mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      | \
    \                            ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |   \
    \                          ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019 and\
    \ \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n\
    \      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key,\
    \ _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019 and\
    \ \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n\
    \      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    long int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      | \
    \                            ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp,\
    \ _Lp>\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |   \
    \                          ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::queue<_Tp,\
    \ _Seq>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::set<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:331:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::stack<_Tp,\
    \ _Seq>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   14 |   while\
    \ (paren_levels_sum < paren_levels) {\n      |                             ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   14 |   while\
    \ (paren_levels_sum < paren_levels) {\n      |                             ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   14 |   while\
    \ (paren_levels_sum < paren_levels) {\n      |                             ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   14 |   while (paren_levels_sum < paren_levels) {\n      |    \
    \                         ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   14 |   while (paren_levels_sum < paren_levels) {\n      |               \
    \              ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/forward_list:38,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note:   mismatched types \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum <\
    \ paren_levels) {\n      |                             ^~~~~~~~~~~~\nIn file included\
    \ from /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018long int\u2019 to \u2018std::thread::id\u2019\n  290 |   operator<(thread::id\
    \ __x, thread::id __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018long int\u2019\n   14 |   while (paren_levels_sum < paren_levels)\
    \ {\n      |                             ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzs9hvu4o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzs9hvu4o.cpp:14:29:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018long int\u2019\n   14 |   while (paren_levels_sum\
    \ < paren_levels) {\n      |                             ^~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = curr_level + \"(\";\n        } else if (c\
    \ == ')') {\n            curr_level = curr_level.substr(0, curr_level.size() -\
    \ 1) + \")\";\n        } else {\n            curr_level = curr_level + c;\n  \
    \      }\n        if (curr_level.find(\"(\") == std::string::npos) {\n       \
    \     levels.push_back(std::stoi(curr_level));\n        }\n    }\n    return levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpkfm8s8xb: /tmp/tmpkfm8s8xb.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long paren_level = 0;\n \
    \   for (auto c : paren_string) {\n        if (c == '(') {\n            paren_levels.push_back(paren_level);\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level--;\n\
    \        }\n    }\n    paren_levels.push_back(paren_level);\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp_xexbexo: /tmp/tmp_xexbexo.cpp:25: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level = std::to_string(level);\n\
    \            level++;\n        } else if (c == ')') {\n            level--;\n\
    \            levels.push_back(std::stoi(paren_level));\n            paren_level.clear();\n\
    \        } else {\n            paren_level += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels = paren_string.substr(0, paren_string.find('(')).split(' ').size();\n\
    \    std::vector<long> paren_levels_temp;\n    paren_levels_temp.reserve(paren_levels);\n\
    \    long paren_level = 0;\n    long paren_levels_temp_index = 0;\n    long paren_levels_temp_size\
    \ = 0;\n    for (long i = 0; i < paren_string.size(); i++) {\n        if (paren_string[i]\
    \ == ')') {\n            paren_levels_temp[paren_levels_temp_index] = paren_level;\n\
    \            paren_levels_temp_index++;\n            paren_levels_temp_size++;\n\
    \            if (paren_levels_temp_index == paren_levels_temp.size()) {\n    \
    \            paren_levels_temp.push_back(paren_level);\n            }\n      \
    \      paren_level++;\n        }\n        else if (paren_string[i] == '(') {\n\
    \            paren_level++;\n        }\n    }\n    std::vector<long> paren_levels_temp_reversed;\n\
    \    paren_levels_temp_reversed.reserve(paren_levels_temp.size());\n    for (long\
    \ i = 0; i < paren_levels_temp.size(); i++) {\n        paren_levels_temp_reversed.push_back(paren_levels_temp[paren_levels_temp_reversed.size()\
    \ - 1 - i]);\n    }\n    return paren_levels_temp_reversed;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7bykd497.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp7bykd497.cpp:10:67: error: \u2018class std::__cxx11::basic_string<char>\u2019\
    \ has no member named \u2018split\u2019\n   10 |     paren_levels = paren_string.substr(0,\
    \ paren_string.find('(')).split(' ').size();\n      |                        \
    \                                           ^~~~~\n/tmp/tmp7bykd497.cpp:12:31:\
    \ error: cannot convert \u2018std::vector<long int>\u2019 to \u2018std::vector<long\
    \ int>::size_type\u2019 {aka \u2018long unsigned int\u2019}\n   12 |     paren_levels_temp.reserve(paren_levels);\n\
    \      |                               ^~~~~~~~~~~~\n      |                 \
    \              |\n      |                               std::vector<long int>\n\
    In file included from /usr/include/c++/9/vector:72,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7bykd497.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:67:23:\
    \ note:   initializing argument 1 of \u2018void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp,\
    \ _Alloc>::size_type) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\n   67 |    \
    \ reserve(size_type __n)\n      |             ~~~~~~~~~~^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n            current_level\
    \ = paren_level;\n        } else if (c == ')') {\n            paren_level--;\n\
    \            current_level = paren_level;\n        } else {\n            assert(current_level\
    \ == paren_level);\n            paren_levels[paren_level] = current_level;\n \
    \       }\n    }\n    return paren_levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long level = 0;\n  for (char\
    \ c : paren_string) {\n    if (c == '(') {\n      ++level;\n    } else if (c ==\
    \ ')') {\n      --level;\n    }\n    paren_levels.push_back(level);\n  }\n  return\
    \ paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpdxbxdp3i: /tmp/tmpdxbxdp3i.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    for (auto c :\
    \ paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \        } else if (c == ')') {\n            paren_level_count--;\n          \
    \  if (paren_level_count == 0) {\n                paren_level++;\n           \
    \ }\n        }\n        paren_levels[paren_level_count] = paren_level;\n    }\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long paren_level = 0;\n  for\
    \ (auto c : paren_string) {\n    if (c == '(') {\n      paren_level++;\n    }\
    \ else if (c == ')') {\n      paren_level--;\n    }\n    paren_levels.push_back(paren_level);\n\
    \  }\n  return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpmykrboo_: /tmp/tmpmykrboo_.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    bool is_open = false;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n            paren_level = \"\";\n        } else if (c == ')') {\n \
    \           is_open = false;\n            level++;\n            paren_level +=\
    \ c;\n        } else if (is_open) {\n            level++;\n            paren_level\
    \ += c;\n        } else {\n            levels[level - 1]++;\n            paren_level\
    \ += c;\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n            if (paren_level == 0) {\n\
    \                paren_levels.push(paren_level);\n            }\n        }\n \
    \       level++;\n    }\n    return paren_levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph1u0_70f.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmph1u0_70f.cpp:18:30: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018push\u2019\n   18 |                 paren_levels.push(paren_level);\n\
    \      |                              ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        paren_char = paren_string[i];\n       \
    \ if (paren_char == '(') {\n            level++;\n        } else if (paren_char\
    \ == ')') {\n            level--;\n        }\n        if (level == 0) {\n    \
    \        levels.push_back(level);\n        }\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwksub9kq.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpwksub9kq.cpp:14:24: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   14 |         if (paren_char == '(') {\n      |   \
    \          ~~~~~~~~~~ ^~ ~~~\n      |             |             |\n      |   \
    \          |             char\n      |             std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const typename\
    \ std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n                 from\
    \ /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   14 |         if (paren_char ==\
    \ '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   14 |      \
    \   if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/ios_base.h:46,\n               \
    \  from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n              \
    \   from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5: note: candidate:\
    \ \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   14 |     \
    \    if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   14 |         if (paren_char == '(') {\n      |              \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:54,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   14 |         if (paren_char == '(') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n    \
    \             from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   14 |         if (paren_char == '(') {\n      |            \
    \               ^~~\nIn file included from /usr/include/c++/9/list:63,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n    \
    \             from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n      \
    \           from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   14 |\
    \         if (paren_char == '(') {\n      |                           ^~~\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   14 | \
    \        if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from\
    \ /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n      \
    \           from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/memory:81,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5: note: candidate:\
    \ \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   14 |        \
    \ if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   14 |    \
    \     if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/set:61,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n      \
    \           from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n         \
    \        from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/future:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n        \
    \         from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n        \
    \         from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/string:41,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:14:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |        \
    \                   ^~~\n/tmp/tmpwksub9kq.cpp:16:31: error: no match for \u2018\
    operator==\u2019 (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   16 |         } else if (paren_char == ')') {\n   \
    \   |                    ~~~~~~~~~~ ^~ ~~~\n      |                    |     \
    \        |\n      |                    |             char\n      |           \
    \         std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n   \
    \              from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> constexpr bool std::operator==(const\
    \ std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const\
    \ pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/string:41,\n         \
    \        from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   16 |      \
    \   } else if (paren_char == ')') {\n      |                                 \
    \ ^~~\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   16 |         } else if\
    \ (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 16 |         } else if (paren_char == ')') {\n      |                      \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/deque:67,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n   \
    \              from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   16 |     \
    \    } else if (paren_char == ')') {\n      |                                \
    \  ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n                 from\
    \ /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   16 |         } else if (paren_char == ')') {\n      |       \
    \                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   16 |         } else if (paren_char == ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  16 |         } else if (paren_char == ')') {\n      |                     \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:59,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   16 |         } else if (paren_char == ')') {\n      |     \
    \                             ^~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/map:61,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n           \
    \      from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/map:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n      \
    \           from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   16 |\
    \         } else if (paren_char == ')') {\n      |                           \
    \       ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   16 | \
    \        } else if (paren_char == ')') {\n      |                            \
    \      ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n \
    \                from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/memory:81,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n  \
    \               from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   16 |        \
    \ } else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/vector:67,\n   \
    \              from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   16 |    \
    \     } else if (paren_char == ')') {\n      |                               \
    \   ^~~\nIn file included from /usr/include/c++/9/queue:64,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n               \
    \  from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/set:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n           \
    \      from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/stack:61,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n    \
    \             from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwksub9kq.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwksub9kq.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwksub9kq.cpp:16:34:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n      | \
    \                                 ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    long paren_level = 0;\n\
    \    for (auto &c : paren_string) {\n        if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level == 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level > 0 && c == '(')\
    \ {\n            paren_level++;\n        } else if (paren_level > 0 && c == ')')\
    \ {\n            paren_level--;\n        } else if (paren_level == 0 && c == '(')\
    \ {\n            paren_level\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpf8aneugx.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpf8aneugx.cpp:71:24: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   71 |             paren_level\n      |                        ^\n \
    \     |                        ;\n   72 | }\n      | ~                       \n\
    /tmp/tmpf8aneugx.cpp:73:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   73 | int main() {\n      |            ^\n/tmp/tmpf8aneugx.cpp:78:1:\
    \ error: expected \u2018}\u2019 at end of input\n   78 | }\n      | ^\n/tmp/tmpf8aneugx.cpp:13:34:\
    \ note: to match this \u2018{\u2019\n   13 |     for (auto &c : paren_string)\
    \ {\n      |                                  ^\n/tmp/tmpf8aneugx.cpp:78:1: error:\
    \ expected \u2018}\u2019 at end of input\n   78 | }\n      | ^\n/tmp/tmpf8aneugx.cpp:8:65:\
    \ note: to match this \u2018{\u2019\n    8 | std::vector<long> parse_nested_parens(std::string\
    \ paren_string) {\n      |                                                   \
    \              ^\n/tmp/tmpf8aneugx.cpp:78:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   78 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpl9wqxjxj: /tmp/tmpl9wqxjxj.cpp:71: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_counter = 0;\n    bool is_first_paren\
    \ = true;\n    bool is_last_paren = true;\n    bool is_last_paren_level = true;\n\
    \    bool is_last_paren_level_counter = true;\n    long paren_level_counter_inner\
    \ = 1;\n    long paren_level_counter_outer = 1;\n    long paren_level_counter_outer_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner = 1;\n    long paren_level_counter_outer_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner = 1;\n    long\
    \ paren_level_counter_outer_inner_inner_inner_inner_inner = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n    long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_72gb35.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp9_72gb35.cpp:30:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   30 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:29:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   29 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:31:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   31 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:29:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   29 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:34:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   34 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:33:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   33 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:35:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   35 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:33:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   33 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:36:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   36 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:33:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   33 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:37:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   37 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:33:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   33 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:38:10: error: redeclaration of \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \n   38 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:33:10: note: \u2018long int paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\u2019\
    \ previously declared here\n   33 |     long paren_level_counter_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_72gb35.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmp9_72gb35.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_parens = \"\";\n    long level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            curr_parens += c;\n        } else if\
    \ (c == ')') {\n            curr_parens = curr_parens.substr(0, curr_parens.size()\
    \ - 1);\n            level += 1;\n            levels[level - 1] += 1;\n      \
    \  } else if (c == ' ') {\n            levels[level - 1] += 1;\n        }\n  \
    \  }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_count_index = 0;\n    long paren_level_max_count_index2\
    \ = 0;\n    long paren_level_max_count_index3 = 0;\n    long paren_level_max_count_index4\
    \ = 0;\n    long paren_level_max_count_index5 = 0;\n    long paren_level_max_count_index6\
    \ = 0;\n    long paren_level_max_count_index7 = 0;\n    long paren_level_max_count_index8\
    \ = 0;\n    long paren_level_max_count_index9 = 0;\n    long paren_level_max_count_index10\
    \ = 0;\n    long paren_level_max_count_index11 = 0;\n    long paren_level_max_count_index12\
    \ = 0;\n    long paren_level_max_count_index13 = 0;\n    long paren_level_max_count_index14\
    \ = 0;\n    long paren_level_max_count_index15 = 0;\n    long paren_level_max_count_index16\
    \ = 0;\n    long paren_level_max_count_index17 = 0;\n    long paren_level_max_count_index18\
    \ = 0;\n    long paren_level_max_count_index19 = 0;\n    long paren_level_max_count_index20\
    \ = 0;\n    long paren_level_max_count_index21 = 0;\n    long paren_level_max_count_index22\
    \ = 0;\n    long paren_level_max_count_index23 = 0;\n    long paren_level_max_count_index24\
    \ = 0;\n    long paren_level_max_count_index25 = 0;\n    long paren_level_max_count_index26\
    \ = 0;\n    long paren_level_max_count_index27 = 0;\n    long paren_level_max_count_index28\
    \ = 0;\n    long paren_level_max_count_index29 = 0;\n    long paren_level_max_count_index30\
    \ = 0;\n    long paren_level_max_count_index31 = 0;\n    long paren_level_max_count_index32\
    \ = 0;\n    long paren_level_max_count_index33 = 0;\n    long paren_level_max_count_index34\
    \ = 0;\n    long paren_level_max_count_index35 = 0;\n    long paren_level_max_count_index36\
    \ = 0;\n    long paren_level_max_count_index37 = 0;\n    long paren_level_max_count_index38\
    \ = 0;\n    long paren_level_max_count_index39 = 0;\n    long paren_level_max_count_index40\
    \ = 0;\n    long paren_level_max_count_index41 = 0;\n    long paren_level_max_count_index42\
    \ = 0;\n    long paren_level_max_count_index43 = 0;\n    long paren_level_max_count_index44\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = parse_nested_parens;\n   \
    \ assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp8ynluruh: /tmp/tmp8ynluruh.cpp:61: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpop0io0qx: /tmp/tmpop0io0qx.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    bool is_open = false;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n            paren_level = c;\n        } else if (c == ')') {\n    \
    \        is_open = false;\n            levels[level] = std::max(levels[level],\
    \ level);\n            level++;\n        } else if (is_open) {\n            levels[level]\
    \ = std::max(levels[level], level);\n            level++;\n        }\n    }\n\
    \    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level = std::to_string(level);\n\
    \            level++;\n        } else if (c == ')') {\n            level--;\n\
    \            levels[level] = std::stoi(paren_level);\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_count_index = 0;\n    long paren_level_max_count_index2\
    \ = 0;\n    long paren_level_max_count_index3 = 0;\n    long paren_level_max_count_index4\
    \ = 0;\n    long paren_level_max_count_index5 = 0;\n    long paren_level_max_count_index6\
    \ = 0;\n    long paren_level_max_count_index7 = 0;\n    long paren_level_max_count_index8\
    \ = 0;\n    long paren_level_max_count_index9 = 0;\n    long paren_level_max_count_index10\
    \ = 0;\n    long paren_level_max_count_index11 = 0;\n    long paren_level_max_count_index12\
    \ = 0;\n    long paren_level_max_count_index13 = 0;\n    long paren_level_max_count_index14\
    \ = 0;\n    long paren_level_max_count_index15 = 0;\n    long paren_level_max_count_index16\
    \ = 0;\n    long paren_level_max_count_index17 = 0;\n    long paren_level_max_count_index18\
    \ = 0;\n    long paren_level_max_count_index19 = 0;\n    long paren_level_max_count_index20\
    \ = 0;\n    long paren_level_max_count_index21 = 0;\n    long paren_level_max_count_index22\
    \ = 0;\n    long paren_level_max_count_index23 = 0;\n    long paren_level_max_count_index24\
    \ = 0;\n    long paren_level_max_count_index25 = 0;\n    long paren_level_max_count_index26\
    \ = 0;\n    long paren_level_max_count_index27 = 0;\n    long paren_level_max_count_index28\
    \ = 0;\n    long paren_level_max_count_index29 = 0;\n    long paren_level_max_count_index30\
    \ = 0;\n    long paren_level_max_count_index31 = 0;\n    long paren_level_max_count_index32\
    \ = 0;\n    long paren_level_max_count_index33 = 0;\n    long paren_level_max_count_index34\
    \ = 0;\n    long paren_level_max_count_index35 = 0;\n    long paren_level_max_count_index36\
    \ = 0;\n    long paren_level_max_count_index37 = 0;\n    long paren_level_max_count_index38\
    \ = 0;\n    long paren_level_max_count_index39 = 0;\n    long paren_level_max_count_index40\
    \ = 0;\n    long paren_level_max_count_index41 = 0;\n    long paren_level_max_count_index42\
    \ = 0;\n    long paren_level_max_count_index43 = 0;\n    long paren_level_max_count_index44\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = parse_nested_parens;\n   \
    \ assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpixnzjpyr: /tmp/tmpixnzjpyr.cpp:61: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long max_level = 0;\n    long paren_level =\
    \ 0;\n    for (char c : paren_string) {\n        if (c == '(') {\n           \
    \ paren_level++;\n            if (paren_level > max_level) {\n               \
    \ max_level = paren_level;\n            }\n        } else if (c == ')') {\n  \
    \          paren_level--;\n            if (paren_level < current_level) {\n  \
    \              current_level = paren_level;\n            }\n        }\n    }\n\
    \    paren_levels.push_back(current_level);\n    return paren_levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp0foo6swh: /tmp/tmp0foo6swh.cpp:31: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_level;\n\
    \    paren_level.reserve(paren_string.size());\n    long paren_level_count = 0;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \        } else if (c == ')') {\n            paren_level_count--;\n        }\n\
    \        paren_level.push_back(paren_level_count);\n    }\n    return paren_level;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmplbgyqp97: /tmp/tmplbgyqp97.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = \"(\";\n        } else if (c == ')') {\n\
    \            curr_level = \")\";\n        } else {\n            curr_level +=\
    \ c;\n        }\n        if (curr_level.length() == 0) {\n            levels.push_back(levels.size());\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpb501ydzh: /tmp/tmpb501ydzh.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_level++;\n        } else if (c == ')') {\n       \
    \     paren_level--;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp0v7tl6vy: /tmp/tmp0v7tl6vy.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (auto &c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level = std::to_string(level);\n\
    \            level++;\n        } else if (c == ')') {\n            level--;\n\
    \            levels[level] = std::stoi(paren_level);\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_stack;\n    long level = 0;\n    bool is_open = false;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n            paren_stack += c;\n        } else if (c == ')') {\n   \
    \         is_open = false;\n            level++;\n            paren_stack += c;\n\
    \        } else if (is_open) {\n            level++;\n            paren_stack\
    \ += c;\n        } else {\n            levels[level - 1]++;\n        }\n    }\n\
    \    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_count_index = 0;\n    long paren_level_max_count_index2\
    \ = 0;\n    long paren_level_max_count_index3 = 0;\n    long paren_level_max_count_index4\
    \ = 0;\n    long paren_level_max_count_index5 = 0;\n    long paren_level_max_count_index6\
    \ = 0;\n    long paren_level_max_count_index7 = 0;\n    long paren_level_max_count_index8\
    \ = 0;\n    long paren_level_max_count_index9 = 0;\n    long paren_level_max_count_index10\
    \ = 0;\n    long paren_level_max_count_index11 = 0;\n    long paren_level_max_count_index12\
    \ = 0;\n    long paren_level_max_count_index13 = 0;\n    long paren_level_max_count_index14\
    \ = 0;\n    long paren_level_max_count_index15 = 0;\n    long paren_level_max_count_index16\
    \ = 0;\n    long paren_level_max_count_index17 = 0;\n    long paren_level_max_count_index18\
    \ = 0;\n    long paren_level_max_count_index19 = 0;\n    long paren_level_max_count_index20\
    \ = 0;\n    long paren_level_max_count_index21 = 0;\n    long paren_level_max_count_index22\
    \ = 0;\n    long paren_level_max_count_index23 = 0;\n    long paren_level_max_count_index24\
    \ = 0;\n    long paren_level_max_count_index25 = 0;\n    long paren_level_max_count_index26\
    \ = 0;\n    long paren_level_max_count_index27 = 0;\n    long paren_level_max_count_index28\
    \ = 0;\n    long paren_level_max_count_index29 = 0;\n    long paren_level_max_count_index30\
    \ = 0;\n    long paren_level_max_count_index31 = 0;\n    long paren_level_max_count_index32\
    \ = 0;\n    long paren_level_max_count_index33 = 0;\n    long paren_level_max_count_index34\
    \ = 0;\n    long paren_level_max_count_index35 = 0;\n    long paren_level_max_count_index36\
    \ = 0;\n    long paren_level_max_count_index37 = 0;\n    long paren_level_max_count_index38\
    \ = 0;\n    long paren_level_max_count_index39 = 0;\n    long paren_level_max_count_index40\
    \ = 0;\n    long paren_level_max_count_index41 = 0;\n    long paren_level_max_count_index42\
    \ = 0;\n    long paren_level_max_count_index43 = 0;\n    long paren_level_max_count_index44\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = parse_nested_parens;\n   \
    \ assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpagw7k8n9: /tmp/tmpagw7k8n9.cpp:61: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max_count\
    \ = 1;\n    long paren_level_max_count_index = 0;\n    long paren_level_max_count_index2\
    \ = 0;\n    long paren_level_max_count_index3 = 0;\n    long paren_level_max_count_index4\
    \ = 0;\n    long paren_level_max_count_index5 = 0;\n    long paren_level_max_count_index6\
    \ = 0;\n    long paren_level_max_count_index7 = 0;\n    long paren_level_max_count_index8\
    \ = 0;\n    long paren_level_max_count_index9 = 0;\n    long paren_level_max_count_index10\
    \ = 0;\n    long paren_level_max_count_index11 = 0;\n    long paren_level_max_count_index12\
    \ = 0;\n    long paren_level_max_count_index13 = 0;\n    long paren_level_max_count_index14\
    \ = 0;\n    long paren_level_max_count_index15 = 0;\n    long paren_level_max_count_index16\
    \ = 0;\n    long paren_level_max_count_index17 = 0;\n    long paren_level_max_count_index18\
    \ = 0;\n    long paren_level_max_count_index19 = 0;\n    long paren_level_max_count_index20\
    \ = 0;\n    long paren_level_max_count_index21 = 0;\n    long paren_level_max_count_index22\
    \ = 0;\n    long paren_level_max_count_index23 = 0;\n    long paren_level_max_count_index24\
    \ = 0;\n    long paren_level_max_count_index25 = 0;\n    long paren_level_max_count_index26\
    \ = 0;\n    long paren_level_max_count_index27 = 0;\n    long paren_level_max_count_index28\
    \ = 0;\n    long paren_level_max_count_index29 = 0;\n    long paren_level_max_count_index30\
    \ = 0;\n    long paren_level_max_count_index31 = 0;\n    long paren_level_max_count_index32\
    \ = 0;\n    long paren_level_max_count_index33 = 0;\n    long paren_level_max_count_index34\
    \ = 0;\n    long paren_level_max_count_index35 = 0;\n    long paren_level_max_count_index36\
    \ = 0;\n    long paren_level_max_count_index37 = 0;\n    long paren_level_max_count_index38\
    \ = 0;\n    long paren_level_max_count_index39 = 0;\n    long paren_level_max_count_index40\
    \ = 0;\n    long paren_level_max_count_index41 = 0;\n    long paren_level_max_count_index42\
    \ = 0;\n    long paren_level_max_count_index43 = 0;\n    long paren_level_max_count_index44\
    \ = 0;\n\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpl4cbeazr: /tmp/tmpl4cbeazr.cpp:61: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n            current_level\
    \ = paren_level;\n        } else if (c == ')') {\n            paren_level--;\n\
    \            current_level = paren_level;\n        } else if (c == ' ') {\n  \
    \          paren_levels[current_level] = paren_level;\n        }\n    }\n    return\
    \ paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter_max = 0;\n    long paren_level_counter_max_index\
    \ = 0;\n    long paren_level_counter_max_index2 = 0;\n    long paren_level_counter_max_index3\
    \ = 0;\n    long paren_level_counter_max_index4 = 0;\n    long paren_level_counter_max_index5\
    \ = 0;\n    long paren_level_counter_max_index6 = 0;\n    long paren_level_counter_max_index7\
    \ = 0;\n    long paren_level_counter_max_index8 = 0;\n    long paren_level_counter_max_index9\
    \ = 0;\n    long paren_level_counter_max_index10 = 0;\n    long paren_level_counter_max_index11\
    \ = 0;\n    long paren_level_counter_max_index12 = 0;\n    long paren_level_counter_max_index13\
    \ = 0;\n    long paren_level_counter_max_index14 = 0;\n    long paren_level_counter_max_index15\
    \ = 0;\n    long paren_level_counter_max_index16 = 0;\n    long paren_level_counter_max_index17\
    \ = 0;\n    long paren_level_counter_max_index18 = 0;\n    long paren_level_counter_max_index19\
    \ = 0;\n    long paren_level_counter_max_index20 = 0;\n    long paren_level_counter_max_index21\
    \ = 0;\n    long paren_level_counter_max_index22 = 0;\n    long paren_level_counter_max_index23\
    \ = 0;\n    long paren_level_counter_max_index24 = 0;\n    long paren_level_counter_max_index25\
    \ = 0;\n    long paren_level_counter_max_index26 = 0;\n    long paren_level_counter_max_index27\
    \ = 0;\n    long paren_level_counter_max_index28 = 0;\n    long paren_level_counter_max_index29\
    \ = 0;\n    long paren_level_counter_max_index30 = 0;\n    long paren_level_counter_max_index31\
    \ = 0;\n    long paren_level_counter_max_index32 = 0;\n    long paren_level_counter_max_index33\
    \ = 0;\n    long paren_level_counter_max_index34 = 0;\n    long paren_level_counter_max_index35\
    \ = 0;\n    long paren_level_counter_max_index36 = 0;\n    long paren_level_counter_max_index37\
    \ = 0;\n    long paren_level_counter_max_index38 = 0;\n    long paren_level_counter_max_index39\
    \ = 0;\n    long paren_level_counter_max_index40 = 0;\n    long paren_level_counter_max_index41\
    \ = 0;\n    long paren_level_counter_max_index42 = 0;\n    long paren_level_counter_max_index43\
    \ = 0;\n    long paren_level_counter_\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp57wu1h__.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp57wu1h__.cpp:58:1: error: expected initializer before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmp57wu1h__.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long max_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_levels.push_back(max_level);\n            max_level++;\n\
    \        } else if (c == ')') {\n            max_level = std::max(max_level, paren_levels[paren_levels.size()\
    \ - 1]);\n            paren_levels.erase(paren_levels.begin() + paren_levels.size()\
    \ - 1);\n        } else {\n            max_level = std::max(max_level, paren_levels[paren_levels.size()\
    \ - 1] + 1);\n        }\n    }\n    paren_levels.push_back(max_level);\n    return\
    \ paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmppu19m2at: /tmp/tmppu19m2at.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    bool is_open = false;\n \
    \   for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n            paren_level++;\n        } else if (c == ')') {\n      \
    \      is_open = false;\n            paren_level--;\n        } else if (is_open)\
    \ {\n            paren_level++;\n        } else {\n            paren_level--;\n\
    \        }\n        if (paren_level == level) {\n            paren_levels[paren_level\
    \ - 1]++;\n        }\n        level++;\n    }\n    return paren_levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpsk93spma: /tmp/tmpsk93spma.cpp:34: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long level = 0;\n    long paren_level = 0;\n\
    \    long paren_level_counter = 0;\n    long paren_level_counter2 = 0;\n    long\
    \ paren_level_counter3 = 0;\n    long paren_level_counter4 = 0;\n    long paren_level_counter5\
    \ = 0;\n    long paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n\
    \    long paren_level_counter8 = 0;\n    long paren_level_counter9 = 0;\n    long\
    \ paren_level_counter10 = 0;\n    long paren_level_counter11 = 0;\n    long paren_level_counter12\
    \ = 0;\n    long paren_level_counter13 = 0;\n    long paren_level_counter14 =\
    \ 0;\n    long paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n\
    \    long paren_level_counter17 = 0;\n    long paren_level_counter18 = 0;\n  \
    \  long paren_level_counter19 = 0;\n    long paren_level_counter20 = 0;\n    long\
    \ paren_level_counter21 = 0;\n    long paren_level_counter22 = 0;\n    long paren_level_counter23\
    \ = 0;\n    long paren_level_counter24 = 0;\n    long paren_level_counter25 =\
    \ 0;\n    long paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n\
    \    long paren_level_counter28 = 0;\n    long paren_level_counter29 = 0;\n  \
    \  long paren_level_counter30 = 0;\n    long paren_level_counter31 = 0;\n    long\
    \ paren_level_counter32 = 0;\n    long paren_level_counter33 = 0;\n    long paren_level_counter34\
    \ = 0;\n    long paren_level_counter35 = 0;\n    long paren_level_counter36 =\
    \ 0;\n    long paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n\
    \    long paren_level_counter39 = 0;\n    long paren_level_counter40 = 0;\n  \
    \  long paren_level_counter41 = 0;\n    long paren_level_counter42 = 0;\n    long\
    \ paren_level_counter43 = 0;\n    long paren_level_counter44 = 0;\n    long paren_level_counter45\
    \ = 0;\n    long paren_level_counter46 = 0;\n    long paren_level_counter47 =\
    \ 0;\n    long paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n\
    \    long paren_level_counter50 = 0;\n    long paren_level_counter51 = 0;\n  \
    \  long paren_level_counter52 = 0;\n    long paren_level_counter53 = 0;\n    long\
    \ paren_level_counter54 = 0;\n    long paren_\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_f36t3q.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp9_f36t3q.cpp:68:1: error: expected initializer before \u2018}\u2019\
    \ token\n   68 | }\n      | ^\n/tmp/tmp9_f36t3q.cpp:68:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp5ws0oz1l: /tmp/tmp5ws0oz1l.cpp:71: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long curr_level_size = 0;\n    for (size_t i\
    \ = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n\
    \            curr_level = paren_string.substr(0, i);\n            curr_level_size\
    \ = levels.size();\n            levels.push_back(curr_level_size);\n        }\
    \ else if (paren_string[i] == ')') {\n            long level_size = levels[curr_level_size];\n\
    \            long level_index = curr_level_size;\n            while (level_index\
    \ > 0) {\n                level_index--;\n                if (levels[level_index]\
    \ == level_size) {\n                    levels[level_index] = level_index + 1;\n\
    \                    break;\n                }\n            }\n            curr_level_size\
    \ = level_index;\n        } else {\n            curr_level += paren_string[i];\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpju3ruk7_: /tmp/tmpju3ruk7_.cpp:36: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    std::string paren_char;\n    std::string paren_char2;\n\
    \    for (size_t i = 0; i < paren_string.size(); i++) {\n        paren_char =\
    \ paren_string[i];\n        paren_char2 = paren_string[paren_string.size() - 1\
    \ - i];\n        if (paren_char == '(' && paren_char2 == ')') {\n            level++;\n\
    \        } else if (paren_char == '(' && paren_char2 != ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5vgjg5sv.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp5vgjg5sv.cpp:16:24: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   16 |         if (paren_char == '(' && paren_char2\
    \ == ')') {\n      |             ~~~~~~~~~~ ^~ ~~~\n      |             |    \
    \         |\n      |             |             char\n      |             std::string\
    \ {aka std::__cxx11::basic_string<char>}\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/regex:62,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/regex:62,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n \
    \                from /usr/include/c++/9/bits/char_traits.h:39,\n            \
    \     from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n \
    \                from /usr/include/c++/9/bits/char_traits.h:39,\n            \
    \     from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         if (paren_char ==\
    \ '(' && paren_char2 == ')') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/string:41,\n \
    \                from /usr/include/c++/9/bits/locale_classes.h:40,\n         \
    \        from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   16 |      \
    \   if (paren_char == '(' && paren_char2 == ')') {\n      |                  \
    \         ^~~\nIn file included from /usr/include/c++/9/string:55,\n         \
    \        from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6144 | \
    \    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      | \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   16 |         if (paren_char\
    \ == '(' && paren_char2 == ')') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |       \
    \                    ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:468:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>& __x, const _Tp&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:473:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const _Tp&, const std::complex<_Tp>&)\u2019\
    \n  473 |     operator==(const _Tp& __x, const complex<_Tp>& __y)\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/complex:473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   mismatched types \u2018const std::complex<_Tp>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                      ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                      ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   16 |     \
    \    if (paren_char == '(' && paren_char2 == ')') {\n      |                 \
    \          ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n         \
    \        from /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   16 |         if (paren_char == '(' && paren_char2\
    \ == ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |      \
    \                     ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      if (paren_char == '(' && paren_char2 == ')') {\n      |               \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      if (paren_char == '(' && paren_char2 == ')') {\n      |               \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/map:61,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n   \
    \              from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                      ^~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   16 |\
    \         if (paren_char == '(' && paren_char2 == ')') {\n      |            \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   16 | \
    \        if (paren_char == '(' && paren_char2 == ')') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   16 |        \
    \ if (paren_char == '(' && paren_char2 == ')') {\n      |                    \
    \       ^~~\nIn file included from /usr/include/c++/9/memory:81,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n          \
    \       from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   16 |    \
    \     if (paren_char == '(' && paren_char2 == ')') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/queue:64,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n       \
    \          from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                 ^~~\nIn file included from /usr/include/c++/9/set:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n   \
    \              from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                      ^~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   16 |         if (paren_char\
    \ == '(' && paren_char2 == ')') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \    ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                           ^~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                      ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                           ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                           ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                           ^~~\n/tmp/tmp5vgjg5sv.cpp:16:46: error:\
    \ no match for \u2018operator==\u2019 (operand types are \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} and \u2018char\u2019)\n \
    \  16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |      \
    \                            ~~~~~~~~~~~ ^~ ~~~\n      |                     \
    \             |              |\n      |                                  |   \
    \           char\n      |                                  std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \                          ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \                          ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         if (paren_char ==\
    \ '(' && paren_char2 == ')') {\n      |                                      \
    \           ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   16 |      \
    \   if (paren_char == '(' && paren_char2 == ')') {\n      |                  \
    \                               ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6144 | \
    \    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      | \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |       \
    \                                          ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \                          ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \                          ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                                            ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                                            ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   16 |     \
    \    if (paren_char == '(' && paren_char2 == ')') {\n      |                 \
    \                                ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/array:252:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const array<_Tp,\
    \ _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:252:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   16 |        \
    \ if (paren_char == '(' && paren_char2 == ')') {\n      |                    \
    \                             ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   16 |         if (paren_char == '(' && paren_char2\
    \ == ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |      \
    \                                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      if (paren_char == '(' && paren_char2 == ')') {\n      |               \
    \                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      if (paren_char == '(' && paren_char2 == ')') {\n      |               \
    \                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n \
    \     |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/iterator:66,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/list:63,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                                            ^~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   16 |\
    \         if (paren_char == '(' && paren_char2 == ')') {\n      |            \
    \                                     ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   16 | \
    \        if (paren_char == '(' && paren_char2 == ')') {\n      |             \
    \                                    ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n \
    \     |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   16 |        \
    \ if (paren_char == '(' && paren_char2 == ')') {\n      |                    \
    \                             ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   16 |    \
    \     if (paren_char == '(' && paren_char2 == ')') {\n      |                \
    \                                 ^~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/set:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   16\
    \ |         if (paren_char == '(' && paren_char2 == ')') {\n      |          \
    \                                       ^~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                                            ^~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n\
    \      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                                             \
    \    ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n          \
    \       from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                                             \
    \    ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n          \
    \       from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 ==\
    \ ')') {\n      |                                                 ^~~\nIn file\
    \ included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         if (paren_char == '(' &&\
    \ paren_char2 == ')') {\n      |                                             \
    \    ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n          \
    \       from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   16 |         if (paren_char\
    \ == '(' && paren_char2 == ')') {\n      |                                   \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         if\
    \ (paren_char == '(' && paren_char2 == ')') {\n      |                       \
    \                          ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |     \
    \                                            ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/unordered_map:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/unordered_set:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                                                 ^~~\nIn file included\
    \ from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7: note: candidate:\
    \ \u2018bool std::operator==(const std::allocator<char>&, const std::allocator<char>&)\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::allocator<char>&\u2019\n  155 |       operator==(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   16 |         if (paren_char == '(' && paren_char2 == ')') {\n      |    \
    \                                             ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:16:49:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   16 |         if (paren_char == '(' && paren_char2 == ')')\
    \ {\n      |                                                 ^~~\n/tmp/tmp5vgjg5sv.cpp:18:31:\
    \ error: no match for \u2018operator==\u2019 (operand types are \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} and \u2018char\u2019)\n \
    \  18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                    ~~~~~~~~~~ ^~ ~~~\n      |                    |         \
    \    |\n      |                    |             char\n      |               \
    \     std::string {aka std::__cxx11::basic_string<char>}\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                   ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                   ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   18 |         } else if (paren_char\
    \ == '(' && paren_char2 != ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   18 |      \
    \   } else if (paren_char == '(' && paren_char2 != ')') {\n      |           \
    \                       ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6144 | \
    \    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      | \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                  ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                  ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                  ^~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   18 |     \
    \    } else if (paren_char == '(' && paren_char2 != ')') {\n      |          \
    \                        ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/array:252:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const array<_Tp,\
    \ _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:252:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   18 |        \
    \ } else if (paren_char == '(' && paren_char2 != ')') {\n      |             \
    \                     ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   18 |         } else if (paren_char == '('\
    \ && paren_char2 != ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                  ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/locale_conv.h:41,\n                 from /usr/include/c++/9/locale:43,\n\
    \                 from /usr/include/c++/9/iomanip:43,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == '(' && paren_char2 != ')') {\n      |        \
    \                          ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == '(' && paren_char2 != ')') {\n      |        \
    \                          ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 != ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/list:63,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                  ^~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   18 |\
    \         } else if (paren_char == '(' && paren_char2 != ')') {\n      |     \
    \                             ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   18 | \
    \        } else if (paren_char == '(' && paren_char2 != ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 != ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   18 |        \
    \ } else if (paren_char == '(' && paren_char2 != ')') {\n      |             \
    \                     ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   18 |    \
    \     } else if (paren_char == '(' && paren_char2 != ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/set:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                               ^~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                  ^~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                   ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                  ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/unordered_map:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/unordered_set:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7: note: candidate:\
    \ \u2018bool std::operator==(const std::allocator<char>&, const std::allocator<char>&)\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::allocator<char>&\u2019\n  155 |       operator==(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:34:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                  ^~~\n/tmp/tmp5vgjg5sv.cpp:18:53:\
    \ error: no match for \u2018operator!=\u2019 (operand types are \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} and \u2018char\u2019)\n \
    \  18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                         ~~~~~~~~~~~ ^~ ~~~\n      |        \
    \                                 |              |\n      |                  \
    \                       |              char\n      |                         \
    \                std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1112:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator!=(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1112 |     operator!=(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1112:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1186:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator!=(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1186 |     operator!=(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1186:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1260:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator!=(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1260 |     operator!=(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1260:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1334:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1334 |     operator!=(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1334:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1408:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator!=(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1408 |     operator!=(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1408:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:1486:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1486 |     operator!=(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1486:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/regex.h:2015:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 2015 |     operator!=(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:2015:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/iosfwd:40,\n                 from /usr/include/c++/9/ios:38,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/postypes.h:227:5:\
    \ note: candidate: \u2018template<class _StateT> bool std::operator!=(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  227 |     operator!=(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:227:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                                         ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:461:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator!=(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  461 |     operator!=(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:461:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                                         ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:337:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator!=(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  337 |     operator!=(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:337:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:375:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator!=(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  375 |     operator!=(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:375:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   18 |         } else if (paren_char\
    \ == '(' && paren_char2 != ')') {\n      |                                   \
    \                     ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1148:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator!=(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1148 |     operator!=(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1148:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1154:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator!=(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1154 |     operator!=(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1154:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:173:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator!=(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  173 |     operator!=(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:173:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   18 |      \
    \   } else if (paren_char == '(' && paren_char2 != ')') {\n      |           \
    \                                             ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6191:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator!=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6191 | \
    \    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      | \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6191:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6204:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6204 |     operator!=(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6204:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6216:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6216 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/ios_base.h:46,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/system_error:319:3:\
    \ note: candidate: \u2018bool std::operator!=(const std::error_code&, const std::error_code&)\u2019\
    \n  319 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:319:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  319 |   operator!=(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:323:3: note: candidate: \u2018bool std::operator!=(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  323 |   operator!=(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:323:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  323 |   operator!=(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:327:3: note: candidate: \u2018bool std::operator!=(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  327 |   operator!=(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:327:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  327 |   operator!=(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:331:3: note: candidate: \u2018bool std::operator!=(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  331 |   operator!=(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:331:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  331 |   operator!=(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:214:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator!=(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  214 |     operator!=(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:214:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:481:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator!=(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  481 |     operator!=(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:481:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \                                    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:486:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator!=(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  486 |     operator!=(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:486:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \                                    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/complex:491:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator!=(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  491 |     operator!=(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:491:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:299:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator!=(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  299 |     operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:299:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:306:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator!=(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  306 |     operator!=(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:306:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator!=(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2338 |   \
    \  operator!=(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2338:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   18 |     \
    \    } else if (paren_char == '(' && paren_char2 != ')') {\n      |          \
    \                                              ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/array:257:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator!=(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  257 |     operator!=(const array<_Tp,\
    \ _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:257:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   18 |        \
    \ } else if (paren_char == '(' && paren_char2 != ')') {\n      |             \
    \                                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/tuple:1445:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator!=(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1445 |     operator!=(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1445:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   18 |         } else if (paren_char == '('\
    \ && paren_char2 != ')') {\n      |                                          \
    \              ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:764:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator!=(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  764 |     operator!=(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:764:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/std_function.h:770:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator!=(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  770 |     operator!=(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:770:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:732:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator!=(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  732 |     operator!=(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:732:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == '(' && paren_char2 != ')') {\n      |        \
    \                                                ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:738:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator!=(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  738 |     operator!=(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:738:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == '(' && paren_char2 != ')') {\n      |        \
    \                                                ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:743:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator!=(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  743 |     operator!=(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:743:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 != ')')\
    \ {\n      |                                                        ^~~\nIn file\
    \ included from /usr/include/c++/9/iterator:66,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:141:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator!=(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  141 |     operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:141:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/list:63,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2032:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator!=(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2032 |     operator!=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2032:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1479:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator!=(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1479 |     operator!=(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1479:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/map:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1143:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator!=(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1143 |     operator!=(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1143:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1428:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator!=(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1428 |     operator!=(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1428:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   18 |\
    \         } else if (paren_char == '(' && paren_char2 != ')') {\n      |     \
    \                                                   ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1434:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator!=(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1434 |     operator!=(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1434:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   18 | \
    \        } else if (paren_char == '(' && paren_char2 != ')') {\n      |      \
    \                                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1439:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator!=(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1439 |     operator!=(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1439:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 != ')')\
    \ {\n      |                                                        ^~~\nIn file\
    \ included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:398:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator!=(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  398 |     operator!=(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:398:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:403:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator!=(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  403 |     operator!=(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:403:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   18 |        \
    \ } else if (paren_char == '(' && paren_char2 != ')') {\n      |             \
    \                                           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:408:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator!=(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  408 |     operator!=(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:408:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1912:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator!=(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1912 | \
    \    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   18 |    \
    \     } else if (paren_char == '(' && paren_char2 != ')') {\n      |         \
    \                                               ^~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:362:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator!=(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  362 |     operator!=(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:362:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/set:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:1003:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator!=(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n 1003 |     operator!=(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:1003:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |   \
    \                                                     ^~~\nIn file included from\
    \ /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:988:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator!=(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  988 |     operator!=(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:988:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:337:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator!=(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  337 |     operator!=(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:337:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:418:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__not_equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator!=(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  418 |     _DEFINE_EXPR_BINARY_OPERATOR(!=, __not_equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:418:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                      \
    \                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:418:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__not_equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator!=(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  418\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(!=, __not_equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:418:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                      \
    \                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:418:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__not_equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator!=(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  418 |     _DEFINE_EXPR_BINARY_OPERATOR(!=,\
    \ __not_equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:418:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:418:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__not_equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator!=(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  418 |     _DEFINE_EXPR_BINARY_OPERATOR(!=, __not_equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:418:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ '(' && paren_char2 != ')') {\n      |                                      \
    \                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:418:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__not_equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator!=(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  418 |     _DEFINE_EXPR_BINARY_OPERATOR(!=, __not_equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:418:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   18 |         } else\
    \ if (paren_char == '(' && paren_char2 != ')') {\n      |                    \
    \                                    ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1198:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__not_equal_to,\
    \ _Tp>::result_type> std::operator!=(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1198 | _DEFINE_BINARY_OPERATOR(!=, __not_equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1198:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1198:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__not_equal_to,\
    \ _Tp>::result_type> std::operator!=(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1198 | _DEFINE_BINARY_OPERATOR(!=,\
    \ __not_equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1198:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |         }\
    \ else if (paren_char == '(' && paren_char2 != ')') {\n      |               \
    \                                         ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/valarray:1198:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__not_equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__not_equal_to,\
    \ _Tp>::result_type> std::operator!=(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1198 | _DEFINE_BINARY_OPERATOR(!=, __not_equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1198:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/forward_list:38,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1451:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator!=(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1451 |     operator!=(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1451:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/thread:286:3:\
    \ note: candidate: \u2018bool std::operator!=(std::thread::id, std::thread::id)\u2019\
    \n  286 |   operator!=(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:286:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  286 |   operator!=(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:49,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:421:5:\
    \ note: candidate: \u2018template<class _UIntType, _UIntType __a, _UIntType __c,\
    \ _UIntType __m> bool std::operator!=(const std::linear_congruential_engine<_UIntType,\
    \ __a, __c, __m>&, const std::linear_congruential_engine<_UIntType, __a, __c,\
    \ __m>&)\u2019\n  421 |     operator!=(const std::linear_congruential_engine<_UIntType,\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:421:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::linear_congruential_engine<_UIntType, __a,\
    \ __c, __m>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:658:5:\
    \ note: candidate: \u2018template<class _UIntType, long unsigned int __w, long\
    \ unsigned int __n, long unsigned int __m, long unsigned int __r, _UIntType __a,\
    \ long unsigned int __u, _UIntType __d, long unsigned int __s, _UIntType __b,\
    \ long unsigned int __t, _UIntType __c, long unsigned int __l, _UIntType __f>\
    \ bool std::operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n,\
    \ __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>&, const std::mersenne_twister_engine<_UIntType,\
    \ __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>&)\u2019\n \
    \ 658 |     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n,\
    \ __m,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:658:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::mersenne_twister_engine<_UIntType, __w,\
    \ __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>\u2019\n   18 | \
    \        } else if (paren_char == '(' && paren_char2 != ')') {\n      |      \
    \                                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:859:5:\
    \ note: candidate: \u2018template<class _UIntType, long unsigned int __w, long\
    \ unsigned int __s, long unsigned int __r> bool std::operator!=(const std::subtract_with_carry_engine<_UIntType,\
    \ __w, __s, __r>&, const std::subtract_with_carry_engine<_UIntType, __w, __s,\
    \ __r>&)\u2019\n  859 |     operator!=(const std::subtract_with_carry_engine<_UIntType,\
    \ __w,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:859:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::subtract_with_carry_engine<_UIntType, __w,\
    \ __s, __r>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:1082:5:\
    \ note: candidate: \u2018template<class _RandomNumberEngine, long unsigned int\
    \ __p, long unsigned int __r> bool std::operator!=(const std::discard_block_engine<_RandomNumberEngine,\
    \ __p, __r>&, const std::discard_block_engine<_RandomNumberEngine, __p, __r>&)\u2019\
    \n 1082 |     operator!=(const std::discard_block_engine<_RandomNumberEngine,\
    \ __p,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:1082:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::discard_block_engine<_RandomNumberEngine,\
    \ __p, __r>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:1279:5:\
    \ note: candidate: \u2018template<class _RandomNumberEngine, long unsigned int\
    \ __w, class _UIntType> bool std::operator!=(const std::independent_bits_engine<_RandomNumberEngine,\
    \ __w, _UIntType>&, const std::independent_bits_engine<_RandomNumberEngine, __w,\
    \ _UIntType>&)\u2019\n 1279 |     operator!=(const std::independent_bits_engine<_RandomNumberEngine,\
    \ __w,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:1279:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::independent_bits_engine<_RandomNumberEngine,\
    \ __w, _UIntType>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2\
    \ != ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:1532:5:\
    \ note: candidate: \u2018template<class _RandomNumberEngine, long unsigned int\
    \ __k> bool std::operator!=(const std::shuffle_order_engine<_RandomNumberEngine,\
    \ __k>&, const std::shuffle_order_engine<_RandomNumberEngine, __k>&)\u2019\n 1532\
    \ |     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:1532:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::shuffle_order_engine<_RandomNumberEngine, __k>\u2019\n   18 |     \
    \    } else if (paren_char == '(' && paren_char2 != ')') {\n      |          \
    \                                              ^~~\nIn file included from /usr/include/c++/9/random:49,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:1692:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::uniform_int_distribution<_IntType>&,\
    \ const std::uniform_int_distribution<_IntType>&)\u2019\n 1692 |     operator!=(const\
    \ std::uniform_int_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:1692:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::uniform_int_distribution<_IntType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:1913:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::uniform_real_distribution<_IntType>&,\
    \ const std::uniform_real_distribution<_IntType>&)\u2019\n 1913 |     operator!=(const\
    \ std::uniform_real_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:1913:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::uniform_real_distribution<_IntType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:2170:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 2170 |     operator!=(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:2170:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:2381:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::lognormal_distribution<_RealType>&, const std::lognormal_distribution<_RealType>&)\u2019\
    \n 2381 |     operator!=(const std::lognormal_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:2381:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::lognormal_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:2612:6:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::gamma_distribution<_RealType>&, const std::gamma_distribution<_RealType>&)\u2019\
    \n 2612 |      operator!=(const std::gamma_distribution<_RealType>& __d1,\n  \
    \    |      ^~~~~~~~\n/usr/include/c++/9/bits/random.h:2612:6: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::gamma_distribution<_RealType>\u2019\n \
    \  18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n      |\
    \                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:2836:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::chi_squared_distribution<_RealType>&, const std::chi_squared_distribution<_RealType>&)\u2019\
    \n 2836 |     operator!=(const std::chi_squared_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:2836:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::chi_squared_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:3010:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::cauchy_distribution<_RealType>&, const std::cauchy_distribution<_RealType>&)\u2019\
    \n 3010 |     operator!=(const std::cauchy_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:3010:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::cauchy_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:3274:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::fisher_f_distribution<_RealType>&, const std::fisher_f_distribution<_RealType>&)\u2019\
    \n 3274 |     operator!=(const std::fisher_f_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:3274:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::fisher_f_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:3496:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::student_t_distribution<_RealType>&, const std::student_t_distribution<_RealType>&)\u2019\
    \n 3496 |     operator!=(const std::student_t_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:3496:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::student_t_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:3684:3:\
    \ note: candidate: \u2018bool std::operator!=(const std::bernoulli_distribution&,\
    \ const std::bernoulli_distribution&)\u2019\n 3684 |   operator!=(const std::bernoulli_distribution&\
    \ __d1,\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/random.h:3684:49: note: \
    \  no known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018const std::bernoulli_distribution&\u2019\
    \n 3684 |   operator!=(const std::bernoulli_distribution& __d1,\n      |     \
    \         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~\n/usr/include/c++/9/bits/random.h:3959:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::binomial_distribution<_IntType>&,\
    \ const std::binomial_distribution<_IntType>&)\u2019\n 3959 |     operator!=(const\
    \ std::binomial_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:3959:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::binomial_distribution<_IntType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:4138:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::geometric_distribution<_IntType>&,\
    \ const std::geometric_distribution<_IntType>&)\u2019\n 4138 |     operator!=(const\
    \ std::geometric_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:4138:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::geometric_distribution<_IntType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:4392:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::negative_binomial_distribution<_IntType>&,\
    \ const std::negative_binomial_distribution<_IntType>&)\u2019\n 4392 |     operator!=(const\
    \ std::negative_binomial_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/random.h:4392:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::negative_binomial_distribution<_IntType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:4618:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::poisson_distribution<_IntType>&,\
    \ const std::poisson_distribution<_IntType>&)\u2019\n 4618 |     operator!=(const\
    \ std::poisson_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:4618:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::poisson_distribution<_IntType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:4809:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::exponential_distribution<_RealType>&, const std::exponential_distribution<_RealType>&)\u2019\
    \n 4809 |     operator!=(const std::exponential_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:4809:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::exponential_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:5019:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::weibull_distribution<_RealType>&, const std::weibull_distribution<_RealType>&)\u2019\
    \n 5019 |     operator!=(const std::weibull_distribution<_RealType>& __d1,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:5019:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::weibull_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:5229:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::extreme_value_distribution<_RealType>&, const std::extreme_value_distribution<_RealType>&)\u2019\
    \n 5229 |     operator!=(const std::extreme_value_distribution<_RealType>& __d1,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:5229:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::extreme_value_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:5494:5:\
    \ note: candidate: \u2018template<class _IntType> bool std::operator!=(const std::discrete_distribution<_IntType>&,\
    \ const std::discrete_distribution<_IntType>&)\u2019\n 5494 |     operator!=(const\
    \ std::discrete_distribution<_IntType>& __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:5494:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::discrete_distribution<_IntType>\u2019\n\
    \   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n     \
    \ |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:5765:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::piecewise_constant_distribution<_RealType>&, const std::piecewise_constant_distribution<_RealType>&)\u2019\
    \n 5765 |     operator!=(const std::piecewise_constant_distribution<_RealType>&\
    \ __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:5765:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::piecewise_constant_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/random:49,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/random.h:6038:5:\
    \ note: candidate: \u2018template<class _RealType> bool std::operator!=(const\
    \ std::piecewise_linear_distribution<_RealType>&, const std::piecewise_linear_distribution<_RealType>&)\u2019\
    \n 6038 |     operator!=(const std::piecewise_linear_distribution<_RealType>&\
    \ __d1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/random.h:6038:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::piecewise_linear_distribution<_RealType>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n              \
    \   from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/scoped_allocator:498:5: note:\
    \ candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA> bool std::operator!=(const\
    \ std::scoped_allocator_adaptor<_OutA1, _InA ...>&, const std::scoped_allocator_adaptor<_InnerHead,\
    \ _InnerTail ...>&)\u2019\n  498 |     operator!=(const scoped_allocator_adaptor<_OutA1,\
    \ _InA...>& __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:498:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/unordered_map:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2099:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator!=(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2099 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2099:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/unordered_map:47,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2111:5: note:\
    \ candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator!=(const std::unordered_multimap<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2111 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2111:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/unordered_set:47,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1711:5: note:\
    \ candidate: \u2018template<class _Value, class _Hash, class _Pred, class _Alloc>\
    \ bool std::operator!=(const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&,\
    \ const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1711 |    \
    \ operator!=(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1711:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/unordered_set:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1723:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator!=(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1723 |     operator!=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1723:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 !=\
    \ ')') {\n      |                                                        ^~~\n\
    In file included from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/allocator.h:159:7: note: candidate:\
    \ \u2018bool std::operator!=(const std::allocator<char>&, const std::allocator<char>&)\u2019\
    \n  159 |       operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:159:18: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::allocator<char>&\u2019\n  159 |       operator!=(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:897:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  897 |\
    \     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:897:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:904:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator!=(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  904 |     operator!=(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:904:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   18 |         } else if (paren_char == '(' && paren_char2 != ')') {\n    \
    \  |                                                        ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n         \
    \        from /usr/include/c++/9/bits/allocator.h:46,\n                 from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5vgjg5sv.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:172:2:\
    \ note: candidate: \u2018template<class _Up> bool __gnu_cxx::operator!=(const\
    \ __gnu_cxx::new_allocator<char>&, const __gnu_cxx::new_allocator<_Tp>&)\u2019\
    \n  172 |  operator!=(const new_allocator&, const new_allocator<_Up>&)\n     \
    \ |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:172:2: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5vgjg5sv.cpp:18:56: note: \
    \  mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == '(' && paren_char2 != ')')\
    \ {\n      |                                                        ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    long paren_level = 0;\n\
    \    long paren_level_max = 0;\n    long paren_level_cur = 0;\n    long paren_level_cur_index\
    \ = 0;\n    long paren_level_cur_max = 0;\n    long paren_level_cur_cur = 0;\n\
    \    long paren_level_cur_cur_index = 0;\n    long paren_level_cur_cur_max = 0;\n\
    \    long paren_level_cur_cur_cur = 0;\n    long paren_level_cur_cur_cur_index\
    \ = 0;\n    long paren_level_cur_cur_cur_max = 0;\n    long paren_level_cur_cur_cur_cur\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_index = 0;\n    long paren_level_cur_cur_cur_cur_max\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur = 0;\n    long paren_level_cur_cur_cur_cur_cur_index\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_max = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_index = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_index\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_index = 0;\n    long\
    \ paren_level_cur_cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_index = 0;\n\
    \    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index = 0;\n\
    \    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long\
    \ paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index\
    \ = 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_max =\
    \ 0;\n    long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \    long paren_level_cur_cur_cur_cur_\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp00u179uh.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp00u179uh.cpp:45:10: error: redeclaration of \u2018long int paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index\u2019\
    \n   45 |     long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp00u179uh.cpp:42:10: note: \u2018long int paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index\u2019\
    \ previously declared here\n   42 |     long paren_level_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp00u179uh.cpp:49:1: error: expected initializer before \u2018}\u2019 token\n\
    \   49 | }\n      | ^\n/tmp/tmp00u179uh.cpp:49:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = curr_level + c;\n        } else if (c ==\
    \ ')') {\n            curr_level = curr_level.substr(0, curr_level.length() -\
    \ 1);\n            long level_of_nesting = curr_level.length();\n            levels.push_back(level_of_nesting);\n\
    \            curr_level = \"\";\n        } else {\n            curr_level = curr_level\
    \ + c;\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp8je2s72u: /tmp/tmp8je2s72u.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        paren_char = paren_string[i];\n       \
    \ if (paren_char == '(') {\n            level++;\n        } else if (paren_char\
    \ == ')') {\n            level--;\n        }\n        levels.push_back(level);\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp_yy2z2f_.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp_yy2z2f_.cpp:14:24: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   14 |         if (paren_char == '(') {\n      |   \
    \          ~~~~~~~~~~ ^~ ~~~\n      |             |             |\n      |   \
    \          |             char\n      |             std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const typename\
    \ std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n                 from\
    \ /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   14 |         if (paren_char ==\
    \ '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   14 |      \
    \   if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/ios_base.h:46,\n               \
    \  from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n              \
    \   from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5: note: candidate:\
    \ \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   14 |     \
    \    if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   14 |         if (paren_char == '(') {\n      |              \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:54,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   14 |         if (paren_char == '(') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n    \
    \             from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   14 |         if (paren_char == '(') {\n      |            \
    \               ^~~\nIn file included from /usr/include/c++/9/list:63,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n    \
    \             from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n      \
    \           from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   14 |\
    \         if (paren_char == '(') {\n      |                           ^~~\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   14 | \
    \        if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from\
    \ /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n      \
    \           from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/memory:81,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5: note: candidate:\
    \ \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   14 |        \
    \ if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   14 |    \
    \     if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/set:61,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n      \
    \           from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n         \
    \        from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/future:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n        \
    \         from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n        \
    \         from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/string:41,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:14:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |        \
    \                   ^~~\n/tmp/tmp_yy2z2f_.cpp:16:31: error: no match for \u2018\
    operator==\u2019 (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   16 |         } else if (paren_char == ')') {\n   \
    \   |                    ~~~~~~~~~~ ^~ ~~~\n      |                    |     \
    \        |\n      |                    |             char\n      |           \
    \         std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n   \
    \              from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> constexpr bool std::operator==(const\
    \ std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const\
    \ pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/string:41,\n         \
    \        from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   16 |      \
    \   } else if (paren_char == ')') {\n      |                                 \
    \ ^~~\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   16 |         } else if\
    \ (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 16 |         } else if (paren_char == ')') {\n      |                      \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/deque:67,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n   \
    \              from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   16 |     \
    \    } else if (paren_char == ')') {\n      |                                \
    \  ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n                 from\
    \ /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   16 |         } else if (paren_char == ')') {\n      |       \
    \                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   16 |         } else if (paren_char == ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  16 |         } else if (paren_char == ')') {\n      |                     \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:59,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   16 |         } else if (paren_char == ')') {\n      |     \
    \                             ^~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/map:61,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n           \
    \      from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/map:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n      \
    \           from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   16 |\
    \         } else if (paren_char == ')') {\n      |                           \
    \       ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   16 | \
    \        } else if (paren_char == ')') {\n      |                            \
    \      ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n \
    \                from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/memory:81,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n  \
    \               from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   16 |        \
    \ } else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/vector:67,\n   \
    \              from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   16 |    \
    \     } else if (paren_char == ')') {\n      |                               \
    \   ^~~\nIn file included from /usr/include/c++/9/queue:64,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n               \
    \  from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/set:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n           \
    \      from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/stack:61,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n    \
    \             from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_yy2z2f_.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_yy2z2f_.cpp:16:34:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n      | \
    \                                 ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   paren_levels.push_back(level);\n      level++;\n    } else if (c == ')') {\n\
    \      level--;\n    }\n  }\n  assert(level == 0);\n  paren_levels.push_back(level);\n\
    \  return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp7yj1bljw: /tmp/tmp7yj1bljw.cpp:25: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter_max = 0;\n    long paren_level_counter_max_index\
    \ = 0;\n    long paren_level_counter_max_index2 = 0;\n    long paren_level_counter_max_index3\
    \ = 0;\n    long paren_level_counter_max_index4 = 0;\n    long paren_level_counter_max_index5\
    \ = 0;\n    long paren_level_counter_max_index6 = 0;\n    long paren_level_counter_max_index7\
    \ = 0;\n    long paren_level_counter_max_index8 = 0;\n    long paren_level_counter_max_index9\
    \ = 0;\n    long paren_level_counter_max_index10 = 0;\n    long paren_level_counter_max_index11\
    \ = 0;\n    long paren_level_counter_max_index12 = 0;\n    long paren_level_counter_max_index13\
    \ = 0;\n    long paren_level_counter_max_index14 = 0;\n    long paren_level_counter_max_index15\
    \ = 0;\n    long paren_level_counter_max_index16 = 0;\n    long paren_level_counter_max_index17\
    \ = 0;\n    long paren_level_counter_max_index18 = 0;\n    long paren_level_counter_max_index19\
    \ = 0;\n    long paren_level_counter_max_index20 = 0;\n    long paren_level_counter_max_index21\
    \ = 0;\n    long paren_level_counter_max_index22 = 0;\n    long paren_level_counter_max_index23\
    \ = 0;\n    long paren_level_counter_max_index24 = 0;\n    long paren_level_counter_max_index25\
    \ = 0;\n    long paren_level_counter_max_index26 = 0;\n    long paren_level_counter_max_index27\
    \ = 0;\n    long paren_level_counter_max_index28 = 0;\n    long paren_level_counter_max_index29\
    \ = 0;\n    long paren_level_counter_max_index30 = 0;\n    long paren_level_counter_max_index31\
    \ = 0;\n    long paren_level_counter_max_index32 = 0;\n    long paren_level_counter_max_index33\
    \ = 0;\n    long paren_level_counter_max_index34 = 0;\n    long paren_level_counter_max_index35\
    \ = 0;\n    long paren_level_counter_max_index36 = 0;\n    long paren_level_counter_max_index37\
    \ = 0;\n    long paren_level_counter_max_index38 = 0;\n    long paren_level_counter_max_index39\
    \ = 0;\n    long paren_level_counter_max_index40 = 0;\n    long paren_level_counter_max_index41\
    \ = 0;\n    long paren_level_counter_max_index42 = 0;\n    long paren_level_counter_max_index43\
    \ = 0;\n    long paren_level_counter_\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp09nh8u7k.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp09nh8u7k.cpp:58:1: error: expected initializer before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmp09nh8u7k.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpbe6fom7j: /tmp/tmpbe6fom7j.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long curr_level_size = 0;\n    for (size_t i\
    \ = 0; i < paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n\
    \            curr_level_size = levels.size();\n            curr_level = paren_string.substr(0,\
    \ i);\n            levels.push_back(curr_level_size);\n        } else if (paren_string[i]\
    \ == ')') {\n            long level_size = levels[curr_level_size];\n        \
    \    long level_index = curr_level_size;\n            while (level_index < levels.size()\
    \ && levels[level_index] == level_size) {\n                level_index++;\n  \
    \          }\n            levels.erase(levels.begin() + level_index);\n      \
    \      curr_level_size = levels.size();\n            curr_level = paren_string.substr(0,\
    \ i);\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_index2 = 0;\n    long paren_level_max_index3 =\
    \ 0;\n    long paren_level_max_index4 = 0;\n    long paren_level_max_index5 =\
    \ 0;\n    long paren_level_max_index6 = 0;\n    long paren_level_max_index7 =\
    \ 0;\n    long paren_level_max_index8 = 0;\n    long paren_level_max_index9 =\
    \ 0;\n    long paren_level_max_index10 = 0;\n    long paren_level_max_index11\
    \ = 0;\n    long paren_level_max_index12 = 0;\n    long paren_level_max_index13\
    \ = 0;\n    long paren_level_max_index14 = 0;\n    long paren_level_max_index15\
    \ = 0;\n    long paren_level_max_index16 = 0;\n    long paren_level_max_index17\
    \ = 0;\n    long paren_level_max_index18 = 0;\n    long paren_level_max_index19\
    \ = 0;\n    long paren_level_max_index20 = 0;\n    long paren_level_max_index21\
    \ = 0;\n    long paren_level_max_index22 = 0;\n    long paren_level_max_index23\
    \ = 0;\n    long paren_level_max_index24 = 0;\n    long paren_level_max_index25\
    \ = 0;\n    long paren_level_max_index26 = 0;\n    long paren_level_max_index27\
    \ = 0;\n    long paren_level_max_index28 = 0;\n    long paren_level_max_index29\
    \ = 0;\n    long paren_level_max_index30 = 0;\n    long paren_level_max_index31\
    \ = 0;\n    long paren_level_max_index32 = 0;\n    long paren_level_max_index33\
    \ = 0;\n    long paren_level_max_index34 = 0;\n    long paren_level_max_index35\
    \ = 0;\n    long paren_level_max_index36 = 0;\n    long paren_level_max_index37\
    \ = 0;\n    long paren_level_max_index38 = 0;\n    long paren_level_max_index39\
    \ = 0;\n    long paren_level_max_index40 = 0;\n    long paren_level_max_index41\
    \ = 0;\n    long paren_level_max_index42 = 0;\n    long paren_level_max_index43\
    \ = 0;\n    long paren_level_max_index44 = 0;\n    long paren_level_max_index45\
    \ = 0;\n    long paren_level_max_index46 = 0;\n    long paren_level_max_index47\
    \ = 0;\n    long paren_level_max_index\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7lko4bvf.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp7lko4bvf.cpp:62:1: error: expected initializer before \u2018}\u2019\
    \ token\n   62 | }\n      | ^\n/tmp/tmp7lko4bvf.cpp:62:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels[0] = 1;\n  paren_levels[1] = 1;\n  for (size_t i = 2; i < paren_string.size();\
    \ ++i) {\n    if (paren_string[i] == '(') {\n      paren_levels[i] += 1;\n   \
    \ } else if (paren_string[i] == ')') {\n      paren_levels[i] -= 1;\n    }\n \
    \ }\n  return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    bool is_open = false;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            is_open = true;\n        } else if (c\
    \ == ')') {\n            is_open = false;\n        } else if (is_open) {\n   \
    \         paren_level++;\n        } else {\n            paren_level--;\n     \
    \   }\n        paren_levels.push_back(paren_level);\n    }\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmplew12xva: /tmp/tmplew12xva.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long paren_level = 0;\n \
    \   for (auto &c : paren_string) {\n        if (c == '(') {\n            paren_levels.push_back(paren_level);\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level--;\n\
    \        }\n    }\n    paren_levels.push_back(paren_level);\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmptzt0vmns: /tmp/tmptzt0vmns.cpp:25: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long max_level = 0;\n    long level = 0;\n    bool is_open = false;\n   \
    \ bool is_closed = false;\n    bool is_opening_paren = false;\n    bool is_closing_paren\
    \ = false;\n    for (auto c : paren_string) {\n        if (c == '(') {\n     \
    \       is_opening_paren = true;\n            level++;\n        } else if (c ==\
    \ ')') {\n            is_closing_paren = true;\n            level--;\n       \
    \ } else if (c == ' ') {\n            if (is_opening_paren) {\n              \
    \  is_opening_paren = false;\n                is_closed = true;\n            }\
    \ else if (is_closed) {\n                result.push_back(level);\n          \
    \      is_opening_paren = false;\n                is_closed = false;\n       \
    \     }\n        } else if (is_opening_paren) {\n            is_opening_paren\
    \ = false;\n            is_closed = false;\n        }\n    }\n    if (is_opening_paren)\
    \ {\n        result.push_back(level);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp25mcoe71: /tmp/tmp25mcoe71.cpp:44: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ level) {\n            paren_levels.push(paren_level);\n        }\n        level++;\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpz3f44j6x.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpz3f44j6x.cpp:19:26: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018push\u2019\n   19 |             paren_levels.push(paren_level);\n\
    \      |                          ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    bool is_open = false;\n    long paren_level_count\
    \ = 0;\n    for (auto c : paren_string) {\n        if (c == '(') {\n         \
    \   is_open = true;\n            paren_level_count++;\n        } else if (c ==\
    \ ')') {\n            is_open = false;\n            paren_level_count--;\n   \
    \     }\n        if (is_open) {\n            paren_level++;\n        }\n     \
    \   if (paren_level_count == 0) {\n            paren_level_count = paren_level;\n\
    \        }\n        paren_levels.push_back(paren_level);\n    }\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmppcworiej: /tmp/tmppcworiej.cpp:33: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long level = 0;\n  long paren_level = 0;\n  for (auto c : paren_string) {\n\
    \    if (c == '(') {\n      paren_level++;\n    } else if (c == ')') {\n     \
    \ paren_level--;\n    }\n    if (paren_level == level) {\n      result.push_back(level);\n\
    \    }\n    level++;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpex6i7due: /tmp/tmpex6i7due.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_count\
    \ = 0;\n    long paren_level_count_max = 0;\n    long paren_level_count_min =\
    \ 0;\n    long paren_level_count_sum = 0;\n    long paren_level_count_sum_max\
    \ = 0;\n    long paren_level_count_sum_min = 0;\n    long paren_level_count_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_max = 0;\n    long paren_level_count_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_max = 0;\n    long paren_level_count_sum_sum_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_max = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_max = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n\
    \    long paren_level_count_sum_\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpdmai_707.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpdmai_707.cpp:41:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \n   41 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdmai_707.cpp:38:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \ previously declared here\n   38 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdmai_707.cpp:42:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \n   42 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdmai_707.cpp:39:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \ previously declared here\n   39 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdmai_707.cpp:43:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \n   43 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdmai_707.cpp:40:10: note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \ previously declared here\n   40 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdmai_707.cpp:44:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \n   44 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdmai_707.cpp:38:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \ previously declared here\n   38 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdmai_707.cpp:48:1: error: expected initializer before \u2018}\u2019 token\n\
    \   48 | }\n      | ^\n/tmp/tmpdmai_707.cpp:48:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk7p13zzp.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpk7p13zzp.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpk7p13zzp.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk7p13zzp.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmpk7p13zzp.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    long level_count = 0;\n    bool is_open = false;\n \
    \   bool is_closed = false;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            is_open = true;\n            level_count++;\n       \
    \ } else if (c == ')') {\n            is_closed = true;\n            level_count--;\n\
    \        } else if (c == ' ') {\n            if (is_open && is_closed) {\n   \
    \             levels[level_count] = level;\n                is_open = false;\n\
    \                is_closed = false;\n                level_count = 0;\n      \
    \          level++;\n            }\n        } else {\n            is_open = false;\n\
    \            is_closed = false;\n        }\n    }\n    if (is_open || is_closed)\
    \ {\n        levels[level_count] = level;\n    }\n    return levels;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long current_paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp1n_7jd7g: /tmp/tmp1n_7jd7g.cpp:70: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        result.push_back(level);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp1gtkdgii: /tmp/tmp1gtkdgii.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long max_level = 0;\n    long current_paren_level\
    \ = 0;\n    long paren_level = 0;\n    long paren_level_counter = 0;\n    long\
    \ paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n    long paren_level_counter4\
    \ = 0;\n    long paren_level_counter5 = 0;\n    long paren_level_counter6 = 0;\n\
    \    long paren_level_counter7 = 0;\n    long paren_level_counter8 = 0;\n    long\
    \ paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n    long paren_level_counter11\
    \ = 0;\n    long paren_level_counter12 = 0;\n    long paren_level_counter13 =\
    \ 0;\n    long paren_level_counter14 = 0;\n    long paren_level_counter15 = 0;\n\
    \    long paren_level_counter16 = 0;\n    long paren_level_counter17 = 0;\n  \
    \  long paren_level_counter18 = 0;\n    long paren_level_counter19 = 0;\n    long\
    \ paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n    long paren_level_counter22\
    \ = 0;\n    long paren_level_counter23 = 0;\n    long paren_level_counter24 =\
    \ 0;\n    long paren_level_counter25 = 0;\n    long paren_level_counter26 = 0;\n\
    \    long paren_level_counter27 = 0;\n    long paren_level_counter28 = 0;\n  \
    \  long paren_level_counter29 = 0;\n    long paren_level_counter30 = 0;\n    long\
    \ paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n    long paren_level_counter33\
    \ = 0;\n    long paren_level_counter34 = 0;\n    long paren_level_counter35 =\
    \ 0;\n    long paren_level_counter36 = 0;\n    long paren_level_counter37 = 0;\n\
    \    long paren_level_counter38 = 0;\n    long paren_level_counter39 = 0;\n  \
    \  long paren_level_counter40 = 0;\n    long paren_level_counter41 = 0;\n    long\
    \ paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n    long paren_level_counter44\
    \ = 0;\n    long paren_level_counter45 = 0;\n    long paren_level_counter46 =\
    \ 0;\n    long paren_level_counter47 = 0;\n    long paren_level_counter48 = 0;\n\
    \    long paren_level_counter49 = 0;\n    long paren_level_counter50 = 0;\n  \
    \  long paren_level_counter51 = 0;\n    long paren_level_counter52 = 0;\n    long\
    \ paren_level_counter53 = 0;\n    long paren_\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzzjqtym0.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpzzjqtym0.cpp:68:1: error: expected initializer before \u2018}\u2019\
    \ token\n   68 | }\n      | ^\n/tmp/tmpzzjqtym0.cpp:68:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpf2tnedg3: /tmp/tmpf2tnedg3.cpp:71: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_level++;\n        } else if (c == ')') {\n       \
    \     paren_level--;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp9pa9zyon: /tmp/tmp9pa9zyon.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    for (auto\
    \ c : paren_string) {\n        if (c == '(') {\n            current_level += c;\n\
    \            current_level_size += 1;\n        } else if (c == ')') {\n      \
    \      current_level_size = std::min(current_level_size, levels.size());\n   \
    \         levels.push_back(current_level_size);\n            current_level.clear();\n\
    \        } else {\n            current_level += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfwrdyymu.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpfwrdyymu.cpp:17:76: error: no matching function for call to \u2018\
    min(long int&, std::vector<long int>::size_type)\u2019\n   17 |             current_level_size\
    \ = std::min(current_level_size, levels.size());\n      |                    \
    \                                                        ^\nIn file included from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfwrdyymu.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfwrdyymu.cpp:17:76: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    })\n   17 |             current_level_size = std::min(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n \
    \                from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfwrdyymu.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5: note:\
    \ candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp& __a, const _Tp&\
    \ __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfwrdyymu.cpp:17:76:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019})\n   17 |             current_level_size = std::min(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfwrdyymu.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::min(std::initializer_list<_Tp>)\u2019\
    \n 3450 |     min(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfwrdyymu.cpp:17:76:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   17 |             current_level_size = std::min(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfwrdyymu.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::min(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3456 |     min(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfwrdyymu.cpp:17:76: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   17 |             current_level_size = std::min(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels = paren_string.substr(0, paren_string.find('(')).split(' ').size();\n\
    \  std::vector<long> paren_levels_temp;\n  paren_levels_temp.reserve(paren_levels);\n\
    \  for (long i = 0; i < paren_levels; i++) {\n    paren_levels_temp.push_back(0);\n\
    \  }\n  long paren_levels_index = 0;\n  long paren_levels_index_temp = 0;\n  long\
    \ paren_levels_index_temp2 = 0;\n  long paren_levels_index_temp3 = 0;\n  long\
    \ paren_levels_index_temp4 = 0;\n  long paren_levels_index_temp5 = 0;\n  long\
    \ paren_levels_index_temp6 = 0;\n  long paren_levels_index_temp7 = 0;\n  long\
    \ paren_levels_index_temp8 = 0;\n  long paren_levels_index_temp9 = 0;\n  long\
    \ paren_levels_index_temp10 = 0;\n  long paren_levels_index_temp11 = 0;\n  long\
    \ paren_levels_index_temp12 = 0;\n  long paren_levels_index_temp13 = 0;\n  long\
    \ paren_levels_index_temp14 = 0;\n  long paren_levels_index_temp15 = 0;\n  long\
    \ paren_levels_index_temp16 = 0;\n  long paren_levels_index_temp17 = 0;\n  long\
    \ paren_levels_index_temp18 = 0;\n  long paren_levels_index_temp19 = 0;\n  long\
    \ paren_levels_index_temp20 = 0;\n  long paren_levels_index_temp21 = 0;\n  long\
    \ paren_levels_index_temp22 = 0;\n  long paren_levels_index_temp23 = 0;\n  long\
    \ paren_levels_index_temp24 = 0;\n  long paren_levels_index_temp25 = 0;\n  long\
    \ paren_levels_index_temp26 = 0;\n  long paren_levels_index_temp27 = 0;\n  long\
    \ paren_levels_index_temp28 = 0;\n  long paren_levels_index_temp29 = 0;\n  long\
    \ paren_levels_index_temp30 = 0;\n  long paren_levels_index_temp31 = 0;\n  long\
    \ paren_levels_index_temp32 = 0;\n  long paren_levels_index_temp33 = 0;\n  long\
    \ paren_levels_index_temp34 = 0;\n  long paren_levels_index_temp35 = 0;\n  long\
    \ paren_levels_index_temp36 = 0;\n  long paren_levels_index_temp37 = 0;\n  long\
    \ paren_levels_index_temp38 = 0;\n  long paren_levels_index_temp39 = 0;\n  long\
    \ paren_level\n}\nint main() {\n    auto candidate = parse_nested_parens;\n  \
    \  assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpz9qbg5h9.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpz9qbg5h9.cpp:10:65: error: \u2018class std::__cxx11::basic_string<char>\u2019\
    \ has no member named \u2018split\u2019\n   10 |   paren_levels = paren_string.substr(0,\
    \ paren_string.find('(')).split(' ').size();\n      |                        \
    \                                         ^~~~~\n/tmp/tmpz9qbg5h9.cpp:12:29: error:\
    \ cannot convert \u2018std::vector<long int>\u2019 to \u2018std::vector<long int>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n   12 |   paren_levels_temp.reserve(paren_levels);\n\
    \      |                             ^~~~~~~~~~~~\n      |                   \
    \          |\n      |                             std::vector<long int>\nIn file\
    \ included from /usr/include/c++/9/vector:72,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:67:23:\
    \ note:   initializing argument 1 of \u2018void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp,\
    \ _Alloc>::size_type) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\n   67 |    \
    \ reserve(size_type __n)\n      |             ~~~~~~~~~~^~~\n/tmp/tmpz9qbg5h9.cpp:13:22:\
    \ error: no match for \u2018operator<\u2019 (operand types are \u2018long int\u2019\
    \ and \u2018std::vector<long int>\u2019)\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                    ~ ^ ~~~~~~~~~~~~\n      |               \
    \     |   |\n      |                    |   std::vector<long int>\n      |   \
    \                 long int\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124 |     operator<(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1124:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018long int\u2019\n   13 |   for (long i\
    \ = 0; i < paren_levels; i++) {\n      |                        ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1272 |     operator<(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1272:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::pair<_T1, _T2>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched\
    \ types \u2018const std::reverse_iterator<_Iterator>\u2019 and \u2018long int\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n\
    \      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const\
    \ basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ _CharT*)\u2019\n 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6254:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018const std::error_code&\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |             ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:282:3:\
    \ note: candidate: \u2018bool std::operator<(const std::error_condition&, const\
    \ std::error_condition&)\u2019\n  282 |   operator<(const error_condition& __lhs,\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::deque<_Tp, _Alloc>\u2019 and \u2018\
    long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      | \
    \                       ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/array:262:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator<(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const array<_Tp,\
    \ _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::array<_Tp, _Nm>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::tuple<_Tps\
    \ ...>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note: \
    \  mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      | \
    \                       ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |   \
    \                     ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019 and\
    \ \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n\
    \      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key,\
    \ _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019 and\
    \ \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n\
    \      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      | \
    \                       ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp,\
    \ _Lp>\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |   \
    \                     ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::queue<_Tp,\
    \ _Seq>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::set<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:331:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::stack<_Tp,\
    \ _Seq>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   13 |   for (long\
    \ i = 0; i < paren_levels; i++) {\n      |                        ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   13 |   for (long\
    \ i = 0; i < paren_levels; i++) {\n      |                        ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   13 |   for (long\
    \ i = 0; i < paren_levels; i++) {\n      |                        ^~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |    \
    \                    ^~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   13 |   for (long i = 0; i < paren_levels; i++) {\n      |               \
    \         ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/forward_list:38,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note:   mismatched types \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018long int\u2019 to \u2018std::thread::id\u2019\n  290 |   operator<(thread::id\
    \ __x, thread::id __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels; i++)\
    \ {\n      |                        ^~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpz9qbg5h9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz9qbg5h9.cpp:13:24:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018long int\u2019\n   13 |   for (long i = 0; i < paren_levels;\
    \ i++) {\n      |                        ^~~~~~~~~~~~\n/tmp/tmpz9qbg5h9.cpp:57:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   57 | }\n      | ^\n\
    /tmp/tmpz9qbg5h9.cpp:57:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     paren_level = paren_string.substr(0, i);\n            level++;\n       \
    \ } else if (paren_string[i] == ')') {\n            level--;\n            if (level\
    \ == 0) {\n                levels.push_back(level);\n            }\n        }\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpx96s5a8h: /tmp/tmpx96s5a8h.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    std::string paren_char;\n\
    \    std::string paren_string_reversed;\n    std::string paren_string_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed;\n    std::string paren_string_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4wj70vsu.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp4wj70vsu.cpp:27:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   27 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:26:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   26 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:29:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   29 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:28:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   28 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:30:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   30 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:28:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   28 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4wj70vsu.cpp:32:1: error: expected initializer before \u2018}\u2019 token\n\
    \   32 | }\n      | ^\n/tmp/tmp4wj70vsu.cpp:32:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   level++;\n    } else if (c == ')') {\n      level--;\n    }\n    result.push_back(level);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpow2nran8: /tmp/tmpow2nran8.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  long level = 0;\n  long paren_level = 0;\n  long paren_level_counter = 0;\n\
    \  for (size_t i = 0; i < paren_string.size(); i++) {\n    if (paren_string[i]\
    \ == '(') {\n      paren_level++;\n      paren_level_counter++;\n    } else if\
    \ (paren_string[i] == ')') {\n      paren_level--;\n      paren_level_counter--;\n\
    \      if (paren_level == 0 && paren_level_counter == 0) {\n        paren_levels[paren_levels.size()\
    \ - 1] = level;\n      }\n    }\n    level++;\n  }\n  return paren_levels;\n}\n\
    int main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_prev = 0;\n\
    \    long paren_level_next = 0;\n    long paren_level_next_prev = 0;\n    long\
    \ paren_level_next_next_prev = 0;\n    long paren_level_next_next_next_prev =\
    \ 0;\n    long paren_level_next_next_next_next_prev = 0;\n    long paren_level_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_prev = 0;\n    long\
    \ paren_level_next_next_next_next_next_next_next_prev = 0;\n    long paren_level_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv3hkuy1g.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpv3hkuy1g.cpp:24:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   24 |     long paren_level_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:23:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   23 |     long paren_level_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:27:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   27 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:26:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   26 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:29:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   29 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:28:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   28 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:30:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   30 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:28:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   28 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:32:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   32 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:31:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   31 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:34:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   34 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:33:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   33 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:35:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   35 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:33:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   33 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:36:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   36 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:33:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   33 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:37:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   37 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:33:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   33 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:38:10: error: redeclaration of \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \n   38 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:33:10: note: \u2018long int paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\u2019\
    \ previously declared here\n   33 |     long paren_level_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv3hkuy1g.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpv3hkuy1g.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmprq_lm4qa: /tmp/tmprq_lm4qa.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    std::string paren_level_string;\n    std::string\
    \ paren_level_char;\n    for (size_t i = 0; i < paren_string.size(); i++) {\n\
    \        paren_level_char = paren_string[i];\n        paren_level_string = paren_string.substr(0,\
    \ i);\n        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_not_of(paren_level_char));\n\
    \        paren_level_string = paren_level_string.substr(0, paren_level_string.find_first_of(paren_level_char));\n\
    \        paren_level_string = paren_level\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjaaa9y08.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpjaaa9y08.cpp:32:41: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   32 |         paren_level_string = paren_level\n      |           \
    \                              ^\n      |                                    \
    \     ;\n   33 | }\n      | ~                                        \n/tmp/tmpjaaa9y08.cpp:34:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   34 | int main() {\n      |            ^\n/tmp/tmpjaaa9y08.cpp:39:1: error:\
    \ expected \u2018}\u2019 at end of input\n   39 | }\n      | ^\n/tmp/tmpjaaa9y08.cpp:8:65:\
    \ note: to match this \u2018{\u2019\n    8 | std::vector<long> parse_nested_parens(std::string\
    \ paren_string) {\n      |                                                   \
    \              ^\n/tmp/tmpjaaa9y08.cpp:39:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   39 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    long levels_size\
    \ = 0;\n    for (auto c : paren_string) {\n        if (c == '(') {\n         \
    \   current_level += c;\n            current_level_size += 1;\n        } else\
    \ if (c == ')') {\n            current_level_size = std::min(current_level_size,\
    \ levels_size);\n            levels.push_back(current_level_size);\n         \
    \   current_level.clear();\n            levels_size -= 1;\n        } else {\n\
    \            current_level += c;\n        }\n    }\n    levels.push_back(levels_size);\n\
    \    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp90tppl9b: /tmp/tmp90tppl9b.cpp:31: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4nw9clf.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpr4nw9clf.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr4nw9clf.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4nw9clf.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmpr4nw9clf.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    long level_count = 0;\n    long level_count_prev = 0;\n\
    \    long level_count_next = 0;\n    long level_count_next2 = 0;\n    long level_count_next3\
    \ = 0;\n    long level_count_next4 = 0;\n    long level_count_next5 = 0;\n   \
    \ long level_count_next6 = 0;\n    long level_count_next7 = 0;\n    long level_count_next8\
    \ = 0;\n    long level_count_next9 = 0;\n    long level_count_next10 = 0;\n  \
    \  long level_count_next11 = 0;\n    long level_count_next12 = 0;\n    long level_count_next13\
    \ = 0;\n    long level_count_next14 = 0;\n    long level_count_next15 = 0;\n \
    \   long level_count_next16 = 0;\n    long level_count_next17 = 0;\n    long level_count_next18\
    \ = 0;\n    long level_count_next19 = 0;\n    long level_count_next20 = 0;\n \
    \   long level_count_next21 = 0;\n    long level_count_next22 = 0;\n    long level_count_next23\
    \ = 0;\n    long level_count_next24 = 0;\n    long level_count_next25 = 0;\n \
    \   long level_count_next26 = 0;\n    long level_count_next27 = 0;\n    long level_count_next28\
    \ = 0;\n    long level_count_next29 = 0;\n    long level_count_next30 = 0;\n \
    \   long level_count_next31 = 0;\n    long level_count_next32 = 0;\n    long level_count_next33\
    \ = 0;\n    long level_count_next34 = 0;\n    long level_count_next35 = 0;\n \
    \   long level_count_next36 = 0;\n    long level_count_next37 = 0;\n    long level_count_next38\
    \ = 0;\n    long level_count_next39 = 0;\n    long level_count_next40 = 0;\n \
    \   long level_count_next41 = 0;\n    long level_count_next42 = 0;\n    long level_count_next43\
    \ = 0;\n    long level_count_next44 = 0;\n    long level_count_next45 = 0;\n \
    \   long level_count_next46 = 0;\n    long level_count_next47 = 0;\n    long level_count_next48\
    \ = 0;\n    long level_count_next49 = 0;\n    long level_count_next50 = 0;\n \
    \   long level_count_next51 = 0;\n    long level_count_next52 = 0;\n    long level_count_next53\
    \ = 0;\n    long level_count_next54 = 0;\n    long level_count_next55 = 0;\n \
    \   long level_count_next56 = 0;\n    long level_count_next57 = 0;\n    long level_count_next58\
    \ = 0;\n    long level_count_next59 = 0;\n    long level_count_next60 = 0;\n \
    \   long level_count_next61 = 0;\n    long level_count_next\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn3e34kap.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpn3e34kap.cpp:75:1: error: expected initializer before \u2018}\u2019\
    \ token\n   75 | }\n      | ^\n/tmp/tmpn3e34kap.cpp:75:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_index2 = 0;\n    long paren_level_max_index3 =\
    \ 0;\n    long paren_level_max_index4 = 0;\n    long paren_level_max_index5 =\
    \ 0;\n    long paren_level_max_index6 = 0;\n    long paren_level_max_index7 =\
    \ 0;\n    long paren_level_max_index8 = 0;\n    long paren_level_max_index9 =\
    \ 0;\n    long paren_level_max_index10 = 0;\n    long paren_level_max_index11\
    \ = 0;\n    long paren_level_max_index12 = 0;\n    long paren_level_max_index13\
    \ = 0;\n    long paren_level_max_index14 = 0;\n    long paren_level_max_index15\
    \ = 0;\n    long paren_level_max_index16 = 0;\n    long paren_level_max_index17\
    \ = 0;\n    long paren_level_max_index18 = 0;\n    long paren_level_max_index19\
    \ = 0;\n    long paren_level_max_index20 = 0;\n    long paren_level_max_index21\
    \ = 0;\n    long paren_level_max_index22 = 0;\n    long paren_level_max_index23\
    \ = 0;\n    long paren_level_max_index24 = 0;\n    long paren_level_max_index25\
    \ = 0;\n    long paren_level_max_index26 = 0;\n    long paren_level_max_index27\
    \ = 0;\n    long paren_level_max_index28 = 0;\n    long paren_level_max_index29\
    \ = 0;\n    long paren_level_max_index30 = 0;\n    long paren_level_max_index31\
    \ = 0;\n    long paren_level_max_index32 = 0;\n    long paren_level_max_index33\
    \ = 0;\n    long paren_level_max_index34 = 0;\n    long paren_level_max_index35\
    \ = 0;\n    long paren_level_max_index36 = 0;\n    long paren_level_max_index37\
    \ = 0;\n    long paren_level_max_index38 = 0;\n    long paren_level_max_index39\
    \ = 0;\n    long paren_level_max_index40 = 0;\n    long paren_level_max_index41\
    \ = 0;\n    long paren_level_max_index42 = 0;\n    long paren_level_max_index43\
    \ = 0;\n    long paren_level_max_index44 = 0;\n    long paren_level_max_index45\
    \ = 0;\n    long paren_level_max_index46 = 0;\n    long paren_level_max_index47\
    \ = 0;\n    long paren_level_max_index\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb5i3sdkf.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpb5i3sdkf.cpp:62:1: error: expected initializer before \u2018}\u2019\
    \ token\n   62 | }\n      | ^\n/tmp/tmpb5i3sdkf.cpp:62:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpi2ucpmj7: /tmp/tmpi2ucpmj7.cpp:71: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long level = 0;\n  for (char\
    \ c : paren_string) {\n    if (c == '(') {\n      paren_levels.push_back(level);\n\
    \      level++;\n    } else if (c == ')') {\n      level--;\n    }\n  }\n  assert(paren_levels.size()\
    \ == paren_string.size());\n  return paren_levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmppjbjjnam: /tmp/tmppjbjjnam.cpp:20: std::vector<long int> parse_nested_parens(std::string):\
    \ Assertion `paren_levels.size() == paren_string.size()' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    for (auto\
    \ c : paren_string) {\n        if (c == '(') {\n            current_level = current_level\
    \ + c;\n            current_level_size++;\n        } else if (c == ')') {\n  \
    \          current_level = current_level.substr(0, current_level.size() - 1);\n\
    \            current_level_size--;\n        } else {\n            current_level\
    \ = current_level + c;\n        }\n        if (current_level_size > 0) {\n   \
    \         levels.push_back(current_level_size);\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp0yzmbkna: /tmp/tmp0yzmbkna.cpp:30: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    bool is_open = false;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            is_open = true;\n        } else if (c\
    \ == ')') {\n            is_open = false;\n        } else if (is_open) {\n   \
    \         level++;\n        } else {\n            level--;\n        }\n      \
    \  levels.push_back(level);\n    }\n    return levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp9bcmqqfe: /tmp/tmp9bcmqqfe.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp3x1yngw5: /tmp/tmp3x1yngw5.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ level) {\n            paren_level++;\n        }\n        level = paren_level;\n\
    \        paren_levels.push_back(paren_level);\n    }\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpg1q_3jm_: /tmp/tmpg1q_3jm_.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    bool is_open = false;\n\
    \    bool is_closed = false;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            is_open = true;\n            paren_level = c;\n     \
    \   } else if (c == ')') {\n            is_closed = true;\n            levels[level]\
    \ = std::max(levels[level], level);\n            is_open = false;\n        } else\
    \ if (is_open && is_closed) {\n            levels[level] = std::max(levels[level],\
    \ level);\n            level++;\n        }\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    long level_count = 0;\n    long level_count_max = 0;\n\
    \    std::string current_paren_string = paren_string;\n    std::string next_paren_string;\n\
    \    bool is_open = false;\n    bool is_closed = false;\n    while (!current_paren_string.empty())\
    \ {\n        if (current_paren_string[0] == '(') {\n            is_open = true;\n\
    \            next_paren_string = current_paren_string;\n        } else if (current_paren_string[0]\
    \ == ')') {\n            is_closed = true;\n            next_paren_string = current_paren_string;\n\
    \        } else if (is_open) {\n            next_paren_string = current_paren_string;\n\
    \            level_count_max++;\n            level_count = level_count_max;\n\
    \            level++;\n            current_paren_string = next_paren_string;\n\
    \            is_open = false;\n        } else if (is_closed) {\n            level_count--;\n\
    \            current_paren_string = next_paren_string;\n            is_closed\
    \ = false;\n        } else {\n            current_paren_string = next_paren_string;\n\
    \        }\n    }\n    result.push_back(level_count);\n    return result;\n}\n\
    int main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    for (char c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_level++;\n        } else if (c == ')') {\n       \
    \     paren_level--;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpuv_aanep: /tmp/tmpuv_aanep.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (auto &c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level = std::to_string(level);\n\
    \            level++;\n        } else if (c == ')') {\n            level--;\n\
    \            levels[level] = std::stoi(paren_level);\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = curr_level + \"(\";\n        } else if (c\
    \ == ')') {\n            curr_level = curr_level.substr(0, curr_level.length()\
    \ - 1) + \")\";\n        } else if (c == ' ') {\n            curr_level = curr_level\
    \ + \" \";\n        } else {\n            curr_level = curr_level + c;\n     \
    \   }\n        if (curr_level.find(\"(\") == std::string::npos) {\n          \
    \  levels.push_back(std::stoi(curr_level));\n        }\n    }\n    return levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp8so723ky: /tmp/tmp8so723ky.cpp:29: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    bool is_open = false;\n    bool is_closed = false;\n\
    \    long opening_paren_level = 0;\n    long closing_paren_level = 0;\n    for\
    \ (auto c : paren_string) {\n        if (c == '(') {\n            is_open = true;\n\
    \            opening_paren_level = paren_level;\n        } else if (c == ')')\
    \ {\n            is_closed = true;\n            closing_paren_level = paren_level;\n\
    \        } else if (is_open && is_closed) {\n            paren_level++;\n    \
    \    } else if (is_open) {\n            paren_level++;\n        } else if (is_closed)\
    \ {\n            paren_level--;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp775lw23g: /tmp/tmp775lw23g.cpp:35: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcpl7tq8v.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpcpl7tq8v.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpcpl7tq8v.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpcpl7tq8v.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmpcpl7tq8v.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = curr_level + \"(\";\n        } else if (c\
    \ == ')') {\n            curr_level = curr_level.substr(0, curr_level.length()\
    \ - 1) + \")\";\n        } else if (c == ' ') {\n            curr_level = curr_level.substr(0,\
    \ curr_level.length() - 1);\n        } else {\n            curr_level = curr_level\
    \ + c;\n        }\n        if (curr_level.length() == 0) {\n            levels.push_back(levels.size());\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpdyolzdsu: /tmp/tmpdyolzdsu.cpp:29: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   ++level;\n    } else if (c == ')') {\n      --level;\n    }\n    result.push_back(level);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpq3b6o_c2: /tmp/tmpq3b6o_c2.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        result.push_back(level);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmprd7fo8ba: /tmp/tmprd7fo8ba.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long level = 0;\n  for (auto\
    \ c : paren_string) {\n    if (c == '(') {\n      paren_levels.push_back(level);\n\
    \      level++;\n    } else if (c == ')') {\n      level--;\n    }\n  }\n  assert(paren_levels.size()\
    \ == paren_string.size());\n  return paren_levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpchu0gd8z: /tmp/tmpchu0gd8z.cpp:20: std::vector<long int> parse_nested_parens(std::string):\
    \ Assertion `paren_levels.size() == paren_string.size()' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long max_level = 0;\n  long level = 0;\n  long level_count = 0;\n  for (char\
    \ c : paren_string) {\n    if (c == '(') {\n      level++;\n      level_count++;\n\
    \    } else if (c == ')') {\n      level--;\n      level_count--;\n      if (level\
    \ == 0 && level_count == 0) {\n        result.push_back(max_level);\n        max_level\
    \ = 0;\n        level = 0;\n        level_count = 0;\n      }\n    }\n    max_level\
    \ = max(max_level, level);\n  }\n  result.push_back(max_level);\n  return result;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn9tkom2i.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpn9tkom2i.cpp:27:17: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n   27 |     max_level = max(max_level,\
    \ level);\n      |                 ^~~\n      |                 std::max\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn9tkom2i.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     paren_level = paren_string.substr(i, 1);\n            level++;\n       \
    \ } else if (paren_string[i] == ')') {\n            level--;\n            if (level\
    \ == 0) {\n                levels.push_back(level);\n            }\n        }\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpusixxtqa: /tmp/tmpusixxtqa.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdtyqxtlv.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpdtyqxtlv.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdtyqxtlv.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdtyqxtlv.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmpdtyqxtlv.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels[0] = 1;\n  long paren_level = 0;\n  for (size_t i = 0; i < paren_string.size();\
    \ i++) {\n    if (paren_string[i] == '(') {\n      paren_levels[paren_level] =\
    \ paren_levels[paren_level] + 1;\n    } else if (paren_string[i] == ')') {\n \
    \     paren_levels[paren_level] = paren_levels[paren_level] - 1;\n      if (paren_levels[paren_level]\
    \ == 0) {\n        paren_level++;\n      }\n    }\n  }\n  return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> levels;\n\
    \  std::string paren_level;\n  long level = 0;\n  for (size_t i = 0; i < paren_string.size();\
    \ i++) {\n    if (paren_string[i] == '(') {\n      paren_level = paren_string.substr(0,\
    \ i);\n      level++;\n    }\n    if (paren_string[i] == ')') {\n      level--;\n\
    \    }\n    levels[level] = levels[level] + 1;\n  }\n  return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels = paren_string.split(\" \");\n  long max_level = 0;\n  for (long\
    \ i = 0; i < paren_levels.size(); i++) {\n    if (paren_levels[i] > max_level)\
    \ {\n      max_level = paren_levels[i];\n    }\n  }\n  std::vector<long> deepest_levels;\n\
    \  deepest_levels.push_back(max_level);\n  for (long i = 1; i < paren_levels.size();\
    \ i++) {\n    if (paren_levels[i] > deepest_levels[i - 1]) {\n      deepest_levels.push_back(i);\n\
    \    }\n  }\n  return deepest_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpfs30b62h.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpfs30b62h.cpp:10:31: error: \u2018std::string\u2019 {aka \u2018class\
    \ std::__cxx11::basic_string<char>\u2019} has no member named \u2018split\u2019\
    \n   10 |   paren_levels = paren_string.split(\" \");\n      |               \
    \                ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long level = 0;\n    long\
    \ paren_level = 0;\n    for (auto c : paren_string) {\n        if (c == '(') {\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level--;\n\
    \        }\n        paren_levels.push_back(paren_level);\n        level++;\n \
    \   }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp6c437lj3: /tmp/tmp6c437lj3.cpp:26: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            ++level;\n        } else if (c == ')') {\n            --level;\n\
    \        }\n        if (level == 0) {\n            result.push_back(level);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpm427y4hr: /tmp/tmpm427y4hr.cpp:25: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long max_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_levels.push_back(max_level);\n            max_level++;\n\
    \        } else if (c == ')') {\n            max_level = std::max(max_level, paren_levels[paren_levels.size()\
    \ - 1]);\n            paren_levels.pop_back();\n        } else {\n           \
    \ max_level = std::max(max_level, paren_levels[paren_levels.size() - 1] + 1);\n\
    \        }\n    }\n    paren_levels.push_back(max_level);\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp3j_oyafv: /tmp/tmp3j_oyafv.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    for (size_t i = 0; i < paren_string.size();\
    \ i++) {\n        if (paren_string[i] == '(') {\n            paren_level = paren_string.substr(0,\
    \ i);\n            levels.push_back(1);\n        } else if (paren_string[i] ==\
    \ ')') {\n            long level_of_paren = levels[levels.size() - 1];\n     \
    \       levels[levels.size() - 1] += 1;\n            if (levels[levels.size()\
    \ - 1] > level_of_paren) {\n                levels.push_back(level_of_paren);\n\
    \            }\n        }\n    }\n    return levels;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpof28vj_g: /tmp/tmpof28vj_g.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> result;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   ++level;\n    } else if (c == ')') {\n      --level;\n    }\n    result.push_back(level);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpjah89hl2: /tmp/tmpjah89hl2.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> levels;\n\
    \  std::string paren_level;\n  long level = 0;\n  for (size_t i = 0; i < paren_string.size();\
    \ i++) {\n    if (paren_string[i] == '(') {\n      paren_level = paren_string.substr(i,\
    \ 1);\n      level++;\n    } else if (paren_string[i] == ')') {\n      level--;\n\
    \      if (level == 0) {\n        levels.push_back(level);\n      }\n    }\n \
    \ }\n  return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpwfgd6azr: /tmp/tmpwfgd6azr.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> levels;\n\
    \  long level = 0;\n  for (auto c : paren_string) {\n    if (c == '(') {\n   \
    \   level++;\n    } else if (c == ')') {\n      level--;\n    }\n    levels.push_back(level);\n\
    \  }\n  return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpb0lsyaia: /tmp/tmpb0lsyaia.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    for (auto\
    \ c : paren_string) {\n        if (c == '(') {\n            current_level = current_level\
    \ + c;\n            current_level_size++;\n        } else if (c == ')') {\n  \
    \          current_level = current_level.substr(0, current_level.size() - 1);\n\
    \            current_level_size--;\n        } else {\n            current_level\
    \ = current_level + c;\n            current_level_size++;\n        }\n       \
    \ if (current_level_size == 0) {\n            levels.push_back(levels.size());\n\
    \            current_level_size = 0;\n        }\n    }\n    return levels;\n}\n\
    int main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp_z11p2yb: /tmp/tmp_z11p2yb.cpp:32: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    std::string paren_char;\n    std::string paren_string_reversed;\n\
    \    std::string paren_string_reversed_reversed;\n    std::string paren_string_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed;\n    std::string\
    \ paren_string_reversed_reversed_reversed_reversed_reversed;\n    std::string\
    \ paren_string_reversed_reversed_reversed_reversed_reversed_reversed;\n    std::string\
    \ paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \    \n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpktg2m8_s.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpktg2m8_s.cpp:22:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   22 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:21:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   21 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:25:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   25 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:24:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   24 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:27:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   27 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:26:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   26 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:29:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   29 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:28:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   28 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:31:17: error: redeclaration of \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \n   31 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:30:17: note: \u2018std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\u2019\
    \ previously declared here\n   30 |     std::string paren_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpktg2m8_s.cpp:33:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   33 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    for (auto\
    \ c : paren_string) {\n        if (c == '(') {\n            current_level += c;\n\
    \            current_level_size += 1;\n        } else if (c == ')') {\n      \
    \      current_level_size = std::min(current_level_size, levels.size());\n   \
    \         levels.push_back(current_level_size);\n            current_level.clear();\n\
    \        } else {\n            current_level += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprohfx340.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmprohfx340.cpp:17:76: error: no matching function for call to \u2018\
    min(long int&, std::vector<long int>::size_type)\u2019\n   17 |             current_level_size\
    \ = std::min(current_level_size, levels.size());\n      |                    \
    \                                                        ^\nIn file included from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprohfx340.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprohfx340.cpp:17:76: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    })\n   17 |             current_level_size = std::min(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n \
    \                from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprohfx340.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5: note:\
    \ candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp& __a, const _Tp&\
    \ __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprohfx340.cpp:17:76:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019})\n   17 |             current_level_size = std::min(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprohfx340.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::min(std::initializer_list<_Tp>)\u2019\
    \n 3450 |     min(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprohfx340.cpp:17:76:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   17 |             current_level_size = std::min(current_level_size,\
    \ levels.size());\n      |                                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprohfx340.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::min(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3456 |     min(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprohfx340.cpp:17:76: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   17 |             current_level_size = std::min(current_level_size, levels.size());\n\
    \      |                                                                     \
    \       ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); ++i) {\n        if (paren_string[i] == '(') {\n       \
    \     curr_level = paren_string.substr(0, i);\n            level = 0;\n      \
    \  } else if (paren_string[i] == ')') {\n            curr_level = paren_string.substr(0,\
    \ i);\n            level = 0;\n        } else if (paren_string[i] == ' ') {\n\
    \            curr_level = paren_string.substr(0, i);\n            level = 0;\n\
    \        } else {\n            curr_level += paren_string[i];\n            level++;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpnm0re35b: /tmp/tmpnm0re35b.cpp:32: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    for (auto c :\
    \ paren_string) {\n        if (c == '(') {\n            paren_level++;\n     \
    \       paren_level_count++;\n        } else if (c == ')') {\n            paren_level--;\n\
    \            paren_level_count--;\n        }\n        if (paren_level == 0 &&\
    \ paren_level_count == 0) {\n            paren_level_count++;\n            paren_level++;\n\
    \        }\n    }\n    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n    paren_level_count++;\n\
    \    paren_level_count--;\n    paren_level_count++;\n    paren_level_count--;\n\
    \    paren_level_count++;\n    paren_level_count--;\n}\nint main() {\n    auto\
    \ candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpopatieoj: /tmp/tmpopatieoj.cpp:87: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptl2t7pop.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmptl2t7pop.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmptl2t7pop.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptl2t7pop.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmptl2t7pop.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmptbpkfgp6: /tmp/tmptbpkfgp6.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     curr_level = paren_string.substr(0, i);\n            level++;\n        }\
    \ else if (paren_string[i] == ')') {\n            level--;\n            if (level\
    \ == 0) {\n                levels.push_back(level);\n            }\n        }\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmplsihfw0t: /tmp/tmplsihfw0t.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_length = 0;\n    long\
    \ current_level_nesting = 1;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level = current_level + c;\n            current_level_length++;\n\
    \            current_level_nesting++;\n        } else if (c == ')') {\n      \
    \      current_level = current_level.substr(0, current_level_length-1);\n    \
    \        current_level_length--;\n            current_level_nesting--;\n     \
    \   } else if (c == ' ') {\n            if (current_level_nesting == 0) {\n  \
    \              levels.push_back(current_level_length);\n            }\n      \
    \      current_level = \"\";\n        } else {\n            current_level = current_level\
    \ + c;\n        }\n    }\n    if (current_level_nesting == 0) {\n        levels.push_back(current_level_length);\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmppzxk20xo: /tmp/tmppzxk20xo.cpp:38: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp8yygudjz: /tmp/tmp8yygudjz.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_char;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        paren_char = paren_string[i];\n       \
    \ if (paren_char == '(') {\n            level++;\n        } else if (paren_char\
    \ == ')') {\n            level--;\n        }\n        levels.push_back(level);\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpzrw5scj7.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpzrw5scj7.cpp:14:24: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   14 |         if (paren_char == '(') {\n      |   \
    \          ~~~~~~~~~~ ^~ ~~~\n      |             |             |\n      |   \
    \          |             char\n      |             std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const typename\
    \ std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n                 from\
    \ /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   14 |         if (paren_char ==\
    \ '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   14 |      \
    \   if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/ios_base.h:46,\n               \
    \  from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n              \
    \   from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5: note: candidate:\
    \ \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   14 |     \
    \    if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   14 |         if (paren_char == '(') {\n      |              \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:54,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   14 |         if (paren_char == '(') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   14 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n    \
    \             from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   14 |         if (paren_char == '(') {\n      |            \
    \               ^~~\nIn file included from /usr/include/c++/9/list:63,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n    \
    \             from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n      \
    \           from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   14 |\
    \         if (paren_char == '(') {\n      |                           ^~~\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   14 | \
    \        if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from\
    \ /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   14 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n      \
    \           from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/memory:81,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5: note: candidate:\
    \ \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   14 |        \
    \ if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   14 |    \
    \     if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/set:61,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n      \
    \           from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   14\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   14 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   14 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   14 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   14 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n         \
    \        from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/future:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   14 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n        \
    \         from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n        \
    \         from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   14 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/string:41,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   14 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:14:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   14 |         if (paren_char == '(') {\n      |        \
    \                   ^~~\n/tmp/tmpzrw5scj7.cpp:16:31: error: no match for \u2018\
    operator==\u2019 (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   16 |         } else if (paren_char == ')') {\n   \
    \   |                    ~~~~~~~~~~ ^~ ~~~\n      |                    |     \
    \        |\n      |                    |             char\n      |           \
    \         std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n   \
    \              from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> constexpr bool std::operator==(const\
    \ std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const\
    \ pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   16 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/string:41,\n         \
    \        from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   16 |      \
    \   } else if (paren_char == ')') {\n      |                                 \
    \ ^~~\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   16 |         } else if\
    \ (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 16 |         } else if (paren_char == ')') {\n      |                      \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/deque:67,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n   \
    \              from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   16 |     \
    \    } else if (paren_char == ')') {\n      |                                \
    \  ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n                 from\
    \ /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   16 |         } else if (paren_char == ')') {\n      |       \
    \                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   16 |         } else if (paren_char == ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  16 |         } else if (paren_char == ')') {\n      |                     \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:59,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   16 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   16 |         } else if (paren_char == ')') {\n      |     \
    \                             ^~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/map:61,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n           \
    \      from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/map:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n      \
    \           from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   16 |\
    \         } else if (paren_char == ')') {\n      |                           \
    \       ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   16 | \
    \        } else if (paren_char == ')') {\n      |                            \
    \      ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n \
    \                from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   16 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/memory:81,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n  \
    \               from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   16 |        \
    \ } else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/vector:67,\n   \
    \              from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   16 |    \
    \     } else if (paren_char == ')') {\n      |                               \
    \   ^~~\nIn file included from /usr/include/c++/9/queue:64,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n               \
    \  from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   16\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/set:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n           \
    \      from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/stack:61,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n    \
    \             from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   16 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   16 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   16 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   16 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   16 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   16 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzrw5scj7.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzrw5scj7.cpp:16:34:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   16 |         } else if (paren_char == ')') {\n      | \
    \                                 ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    for (auto c : paren_string) {\n        if\
    \ (c == '(') {\n            current_level = current_level + \"(\";\n        }\
    \ else if (c == ')') {\n            current_level = current_level.substr(0, current_level.length()\
    \ - 1) + \")\";\n        } else {\n            current_level = current_level +\
    \ c;\n        }\n        if (current_level.length() > levels.size()) {\n     \
    \       levels.resize(current_level.length());\n        }\n        levels[current_level.length()\
    \ - 1]++;\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp5_u2r2on: /tmp/tmp5_u2r2on.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    bool is_open = false;\n \
    \   bool is_closed = false;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            is_open = true;\n            paren_level++;\n       \
    \ } else if (c == ')') {\n            is_closed = true;\n            paren_level--;\n\
    \        } else if (is_open && is_closed) {\n            paren_levels[paren_level]\
    \ = level;\n            paren_level++;\n            is_open = false;\n       \
    \     is_closed = false;\n        } else if (is_open) {\n            paren_level++;\n\
    \        } else if (is_closed) {\n            paren_level--;\n        }\n    \
    \    level++;\n    }\n    return paren_levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    long max_level = 0;\n    bool is_open = false;\n   \
    \ for (auto c : paren_string) {\n        if (c == '(') {\n            is_open\
    \ = true;\n            level++;\n        } else if (c == ')') {\n            is_open\
    \ = false;\n            level--;\n        } else if (is_open) {\n            level++;\n\
    \        } else {\n            level--;\n        }\n        if (level > max_level)\
    \ {\n            max_level = level;\n        }\n        result.push_back(level);\n\
    \    }\n    if (max_level > 0) {\n        result.push_back(max_level);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpdcyfnnnc: /tmp/tmpdcyfnnnc.cpp:37: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphnr1k3oo.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmphnr1k3oo.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnr1k3oo.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnr1k3oo.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmphnr1k3oo.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    std::string paren_char;\n\
    \    for (size_t i = 0; i < paren_string.size(); i++) {\n        paren_char =\
    \ paren_string[i];\n        if (paren_char == '(') {\n            paren_level_count++;\n\
    \            paren_level++;\n        } else if (paren_char == ')') {\n       \
    \     paren_level_count--;\n            paren_level--;\n            if (paren_level_count\
    \ == 0) {\n                paren_level_count = paren_level;\n                paren_levels.push_back(paren_level);\n\
    \            }\n        }\n    }\n    return paren_levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuw671w0m.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpuw671w0m.cpp:15:24: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   15 |         if (paren_char == '(') {\n      |   \
    \          ~~~~~~~~~~ ^~ ~~~\n      |             |             |\n      |   \
    \          |             char\n      |             std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const typename\
    \ std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n                 from\
    \ /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   15 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   15 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   15 |         if (paren_char ==\
    \ '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   15 |      \
    \   if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   15 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/bits/ios_base.h:46,\n               \
    \  from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n              \
    \   from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   15 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   15 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5: note: candidate:\
    \ \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   15 |     \
    \    if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   15 |         if (paren_char == '(') {\n      |              \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:54,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   15 |         if (paren_char == '(') {\n \
    \     |                           ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \      if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from\
    \ /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   15 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n    \
    \             from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   15 |         if (paren_char == '(') {\n      |            \
    \               ^~~\nIn file included from /usr/include/c++/9/list:63,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n    \
    \             from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/map:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n      \
    \           from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   15 |\
    \         if (paren_char == '(') {\n      |                           ^~~\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   15 | \
    \        if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/bits/shared_ptr.h:52,\n                 from\
    \ /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   15 |         if (paren_char == '(') {\n      |                \
    \           ^~~\nIn file included from /usr/include/c++/9/memory:81,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n      \
    \           from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/memory:81,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5: note: candidate:\
    \ \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   15 |        \
    \ if (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   15 |    \
    \     if (paren_char == '(') {\n      |                           ^~~\nIn file\
    \ included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   15 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/set:61,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n      \
    \           from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   15\
    \ |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/c++/9/stack:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   15 |         if (paren_char == '(') {\n      |             \
    \              ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |    \
    \                       ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |         if (paren_char == '(') {\n\
    \      |                           ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   15 |         if (paren_char\
    \ == '(') {\n      |                           ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   15 |         if\
    \ (paren_char == '(') {\n      |                           ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n         \
    \        from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:15:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   15 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/future:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   15 |         if (paren_char == '(') {\n      |                           ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n        \
    \         from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   15 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   15 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n        \
    \         from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   15 |         if (paren_char == '(') {\n      |           \
    \                ^~~\nIn file included from /usr/include/c++/9/string:41,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   15 |         if (paren_char == '(') {\n      |                          \
    \ ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:15:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   15 |         if (paren_char == '(') {\n      |        \
    \                   ^~~\n/tmp/tmpuw671w0m.cpp:18:31: error: no match for \u2018\
    operator==\u2019 (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n   18 |         } else if (paren_char == ')') {\n   \
    \   |                    ~~~~~~~~~~ ^~ ~~~\n      |                    |     \
    \        |\n      |                    |             char\n      |           \
    \         std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/regex:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n  \
    \               from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n   \
    \              from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::fpos<_StateT>\u2019\n   18 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> constexpr bool std::operator==(const\
    \ std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const\
    \ pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   18 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   18 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   18 |         } else if (paren_char\
    \ == ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   18\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/string:41,\n         \
    \        from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::allocator<_CharT>\u2019\n   18 |      \
    \   } else if (paren_char == ')') {\n      |                                 \
    \ ^~~\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   18 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5: note:\
    \ candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018std::__cxx11::basic_string<char>\u2019\n   18 |         } else if\
    \ (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 18 |         } else if (paren_char == ')') {\n      |                      \
    \            ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  292 |   operator==(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  297 |   operator==(const error_code&\
    \ __lhs, const error_condition& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:304:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_code&)\u2019\n  304 |   operator==(const\
    \ error_condition& __lhs, const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:304:37: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/deque:67,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n   \
    \              from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   18 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   18 |     \
    \    } else if (paren_char == ')') {\n      |                                \
    \  ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n                 from\
    \ /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::array<_Tp,\
    \ _Nm>\u2019\n   18 |         } else if (paren_char == ')') {\n      |       \
    \                           ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::tuple<_Tps ...>\u2019\n   18 |         } else if (paren_char == ')')\
    \ {\n      |                                  ^~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  18 |         } else if (paren_char == ')') {\n      |                     \
    \             ^~~\nIn file included from /usr/include/c++/9/functional:59,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   18 |   \
    \      } else if (paren_char == ')') {\n      |                              \
    \    ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019\n   18 |         } else if (paren_char == ')') {\n      |     \
    \                             ^~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/map:61,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n           \
    \      from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/map:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n      \
    \           from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   18 |\
    \         } else if (paren_char == ')') {\n      |                           \
    \       ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   18 | \
    \        } else if (paren_char == ')') {\n      |                            \
    \      ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n \
    \                from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   18 |         } else if (paren_char == ')') {\n      |         \
    \                         ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/memory:81,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n  \
    \               from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   18 |        \
    \ } else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/vector:67,\n   \
    \              from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   18 |    \
    \     } else if (paren_char == ')') {\n      |                               \
    \   ^~~\nIn file included from /usr/include/c++/9/queue:64,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n               \
    \  from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   18\
    \ |         } else if (paren_char == ')') {\n      |                         \
    \         ^~~\nIn file included from /usr/include/c++/9/set:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n           \
    \      from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   18 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/c++/9/stack:61,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n    \
    \             from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   18 |         } else if (paren_char == ')') {\n      |      \
    \                            ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n    \
    \  |                                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |         } else if (paren_char ==\
    \ ')') {\n      |                                  ^~~\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   18 |         } else\
    \ if (paren_char == ')') {\n      |                                  ^~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |         }\
    \ else if (paren_char == ')') {\n      |                                  ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpuw671w0m.cpp:18:34: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  276 |   operator==(thread::id __x, thread::id\
    \ __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/random:51,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::normal_distribution<_RealType>\u2019\n\
    \   18 |         } else if (paren_char == ')') {\n      |                    \
    \              ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_set<_Value, _Hash, _Pred, _Alloc>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019\n   18 |         } else if (paren_char == ')') {\n      |    \
    \                              ^~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<char>&, const\
    \ std::allocator<char>&)\u2019\n  155 |       operator==(const allocator&, const\
    \ allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   18 |         } else if (paren_char == ')') {\n      |                   \
    \               ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpuw671w0m.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<char>&,\
    \ const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const new_allocator&,\
    \ const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuw671w0m.cpp:18:34:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018char\u2019\n   18 |         } else if (paren_char == ')') {\n      | \
    \                                 ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            curr_level = curr_level + \"(\";\n        } else if (c\
    \ == ')') {\n            curr_level = curr_level.substr(0, curr_level.size() -\
    \ 1);\n            curr_level = curr_level + \")\";\n            levels.push_back(std::stoi(curr_level));\n\
    \            curr_level.clear();\n        } else {\n            curr_level = curr_level\
    \ + c;\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long current_level = 0;\n  long\
    \ paren_level = 0;\n  long paren_level_count = 0;\n  for (char c : paren_string)\
    \ {\n    if (c == '(') {\n      paren_level_count++;\n      paren_level++;\n \
    \   } else if (c == ')') {\n      paren_level_count--;\n      paren_level--;\n\
    \      if (paren_level_count == 0) {\n        paren_levels.push_back(paren_level);\n\
    \      }\n    }\n  }\n  return paren_levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp99g_yvqe: /tmp/tmp99g_yvqe.cpp:30: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ 0 && paren_levels.size() <= level) {\n            paren_levels.push_back(level);\n\
    \        }\n        level++;\n    }\n    return paren_levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpj6rsh5z9: /tmp/tmpj6rsh5z9.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter2 = 0;\n    long paren_level_counter3 = 0;\n\
    \    long paren_level_counter4 = 0;\n    long paren_level_counter5 = 0;\n    long\
    \ paren_level_counter6 = 0;\n    long paren_level_counter7 = 0;\n    long paren_level_counter8\
    \ = 0;\n    long paren_level_counter9 = 0;\n    long paren_level_counter10 = 0;\n\
    \    long paren_level_counter11 = 0;\n    long paren_level_counter12 = 0;\n  \
    \  long paren_level_counter13 = 0;\n    long paren_level_counter14 = 0;\n    long\
    \ paren_level_counter15 = 0;\n    long paren_level_counter16 = 0;\n    long paren_level_counter17\
    \ = 0;\n    long paren_level_counter18 = 0;\n    long paren_level_counter19 =\
    \ 0;\n    long paren_level_counter20 = 0;\n    long paren_level_counter21 = 0;\n\
    \    long paren_level_counter22 = 0;\n    long paren_level_counter23 = 0;\n  \
    \  long paren_level_counter24 = 0;\n    long paren_level_counter25 = 0;\n    long\
    \ paren_level_counter26 = 0;\n    long paren_level_counter27 = 0;\n    long paren_level_counter28\
    \ = 0;\n    long paren_level_counter29 = 0;\n    long paren_level_counter30 =\
    \ 0;\n    long paren_level_counter31 = 0;\n    long paren_level_counter32 = 0;\n\
    \    long paren_level_counter33 = 0;\n    long paren_level_counter34 = 0;\n  \
    \  long paren_level_counter35 = 0;\n    long paren_level_counter36 = 0;\n    long\
    \ paren_level_counter37 = 0;\n    long paren_level_counter38 = 0;\n    long paren_level_counter39\
    \ = 0;\n    long paren_level_counter40 = 0;\n    long paren_level_counter41 =\
    \ 0;\n    long paren_level_counter42 = 0;\n    long paren_level_counter43 = 0;\n\
    \    long paren_level_counter44 = 0;\n    long paren_level_counter45 = 0;\n  \
    \  long paren_level_counter46 = 0;\n    long paren_level_counter47 = 0;\n    long\
    \ paren_level_counter48 = 0;\n    long paren_level_counter49 = 0;\n    long paren_level_counter50\
    \ = 0;\n    long paren_level_counter51 = 0;\n    long paren_level_counter52 =\
    \ 0;\n    long paren_level_counter53 = 0;\n    long paren_level_counter54 = 0;\n\
    \    long paren_level_counter55 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpjjx5ugj5: /tmp/tmpjjx5ugj5.cpp:71: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long level = 0;\n    for (char c : paren_string)\
    \ {\n        if (c == '(') {\n            curr_level = curr_level + c;\n     \
    \       level++;\n        } else if (c == ')') {\n            curr_level = curr_level.substr(0,\
    \ curr_level.size() - 1);\n            level--;\n            levels[level] = levels[level]\
    \ + 1;\n        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_stack;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); ++i) {\n        if (paren_string[i] == '(') {\n       \
    \     paren_stack.push_back(paren_string[i]);\n        } else if (paren_string[i]\
    \ == ')') {\n            long level_of_nesting = level;\n            while (level_of_nesting\
    \ > 0) {\n                level_of_nesting -= 1;\n                level += 1;\n\
    \            }\n            level -= 1;\n            levels.push_back(level);\n\
    \            paren_stack.pop_back();\n        } else {\n            assert(paren_string[i]\
    \ == ' ');\n        }\n    }\n    assert(paren_stack.size() == 0);\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpl_e5b4ix: /tmp/tmpl_e5b4ix.cpp:33: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ level) {\n            paren_levels[paren_levels.size() - 1]++;\n        } else\
    \ {\n            paren_levels.push_back(1);\n        }\n        level++;\n   \
    \ }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpgbyngcju: /tmp/tmpgbyngcju.cpp:29: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_level;\n\
    \    long current_level = 0;\n    long paren_level_count = 0;\n    for (auto c\
    \ : paren_string) {\n        if (c == '(') {\n            current_level++;\n \
    \           paren_level_count++;\n        } else if (c == ')') {\n           \
    \ current_level--;\n            paren_level_count--;\n        }\n        if (current_level\
    \ == 0 && paren_level_count == 0) {\n            paren_level.push_back(current_level);\n\
    \        }\n    }\n    return paren_level;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpbq54axgc: /tmp/tmpbq54axgc.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp8p0wpg10: /tmp/tmp8p0wpg10.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level = std::to_string(level);\n\
    \            level++;\n        } else if (c == ')') {\n            level--;\n\
    \            levels[level] = std::stoi(paren_level);\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n            current_level\
    \ = paren_level;\n        } else if (c == ')') {\n            paren_level--;\n\
    \            current_level = paren_level;\n        } else {\n            paren_levels[paren_level]\
    \ = current_level;\n        }\n    }\n    return paren_levels;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpzt7lc7xo: /tmp/tmpzt7lc7xo.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp8mo2g2yu: /tmp/tmp8mo2g2yu.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ 0 && paren_levels.size() <= level) {\n            paren_levels.push_back(level);\n\
    \        }\n        level++;\n    }\n    return paren_levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpp839qw5v: /tmp/tmpp839qw5v.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    std::string current_paren_string = \"\";\n   \
    \ for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level++;\n\
    \            current_paren_string = current_paren_string + c;\n        } else\
    \ if (c == ')') {\n            paren_level--;\n            current_paren_string\
    \ = current_paren_string + c;\n        } else {\n            current_paren_string\
    \ = current_paren_string + c;\n        }\n        if (paren_level == 0 && current_paren_string\
    \ == \"\") {\n            paren_level = 1;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp1kzub0kg: /tmp/tmp1kzub0kg.cpp:31: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> levels;\n\
    \  long level = 0;\n  for (size_t i = 0; i < paren_string.size(); ++i) {\n   \
    \ if (paren_string[i] == '(') {\n      ++level;\n    } else if (paren_string[i]\
    \ == ')') {\n      --level;\n    }\n    if (level == 0) levels.push_back(level);\n\
    \  }\n  return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpyv06n9zj: /tmp/tmpyv06n9zj.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 0;\n    long level_size\
    \ = 0;\n    for (auto c : paren_string) {\n        if (c == '(') {\n         \
    \   level_size++;\n            current_level = current_level + c;\n          \
    \  current_level_size = std::max(current_level_size, level_size);\n        } else\
    \ if (c == ')') {\n            level_size--;\n            current_level = current_level.substr(0,\
    \ current_level.size() - 1);\n            current_level_size = std::max(current_level_size,\
    \ level_size);\n        } else {\n            current_level = current_level +\
    \ c;\n        }\n    }\n    levels.push_back(current_level_size);\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpx8angdf9: /tmp/tmpx8angdf9.cpp:31: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        char c = paren_string[i];\n        if (c\
    \ == '(') {\n            curr_level = curr_level + c;\n        } else if (c ==\
    \ ')') {\n            levels[level++] = std::stoi(curr_level);\n            curr_level.clear();\n\
    \        } else {\n            curr_level += c;\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    for (auto c : paren_string) {\n        if (c\
    \ == '(') {\n            current_level++;\n        } else if (c == ')') {\n  \
    \          current_level--;\n        }\n        paren_levels.push_back(current_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpk_pmhvdx: /tmp/tmpk_pmhvdx.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> result;\n\
    \    long level = 0;\n    bool is_open = false;\n    bool is_closed = false;\n\
    \    std::string token;\n    std::string temp_token;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            is_open = true;\n            temp_token\
    \ = \"\";\n        } else if (c == ')') {\n            is_open = false;\n    \
    \        temp_token = temp_token.substr(0, temp_token.size() - 1);\n         \
    \   result.push_back(level);\n        } else if (is_open) {\n            temp_token\
    \ += c;\n        } else if (temp_token.size() > 0) {\n            temp_token +=\
    \ c;\n        } else {\n            temp_token = \"\";\n        }\n    }\n   \
    \ if (temp_token.size() > 0) {\n        result.push_back(level);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp2ui_eu41: /tmp/tmp2ui_eu41.cpp:38: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_level = 0;\n    long paren_level_counter\
    \ = 0;\n    long paren_level_counter_max = 0;\n    long paren_level_counter_max_index\
    \ = 0;\n    long paren_level_counter_max_index2 = 0;\n    long paren_level_counter_max_index3\
    \ = 0;\n    long paren_level_counter_max_index4 = 0;\n    long paren_level_counter_max_index5\
    \ = 0;\n    long paren_level_counter_max_index6 = 0;\n    long paren_level_counter_max_index7\
    \ = 0;\n    long paren_level_counter_max_index8 = 0;\n    long paren_level_counter_max_index9\
    \ = 0;\n    long paren_level_counter_max_index10 = 0;\n    long paren_level_counter_max_index11\
    \ = 0;\n    long paren_level_counter_max_index12 = 0;\n    long paren_level_counter_max_index13\
    \ = 0;\n    long paren_level_counter_max_index14 = 0;\n    long paren_level_counter_max_index15\
    \ = 0;\n    long paren_level_counter_max_index16 = 0;\n    long paren_level_counter_max_index17\
    \ = 0;\n    long paren_level_counter_max_index18 = 0;\n    long paren_level_counter_max_index19\
    \ = 0;\n    long paren_level_counter_max_index20 = 0;\n    long paren_level_counter_max_index21\
    \ = 0;\n    long paren_level_counter_max_index22 = 0;\n    long paren_level_counter_max_index23\
    \ = 0;\n    long paren_level_counter_max_index24 = 0;\n    long paren_level_counter_max_index25\
    \ = 0;\n    long paren_level_counter_max_index26 = 0;\n    long paren_level_counter_max_index27\
    \ = 0;\n    long paren_level_counter_max_index28 = 0;\n    long paren_level_counter_max_index29\
    \ = 0;\n    long paren_level_counter_max_index30 = 0;\n    long paren_level_counter_max_index31\
    \ = 0;\n    long paren_level_counter_max_index32 = 0;\n    long paren_level_counter_max_index33\
    \ = 0;\n    long paren_level_counter_max_index34 = 0;\n    long paren_level_counter_max_index35\
    \ = 0;\n    long paren_level_counter_max_index36 = 0;\n    long paren_level_counter_max_index37\
    \ = 0;\n    long paren_level_counter_max_index38 = 0;\n    long paren_level_counter_max_index39\
    \ = 0;\n    long paren_level_counter_max_index40 = 0;\n    long paren_level_counter_max_index41\
    \ = 0;\n    long paren_level_counter_max_index42 = 0;\n    long paren_level_counter_max_index43\
    \ = 0;\n    long paren_level_\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmposds3g2o.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmposds3g2o.cpp:58:1: error: expected initializer before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmposds3g2o.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string paren_level;\n    long level = 0;\n    for (size_t i = 0; i <\
    \ paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n       \
    \     level++;\n            paren_level = paren_level + paren_string[i];\n   \
    \     } else if (paren_string[i] == ')') {\n            level--;\n           \
    \ paren_level = paren_level.substr(0, paren_level.size()-1);\n            levels[level]\
    \ = levels[level] + 1;\n        }\n    }\n    return levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_level++;\n        } else if (c\
    \ == ')') {\n            paren_level--;\n        }\n        if (paren_level ==\
    \ 0 && paren_levels.size() <= level) {\n            paren_levels.push_back(level);\n\
    \        }\n        level++;\n    }\n    return paren_levels;\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpyzt5febq: /tmp/tmpyzt5febq.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    bool is_open = false;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            is_open = true;\n        } else if (c\
    \ == ')') {\n            is_open = false;\n        } else if (is_open) {\n   \
    \         paren_levels.push_back(level);\n            level++;\n        }\n  \
    \  }\n    paren_levels.push_back(level);\n    return paren_levels;\n}\nint main()\
    \ {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()())\
    \ ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpkiiei82j: /tmp/tmpkiiei82j.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long paren_level = 0;\n \
    \   bool is_open = false;\n    for (char c : paren_string) {\n        if (c ==\
    \ '(') {\n            is_open = true;\n            paren_levels.push_back(paren_level);\n\
    \        } else if (c == ')') {\n            is_open = false;\n            paren_levels.pop_back();\n\
    \        } else if (is_open) {\n            paren_level++;\n        }\n    }\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpm38py08u: /tmp/tmpm38py08u.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7kti3enw.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmp7kti3enw.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7kti3enw.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp7kti3enw.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmp7kti3enw.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels[0] = 1;\n    long paren_level = 0;\n    for (size_t i = 0; i\
    \ < paren_string.size(); i++) {\n        if (paren_string[i] == '(') {\n     \
    \       paren_level++;\n        } else if (paren_string[i] == ')') {\n       \
    \     paren_level--;\n        }\n        paren_levels[paren_level] = paren_levels[paren_level]\
    \ + 1;\n    }\n    return paren_levels;\n}\nint main() {\n    auto candidate =\
    \ parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_level;\n\
    \    long paren_level_count = 0;\n    long paren_level_max = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_count_index\
    \ = 0;\n    long paren_level_max_count_index2 = 0;\n    long paren_level_max_count_index3\
    \ = 0;\n    long paren_level_max_count_index4 = 0;\n    long paren_level_max_count_index5\
    \ = 0;\n    long paren_level_max_count_index6 = 0;\n    long paren_level_max_count_index7\
    \ = 0;\n    long paren_level_max_count_index8 = 0;\n    long paren_level_max_count_index9\
    \ = 0;\n    long paren_level_max_count_index10 = 0;\n    long paren_level_max_count_index11\
    \ = 0;\n    long paren_level_max_count_index12 = 0;\n    long paren_level_max_count_index13\
    \ = 0;\n    long paren_level_max_count_index14 = 0;\n    long paren_level_max_count_index15\
    \ = 0;\n    long paren_level_max_count_index16 = 0;\n    long paren_level_max_count_index17\
    \ = 0;\n    long paren_level_max_count_index18 = 0;\n    long paren_level_max_count_index19\
    \ = 0;\n    long paren_level_max_count_index20 = 0;\n    long paren_level_max_count_index21\
    \ = 0;\n    long paren_level_max_count_index22 = 0;\n    long paren_level_max_count_index23\
    \ = 0;\n    long paren_level_max_count_index24 = 0;\n    long paren_level_max_count_index25\
    \ = 0;\n    long paren_level_max_count_index26 = 0;\n    long paren_level_max_count_index27\
    \ = 0;\n    long paren_level_max_count_index28 = 0;\n    long paren_level_max_count_index29\
    \ = 0;\n    long paren_level_max_count_index30 = 0;\n    long paren_level_max_count_index31\
    \ = 0;\n    long paren_level_max_count_index32 = 0;\n    long paren_level_max_count_index33\
    \ = 0;\n    long paren_level_max_count_index34 = 0;\n    long paren_level_max_count_index35\
    \ = 0;\n    long paren_level_max_count_index36 = 0;\n    long paren_level_max_count_index37\
    \ = 0;\n    long paren_level_max_count_index38 = 0;\n    long paren_level_max_count_index39\
    \ = 0;\n    long paren_level_max_count_index40 = 0;\n    long paren_level_max_count_index41\
    \ = 0;\n    long paren_level_max_count_index42 = 0;\n    long paren_level_max_count_index43\
    \ = 0;\n    long \n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpjlyf6rb_.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpjlyf6rb_.cpp:58:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmpjlyf6rb_.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long paren_level = 0;\n \
    \   for (char c : paren_string) {\n        if (c == '(') {\n            paren_levels.push_back(paren_level);\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level--;\n\
    \        }\n    }\n    paren_levels.push_back(paren_level);\n    return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpzh262fv_: /tmp/tmpzh262fv_.cpp:25: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels = paren_string.substr(0, paren_string.find('(')).split(' ').size();\n\
    \    std::vector<long> paren_levels_temp;\n    paren_levels_temp.push_back(paren_levels);\n\
    \    long paren_levels_sum = 0;\n    long paren_levels_sum2 = 0;\n    long paren_levels_sum3\
    \ = 0;\n    long paren_levels_sum4 = 0;\n    long paren_levels_sum5 = 0;\n   \
    \ long paren_levels_sum6 = 0;\n    long paren_levels_sum7 = 0;\n    long paren_levels_sum8\
    \ = 0;\n    long paren_levels_sum9 = 0;\n    long paren_levels_sum10 = 0;\n  \
    \  long paren_levels_sum11 = 0;\n    long paren_levels_sum12 = 0;\n    long paren_levels_sum13\
    \ = 0;\n    long paren_levels_sum14 = 0;\n    long paren_levels_sum15 = 0;\n \
    \   long paren_levels_sum16 = 0;\n    long paren_levels_sum17 = 0;\n    long paren_levels_sum18\
    \ = 0;\n    long paren_levels_sum19 = 0;\n    long paren_levels_sum20 = 0;\n \
    \   long paren_levels_sum21 = 0;\n    long paren_levels_sum22 = 0;\n    long paren_levels_sum23\
    \ = 0;\n    long paren_levels_sum24 = 0;\n    long paren_levels_sum25 = 0;\n \
    \   long paren_levels_sum26 = 0;\n    long paren_levels_sum27 = 0;\n    long paren_levels_sum28\
    \ = 0;\n    long paren_levels_sum29 = 0;\n    long paren_levels_sum30 = 0;\n \
    \   long paren_levels_sum31 = 0;\n    long paren_levels_sum32 = 0;\n    long paren_levels_sum33\
    \ = 0;\n    long paren_levels_sum34 = 0;\n    long paren_levels_sum35 = 0;\n \
    \   long paren_levels_sum36 = 0;\n    long paren_levels_sum37 = 0;\n    long paren_levels_sum38\
    \ = 0;\n    long paren_levels_sum39 = 0;\n    long paren_levels_sum40 = 0;\n \
    \   long paren_levels_sum41 = 0;\n    long paren_levels_sum42 = 0;\n    long paren_levels_sum43\
    \ = 0;\n    long paren_levels_sum44 = 0;\n    long paren_levels_sum45 = 0;\n \
    \   long paren_levels_sum46 = 0;\n    long paren\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwfvhgwh.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpuwfvhgwh.cpp:10:67: error: \u2018class std::__cxx11::basic_string<char>\u2019\
    \ has no member named \u2018split\u2019\n   10 |     paren_levels = paren_string.substr(0,\
    \ paren_string.find('(')).split(' ').size();\n      |                        \
    \                                           ^~~~~\n/tmp/tmpuwfvhgwh.cpp:12:45:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::vector<long\
    \ int>&)\u2019\n   12 |     paren_levels_temp.push_back(paren_levels);\n     \
    \ |                                             ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpuwfvhgwh.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const\
    \ value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmpuwfvhgwh.cpp:60:1: error: expected initializer before \u2018}\u2019 token\n\
    \   60 | }\n      | ^\n/tmp/tmpuwfvhgwh.cpp:60:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpnn0e5rfa: /tmp/tmpnn0e5rfa.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  long current_level = 0;\n  for\
    \ (size_t i = 0; i < paren_string.size(); ++i) {\n    if (paren_string[i] == '(')\
    \ {\n      current_level++;\n    } else if (paren_string[i] == ')') {\n      current_level--;\n\
    \    }\n    paren_levels.push_back(current_level);\n  }\n  return paren_levels;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpwv0u50na: /tmp/tmpwv0u50na.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string current_level;\n    long current_level_size = 1;\n    long current_level_nesting\
    \ = 1;\n    for (auto c : paren_string) {\n        if (c == '(') {\n         \
    \   current_level = current_level + c;\n            current_level_nesting++;\n\
    \            current_level_size += 1;\n        } else if (c == ')') {\n      \
    \      current_level = current_level.substr(0, current_level.size() - 1);\n  \
    \          current_level_nesting--;\n            current_level_size -= 1;\n  \
    \      } else {\n            current_level = current_level + c;\n        }\n \
    \       if (current_level_nesting == 0) {\n            levels.push_back(current_level_size);\n\
    \            current_level_size = 1;\n            current_level_nesting = 1;\n\
    \        }\n    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpozw4bih8: /tmp/tmpozw4bih8.cpp:35: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels[0] = 0;\n    long paren_level = 0;\n    long paren_level_count\
    \ = 0;\n    long paren_level_max = 0;\n    long paren_level_max_count = 0;\n \
    \   for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level_count--;\n\
    \            paren_level--;\n            if (paren_level_count == 0) {\n     \
    \           paren_level_count = paren_level_max;\n                paren_level_max\
    \ = paren_level;\n            }\n        }\n        if (paren_level_count > paren_level_max_count)\
    \ {\n            paren_level_max_count = paren_level_count;\n            paren_level_max_count\
    \ = paren_level_max;\n        }\n    }\n    paren_level_count = paren_level_max_count;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level_count--;\n\
    \            paren_level--;\n            if (paren_level_count == 0) {\n     \
    \           paren_level_count = paren_level_max;\n                paren_level_max\
    \ = paren_level;\n            }\n        }\n        if (paren_level_count > paren_level_max_count)\
    \ {\n            paren_level_max_count = paren_level_count;\n            paren_level_max_count\
    \ = paren_level_max;\n        }\n    }\n    paren_level_count = paren_level_max_count;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level_count--;\n\
    \            paren_level--;\n            if (paren_level_count == 0) {\n     \
    \           paren_level_count = paren_level_max;\n                paren_level_max\
    \ = paren_level;\n            }\n        }\n        if (paren_level_count > paren_level_max_count)\
    \ {\n            paren_level_max_count = paren_level_count;\n            paren_level_max_count\
    \ = paren_level_max;\n        }\n    }\n    paren_level_count = paren_level_max_count;\n\
    \    for (auto c : paren_string) {\n        if (c == '(') {\n            paren_level_count++;\n\
    \            paren_level++;\n        } else if (c == ')') {\n            paren_level_count--;\n\
    \            paren_level--;\n            if (paren_level_count == 0) {\n     \
    \           paren_level_count = paren_level_max;\n                paren_level_max\
    \ = paren_level\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpvq6pfy1x.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpvq6pfy1x.cpp:78:46: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   78 |                 paren_level_max = paren_level\n      |      \
    \                                        ^\n      |                          \
    \                    ;\n   79 | }\n      | ~                                 \
    \            \n/tmp/tmpvq6pfy1x.cpp:80:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n   80 | int main() {\n      |     \
    \       ^\n/tmp/tmpvq6pfy1x.cpp:85:1: error: expected \u2018}\u2019 at end of\
    \ input\n   85 | }\n      | ^\n/tmp/tmpvq6pfy1x.cpp:73:30: note: to match this\
    \ \u2018{\u2019\n   73 |         } else if (c == ')') {\n      |             \
    \                 ^\n/tmp/tmpvq6pfy1x.cpp:85:1: error: expected \u2018}\u2019\
    \ at end of input\n   85 | }\n      | ^\n/tmp/tmpvq6pfy1x.cpp:69:33: note: to\
    \ match this \u2018{\u2019\n   69 |     for (auto c : paren_string) {\n      |\
    \                                 ^\n/tmp/tmpvq6pfy1x.cpp:85:1: error: expected\
    \ \u2018}\u2019 at end of input\n   85 | }\n      | ^\n/tmp/tmpvq6pfy1x.cpp:8:65:\
    \ note: to match this \u2018{\u2019\n    8 | std::vector<long> parse_nested_parens(std::string\
    \ paren_string) {\n      |                                                   \
    \              ^\n/tmp/tmpvq6pfy1x.cpp:85:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   85 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  long paren_level = 0;\n  for (char c : paren_string) {\n    if (c == '(') {\n\
    \      paren_level++;\n    } else if (c == ')') {\n      paren_level--;\n    }\n\
    \    paren_levels.push_back(paren_level);\n  }\n  return paren_levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp2mels1ms: /tmp/tmp2mels1ms.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long current_level = 0;\n    long paren_count = 0;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            paren_count++;\n            current_level++;\n\
    \        } else if (c == ')') {\n            paren_count--;\n            current_level--;\n\
    \        }\n        if (current_level > paren_levels.size()) {\n            paren_levels.resize(current_level);\n\
    \        }\n        paren_levels[current_level] = std::max(paren_levels[current_level],\
    \ paren_count);\n    }\n    return paren_levels;\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp8xm2pves: /tmp/tmp8xm2pves.cpp:29: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels = paren_string.split(\" \");\n    std::vector<long> paren_levels_temp;\n\
    \    paren_levels_temp.push_back(1);\n    long max_level = 1;\n    for (long i\
    \ = 0; i < paren_levels.size(); i++) {\n        long current_level = paren_levels[i];\n\
    \        if (current_level > max_level) {\n            max_level = current_level;\n\
    \        }\n    }\n    for (long i = 0; i < paren_levels.size(); i++) {\n    \
    \    long current_level = paren_levels[i];\n        if (current_level > max_level)\
    \ {\n            paren_levels[i] = max_level;\n        }\n    }\n    return paren_levels_temp;\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf49n7ibu.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpf49n7ibu.cpp:10:33: error: \u2018std::string\u2019 {aka \u2018class\
    \ std::__cxx11::basic_string<char>\u2019} has no member named \u2018split\u2019\
    \n   10 |     paren_levels = paren_string.split(\" \");\n      |             \
    \                    ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    for (char c : paren_string) {\n        if (c == '(')\
    \ {\n            level++;\n        } else if (c == ')') {\n            level--;\n\
    \        }\n        levels.push_back(level);\n    }\n    return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp_v4o_usw: /tmp/tmp_v4o_usw.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            paren_level++;\n        } else if (c == ')') {\n       \
    \     paren_level--;\n        }\n        paren_levels.push_back(paren_level);\n\
    \    }\n    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp9bj4hhqj: /tmp/tmp9bj4hhqj.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    long paren_level = 0;\n    long paren_level_count =\
    \ 0;\n    long paren_level_count_max = 0;\n    long paren_level_count_min = 0;\n\
    \    long paren_level_count_sum = 0;\n    long paren_level_count_sum_max = 0;\n\
    \    long paren_level_count_sum_min = 0;\n    long paren_level_count_sum_sum =\
    \ 0;\n    long paren_level_count_sum_sum_max = 0;\n    long paren_level_count_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_max = 0;\n    long paren_level_count_sum_sum_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_max = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_max = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_min = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    long\
    \ paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n\
    \    long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max = 0;\n   \
    \ long paren_level_count_sum_sum_sum_sum_\n}\nint main() {\n    auto candidate\
    \ = parse_nested_parens;\n    assert(candidate((\"(()()) ((())) () ((())()())\"\
    )) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"() (()) ((()))\
    \ (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu9qnqd6r.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpu9qnqd6r.cpp:41:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \n   41 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpu9qnqd6r.cpp:38:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \ previously declared here\n   38 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:42:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \n   42 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpu9qnqd6r.cpp:39:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \ previously declared here\n   39 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:43:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \n   43 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:40:10: note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \ previously declared here\n   40 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:44:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \n   44 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpu9qnqd6r.cpp:38:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\u2019\
    \ previously declared here\n   38 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_min\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:45:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \n   45 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpu9qnqd6r.cpp:39:10:\
    \ note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \ previously declared here\n   39 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:46:10: error: redeclaration of \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \n   46 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:40:10: note: \u2018long int paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\u2019\
    \ previously declared here\n   40 |     long paren_level_count_sum_sum_sum_sum_sum_sum_sum_sum_sum_max\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpu9qnqd6r.cpp:48:1: error: expected initializer before \u2018}\u2019 token\n\
    \   48 | }\n      | ^\n/tmp/tmpu9qnqd6r.cpp:48:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long level = 0;\n    for (auto c : paren_string) {\n        if (c == '(')\
    \ {\n            paren_levels.push_back(level);\n            level++;\n      \
    \  } else if (c == ')') {\n            level--;\n        }\n    }\n    paren_levels.push_back(level);\n\
    \    return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp1_v408fd: /tmp/tmp1_v408fd.cpp:24: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    paren_levels.reserve(paren_string.size());\n    long paren_level = 0;\n \
    \   bool is_open = false;\n    for (auto c : paren_string) {\n        if (c ==\
    \ '(') {\n            is_open = true;\n        } else if (c == ')') {\n      \
    \      is_open = false;\n        } else if (is_open) {\n            paren_levels.push_back(paren_level);\n\
    \            paren_level++;\n        }\n    }\n    return paren_levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpje5wxqot: /tmp/tmpje5wxqot.cpp:27: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  long paren_level = 0;\n  for (char c : paren_string) {\n    if (c == '(') {\n\
    \      paren_level++;\n    } else if (c == ')') {\n      paren_level--;\n    }\n\
    \    paren_levels.push_back(paren_level);\n  }\n  return paren_levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmpa0ei92nj: /tmp/tmpa0ei92nj.cpp:23: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    long paren_level_count = 0;\n    long paren_level_max\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count =\
    \ 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n\
    \    long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n  \
    \  long paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long\
    \ paren_level_max_index = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index\
    \ = 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index =\
    \ 0;\n    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n\
    \    long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n  \
    \  long paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long\
    \ paren_level_max_count = 0;\n    long paren_level_max_index = 0;\n    long paren_level_max_count\
    \ = 0;\n    long paren_level_max_index = 0;\n    long paren_\n}\nint main() {\n\
    \    auto candidate = parse_nested_parens;\n    assert(candidate((\"(()()) ((()))\
    \ () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpthh5l0yq.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpthh5l0yq.cpp:15:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   15 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:16:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   16 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:17:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   17 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:18:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   18 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:19:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   19 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:20:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   20 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:21:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   21 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:22:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   22 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:23:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   23 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:24:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   24 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:25:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   25 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:26:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   26 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:27:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   27 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:28:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   28 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:29:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   29 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:30:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   30 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:31:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   31 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:32:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   32 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:33:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   33 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:34:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   34 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:35:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   35 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:36:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   36 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:37:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   37 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:38:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   38 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:39:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   39 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:40:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   40 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:41:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   41 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:42:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   42 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:43:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   43 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:44:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   44 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:45:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   45 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:46:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   46 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:47:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   47 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:48:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   48 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:49:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   49 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:50:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   50 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:51:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   51 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:52:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   52 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:53:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   53 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:54:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   54 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:55:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   55 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:56:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   56 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:57:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   57 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:58:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   58 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:59:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   59 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:60:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   60 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:61:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   61 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:62:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   62 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:63:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   63 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:64:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   64 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:65:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   65 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:66:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   66 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:67:10: error: redeclaration of \u2018long int paren_level_max_count\u2019\
    \n   67 |     long paren_level_max_count = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:13:10: note: \u2018long int paren_level_max_count\u2019 previously\
    \ declared here\n   13 |     long paren_level_max_count = 0;\n      |        \
    \  ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:68:10: error: redeclaration of\
    \ \u2018long int paren_level_max_index\u2019\n   68 |     long paren_level_max_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpthh5l0yq.cpp:14:10: note:\
    \ \u2018long int paren_level_max_index\u2019 previously declared here\n   14 |\
    \     long paren_level_max_index = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpthh5l0yq.cpp:70:1: error: expected initializer before \u2018}\u2019 token\n\
    \   70 | }\n      | ^\n/tmp/tmpthh5l0yq.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> paren_levels;\n\
    \  paren_levels.reserve(paren_string.size());\n  for (auto &c : paren_string)\
    \ {\n    if (c == '(') {\n      paren_levels.push_back(0);\n    } else if (c ==\
    \ ')') {\n      assert(paren_levels.back() > 0);\n      paren_levels.back()--;\n\
    \    } else {\n      assert(paren_levels.back() == 0);\n      paren_levels.back()++;\n\
    \    }\n  }\n  return paren_levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmp_pxnmmwn: /tmp/tmp_pxnmmwn.cpp:15: std::vector<long int> parse_nested_parens(std::string):\
    \ Assertion `paren_levels.back() > 0' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    std::string curr_level;\n    long curr_level_size = 1;\n    for (auto c :\
    \ paren_string) {\n        if (c == '(') {\n            curr_level.push_back(c);\n\
    \            curr_level_size += 1;\n        } else if (c == ')') {\n         \
    \   curr_level.pop_back();\n            curr_level_size -= 1;\n            if\
    \ (curr_level_size == 0) {\n                levels.push_back(curr_level.size());\n\
    \                curr_level_size = 1;\n            }\n        }\n    }\n    return\
    \ levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "tmp9l7o29_w: /tmp/tmp9l7o29_w.cpp:29: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n  std::vector<long> levels;\n\
    \  std::string paren_level;\n  long level = 0;\n  for (size_t i = 0; i < paren_string.size();\
    \ i++) {\n    if (paren_string[i] == '(') {\n      paren_level = paren_string.substr(0,\
    \ i);\n      level++;\n    } else if (paren_string[i] == ')') {\n      level--;\n\
    \      levels[level] = levels[level] + 1;\n    }\n  }\n  return levels;\n}\nint\
    \ main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> levels;\n\
    \    long level = 0;\n    bool is_open = false;\n    for (auto c : paren_string)\
    \ {\n        if (c == '(') {\n            is_open = true;\n            level++;\n\
    \        } else if (c == ')') {\n            is_open = false;\n            level--;\n\
    \        } else if (is_open) {\n            level++;\n        }\n        levels.push_back(level);\n\
    \    }\n    return levels;\n}\nint main() {\n    auto candidate = parse_nested_parens;\n\
    \    assert(candidate((\"(()()) ((())) () ((())()())\")) == (std::vector<long>({2,\
    \ 3, 1, 3})));\n    assert(candidate((\"() (()) ((())) (((())))\")) == (std::vector<long>({1,\
    \ 2, 3, 4})));\n    assert(candidate((\"(()(())((())))\")) == (std::vector<long>({4})));\n\
    }\n"
  stdout: ''
  stderr: "tmpz688lj3p: /tmp/tmpz688lj3p.cpp:28: int main(): Assertion `candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string represented multiple groups for nested parentheses separated by\
    \ spaces.\n// For each of the group, output the deepest level of nesting of parentheses.\n\
    // E.g. (()()) has maximum two levels of nesting while ((())) has three.\n// >>>\
    \ parse_nested_parens('(()()) ((())) () ((())()())')\n// [2, 3, 1, 3]\nstd::vector<long>\
    \ parse_nested_parens(std::string paren_string) {\n    std::vector<long> paren_levels;\n\
    \    long paren_level = 0;\n    std::string curr_paren_string = paren_string;\n\
    \    std::string curr_paren_level = \"\";\n    long paren_level_count = 0;\n \
    \   long paren_level_count_max = 0;\n    long paren_level_count_max_index = 0;\n\
    \    long paren_level_count_min = 0;\n    long paren_level_count_min_index = 0;\n\
    \    long paren_level_count_sum = 0;\n    long paren_level_count_sum_index = 0;\n\
    \    long paren_level_count_sum2 = 0;\n    long paren_level_count_sum2_index =\
    \ 0;\n    long paren_level_count_sum3 = 0;\n    long paren_level_count_sum3_index\
    \ = 0;\n    long paren_level_count_sum4 = 0;\n    long paren_level_count_sum4_index\
    \ = 0;\n    long paren_level_count_sum5 = 0;\n    long paren_level_count_sum5_index\
    \ = 0;\n    long paren_level_count_sum6 = 0;\n    long paren_level_count_sum6_index\
    \ = 0;\n    long paren_level_count_sum7 = 0;\n    long paren_level_count_sum7_index\
    \ = 0;\n    long paren_level_count_sum8 = 0;\n    long paren_level_count_sum8_index\
    \ = 0;\n    long paren_level_count_sum9 = 0;\n    long paren_level_count_sum9_index\
    \ = 0;\n    long paren_level_count_sum10 = 0;\n    long paren_level_count_sum10_index\
    \ = 0;\n    long paren_level_count_sum11 = 0;\n    long paren_level_count_sum11_index\
    \ = 0;\n    long paren_level_count_sum12 = 0;\n    long paren_level_count_sum12_index\
    \ = 0;\n    long paren_level_count_sum13 = 0;\n    long paren_level_count_sum13_index\
    \ = 0;\n    long paren_level_count_sum14 = 0;\n    long paren_level_count_sum14_index\
    \ = 0;\n    long paren_level_count_sum15 = 0;\n    long paren_level_count_sum15_index\
    \ = 0;\n    long paren_level_count_sum16 = 0;\n    long paren_level_count_sum16_index\
    \ = 0;\n    long paren_level_count_sum17 = 0;\n    long paren_level_count_sum17_index\
    \ = 0;\n    long paren_level_count_sum18 = 0;\n    long paren_level_count_sum18_index\
    \ = 0;\n    long paren_level_count_sum19 = 0;\n    long paren_level_count_sum19_index\
    \ = 0;\n    long paren_level_count_sum20 = 0;\n    long paren_level_count_sum20_index\
    \ = 0;\n    long paren_level_count_sum21 = 0;\n    long paren_level_count_sum21\n\
    }\nint main() {\n    auto candidate = parse_nested_parens;\n    assert(candidate((\"\
    (()()) ((())) () ((())()())\")) == (std::vector<long>({2, 3, 1, 3})));\n    assert(candidate((\"\
    () (()) ((())) (((())))\")) == (std::vector<long>({1, 2, 3, 4})));\n    assert(candidate((\"\
    (()(())((())))\")) == (std::vector<long>({4})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvx320ce9.cpp: In function \u2018std::vector<long int> parse_nested_parens(std::string)\u2019\
    :\n/tmp/tmpvx320ce9.cpp:60:1: error: expected initializer before \u2018}\u2019\
    \ token\n   60 | }\n      | ^\n/tmp/tmpvx320ce9.cpp:60:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError

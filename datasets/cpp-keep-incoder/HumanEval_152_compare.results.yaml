name: HumanEval_152_compare
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long diff = 0;\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long sum2 = 0;\n    long max2\
    \ = 0;\n    long min2 = 0;\n    long sum3 = 0;\n    long max3 = 0;\n    long min3\
    \ = 0;\n    long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long sum5\
    \ = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long sum6 = 0;\n    long max6\
    \ = 0;\n    long min6 = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7\
    \ = 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long sum9\
    \ = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long sum10 = 0;\n    long\
    \ max10 = 0;\n    long min10 = 0;\n    long sum11 = 0;\n    long max11 = 0;\n\
    \    long min11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n    long min12\
    \ = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long\
    \ sum14 = 0;\n    long max14 = 0;\n    long min14 = 0;\n    long sum15 = 0;\n\
    \    long max15 = 0;\n    long min15 = 0;\n    long sum16 = 0;\n    long max16\
    \ = 0;\n    long min16 = 0;\n    long sum17 = 0;\n    long max17 = 0;\n    long\
    \ min17 = 0;\n    long sum18 = 0;\n    long max18 = 0;\n    long min18 = 0;\n\
    \    long sum19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n    long sum20\
    \ = 0;\n    long max20 = 0;\n    long min20 = 0;\n    long sum21 = 0;\n    long\
    \ max21 = 0;\n    long min21 = 0;\n    long sum22 = 0;\n    long max22 = 0;\n\
    \    long min22 = 0;\n    long sum23 = 0;\n    long max23 = 0;\n    long min23\
    \ = 0;\n    long sum24 = 0;\n    long max24 = 0;\n    long min24 = 0;\n    long\
    \ sum25 = 0;\n    long max25 = 0;\n    long min25 = 0;\n    long sum26 = 0;\n\
    \    long max26 = 0;\n    long min26 = 0;\n    long sum27 = 0;\n    long max27\
    \ = 0;\n    long min27 = 0;\n    long sum28 = 0;\n    long max28 = 0;\n    long\
    \ min28 = 0;\n    long sum29 = 0;\n    long max\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeirkbfb2.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpeirkbfb2.cpp:102:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  102 | }\n      | ^\n/tmp/tmpeirkbfb2.cpp:102:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        score = game[i];\n\
    \        guess = guess[i];\n        if (guess == score) {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = abs(guess - score);\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbbchuh5l.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpbbchuh5l.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpbbchuh5l.cpp:19:24: error: invalid types\
    \ \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n \
    \  19 |         guess = guess[i];\n      |                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpff6axl_q: /tmp/tmpff6axl_q.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        if (game[i] ==\
    \ guess[i]) {\n            score++;\n        } else {\n            diff = abs(game[i]\
    \ - guess[i]);\n        }\n        result[i] = diff;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpv825vqwr: /tmp/tmpv825vqwr.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long diff = 0;\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        diff = abs(guess[i]\
    \ - sum);\n        result[i] = diff;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp2x0s6oo1: /tmp/tmp2x0s6oo1.cpp:28: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n\
    \        score = game[i];\n        if (guess == score) {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = abs(guess - score);\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpndzwwosd.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpndzwwosd.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpndzwwosd.cpp:17:34: error: request for member\
    \ \u2018size\u2019 in \u2018guess\u2019, which is of non-class type \u2018long\
    \ int\u2019\n   17 |     for (size_t i = 0; i < guess.size(); i++) {\n      |\
    \                                  ^~~~\n/tmp/tmpndzwwosd.cpp:18:24: error: invalid\
    \ types \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n\
    \   18 |         guess = guess[i];\n      |                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i];\n        result[i]\
    \ = abs(guess[i] - score);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpueau4cpd: /tmp/tmpueau4cpd.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result;\n    long sum = 0;\n\
    \    long diff = 0;\n    long count = 0;\n    long sum2 = 0;\n    long diff2 =\
    \ 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long diff3 = 0;\n    long\
    \ count3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long count4 = 0;\n\
    \    long sum5 = 0;\n    long diff5 = 0;\n    long count5 = 0;\n    long sum6\
    \ = 0;\n    long diff6 = 0;\n    long count6 = 0;\n    long sum7 = 0;\n    long\
    \ diff7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n\
    \    long count8 = 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long count9\
    \ = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long count10 = 0;\n   \
    \ long sum11 = 0;\n    long diff11 = 0;\n    long count11 = 0;\n    long sum12\
    \ = 0;\n    long diff12 = 0;\n    long count12 = 0;\n    long sum13 = 0;\n   \
    \ long diff13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n    long diff14\
    \ = 0;\n    long count14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n   \
    \ long count15 = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long count16\
    \ = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long count17 = 0;\n   \
    \ long sum18 = 0;\n    long diff18 = 0;\n    long count18 = 0;\n    long sum19\
    \ = 0;\n    long diff19 = 0;\n    long count19 = 0;\n    long sum20 = 0;\n   \
    \ long diff20 = 0;\n    long count20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long count21 = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n   \
    \ long count22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long count23\
    \ = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long count24 = 0;\n   \
    \ long sum25 = 0;\n    long diff25 = 0;\n    long count25 = 0;\n    long sum26\
    \ = 0;\n    long diff26 = 0;\n    long count26 = 0;\n    long sum27 = 0;\n   \
    \ long diff27 = 0;\n    long count27 = 0;\n    long sum28 = 0;\n    long diff28\
    \ = 0;\n    long count28 = 0;\n    long sum29 = 0;\n    long diff29 = 0;\n\n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpgn2m5tgv: /tmp/tmpgn2m5tgv.cpp:106: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp04knyvgu: /tmp/tmp04knyvgu.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    long min =\
    \ std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for(size_t i = 0; i < game.size(); ++i) {\n        sum += game[i];\n    \
    \    if(game[i] > max) {\n            max = game[i];\n        }\n        if(game[i]\
    \ < min) {\n            min = game[i];\n        }\n    }\n    for(size_t i = 0;\
    \ i < guess.size(); ++i) {\n        sum += guess[i];\n        if(guess[i] > max)\
    \ {\n            max = guess[i];\n        }\n        if(guess[i] < min) {\n  \
    \          min = guess[i];\n        }\n    }\n    for(size_t i = 0; i < game.size();\
    \ ++i) {\n        result[i] = abs(sum - game[i]);\n    }\n    for(size_t i = 0;\
    \ i < guess.size(); ++i) {\n        result[i] += abs(sum - guess[i]);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpya9hg37_: /tmp/tmpya9hg37_.cpp:46: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (long i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = sum - guess[i];\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpotz6izv7: /tmp/tmpotz6izv7.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n\
    \        score = game[i];\n        if (guess == score) {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = abs(guess - score);\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8izxan30.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp8izxan30.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp8izxan30.cpp:17:34: error: request for member\
    \ \u2018size\u2019 in \u2018guess\u2019, which is of non-class type \u2018long\
    \ int\u2019\n   17 |     for (size_t i = 0; i < guess.size(); i++) {\n      |\
    \                                  ^~~~\n/tmp/tmp8izxan30.cpp:18:24: error: invalid\
    \ types \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n\
    \   18 |         guess = guess[i];\n      |                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    long sum2\
    \ = 0;\n    long diff2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n   \
    \ long sum4 = 0;\n    long diff4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n\
    \    long sum5 = 0;\n    long diff5 = 0;\n    long max5 = 0;\n    long min5 =\
    \ 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long max6 = 0;\n    long min6\
    \ = 0;\n    long sum7 = 0;\n    long diff7 = 0;\n    long max7 = 0;\n    long\
    \ min7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long max8 = 0;\n   \
    \ long min8 = 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long max9 = 0;\n\
    \    long min9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long max10\
    \ = 0;\n    long min10 = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long\
    \ max11 = 0;\n    long min11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n\
    \    long max12 = 0;\n    long min12 = 0;\n    long sum13 = 0;\n    long diff13\
    \ = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long sum14 = 0;\n    long\
    \ diff14 = 0;\n    long max14 = 0;\n    long min14 = 0;\n    long sum15 = 0;\n\
    \    long diff15 = 0;\n    long max15 = 0;\n    long min15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long max16 = 0;\n    long min16 = 0;\n    long\
    \ sum17 = 0;\n    long diff17 = 0;\n    long max17 = 0;\n    long min17 = 0;\n\
    \    long sum18 = 0;\n    long diff18 = 0;\n    long max18 = 0;\n    long min18\
    \ = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n    long max19 = 0;\n    long\
    \ min19 = 0;\n    long sum20 = 0;\n    long diff20 = 0;\n    long max20 = 0;\n\
    \    long min20 = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long max21\
    \ = 0;\n    long min21 = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long\
    \ \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0mwgopmg.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp0mwgopmg.cpp:103:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  103 | }\n      | ^\n/tmp/tmp0mwgopmg.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1m6cm4c3: /tmp/tmp1m6cm4c3.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (long i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long guess = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n\
    \        if (game[i] == guess[i]) {\n            score = 0;\n        }\n     \
    \   else {\n            score = abs(game[i] - guess[i]);\n        }\n        result[i]\
    \ = score;\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvty42f7l.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvty42f7l.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpvty42f7l.cpp:19:31: error: invalid types\
    \ \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n \
    \  19 |         if (game[i] == guess[i]) {\n      |                          \
    \     ^\n/tmp/tmpvty42f7l.cpp:23:42: error: invalid types \u2018long int[size_t\
    \ {aka long unsigned int}]\u2019 for array subscript\n   23 |             score\
    \ = abs(game[i] - guess[i]);\n      |                                        \
    \  ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      result[i] = 0;\n            score = 0;\n        } else {\n            result[i]\
    \ = abs(game[i] - guess[i]);\n            score = abs(game[i] - guess[i]);\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long diff\
    \ = 0;\n    for(int i = 0; i < game.size(); i++) {\n        if(game[i] != guess[i])\
    \ {\n            diff = abs(game[i] - guess[i]);\n        }\n        result[i]\
    \ = diff;\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpwaj90izd: /tmp/tmpwaj90izd.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += guess[i];\n\
    \    }\n    for (size_t i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i]\
    \ - sum);\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmprjs0vg7v: /tmp/tmprjs0vg7v.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ diff = 0;\n    long sum = 0;\n    long count = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        if(game[i] == guess[i]) {\n            count++;\n          \
    \  sum += game[i];\n        }\n        else {\n            diff = abs(game[i]\
    \ - guess[i]);\n            sum += diff;\n            result[i] = sum;\n     \
    \       count = 0;\n            sum = 0;\n        }\n    }\n    \n    for(long\
    \ i = 0; i < guess.size(); i++) {\n        if(game[i] != guess[i]) {\n       \
    \     diff = abs(game[i] - guess[i]);\n            sum += diff;\n            result[i]\
    \ = sum;\n        }\n    }\n    \n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpwwne_o_0: /tmp/tmpwwne_o_0.cpp:45: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guesses\
    \ = 0;\n    long scoreDiff = 0;\n    long guessesDiff = 0;\n    long maxScore\
    \ = std::numeric_limits<long>::max();\n    long maxGuess = std::numeric_limits<long>::max();\n\
    \    long minScore = std::numeric_limits<long>::min();\n    long minGuess = std::numeric_limits<long>::min();\n\
    \    long maxScoreDiff = std::numeric_limits<long>::max();\n    long maxGuessesDiff\
    \ = std::numeric_limits<long>::max();\n    long minScoreDiff = std::numeric_limits<long>::min();\n\
    \    long minGuessesDiff = std::numeric_limits<long>::min();\n    long maxScoreDiff2\
    \ = std::numeric_limits<long>::max();\n    long maxGuessesDiff2 = std::numeric_limits<long>::max();\n\
    \    long minScoreDiff2 = std::numeric_limits<long>::min();\n    long minGuessesDiff2\
    \ = std::numeric_limits<long>::min();\n    long maxScoreDiff3 = std::numeric_limits<long>::max();\n\
    \    long maxGuessesDiff3 = std::numeric_limits<long>::max();\n    long minScoreDiff3\
    \ = std::numeric_limits<long>::min();\n    long minGuessesDiff3 = std::numeric_limits<long>::min();\n\
    \    long maxScoreDiff4 = std::numeric_limits<long>::max();\n    long maxGuessesDiff4\
    \ = std::numeric_limits<long>::max();\n    long minScoreDiff4 = std::numeric_limits<long>::min();\n\
    \    long minGuessesDiff4 = std::numeric_limits<long>::min();\n    long maxScoreDiff5\
    \ = std::numeric_limits<long>::max();\n    long maxGuessesDiff5 = std::numeric_limits<long>::max();\n\
    \    long minScoreDiff5 = std::numeric_limits<long>::min();\n    long minGuessesDiff5\
    \ = std::numeric_limits<long>::min();\n    long maxScoreDiff6 = std::numeric_limits<long>::max();\n\
    \    long maxGuessesDiff6 = std::numeric_limits<long>::max();\n    long minScoreDiff6\
    \ = std::numeric_limits<long>::min();\n    long minGuessesDiff6 = std::numeric_limits<long>::min();\n\
    \    long maxScoreDiff7 = std::numeric_limits<long>::max();\n    long maxGuessesDiff7\
    \ = std::numeric_limits<long>::max();\n    long minScore\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgr_qsv7w.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpgr_qsv7w.cpp:50:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   50 | }\n      | ^\n/tmp/tmpgr_qsv7w.cpp:50:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long count = 0;\n    for(int i = 0; i < game.size();\
    \ i++){\n        if(game[i] == guess[i]){\n            sum+=game[i];\n       \
    \     count++;\n        }\n        else{\n            diff = abs(game[i] - guess[i]);\n\
    \            sum+=diff;\n            count++;\n        }\n    }\n    for(int i\
    \ = 0; i < game.size(); i++){\n        if(game[i] == guess[i]){\n            result[i]\
    \ = 0;\n        }\n        else{\n            result[i] = abs(game[i] - guess[i]);\n\
    \        }\n    }\n    if(count == game.size()){\n        return result;\n   \
    \ }\n    else return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n  \
    \      if (game[i] > max) {\n            max = game[i];\n        }\n        if\
    \ (game[i] < min) {\n            min = game[i];\n        }\n    }\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - sum);\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        if (result[i]\
    \ != 0) {\n            result[i] = result[i] / sum;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpuzarw8ad: /tmp/tmpuzarw8ad.cpp:40: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (long i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \    }\n    for (long i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i]\
    \ - sum);\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp4q4pmmgz: /tmp/tmp4q4pmmgz.cpp:27: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n   \
    \ long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t =\
    \ 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n   \
    \ long y = 0;\n    long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc\
    \ = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n\
    \    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long\
    \ ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp =\
    \ 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n\
    \    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long\
    \ yy = 0;\n    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc\
    \ = 0;\n    long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg\
    \ = 0;\n    long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk\
    \ = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n    long ooo\
    \ = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss\
    \ = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www\
    \ = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa\
    \ = 0;\n    long bbbb = 0;\n    long cccc = 0;\n    long dddd = 0;\n    long eeee\
    \ = 0;\n    long ffff = 0;\n    long gggg = 0;\n    long hhhh = 0;\n    long iiii\
    \ = 0;\n    long jjjj = 0;\n    long kkkk = 0;\n    long llll = 0;\n    long mmmm\
    \ = 0;\n    long nnnn = 0;\n    long oooo = 0;\n    long pppp = 0;\n    long qqqq\
    \ = 0;\n    long rrrr = 0;\n    long ssss = 0;\n    long tttt = 0;\n    long uuuu\
    \ = 0;\n    long \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvwby3yya.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvwby3yya.cpp:110:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  110 | }\n      | ^\n/tmp/tmpvwby3yya.cpp:110:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (long i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Write your code here\n    std::vector<long> result(game.size());\n   \
    \ long sum = 0;\n    long min = 0;\n    long max = 0;\n    long diff = 0;\n  \
    \  long minDiff = std::numeric_limits<long>::max();\n    long maxDiff = std::numeric_limits<long>::min();\n\
    \    for(size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n    \
    \    if(game[i] > max) {\n            max = game[i];\n        }\n        if(game[i]\
    \ < min) {\n            min = game[i];\n        }\n    }\n    for(size_t i = 0;\
    \ i < guess.size(); i++) {\n        sum += guess[i];\n        if(guess[i] > max)\
    \ {\n            max = guess[i];\n        }\n        if(guess[i] < min) {\n  \
    \          min = guess[i];\n        }\n    }\n    for(size_t i = 0; i < game.size();\
    \ i++) {\n        diff = game[i] - guess[i];\n        if(diff > maxDiff) {\n \
    \           maxDiff = diff;\n        }\n        if(diff < minDiff) {\n       \
    \     minDiff = diff;\n        }\n    }\n    for(size_t i = 0; i < game.size();\
    \ i++) {\n        result[i] = abs(diff);\n    }\n    for(size_t i = 0; i < game.size();\
    \ i++) {\n        result[i] = abs(result[i] - sum);\n    }\n    for(size_t i =\
    \ 0; i < game.size(); i++) {\n        result[i] = abs(result[i] - max);\n    }\n\
    \    for(size_t i = 0; i < game.size(); i++) {\n        result[i] = abs(result[i]\
    \ - min);\n    }\n    for(size_t i = 0; i < game.size(); i++) {\n        result[i]\
    \ = abs(result[i] - minDiff);\n    }\n    for(size_t i = 0; i < game.size(); i++)\
    \ {\n        result[i] = abs(result[i] - maxDiff);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpn7ikynay: /tmp/tmpn7ikynay.cpp:71: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long min = 0;\n    long max = 0;\n    long diff = 0;\n    long\
    \ sum2 = 0;\n    long min2 = 0;\n    long max2 = 0;\n    long diff2 = 0;\n   \
    \ long sum3 = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long diff3 = 0;\n\
    \    long sum4 = 0;\n    long min4 = 0;\n    long max4 = 0;\n    long diff4 =\
    \ 0;\n    long sum5 = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long diff5\
    \ = 0;\n    long sum6 = 0;\n    long min6 = 0;\n    long max6 = 0;\n    long diff6\
    \ = 0;\n    long sum7 = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long diff7\
    \ = 0;\n    long sum8 = 0;\n    long min8 = 0;\n    long max8 = 0;\n    long diff8\
    \ = 0;\n    long sum9 = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long\
    \ diff10 = 0;\n    long sum11 = 0;\n    long min11 = 0;\n    long max11 = 0;\n\
    \    long diff11 = 0;\n    long sum12 = 0;\n    long min12 = 0;\n    long max12\
    \ = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n    long min13 = 0;\n    long\
    \ max13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long min14 = 0;\n\
    \    long max14 = 0;\n    long diff14 = 0;\n    long sum15 = 0;\n    long min15\
    \ = 0;\n    long max15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long\
    \ min16 = 0;\n    long max16 = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n\
    \    long min17 = 0;\n    long max17 = 0;\n    long diff17 = 0;\n    long sum18\
    \ = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long diff18 = 0;\n    long\
    \ sum19 = 0;\n    long min19 = 0;\n    long max19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long min21 = 0;\n    long max21 = 0;\n    long\
    \ diff21 = 0;\n    long sum22 = 0;\n    long min22 = 0;\n    \n}\nint main() {\n\
    \    auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmppluzwcpp: /tmp/tmppluzwcpp.cpp:106: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        result[i]\
    \ = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpy_m87f2f: /tmp/tmpy_m87f2f.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long count = 0;\n    for (long i = 0; i < game.size(); i++) {\n\
    \        if (game[i] == guess[i]) {\n            result[i] = 0;\n            sum\
    \ += game[i];\n            count++;\n        } else {\n            result[i] =\
    \ abs(game[i] - guess[i]);\n            sum += game[i];\n        }\n    }\n  \
    \  if (count == 0) {\n        result[0] = sum;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp7ne16pj_: /tmp/tmp7ne16pj_.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3})), (std::vector<long>({-1, -2, -3}))) == (std::vector<long>({2, 4, 6}))'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA\
    \ = 0;\n    long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n\
    \    long FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long\
    \ JJ = 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN =\
    \ 0;\n    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n\
    \    long SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long\
    \ WW = 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA\
    \ = 0;\n    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE\
    \ = 0;\n    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III\
    \ = 0;\n    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM\
    \ = 0;\n    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ\
    \ = 0;\n    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU\
    \ = 0;\n    long VVV = 0;\n    long WWW = 0;\n    long XXX = 0;\n    long \n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvdett4pl.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvdett4pl.cpp:112:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  112 | }\n      | ^\n/tmp/tmpvdett4pl.cpp:112:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long maxScore = std::max(game.front(),\
    \ guess.front());\n    long minScore = std::min(game.back(), guess.back());\n\
    \    long scoreDiff = maxScore - minScore;\n    long scoreDiffAbs = std::abs(scoreDiff);\n\
    \    long scoreDiffAbsMax = std::max(scoreDiffAbs, 1);\n    long scoreDiffAbsMin\
    \ = std::min(scoreDiffAbs, 1);\n    long scoreDiffAbsMaxMin = std::min(scoreDiffAbsMax,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMin = std::min(scoreDiffAbsMaxMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMin = std::min(scoreDiffAbsMaxMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMin = std::min(scoreDiffAbsMaxMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n    long scoreDiffAbsMaxMinMinMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMinMin,\
    \ scoreDiffAbsMin\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzgemb8mt.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpzgemb8mt.cpp:19:52: error: no matching\
    \ function for call to \u2018max(long int&, int)\u2019\n   19 |     long scoreDiffAbsMax\
    \ = std::max(scoreDiffAbs, 1);\n      |                                      \
    \              ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:222:5: note:\
    \ candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const _Tp&,\
    \ const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n      |\
    \     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:19:52: note:   deduced\
    \ conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018int\u2019)\n   19 |     long scoreDiffAbsMax = std::max(scoreDiffAbs,\
    \ 1);\n      |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::max(const _Tp&, const _Tp&, _Compare)\u2019\n  268 |     max(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:19:52:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018int\u2019)\n   19 |     long scoreDiffAbsMax = std::max(scoreDiffAbs,\
    \ 1);\n      |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3462:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::max(std::initializer_list<_Tp>)\u2019\
    \n 3462 |     max(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3462:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:19:52:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   19 |     long scoreDiffAbsMax = std::max(scoreDiffAbs, 1);\n \
    \     |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::max(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3468 |     max(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:19:52: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   19 |     long scoreDiffAbsMax = std::max(scoreDiffAbs, 1);\n      |     \
    \                                               ^\n/tmp/tmpzgemb8mt.cpp:20:52:\
    \ error: no matching function for call to \u2018min(long int&, int)\u2019\n  \
    \ 20 |     long scoreDiffAbsMin = std::min(scoreDiffAbs, 1);\n      |        \
    \                                            ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:\
    \ candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const _Tp&,\
    \ const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n      |\
    \     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:20:52: note:   deduced\
    \ conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018int\u2019)\n   20 |     long scoreDiffAbsMin = std::min(scoreDiffAbs,\
    \ 1);\n      |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:20:52:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018int\u2019)\n   20 |     long scoreDiffAbsMin = std::min(scoreDiffAbs,\
    \ 1);\n      |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::min(std::initializer_list<_Tp>)\u2019\
    \n 3450 |     min(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:20:52:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   20 |     long scoreDiffAbsMin = std::min(scoreDiffAbs, 1);\n \
    \     |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzgemb8mt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::min(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3456 |     min(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpzgemb8mt.cpp:20:52: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   20 |     long scoreDiffAbsMin = std::min(scoreDiffAbs, 1);\n      |     \
    \                                               ^\n/tmp/tmpzgemb8mt.cpp:24:10:\
    \ error: redeclaration of \u2018long int scoreDiffAbsMaxMinMinMin\u2019\n   24\
    \ |     long scoreDiffAbsMaxMinMinMin = std::min(scoreDiffAbsMaxMinMinMin, scoreDiffAbsMin);\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:23:10: note:\
    \ \u2018long int scoreDiffAbsMaxMinMinMin\u2019 previously declared here\n   23\
    \ |     long scoreDiffAbsMaxMinMinMin = std::min(scoreDiffAbsMaxMinMin, scoreDiffAbsMin);\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:26:10: error:\
    \ redeclaration of \u2018long int scoreDiffAbsMaxMinMinMinMin\u2019\n   26 | \
    \    long scoreDiffAbsMaxMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:25:10:\
    \ note: \u2018long int scoreDiffAbsMaxMinMinMinMin\u2019 previously declared here\n\
    \   25 |     long scoreDiffAbsMaxMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:28:10:\
    \ error: redeclaration of \u2018long int scoreDiffAbsMaxMinMinMinMinMin\u2019\n\
    \   28 |     long scoreDiffAbsMaxMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:27:10:\
    \ note: \u2018long int scoreDiffAbsMaxMinMinMinMinMin\u2019 previously declared\
    \ here\n   27 |     long scoreDiffAbsMaxMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:30:10:\
    \ error: redeclaration of \u2018long int scoreDiffAbsMaxMinMinMinMinMinMin\u2019\
    \n   30 |     long scoreDiffAbsMaxMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:29:10:\
    \ note: \u2018long int scoreDiffAbsMaxMinMinMinMinMinMin\u2019 previously declared\
    \ here\n   29 |     long scoreDiffAbsMaxMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:32:10:\
    \ error: redeclaration of \u2018long int scoreDiffAbsMaxMinMinMinMinMinMinMin\u2019\
    \n   32 |     long scoreDiffAbsMaxMinMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:31:10:\
    \ note: \u2018long int scoreDiffAbsMaxMinMinMinMinMinMinMin\u2019 previously declared\
    \ here\n   31 |     long scoreDiffAbsMaxMinMinMinMinMinMinMin = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMin,\
    \ scoreDiffAbsMin);\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzgemb8mt.cpp:33:117:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   33 |     long scoreDiffAbsMaxMinMinMinMinMinMinMinMin\
    \ = std::min(scoreDiffAbsMaxMinMinMinMinMinMinMinMin, scoreDiffAbsMin\n      |\
    \                                                            ~               \
    \                                         ^\n      |                         \
    \                                                                            \
    \                )\n   34 | }\n      | ~                                     \
    \                                                                            \
    \   \n/tmp/tmpzgemb8mt.cpp:34:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   34 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ sum2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long diff3 = 0;\n  \
    \  long sum4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long diff5 = 0;\n\
    \    long sum6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n    long diff7 =\
    \ 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long sum11 = 0;\n    long\
    \ diff11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n\
    \    long diff13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n    long sum15\
    \ = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long\
    \ sum17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long diff18 = 0;\n\
    \    long sum19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long sum22 = 0;\n    long\
    \ diff22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long sum24 = 0;\n\
    \    long diff24 = 0;\n    long sum25 = 0;\n    long diff25 = 0;\n    long sum26\
    \ = 0;\n    long diff26 = 0;\n    long sum27 = 0;\n    long diff27 = 0;\n    long\
    \ sum28 = 0;\n    long diff28 = 0;\n    long sum29 = 0;\n    long diff29 = 0;\n\
    \    long sum30 = 0;\n    long diff30 = 0;\n    long sum31 = 0;\n    long diff31\
    \ = 0;\n    long sum32 = 0;\n    long diff32 = 0;\n    long sum33 = 0;\n    long\
    \ diff33 = 0;\n    long sum34 = 0;\n    long diff34 = 0;\n    long sum35 = 0;\n\
    \    long diff35 = 0;\n    long sum36 = 0;\n    long diff36 = 0;\n    long sum37\
    \ = 0;\n    long diff37 = 0;\n    long sum38 = 0;\n    long diff38 = 0;\n    long\
    \ sum39 = 0;\n    long diff39 = 0;\n    long sum40 = 0;\n    long diff40 = 0;\n\
    \    long sum41 = 0;\n    long diff41 = 0;\n    long sum42 = 0;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpw5eeupk0: /tmp/tmpw5eeupk0.cpp:104: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    long max\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    long minIndex =\
    \ -1;\n    long maxIndex = -1;\n    long minScore = std::numeric_limits<long>::max();\n\
    \    long maxScore = -std::numeric_limits<long>::max();\n    long minGuess = std::numeric_limits<long>::max();\n\
    \    long maxGuess = -std::numeric_limits<long>::max();\n    long minGuesses =\
    \ std::numeric_limits<long>::max();\n    long maxGuesses = -std::numeric_limits<long>::max();\n\
    \    long minGuesses = std::numeric_limits<long>::max();\n    long maxGuesses\
    \ = -std::numeric_limits<long>::max();\n    long minScores = std::numeric_limits<long>::max();\n\
    \    long maxScores = -std::numeric_limits<long>::max();\n    long minGuesses\
    \ = std::numeric_limits<long>::max();\n    long maxGuesses = -std::numeric_limits<long>::max();\n\
    \    long minGuesses = std::numeric_limits<long>::max();\n    long maxGuesses\
    \ = -std::numeric_limits<long>::max();\n    long minScores = std::numeric_limits<long>::max();\n\
    \    long maxScores = -std::numeric_limits<long>::max();\n    long minScores =\
    \ std::numeric_limits<long>::max();\n    long maxScores = -std::numeric_limits<long>::max();\n\
    \    long minScores = std::numeric_limits<long>::max();\n    long maxScores =\
    \ -std::numeric_limits<long>::max();\n    long minScores = std::numeric_limits<long>::max();\n\
    \    long maxScores = -std::numeric_limits<long>::max();\n    long minScores =\
    \ std::numeric_limits<long>::max();\n    long maxScores = -std::numeric_limits<long>::max();\n\
    \    long minScores = std::numeric_limits<long>::max();\n    long maxScores =\
    \ -std::numeric_limits<long>::max();\n    long minScores = std::numeric_limits<long>::max();\n\
    \    long maxScores = -std::numeric_limits<long>::max();\n    long minScores =\
    \ std::numeric_limits<long>::max();\n    long maxScores = -std::numeric_limits<long>::max();\n\
    \    long minScores = std::numeric_limits<long>::max();\n    long \n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8uhevul4.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp8uhevul4.cpp:26:10: error: redeclaration\
    \ of \u2018long int minGuesses\u2019\n   26 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:24:10: note: \u2018long int\
    \ minGuesses\u2019 previously declared here\n   24 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:27:10: error: redeclaration\
    \ of \u2018long int maxGuesses\u2019\n   27 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:25:10: note: \u2018long int\
    \ maxGuesses\u2019 previously declared here\n   25 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:30:10: error: redeclaration\
    \ of \u2018long int minGuesses\u2019\n   30 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:24:10: note: \u2018long int\
    \ minGuesses\u2019 previously declared here\n   24 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:31:10: error: redeclaration\
    \ of \u2018long int maxGuesses\u2019\n   31 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:25:10: note: \u2018long int\
    \ maxGuesses\u2019 previously declared here\n   25 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:32:10: error: redeclaration\
    \ of \u2018long int minGuesses\u2019\n   32 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:24:10: note: \u2018long int\
    \ minGuesses\u2019 previously declared here\n   24 |     long minGuesses = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:33:10: error: redeclaration\
    \ of \u2018long int maxGuesses\u2019\n   33 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:25:10: note: \u2018long int\
    \ maxGuesses\u2019 previously declared here\n   25 |     long maxGuesses = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~~\n/tmp/tmp8uhevul4.cpp:34:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   34 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:35:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   35 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:36:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   36 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:37:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   37 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:38:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   38 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:39:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   39 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:40:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   40 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:41:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   41 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:42:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   42 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:43:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   43 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:44:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   44 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:45:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   45 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:46:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   46 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:47:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   47 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:48:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   48 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:49:10: error: redeclaration\
    \ of \u2018long int maxScores\u2019\n   49 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:29:10: note: \u2018long int\
    \ maxScores\u2019 previously declared here\n   29 |     long maxScores = -std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:50:10: error: redeclaration\
    \ of \u2018long int minScores\u2019\n   50 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:28:10: note: \u2018long int\
    \ minScores\u2019 previously declared here\n   28 |     long minScores = std::numeric_limits<long>::max();\n\
    \      |          ^~~~~~~~~\n/tmp/tmp8uhevul4.cpp:52:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmp8uhevul4.cpp:52:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = sum - guess[i];\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpbfuueka9: /tmp/tmpbfuueka9.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        result[i]\
    \ = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpl2hh7e1i: /tmp/tmpl2hh7e1i.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); ++i) {\n        if (game[i] == guess[i]) {\n      \
    \      score = 0;\n        } else {\n            score = abs(game[i] - guess[i]);\n\
    \        }\n        result[i] = score;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      result[i] = 0;\n            score = 0;\n        } else {\n            result[i]\
    \ = abs(game[i] - guess[i]);\n            score = abs(game[i] - guess[i]);\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2c8srz3v.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp2c8srz3v.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp2c8srz3v.cpp:70:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   70 |     long i = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:18:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:71:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   71 |     long j = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:19:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   19 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:72:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   72 |     long k = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:20:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   20 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:73:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   73 |     long l = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:21:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   21 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:74:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   74 |     long m = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:22:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   22 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:75:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   75 |     long n = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:23:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   23 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:76:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   76 |     long o = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:24:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   24 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:77:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   77 |     long p = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:25:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   25 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:78:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   78 |     long q = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:26:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   26 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:79:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   79 |     long r = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:27:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   27 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:80:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   80 |     long s = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:28:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   28 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:81:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   81 |     long t = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:29:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   29 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:82:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   82 |     long u = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:30:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   30 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:83:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   83 |     long v = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:31:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   31 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:84:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   84 |     long w = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:32:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   32 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:85:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   85 |     long x = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:33:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   33 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:86:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   86 |     long y = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:34:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   34 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:87:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   87 |     long z = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:35:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   35 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:88:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   88 |     long A = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:36:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   36 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:89:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   89 |     long B = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:37:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   37 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:90:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   90 |     long C = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:38:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   38 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:91:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   91 |     long D = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:39:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   39 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:92:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   92 |     long E = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:40:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   40 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:93:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   93 |     long F = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:41:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   41 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:94:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   94 |     long G = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:42:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   42 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:95:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   95 |     long H = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:43:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   43 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:96:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   96 |     long I = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:44:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   44 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:97:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   97 |     long J = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:45:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   45 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:98:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   98 |     long K = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:46:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   46 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:99:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   99 |     long L = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:47:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   47 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:100:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  100 |     long M = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:48:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   48 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:101:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  101 |     long N = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:49:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   49 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:102:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  102 |     long O = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:50:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   50 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:103:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  103 |     long P = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:51:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   51 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:104:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  104 |     long Q = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:52:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   52 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:105:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  105 |     long R = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:53:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   53 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:106:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  106 |     long S = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:54:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   54 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:107:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  107 |     long T = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:55:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   55 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:108:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  108 |     long U = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:56:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   56 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:109:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  109 |     long V = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:57:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   57 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:110:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  110 |     long W = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:58:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   58 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:111:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  111 |     long X = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:59:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   59 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:112:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  112 |     long Y = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:60:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   60 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:113:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  113 |     long Z = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:61:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   61 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:114:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  114 |     long a = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:62:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   62 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:115:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  115 |     long b = 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:63:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   63 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmp2c8srz3v.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmp2c8srz3v.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long guess = 0;\n    long diff = 0;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n   \
    \ long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s =\
    \ 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n   \
    \ long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B =\
    \ 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n   \
    \ long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K =\
    \ 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n   \
    \ long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T =\
    \ 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n   \
    \ long Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC\
    \ = 0;\n    long AD = 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n\
    \    long AH = 0;\n    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long\
    \ AL = 0;\n    long AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP =\
    \ 0;\n    long AQ = 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n\
    \    long AU = 0;\n    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long\
    \ AY = 0;\n    long AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC =\
    \ 0;\n    long BD = 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n\
    \    long BH = 0;\n    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long\
    \ BL = 0;\n    long BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP =\
    \ 0;\n    long BQ = 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n\
    \    long BU = 0;\n    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long\
    \ BY = 0;\n    long B\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6nj6peg6.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp6nj6peg6.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp6nj6peg6.cpp:115:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  115 | }\n      | ^\n/tmp/tmp6nj6peg6.cpp:115:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long diff = 0;\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        if (game[i] != guess[i]) {\n       \
    \     diff = abs(game[i] - guess[i]);\n        }\n        result[i] = diff;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp7cey1s50: /tmp/tmp7cey1s50.cpp:29: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long guesses = 0;\n    long games = 0;\n    long maxGuesses = guess.size();\n\
    \    long maxGames = game.size();\n    long minGuesses = std::min(game.size(),\
    \ guess.size());\n    long minGames = std::min(game.size(), guess.size());\n \
    \   long maxScore = std::max(game.size(), guess.size());\n    long minScore =\
    \ std::min(game.size(), guess.size());\n    long maxDiff = std::max(game.size(),\
    \ guess.size());\n    long minDiff = std::min(game.size(), guess.size());\n  \
    \  long maxGuessesPerGame = maxGuesses / maxGames;\n    long maxGamesPerGuess\
    \ = maxGames / maxGuesses;\n    long minGuessesPerGuess = minGuesses / minGuesses;\n\
    \    long minGamesPerGuess = minGames / minGuesses;\n    long maxScorePerGuess\
    \ = maxScore / maxGuesses;\n    long minScorePerGuess = minScore / minGuesses;\n\
    \    long maxDiffPerGuess = maxDiff / maxGuesses;\n    long minDiffPerGuess =\
    \ minDiff / minGuesses;\n    long maxGuessesPerGuess = maxGuesses / maxGuessesPerGuess;\n\
    \    long maxGamesPerGuess = maxGames / maxGamesPerGuess;\n    long minGuessesPerGuess\
    \ = minGuesses / minGamesPerGuess;\n    long minGamesPerGuess = minGames / minGamesPerGuess;\n\
    \    long maxScorePerGuess = maxScore / maxScorePerGuess;\n    long minScorePerGuess\
    \ = minScore / minScorePerGuess;\n    long maxDiffPerGuess = maxDiff / maxDiffPerGuess;\n\
    \    long minDiffPerGuess = minDiff / minDiffPerGuess;\n    long maxGuessesPerGame\
    \ = maxGuesses / maxGamesPerGuess;\n    long minGuessesPerGame = minGuesses /\
    \ minGamesPerGuess;\n    long maxScorePerGame = maxScore / maxScorePerGuess;\n\
    \    long minScorePerGame = minScore / minScorePerGuess;\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0s3os25.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpc0s3os25.cpp:36:10: error: redeclaration\
    \ of \u2018long int maxGamesPerGuess\u2019\n   36 |     long maxGamesPerGuess\
    \ = maxGames / maxGamesPerGuess;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:28:10:\
    \ note: \u2018long int maxGamesPerGuess\u2019 previously declared here\n   28\
    \ |     long maxGamesPerGuess = maxGames / maxGuesses;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpc0s3os25.cpp:37:10: error: redeclaration of \u2018long int minGuessesPerGuess\u2019\
    \n   37 |     long minGuessesPerGuess = minGuesses / minGamesPerGuess;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:29:10: note: \u2018long\
    \ int minGuessesPerGuess\u2019 previously declared here\n   29 |     long minGuessesPerGuess\
    \ = minGuesses / minGuesses;\n      |          ^~~~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:38:10:\
    \ error: redeclaration of \u2018long int minGamesPerGuess\u2019\n   38 |     long\
    \ minGamesPerGuess = minGames / minGamesPerGuess;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpc0s3os25.cpp:30:10: note: \u2018long int minGamesPerGuess\u2019 previously\
    \ declared here\n   30 |     long minGamesPerGuess = minGames / minGuesses;\n\
    \      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:39:10: error: redeclaration\
    \ of \u2018long int maxScorePerGuess\u2019\n   39 |     long maxScorePerGuess\
    \ = maxScore / maxScorePerGuess;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:31:10:\
    \ note: \u2018long int maxScorePerGuess\u2019 previously declared here\n   31\
    \ |     long maxScorePerGuess = maxScore / maxGuesses;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpc0s3os25.cpp:40:10: error: redeclaration of \u2018long int minScorePerGuess\u2019\
    \n   40 |     long minScorePerGuess = minScore / minScorePerGuess;\n      |  \
    \        ^~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:32:10: note: \u2018long int minScorePerGuess\u2019\
    \ previously declared here\n   32 |     long minScorePerGuess = minScore / minGuesses;\n\
    \      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:41:10: error: redeclaration\
    \ of \u2018long int maxDiffPerGuess\u2019\n   41 |     long maxDiffPerGuess =\
    \ maxDiff / maxDiffPerGuess;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:33:10:\
    \ note: \u2018long int maxDiffPerGuess\u2019 previously declared here\n   33 |\
    \     long maxDiffPerGuess = maxDiff / maxGuesses;\n      |          ^~~~~~~~~~~~~~~\n\
    /tmp/tmpc0s3os25.cpp:42:10: error: redeclaration of \u2018long int minDiffPerGuess\u2019\
    \n   42 |     long minDiffPerGuess = minDiff / minDiffPerGuess;\n      |     \
    \     ^~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:34:10: note: \u2018long int minDiffPerGuess\u2019\
    \ previously declared here\n   34 |     long minDiffPerGuess = minDiff / minGuesses;\n\
    \      |          ^~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:43:10: error: redeclaration\
    \ of \u2018long int maxGuessesPerGame\u2019\n   43 |     long maxGuessesPerGame\
    \ = maxGuesses / maxGamesPerGuess;\n      |          ^~~~~~~~~~~~~~~~~\n/tmp/tmpc0s3os25.cpp:27:10:\
    \ note: \u2018long int maxGuessesPerGame\u2019 previously declared here\n   27\
    \ |     long maxGuessesPerGame = maxGuesses / maxGames;\n      |          ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc0s3os25.cpp:47:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   47 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (long i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp52522mfj: /tmp/tmp52522mfj.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ score = 0;\n    long maxScore = std::max(game.front(), guess.front());\n   \
    \ long minScore = std::min(game.back(), guess.back());\n    long diff = maxScore\
    \ - minScore;\n    long maxDiff = std::abs(maxScore - minScore);\n    long minDiff\
    \ = std::abs(maxScore - minScore);\n    long maxDiff2 = std::abs(maxScore - minScore);\n\
    \    long minDiff2 = std::abs(maxScore - minScore);\n    long maxDiff3 = std::abs(maxScore\
    \ - minScore);\n    long minDiff3 = std::abs(maxScore - minScore);\n    long maxDiff4\
    \ = std::abs(maxScore - minScore);\n    long minDiff4 = std::abs(maxScore - minScore);\n\
    \    long maxDiff5 = std::abs(maxScore - minScore);\n    long minDiff5 = std::abs(maxScore\
    \ - minScore);\n    long maxDiff6 = std::abs(maxScore - minScore);\n    long minDiff6\
    \ = std::abs(maxScore - minScore);\n    long maxDiff7 = std::abs(maxScore - minScore);\n\
    \    long minDiff7 = std::abs(maxScore - minScore);\n    long maxDiff8 = std::abs(maxScore\
    \ - minScore);\n    long minDiff8 = std::abs(maxScore - minScore);\n    long maxDiff9\
    \ = std::abs(maxScore - minScore);\n    long minDiff9 = std::abs(maxScore - minScore);\n\
    \    long maxDiff10 = std::abs(maxScore - minScore);\n    long minDiff10 = std::abs(maxScore\
    \ - minScore);\n    long maxDiff11 = std::abs(maxScore - minScore);\n    long\
    \ minDiff11 = std::abs(maxScore - minScore);\n    long maxDiff12 = std::abs(maxScore\
    \ - minScore);\n    long minDiff12 = std::abs(maxScore - minScore);\n    long\
    \ maxDiff13 = std::abs(maxScore - minScore);\n    long minDiff13 = std::abs(maxScore\
    \ - minScore);\n    long maxDiff14 = std::abs(maxScore - minScore);\n    long\
    \ minDiff14 = std::abs(maxScore - minScore);\n    long maxDiff15 = std::abs(maxScore\
    \ - minScore);\n    long minDiff15 = std::abs(maxScore - minScore);\n    long\
    \ maxDiff16 = std::abs(maxScore - minScore);\n    long minDiff16 = std::abs(maxScore\
    \ - \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpztbxbjyt.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpztbxbjyt.cpp:52:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpztbxbjyt.cpp:52:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long diff = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); ++i) {\n        diff = std::abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n       \
    \     result[i] = 0;\n            score = 0;\n        } else {\n            score\
    \ = abs(game[i] - guess[i]);\n        }\n        result[i] = score;\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long sum2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long diff3 =\
    \ 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long diff5\
    \ = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n    long\
    \ diff7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n  \
    \  long diff9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long sum11\
    \ = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long\
    \ sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n\
    \    long sum15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long diff16\
    \ = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long\
    \ diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n\
    \    long diff20 = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long sum22\
    \ = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long\
    \ sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n    long diff25 = 0;\n\
    \    long sum26 = 0;\n    long diff26 = 0;\n    long sum27 = 0;\n    long diff27\
    \ = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long sum29 = 0;\n    long\
    \ diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n    long sum31 = 0;\n\
    \    long diff31 = 0;\n    long sum32 = 0;\n    long diff32 = 0;\n    long sum33\
    \ = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long diff34 = 0;\n    long\
    \ sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n    long diff36 = 0;\n\
    \    long sum37 = 0;\n    long diff37 = 0;\n    long sum38 = 0;\n    long diff38\
    \ = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long sum40 = 0;\n    long\
    \ diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n    long \n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvqpcb6zq.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvqpcb6zq.cpp:102:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  102 | }\n      | ^\n/tmp/tmpvqpcb6zq.cpp:102:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp9q7mdcrc: /tmp/tmp9q7mdcrc.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1n309yso: /tmp/tmp1n309yso.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long diff2 = 0;\n    long diff3 = 0;\n    long\
    \ diff4 = 0;\n    long diff5 = 0;\n    long diff6 = 0;\n    long diff7 = 0;\n\
    \    long diff8 = 0;\n    long diff9 = 0;\n    long diff10 = 0;\n    long diff11\
    \ = 0;\n    long diff12 = 0;\n    long diff13 = 0;\n    long diff14 = 0;\n   \
    \ long diff15 = 0;\n    long diff16 = 0;\n    long diff17 = 0;\n    long diff18\
    \ = 0;\n    long diff19 = 0;\n    long diff20 = 0;\n    long diff21 = 0;\n   \
    \ long diff22 = 0;\n    long diff23 = 0;\n    long diff24 = 0;\n    long diff25\
    \ = 0;\n    long diff26 = 0;\n    long diff27 = 0;\n    long diff28 = 0;\n   \
    \ long diff29 = 0;\n    long diff30 = 0;\n    long diff31 = 0;\n    long diff32\
    \ = 0;\n    long diff33 = 0;\n    long diff34 = 0;\n    long diff35 = 0;\n   \
    \ long diff36 = 0;\n    long diff37 = 0;\n    long diff38 = 0;\n    long diff39\
    \ = 0;\n    long diff40 = 0;\n    long diff41 = 0;\n    long diff42 = 0;\n   \
    \ long diff43 = 0;\n    long diff44 = 0;\n    long diff45 = 0;\n    long diff46\
    \ = 0;\n    long diff47 = 0;\n    long diff48 = 0;\n    long diff49 = 0;\n   \
    \ long diff50 = 0;\n    long diff51 = 0;\n    long diff52 = 0;\n    long diff53\
    \ = 0;\n    long diff54 = 0;\n    long diff55 = 0;\n    long diff56 = 0;\n   \
    \ long diff57 = 0;\n    long diff58 = 0;\n    long diff59 = 0;\n    long diff60\
    \ = 0;\n    long diff61 = 0;\n    long diff62 = 0;\n    long diff63 = 0;\n   \
    \ long diff64 = 0;\n    long diff65 = 0;\n    long diff66 = 0;\n    long diff67\
    \ = 0;\n    long diff68 = 0;\n    long diff69 = 0;\n    long diff70 = 0;\n   \
    \ long diff71 = 0;\n    long diff72 = 0;\n    long diff73 = 0;\n    long diff74\
    \ = 0;\n    long diff75 = 0;\n    long diff76 = 0;\n    long diff77 = 0;\n   \
    \ long diff78 = 0;\n    long diff79 = 0;\n    long diff80 = 0;\n    long diff81\
    \ = 0;\n    long diff82 = 0;\n    long diff83 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4ck2dmia.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp4ck2dmia.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp4ck2dmia.cpp:101:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  101 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkq6joj22.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpkq6joj22.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpkq6joj22.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmpkq6joj22.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    for(long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ game[i] - guess[i];\n        result[i] = sum;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp221_7z9b: /tmp/tmp221_7z9b.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpt3bz_44m: /tmp/tmpt3bz_44m.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    long max = 0;\n    long min = 0;\n    long diff = 0;\n  \
    \  long sum2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long diff2 = 0;\n\
    \    long sum3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long diff3 =\
    \ 0;\n    long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long diff4\
    \ = 0;\n    long sum5 = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long diff5\
    \ = 0;\n    long sum6 = 0;\n    long max6 = 0;\n    long min6 = 0;\n    long diff6\
    \ = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7 = 0;\n    long diff7\
    \ = 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long diff8\
    \ = 0;\n    long sum9 = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long max10 = 0;\n    long min10 = 0;\n    long\
    \ diff10 = 0;\n    long sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n\
    \    long diff11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n    long min12\
    \ = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long\
    \ min13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n\
    \    long min14 = 0;\n    long diff14 = 0;\n    long sum15 = 0;\n    long max15\
    \ = 0;\n    long min15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long\
    \ max16 = 0;\n    long min16 = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n\
    \    long max17 = 0;\n    long min17 = 0;\n    long diff17 = 0;\n    long sum18\
    \ = 0;\n    long max18 = 0;\n    long min18 = 0;\n    long diff18 = 0;\n    long\
    \ sum19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long max20 = 0;\n    long min20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long max21 = 0;\n    long min21 = 0;\n    long\
    \ diff21 = 0;\n    long sum22 = 0;\n    long max22 = 0;\n\n}\nint main() {\n \
    \   auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpshuhqorh: /tmp/tmpshuhqorh.cpp:106: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        score = game[i];\n\
    \        diff = abs(guess - score);\n        if (diff == 0) {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = diff;\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvttsbkrt.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvttsbkrt.cpp:19:26: error: no match\
    \ for \u2018operator-\u2019 (operand types are \u2018std::vector<long int>\u2019\
    \ and \u2018long int\u2019)\n   19 |         diff = abs(guess - score);\n    \
    \  |                    ~~~~~ ^ ~~~~~\n      |                    |       |\n\
    \      |                    |       long int\n      |                    std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n   \
    \              from /usr/include/c++/9/bits/char_traits.h:39,\n              \
    \   from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__y.base()\
    \ - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const\
    \ std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const reverse_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__x.base()\
    \ - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1209 |     operator-(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1209:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   19\
    \ |         diff = abs(guess - score);\n      |                            ^~~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/complex:361:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  361 |     operator-(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:361:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n         \
    \        from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/complex:370:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  370 |     operator-(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:370:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n         \
    \        from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/complex:379:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  379 |     operator-(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:379:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   19 |         diff = abs(guess - score);\n      |             \
    \               ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/complex:456:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&)\u2019\n  456 |     operator-(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:456:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   19 |\
    \         diff = abs(guess - score);\n      |                            ^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:370:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> typename\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  370 |     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:370:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   19 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type\
    \ std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  382 |     operator-(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   19 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:214:3:\
    \ note: candidate: \u2018std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&,\
    \ const std::_Bit_iterator_base&)\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:214:39:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::_Bit_iterator_base&\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__minus, typename\
    \ _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  406\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-,\
    \ __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018long int\u2019\n   19 |         diff = abs(guess - score);\n     \
    \ |                            ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   19 |        \
    \ diff = abs(guess - score);\n      |                            ^~~~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   19 |         diff\
    \ = abs(guess - score);\n      |                            ^~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   19 |         diff\
    \ = abs(guess - score);\n      |                            ^~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018long int\u2019\n   19 |         diff = abs(guess - score);\n     \
    \ |                            ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\
    \n  974 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   19 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvttsbkrt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)\u2019\
    \n  986 |     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvttsbkrt.cpp:19:28: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   19 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = sum - guess[i];\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpek7k0wni: /tmp/tmpek7k0wni.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d = 0;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvtw7zmi_.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvtw7zmi_.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:116:10: error: redeclaration of\
    \ \u2018long int d\u2019\n  116 |     long d = 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:64:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   64 |     long d =\
    \ 0;\n      |          ^\n/tmp/tmpvtw7zmi_.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long guess = 0;\n    long diff = 0;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n   \
    \ long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s =\
    \ 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n   \
    \ long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B =\
    \ 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n   \
    \ long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K =\
    \ 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n   \
    \ long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T =\
    \ 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n   \
    \ long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c =\
    \ 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n   \
    \ long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l =\
    \ 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D =\
    \ 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n   \
    \ long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M =\
    \ 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n   \
    \ long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V =\
    \ 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n   \
    \ long a = 0;\n    long b = 0;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp06ycbzih.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp06ycbzih.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp06ycbzih.cpp:71:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   71 |     long i = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:19:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   19 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:72:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   72 |     long j = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:20:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   20 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:73:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   73 |     long k = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:21:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   21 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:74:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   74 |     long l = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:22:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   22 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:75:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   75 |     long m = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:23:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   23 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:76:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   76 |     long n = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:24:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   24 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:77:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   77 |     long o = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:25:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   25 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:78:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   78 |     long p = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:26:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   26 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:79:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   79 |     long q = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:27:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   27 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:80:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   80 |     long r = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:28:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   28 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:81:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   81 |     long s = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:29:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   29 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:82:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   82 |     long t = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:30:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   30 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:83:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   83 |     long u = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:31:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   31 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:84:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   84 |     long v = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:32:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   32 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:85:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   85 |     long w = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:33:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   33 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:86:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   86 |     long x = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:34:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   34 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:87:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   87 |     long y = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:35:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   35 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:88:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   88 |     long z = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:36:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   36 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:89:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   89 |     long A = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:37:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   37 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:90:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   90 |     long B = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:38:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   38 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:91:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   91 |     long C = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:39:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   39 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:92:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   92 |     long D = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:40:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   40 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:93:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   93 |     long E = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:41:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   41 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:94:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   94 |     long F = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:42:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   42 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:95:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   95 |     long G = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:43:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   43 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:96:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   96 |     long H = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:44:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   44 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:97:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   97 |     long I = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:45:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   45 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:98:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   98 |     long J = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:46:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   46 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:99:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   99 |     long K = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:47:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   47 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:100:10: error: redeclaration of\
    \ \u2018long int L\u2019\n  100 |     long L = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:48:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   48 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:101:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  101 |     long M = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:49:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   49 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:102:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  102 |     long N = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:50:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   50 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:103:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  103 |     long O = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:51:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   51 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:104:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  104 |     long P = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:52:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   52 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:105:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  105 |     long Q = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:53:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   53 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:106:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  106 |     long R = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:54:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   54 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:107:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  107 |     long S = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:55:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   55 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:108:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  108 |     long T = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:56:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   56 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:109:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  109 |     long U = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:57:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   57 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:110:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  110 |     long V = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:58:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   58 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:111:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  111 |     long W = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:59:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   59 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:112:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  112 |     long X = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:60:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   60 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:113:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  113 |     long Y = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:61:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   61 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:114:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  114 |     long Z = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:62:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   62 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:115:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  115 |     long a = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:63:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   63 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:116:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  116 |     long b = 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:64:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   64 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmp06ycbzih.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long sum1 = 0;\n    long diff1 = 0;\n    long\
    \ sum2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long diff3 = 0;\n  \
    \  long sum4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long diff5 = 0;\n\
    \    long sum6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n    long diff7 =\
    \ 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long sum11 = 0;\n    long\
    \ diff11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n\
    \    long diff13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n    long sum15\
    \ = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long\
    \ sum17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long diff18 = 0;\n\
    \    long sum19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long sum22 = 0;\n    long\
    \ diff22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long sum24 = 0;\n\
    \    long diff24 = 0;\n    long sum25 = 0;\n    long diff25 = 0;\n    long sum26\
    \ = 0;\n    long diff26 = 0;\n    long sum27 = 0;\n    long diff27 = 0;\n    long\
    \ sum28 = 0;\n    long diff28 = 0;\n    long sum29 = 0;\n    long diff29 = 0;\n\
    \    long sum30 = 0;\n    long diff30 = 0;\n    long sum31 = 0;\n    long diff31\
    \ = 0;\n    long sum32 = 0;\n    long diff32 = 0;\n    long sum33 = 0;\n    long\
    \ diff33 = 0;\n    long sum34 = 0;\n    long diff34 = 0;\n    long sum35 = 0;\n\
    \    long diff35 = 0;\n    long sum36 = 0;\n    long diff36 = 0;\n    long sum37\
    \ = 0;\n    long diff37 = 0;\n    long sum38 = 0;\n    long diff38 = 0;\n    long\
    \ sum39 = 0;\n    long diff39 = 0;\n    long sum40 = 0;\n    long diff40 = 0;\n\
    \    long sum41 = 0;\n    long diff41 = 0;\n    long sum42 = 0;\n\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpoyag001s: /tmp/tmpoyag001s.cpp:105: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(long\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i] - guess[i];\n      \
    \  result[i] = sum;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpj45mdudi: /tmp/tmpj45mdudi.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long min = 0;\n    long max = 0;\n    long mid\
    \ = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4 = 0;\n    long mid5\
    \ = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8 = 0;\n    long mid9\
    \ = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long mid12 = 0;\n    long\
    \ mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n    long mid16 = 0;\n\
    \    long mid17 = 0;\n    long mid18 = 0;\n    long mid19 = 0;\n    long mid20\
    \ = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long mid23 = 0;\n    long\
    \ mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n    long mid27 = 0;\n\
    \    long mid28 = 0;\n    long mid29 = 0;\n    long mid30 = 0;\n    long mid31\
    \ = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long mid34 = 0;\n    long\
    \ mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n    long mid38 = 0;\n\
    \    long mid39 = 0;\n    long mid40 = 0;\n    long mid41 = 0;\n    long mid42\
    \ = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long mid45 = 0;\n    long\
    \ mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n    long mid49 = 0;\n\
    \    long mid50 = 0;\n    long mid51 = 0;\n    long mid52 = 0;\n    long mid53\
    \ = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long mid56 = 0;\n    long\
    \ mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n    long mid60 = 0;\n\
    \    long mid61 = 0;\n    long mid62 = 0;\n    long mid63 = 0;\n    long mid64\
    \ = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long mid67 = 0;\n    long\
    \ mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n    long mid71 = 0;\n\
    \    long mid72 = 0;\n    long mid73 = 0;\n    long mid74 = 0;\n    long mid75\
    \ = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long mid78 = 0;\n    long\
    \ mid79 = 0;\n    long mid80 = 0;\n    long mid\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfzz0vzjo.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpfzz0vzjo.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpfzz0vzjo.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long sum = 0;\n    long max = 0;\n    long min = 0;\n    long mid\
    \ = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4 = 0;\n    long mid5\
    \ = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8 = 0;\n    long mid9\
    \ = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long mid12 = 0;\n    long\
    \ mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n    long mid16 = 0;\n\
    \    long mid17 = 0;\n    long mid18 = 0;\n    long mid19 = 0;\n    long mid20\
    \ = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long mid23 = 0;\n    long\
    \ mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n    long mid27 = 0;\n\
    \    long mid28 = 0;\n    long mid29 = 0;\n    long mid30 = 0;\n    long mid31\
    \ = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long mid34 = 0;\n    long\
    \ mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n    long mid38 = 0;\n\
    \    long mid39 = 0;\n    long mid40 = 0;\n    long mid41 = 0;\n    long mid42\
    \ = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long mid45 = 0;\n    long\
    \ mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n    long mid49 = 0;\n\
    \    long mid50 = 0;\n    long mid51 = 0;\n    long mid52 = 0;\n    long mid53\
    \ = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long mid56 = 0;\n    long\
    \ mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n    long mid60 = 0;\n\
    \    long mid61 = 0;\n    long mid62 = 0;\n    long mid63 = 0;\n    long mid64\
    \ = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long mid67 = 0;\n    long\
    \ mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n    long mid71 = 0;\n\
    \    long mid72 = 0;\n    long mid73 = 0;\n    long mid74 = 0;\n    long mid75\
    \ = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long mid78 = 0;\n    long\
    \ mid79 = 0;\n    long mid80 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm5bdq7is.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpm5bdq7is.cpp:101:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpm5bdq7is.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long minDiff = std::numeric_limits<long>::max();\n\
    \    long minSum = std::numeric_limits<long>::max();\n    long minSumIndex = 0;\n\
    \    long maxSum = std::numeric_limits<long>::min();\n    long maxSumIndex = 0;\n\
    \    long minSumIndex2 = 0;\n    long maxSumIndex2 = 0;\n    long minSumIndex3\
    \ = 0;\n    long maxSumIndex3 = 0;\n    long minSumIndex4 = 0;\n    long maxSumIndex4\
    \ = 0;\n    long minSumIndex5 = 0;\n    long maxSumIndex5 = 0;\n    long minSumIndex6\
    \ = 0;\n    long maxSumIndex6 = 0;\n    long minSumIndex7 = 0;\n    long maxSumIndex7\
    \ = 0;\n    long minSumIndex8 = 0;\n    long maxSumIndex8 = 0;\n    long minSumIndex9\
    \ = 0;\n    long maxSumIndex9 = 0;\n    long minSumIndex10 = 0;\n    long maxSumIndex10\
    \ = 0;\n    long minSumIndex11 = 0;\n    long maxSumIndex11 = 0;\n    long minSumIndex12\
    \ = 0;\n    long maxSumIndex12 = 0;\n    long minSumIndex13 = 0;\n    long maxSumIndex13\
    \ = 0;\n    long minSumIndex14 = 0;\n    long maxSumIndex14 = 0;\n    long minSumIndex15\
    \ = 0;\n    long maxSumIndex15 = 0;\n    long minSumIndex16 = 0;\n    long maxSumIndex16\
    \ = 0;\n    long minSumIndex17 = 0;\n    long maxSumIndex17 = 0;\n    long minSumIndex18\
    \ = 0;\n    long maxSumIndex18 = 0;\n    long minSumIndex19 = 0;\n    long maxSumIndex19\
    \ = 0;\n    long minSumIndex20 = 0;\n    long maxSumIndex20 = 0;\n    long minSumIndex21\
    \ = 0;\n    long maxSumIndex21 = 0;\n    long minSumIndex22 = 0;\n    long maxSumIndex22\
    \ = 0;\n    long minSumIndex23 = 0;\n    long maxSumIndex23 = 0;\n    long minSumIndex24\
    \ = 0;\n    long maxSumIndex24 = 0;\n    long minSumIndex25 = 0;\n    long maxSumIndex25\
    \ = 0;\n    long minSumIndex26 = 0;\n    long maxSumIndex26 = 0;\n    long minSumIndex27\
    \ = 0;\n    long maxSumIndex27 = 0;\n    long minSumIndex28 = 0;\n    long maxSumIndex28\
    \ = 0;\n    long minSumIndex29 = 0;\n\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpqf9m3ldp: /tmp/tmpqf9m3ldp.cpp:82: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long count = 0;\n    for (long i = 0; i < guess.size(); i++) {\n\
    \        if (game[i] == guess[i]) {\n            sum = 0;\n            count++;\n\
    \        } else {\n            sum += abs(game[i] - guess[i]);\n        }\n  \
    \      result[i] = sum;\n    }\n    if (count == 0) {\n        return result;\n\
    \    }\n    for (long i = 0; i < guess.size(); i++) {\n        result[i] = abs(result[i]\
    \ - sum);\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpdjxp1ezj: /tmp/tmpdjxp1ezj.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += game[i] - guess[i];\n        result[i] = sum;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpbhmuvwkk: /tmp/tmpbhmuvwkk.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long count = 0;\n    long min = std::numeric_limits<long>::max();\n\
    \    long max = std::numeric_limits<long>::min();\n    for(size_t i = 0; i < game.size();\
    \ i++) {\n        if(game[i] != guess[i]) {\n            sum += game[i] - guess[i];\n\
    \            count++;\n            if(game[i] > guess[i]) {\n                max\
    \ = game[i];\n            } else {\n                min = game[i];\n         \
    \   }\n        }\n    }\n    for(size_t i = 0; i < game.size(); i++) {\n     \
    \   if(game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n\
    \            result[i] = std::abs(game[i] - guess[i]);\n        }\n    }\n   \
    \ for(size_t i = 0; i < game.size(); i++) {\n        if(result[i] != 0) {\n  \
    \          result[i] = std::abs(result[i] / count);\n        }\n    }\n    for(size_t\
    \ i = 0; i < game.size(); i++) {\n        if(result[i] != 0) {\n            result[i]\
    \ = std::abs(result[i] / sum);\n        }\n    }\n    for(size_t i = 0; i < game.size();\
    \ i++) {\n        if(result[i] != 0) {\n            result[i] = std::abs(result[i]\
    \ / max);\n        }\n    }\n    for(size_t i = 0; i < game.size(); i++) {\n \
    \       if(result[i] != 0) {\n            result[i] = std::abs(result[i] / min);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpqramqhvq: /tmp/tmpqramqhvq.cpp:62: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n       \
    \     result[i] = 0;\n        } else {\n            result[i] = abs(game[i] -\
    \ guess[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long maxDiff = std::numeric_limits<long>::max();\n\
    \    long minDiff = std::numeric_limits<long>::min();\n    for (size_t i = 0;\
    \ i < game.size(); ++i) {\n        long diff = game[i] - guess[i];\n        if\
    \ (diff > maxDiff) {\n            maxDiff = diff;\n        }\n        if (diff\
    \ < minDiff) {\n            minDiff = diff;\n        }\n        result[i] = maxDiff\
    \ - minDiff;\n    }\n    return result;\n}\nint main() {\n    auto candidate =\
    \ compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpekv2lbdg: /tmp/tmpekv2lbdg.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    long \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpewgwmzom.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpewgwmzom.cpp:115:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  115 | }\n      | ^\n/tmp/tmpewgwmzom.cpp:115:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ score = 0;\n    long diff = 0;\n    for (size_t i = 0; i < game.size(); i++)\
    \ {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        \
    \    score = 0;\n        } else {\n            score = abs(game[i] - guess[i]);\n\
    \            result[i] = score;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result;\n    long sum = 0;\n\
    \    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long sum3 =\
    \ 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long sum5\
    \ = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long\
    \ sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n  \
    \  long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10 =\
    \ 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum43 = 0;\n\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpcojkvxjp: /tmp/tmpcojkvxjp.cpp:105: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ game[i] - guess[i];\n        result[i] = sum;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp2s4iytod: /tmp/tmp2s4iytod.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    long index\
    \ = 0;\n    for (auto i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        if (guess == game) {\n            result[i] = 0;\n        }\n       \
    \ else {\n            diff = abs(guess[i] - game[i]);\n            if (diff >\
    \ max) {\n                max = diff;\n                index = i;\n          \
    \  }\n            if (diff < min) {\n                min = diff;\n           \
    \     index = i;\n            }\n        }\n    }\n    result[index] = max - min;\n\
    \    return result;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpbl3pvqbc: /tmp/tmpbl3pvqbc.cpp:43: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long count = 0;\n    long sum2 = 0;\n    long\
    \ diff2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long diff3 = 0;\n\
    \    long count3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long count4\
    \ = 0;\n    long sum5 = 0;\n    long diff5 = 0;\n    long count5 = 0;\n    long\
    \ sum6 = 0;\n    long diff6 = 0;\n    long count6 = 0;\n    long sum7 = 0;\n \
    \   long diff7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long diff8\
    \ = 0;\n    long count8 = 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long\
    \ count9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long count10 = 0;\n\
    \    long sum11 = 0;\n    long diff11 = 0;\n    long count11 = 0;\n    long sum12\
    \ = 0;\n    long diff12 = 0;\n    long count12 = 0;\n    long sum13 = 0;\n   \
    \ long diff13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n    long diff14\
    \ = 0;\n    long count14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n   \
    \ long count15 = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long count16\
    \ = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long count17 = 0;\n   \
    \ long sum18 = 0;\n    long diff18 = 0;\n    long count18 = 0;\n    long sum19\
    \ = 0;\n    long diff19 = 0;\n    long count19 = 0;\n    long sum20 = 0;\n   \
    \ long diff20 = 0;\n    long count20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long count21 = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n   \
    \ long count22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long count23\
    \ = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long count24 = 0;\n   \
    \ long sum25 = 0;\n    long diff25 = 0;\n    long count25 = 0;\n    long sum26\
    \ = 0;\n    long diff26 = 0;\n    long count26 = 0;\n    long sum27 = 0;\n   \
    \ long diff27 = 0;\n    long count27 = 0;\n    long sum28 = 0;\n    long diff28\
    \ = 0;\n    long count28 = 0;\n    long sum29 = 0;\n    long diff29\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphru17jxe.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmphru17jxe.cpp:102:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  102 | }\n      | ^\n/tmp/tmphru17jxe.cpp:102:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < game.size(); ++i) {\n        sum += game[i];\n        result[i] =\
    \ sum - guess[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmplynt1oct: /tmp/tmplynt1oct.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        result[i]\
    \ = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp8ev5vyeu: /tmp/tmp8ev5vyeu.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    while (i < guess.size() && j < game.size())\
    \ {\n        if (game[j] == guess[i]) {\n            score++;\n            diff\
    \ = 0;\n            i++;\n            j++;\n        } else if (game[j] > guess[i])\
    \ {\n            diff++;\n            i++;\n        } else {\n            diff--;\n\
    \            j++;\n        }\n    }\n    while (i < guess.size()) {\n        result[i]\
    \ = 0;\n        i++;\n    }\n    while (j < game.size()) {\n        result[i]\
    \ = abs(game[j] - guess[i]);\n        i++;\n        j++;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpaun8yc31: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top\
    \ (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse\
    \ (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long score = 0;\n    long guess = 0;\n    long diff = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n\
    \    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n\
    \    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long\
    \ g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpijfz8led.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpijfz8led.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpijfz8led.cpp:45:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   45 |     long i = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:19:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   19 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:46:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   46 |     long j = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:20:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   20 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:47:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   47 |     long k = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:21:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   21 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:48:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   48 |     long l = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:22:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   22 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:49:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   49 |     long m = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:23:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   23 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:50:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   50 |     long n = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:24:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   24 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:51:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   51 |     long o = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:25:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   25 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:52:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   52 |     long p = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:26:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   26 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:53:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   53 |     long q = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:27:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   27 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:54:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   54 |     long r = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:28:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   28 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:55:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   55 |     long s = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:29:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   29 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:56:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   56 |     long t = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:30:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   30 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:57:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   57 |     long u = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:31:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   31 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:58:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   58 |     long v = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:32:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   32 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:59:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   59 |     long w = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:33:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   33 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:60:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   60 |     long x = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:34:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   34 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:61:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   61 |     long y = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:35:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   35 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:62:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   62 |     long z = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:36:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   36 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:63:10: error: redeclaration of\
    \ \u2018long int a\u2019\n   63 |     long a = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:37:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   37 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:64:10: error: redeclaration of\
    \ \u2018long int b\u2019\n   64 |     long b = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:38:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   38 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:65:10: error: redeclaration of\
    \ \u2018long int c\u2019\n   65 |     long c = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:39:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   39 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:66:10: error: redeclaration of\
    \ \u2018long int d\u2019\n   66 |     long d = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:40:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   40 |     long d =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:67:10: error: redeclaration of\
    \ \u2018long int e\u2019\n   67 |     long e = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:41:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   41 |     long e =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:68:10: error: redeclaration of\
    \ \u2018long int f\u2019\n   68 |     long f = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:42:10:\
    \ note: \u2018long int f\u2019 previously declared here\n   42 |     long f =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:69:10: error: redeclaration of\
    \ \u2018long int g\u2019\n   69 |     long g = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:43:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   43 |     long g =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:70:10: error: redeclaration of\
    \ \u2018long int h\u2019\n   70 |     long h = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:44:10:\
    \ note: \u2018long int h\u2019 previously declared here\n   44 |     long h =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:71:10: error: redeclaration of\
    \ \u2018long int i\u2019\n   71 |     long i = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:19:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   19 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:72:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   72 |     long j = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:20:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   20 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:73:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   73 |     long k = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:21:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   21 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:74:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   74 |     long l = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:22:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   22 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:75:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   75 |     long m = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:23:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   23 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:76:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   76 |     long n = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:24:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   24 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:77:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   77 |     long o = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:25:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   25 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:78:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   78 |     long p = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:26:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   26 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:79:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   79 |     long q = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:27:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   27 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:80:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   80 |     long r = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:28:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   28 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:81:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   81 |     long s = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:29:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   29 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:82:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   82 |     long t = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:30:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   30 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:83:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   83 |     long u = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:31:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   31 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:84:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   84 |     long v = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:32:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   32 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:85:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   85 |     long w = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:33:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   33 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:86:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   86 |     long x = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:34:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   34 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:87:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   87 |     long y = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:35:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   35 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:88:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   88 |     long z = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:36:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   36 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:89:10: error: redeclaration of\
    \ \u2018long int a\u2019\n   89 |     long a = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:37:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   37 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:90:10: error: redeclaration of\
    \ \u2018long int b\u2019\n   90 |     long b = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:38:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   38 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:91:10: error: redeclaration of\
    \ \u2018long int c\u2019\n   91 |     long c = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:39:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   39 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:92:10: error: redeclaration of\
    \ \u2018long int d\u2019\n   92 |     long d = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:40:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   40 |     long d =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:93:10: error: redeclaration of\
    \ \u2018long int e\u2019\n   93 |     long e = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:41:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   41 |     long e =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:94:10: error: redeclaration of\
    \ \u2018long int f\u2019\n   94 |     long f = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:42:10:\
    \ note: \u2018long int f\u2019 previously declared here\n   42 |     long f =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:95:10: error: redeclaration of\
    \ \u2018long int g\u2019\n   95 |     long g = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:43:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   43 |     long g =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:96:10: error: redeclaration of\
    \ \u2018long int h\u2019\n   96 |     long h = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:44:10:\
    \ note: \u2018long int h\u2019 previously declared here\n   44 |     long h =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:97:10: error: redeclaration of\
    \ \u2018long int i\u2019\n   97 |     long i = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:19:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   19 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:98:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   98 |     long j = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:20:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   20 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:99:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   99 |     long k = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:21:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   21 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:100:10: error: redeclaration of\
    \ \u2018long int l\u2019\n  100 |     long l = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:22:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   22 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:101:10: error: redeclaration of\
    \ \u2018long int m\u2019\n  101 |     long m = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:23:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   23 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:102:10: error: redeclaration of\
    \ \u2018long int n\u2019\n  102 |     long n = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:24:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   24 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:103:10: error: redeclaration of\
    \ \u2018long int o\u2019\n  103 |     long o = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:25:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   25 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:104:10: error: redeclaration of\
    \ \u2018long int p\u2019\n  104 |     long p = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:26:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   26 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:105:10: error: redeclaration of\
    \ \u2018long int q\u2019\n  105 |     long q = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:27:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   27 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:106:10: error: redeclaration of\
    \ \u2018long int r\u2019\n  106 |     long r = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:28:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   28 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:107:10: error: redeclaration of\
    \ \u2018long int s\u2019\n  107 |     long s = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:29:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   29 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:108:10: error: redeclaration of\
    \ \u2018long int t\u2019\n  108 |     long t = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:30:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   30 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:109:10: error: redeclaration of\
    \ \u2018long int u\u2019\n  109 |     long u = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:31:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   31 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:110:10: error: redeclaration of\
    \ \u2018long int v\u2019\n  110 |     long v = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:32:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   32 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:111:10: error: redeclaration of\
    \ \u2018long int w\u2019\n  111 |     long w = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:33:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   33 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:112:10: error: redeclaration of\
    \ \u2018long int x\u2019\n  112 |     long x = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:34:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   34 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:113:10: error: redeclaration of\
    \ \u2018long int y\u2019\n  113 |     long y = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:35:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   35 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:114:10: error: redeclaration of\
    \ \u2018long int z\u2019\n  114 |     long z = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:36:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   36 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:115:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  115 |     long a = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:37:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   37 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:116:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  116 |     long b = 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:38:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   38 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpijfz8led.cpp:118:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  118 | }\n      | ^\n/tmp/tmpijfz8led.cpp:118:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpf2i6g244: /tmp/tmpf2i6g244.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    for(int i = 0; i < game.size(); i++){\n  \
    \      sum += game[i];\n        if(guess == game){\n            result[i] = 0;\n\
    \        }else{\n            diff = abs(guess[i] - sum);\n            result[i]\
    \ = diff;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpvs3uwdtw: /tmp/tmpvs3uwdtw.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ diff = 0;\n    long sum = 0;\n    for(long i = 0; i < guess.size(); i++) {\n\
    \        sum += game[i];\n        diff = game[i] - guess[i];\n        result[i]\
    \ = abs(diff);\n    }\n    for(long i = 0; i < guess.size(); i++) {\n        if(result[i]\
    \ == sum) {\n            result[i] = 0;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpbcao9r7h: /tmp/tmpbcao9r7h.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3})), (std::vector<long>({-1, -2, -3}))) == (std::vector<long>({2, 4, 6}))'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3_ai3xm6.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp3_ai3xm6.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp3_ai3xm6.cpp:115:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  115 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      result[i] = 0;\n        } else {\n            result[i] = abs(game[i] -\
    \ guess[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    long count\
    \ = 0;\n    long sum1 = 0;\n    long sum2 = 0;\n    long diff1 = 0;\n    long\
    \ diff2 = 0;\n    long max1 = 0;\n    long max2 = 0;\n    long min1 = 0;\n   \
    \ long min2 = 0;\n    long count1 = 0;\n    long count2 = 0;\n    long sum = 0;\n\
    \    long sum1 = 0;\n    long sum2 = 0;\n    long diff = 0;\n    long diff1 =\
    \ 0;\n    long diff2 = 0;\n    long max = 0;\n    long min = 0;\n    long count\
    \ = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long sum2 = 0;\n    long diff\
    \ = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n    long max = 0;\n    long\
    \ min = 0;\n    long count = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long\
    \ sum2 = 0;\n    long diff = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n  \
    \  long max = 0;\n    long min = 0;\n    long count = 0;\n    long sum = 0;\n\
    \    long sum1 = 0;\n    long sum2 = 0;\n    long diff = 0;\n    long diff1 =\
    \ 0;\n    long diff2 = 0;\n    long max = 0;\n    long min = 0;\n    long count\
    \ = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long sum2 = 0;\n    long diff\
    \ = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n    long max = 0;\n    long\
    \ min = 0;\n    long count = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long\
    \ sum2 = 0;\n    long diff = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n  \
    \  long max = 0;\n    long min = 0;\n    long count = 0;\n    long sum = 0;\n\
    \    long sum1 = 0;\n    long sum2 = 0;\n    long diff = 0;\n    long diff1 =\
    \ 0;\n    long diff2 = 0;\n    long max = 0;\n    long min = 0;\n    long count\
    \ = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long sum2 = 0;\n    long diff\
    \ = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n    long max = 0;\n    long\
    \ min = 0;\n    long count = 0;\n    long sum = 0;\n    long sum1 = 0;\n    long\
    \ sum2 = 0;\n    long diff = 0;\n    long diff1 = 0;\n    long diff2 = 0;\n  \
    \  long max = 0;\n    long min = 0;\n    long count = 0;\n    long sum = 0;\n\
    \    long sum1 = 0;\n    long sum2 = 0;\n    long diff = 0;\n    long diff1 =\
    \ 0;\n    long diff\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwylebra9.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpwylebra9.cpp:31:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   31 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   32 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:33:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   33 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:34:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   34 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:35:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   35 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:36:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   36 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:37:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   37 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:38:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   38 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:39:10: error: redeclaration of \u2018long int count\u2019\
    \n   39 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:40:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   40 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   41 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:42:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   42 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:43:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   43 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:44:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   44 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:45:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   45 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:46:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   46 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:47:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   47 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:48:10: error: redeclaration of \u2018long int count\u2019\
    \n   48 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:49:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   49 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   50 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:51:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   51 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:52:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   52 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:53:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   53 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:54:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   54 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:55:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   55 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:56:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   56 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:57:10: error: redeclaration of \u2018long int count\u2019\
    \n   57 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:58:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   58 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   59 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:60:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   60 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:61:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   61 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:62:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   62 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:63:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   63 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:64:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   64 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:65:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   65 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:66:10: error: redeclaration of \u2018long int count\u2019\
    \n   66 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:67:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   67 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   68 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:69:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   69 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:70:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   70 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:71:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   71 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:72:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   72 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:73:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   73 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:74:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   74 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:75:10: error: redeclaration of \u2018long int count\u2019\
    \n   75 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:76:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   76 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:77:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   77 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:78:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   78 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:79:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   79 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:80:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   80 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:81:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   81 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:82:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   82 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:83:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   83 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:84:10: error: redeclaration of \u2018long int count\u2019\
    \n   84 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:85:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   85 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:86:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   86 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:87:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   87 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:88:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   88 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:89:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   89 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:90:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   90 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:91:10: error: redeclaration\
    \ of \u2018long int max\u2019\n   91 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:92:10:\
    \ error: redeclaration of \u2018long int min\u2019\n   92 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:93:10: error: redeclaration of \u2018long int count\u2019\
    \n   93 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:94:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n   94 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:95:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n   95 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:96:10: error: redeclaration of \u2018long int sum2\u2019\n\
    \   96 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:97:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n   97 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:98:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n   98 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:99:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n   99 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:100:10: error: redeclaration\
    \ of \u2018long int max\u2019\n  100 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:101:10:\
    \ error: redeclaration of \u2018long int min\u2019\n  101 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:102:10: error: redeclaration of \u2018long int count\u2019\
    \n  102 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:103:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n  103 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:104:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n  104 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:105:10: error: redeclaration of \u2018long int sum2\u2019\
    \n  105 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:106:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n  106 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:107:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n  107 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:108:10: error: redeclaration of \u2018long\
    \ int diff2\u2019\n  108 |     long diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:24:10:\
    \ note: \u2018long int diff2\u2019 previously declared here\n   24 |     long\
    \ diff2 = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:109:10: error: redeclaration\
    \ of \u2018long int max\u2019\n  109 |     long max = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:18:10: note: \u2018long int max\u2019 previously declared\
    \ here\n   18 |     long max = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:110:10:\
    \ error: redeclaration of \u2018long int min\u2019\n  110 |     long min = 0;\n\
    \      |          ^~~\n/tmp/tmpwylebra9.cpp:19:10: note: \u2018long int min\u2019\
    \ previously declared here\n   19 |     long min = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:111:10: error: redeclaration of \u2018long int count\u2019\
    \n  111 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:20:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   20 |     long\
    \ count = 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:112:10: error: redeclaration\
    \ of \u2018long int sum\u2019\n  112 |     long sum = 0;\n      |          ^~~\n\
    /tmp/tmpwylebra9.cpp:16:10: note: \u2018long int sum\u2019 previously declared\
    \ here\n   16 |     long sum = 0;\n      |          ^~~\n/tmp/tmpwylebra9.cpp:113:10:\
    \ error: redeclaration of \u2018long int sum1\u2019\n  113 |     long sum1 = 0;\n\
    \      |          ^~~~\n/tmp/tmpwylebra9.cpp:21:10: note: \u2018long int sum1\u2019\
    \ previously declared here\n   21 |     long sum1 = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:114:10: error: redeclaration of \u2018long int sum2\u2019\
    \n  114 |     long sum2 = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:22:10:\
    \ note: \u2018long int sum2\u2019 previously declared here\n   22 |     long sum2\
    \ = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:115:10: error: redeclaration\
    \ of \u2018long int diff\u2019\n  115 |     long diff = 0;\n      |          ^~~~\n\
    /tmp/tmpwylebra9.cpp:17:10: note: \u2018long int diff\u2019 previously declared\
    \ here\n   17 |     long diff = 0;\n      |          ^~~~\n/tmp/tmpwylebra9.cpp:116:10:\
    \ error: redeclaration of \u2018long int diff1\u2019\n  116 |     long diff1 =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpwylebra9.cpp:23:10: note: \u2018long int\
    \ diff1\u2019 previously declared here\n   23 |     long diff1 = 0;\n      | \
    \         ^~~~~\n/tmp/tmpwylebra9.cpp:118:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  118 | }\n      | ^\n/tmp/tmpwylebra9.cpp:118:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpnjh_4qk4: /tmp/tmpnjh_4qk4.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA\
    \ = 0;\n    long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n\
    \    long FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long\
    \ JJ = 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN =\
    \ 0;\n    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n\
    \    long SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long\
    \ WW = 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA\
    \ = 0;\n    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE\
    \ = 0;\n    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III\
    \ = 0;\n    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM\
    \ = 0;\n    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ\
    \ = 0;\n    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU\
    \ = 0;\n    long VVV = 0;\n    long WWW = 0;\n    long XXX = 0;\n    long \n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdve49k8u.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpdve49k8u.cpp:112:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  112 | }\n      | ^\n/tmp/tmpdve49k8u.cpp:112:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpht71l8jv: /tmp/tmpht71l8jv.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ score = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    long\
    \ mid = 0;\n    long count = 0;\n    long sum = 0;\n    long sum2 = 0;\n    long\
    \ sum3 = 0;\n    long sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long\
    \ sum7 = 0;\n    long sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n   \
    \ long sum11 = 0;\n    long sum12 = 0;\n    long sum13 = 0;\n    long sum14 =\
    \ 0;\n    long sum15 = 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long\
    \ sum18 = 0;\n    long sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n\
    \    long sum22 = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n    long sum25\
    \ = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long\
    \ sum29 = 0;\n    long sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n\
    \    long sum33 = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n    long sum36\
    \ = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long\
    \ sum40 = 0;\n    long sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n\
    \    long sum44 = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n    long sum47\
    \ = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long\
    \ sum51 = 0;\n    long sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n\
    \    long sum55 = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n    long sum58\
    \ = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long\
    \ sum62 = 0;\n    long sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n\
    \    long sum66 = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n    long sum69\
    \ = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long\
    \ sum73 = 0;\n    long sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n\
    \    long sum77 = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmppsrhz3_h: /tmp/tmppsrhz3_h.cpp:104: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i];\n        result[i]\
    \ = abs(guess[i] - score);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpj7m0e4_q: /tmp/tmpj7m0e4_q.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long diff\
    \ = 0;\n    long sum = 0;\n    for(long i = 0; i < game.size(); i++) {\n     \
    \   sum += game[i];\n        if(guess[i] == sum) {\n            result[i] = 0;\n\
    \        } else {\n            result[i] = abs(guess[i] - sum);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n  \
    \  assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpv34w07ie: /tmp/tmpv34w07ie.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpoh2c92jt: /tmp/tmpoh2c92jt.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpr6eq12c0: /tmp/tmpr6eq12c0.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      result[i] = 0;\n        } else {\n            result[i] = abs(game[i] -\
    \ guess[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n  \
    \  long sum5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10\
    \ = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplmcbv2d9.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmplmcbv2d9.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmplmcbv2d9.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long temp = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80 = 0;\n    long temp81 = 0;\n    long \n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpctmpb59u.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpctmpb59u.cpp:101:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpctmpb59u.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long diff = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = diff;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = sum - guess[i];\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpm5dd67ow: /tmp/tmpm5dd67ow.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    // Your code goes here\n   \
    \ long sum = 0;\n    long count = 0;\n    long temp = 0;\n    for (int i = 0;\
    \ i < guess.size(); i++) {\n        temp = game[i] - guess[i];\n        if (temp\
    \ < 0) {\n            temp *= -1;\n        }\n        sum += temp;\n        count++;\n\
    \    }\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = sum\
    \ - game[i];\n    }\n    for (int i = 0; i < guess.size(); i++) {\n        result[i]\
    \ = std::abs(result[i]);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp5fwqixyz: /tmp/tmp5fwqixyz.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpe9s5zaui: /tmp/tmpe9s5zaui.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    long\
    \ mid = 0;\n    long count = 0;\n    for (long i = 0; i < game.size(); i++) {\n\
    \        sum += game[i];\n        if (guess == game) {\n            result[i]\
    \ = 0;\n        }\n        else {\n            diff = abs(guess[i] - game[i]);\n\
    \            if (diff > max) {\n                max = diff;\n                mid\
    \ = i;\n            }\n            if (diff < min) {\n                min = diff;\n\
    \                mid = i;\n            }\n        }\n    }\n    for (long i =\
    \ 0; i < game.size(); i++) {\n        if (guess == game) {\n            result[i]\
    \ = 0;\n        }\n        else {\n            diff = abs(guess[i] - game[i]);\n\
    \            if (diff == max) {\n                result[i] = 0;\n            }\n\
    \            else if (diff == min) {\n                result[i] = 1;\n       \
    \     }\n            else {\n                result[i] = diff;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < game.size(); i++) {\n        if (guess\
    \ == game) {\n            result[i] = 0;\n        }\n        else {\n        \
    \    diff = abs(guess[i] - game[i]);\n            if (diff == max) {\n       \
    \         result[i] = 0;\n            }\n            else if (diff == min) {\n\
    \                result[i] = 1;\n            }\n            else {\n         \
    \       result[i] = diff;\n            }\n        }\n    }\n    for (long i =\
    \ 0; i < game.size(); i++) {\n        if (guess == game) {\n            result[i]\
    \ = 0;\n        }\n        else {\n            diff = abs(guess[i] - game[i]);\n\
    \            if (diff == max) {\n                result[i] = 0;\n            }\n\
    \            else if (diff == min) {\n                result[i] = 1;\n       \
    \     }\n            else {\n                result[i] = diff;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < game.size(); i++) {\n        if (guess\
    \ == game) {\n            result[i] = 0;\n        }\n        else {\n        \
    \    diff = abs(guess[i] - game[i]);\n            if (diff == max) {\n       \
    \         result[i] = 0;\n            }\n            else if (diff == min) {\n\
    \                result[i] = 1;\n            }\n            else {\n         \
    \       result[i] = diff;\n            }\n        }\n    }\n    for (long i =\
    \ 0; i < game.size(); i++) {\n        if (guess == game) {\n            result[i]\
    \ = 0;\n        }\n        else {\n            diff = abs(guess[i] - game[i]);\n\
    \            if (diff == max) {\n                result[i] = 0;\n            }\n\
    \            else if (diff == min) {\n                result[i] = 1;\n       \
    \     }\n            else {\n                result[i] = diff;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < game.size(); i++) {\n        if (guess\
    \ == game) {\n            result[i] = 0;\n        }\n        else {\n        \
    \    diff = abs(guess[i] - game[i]);\n            if (diff == max) {\n       \
    \         result[i] = 0;\n            }\n            else if (diff == min) {\n\
    \                result[i] = 1;\n\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0cn1j7lz.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp0cn1j7lz.cpp:137:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  137 | int main() {\n     \
    \ |            ^\n/tmp/tmp0cn1j7lz.cpp:143:1: error: expected \u2018}\u2019 at\
    \ end of input\n  143 | }\n      | ^\n/tmp/tmp0cn1j7lz.cpp:128:14: note: to match\
    \ this \u2018{\u2019\n  128 |         else {\n      |              ^\n/tmp/tmp0cn1j7lz.cpp:143:1:\
    \ error: expected \u2018}\u2019 at end of input\n  143 | }\n      | ^\n/tmp/tmp0cn1j7lz.cpp:124:44:\
    \ note: to match this \u2018{\u2019\n  124 |     for (long i = 0; i < game.size();\
    \ i++) {\n      |                                            ^\n/tmp/tmp0cn1j7lz.cpp:143:1:\
    \ error: expected \u2018}\u2019 at end of input\n  143 | }\n      | ^\n/tmp/tmp0cn1j7lz.cpp:13:76:\
    \ note: to match this \u2018{\u2019\n   13 | std::vector<long> compare(std::vector<long>\
    \ game, std::vector<long> guess) {\n      |                                  \
    \                                          ^\n/tmp/tmp0cn1j7lz.cpp:143:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  143 |\
    \ }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpr3jxuvxb: /tmp/tmpr3jxuvxb.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long count = 0;\n    long max = 0;\n    long min = 0;\n    long maxDiff\
    \ = 0;\n    long minDiff = 0;\n    long maxGuess = 0;\n    long minGuess = 0;\n\
    \    long maxScore = 0;\n    long minScore = 0;\n    long maxGuesses = 0;\n  \
    \  long minGuesses = 0;\n    long maxDiffGuesses = 0;\n    long minDiffGuesses\
    \ = 0;\n    long maxScoreGuesses = 0;\n    long minScoreGuesses = 0;\n    long\
    \ maxGuessesGuesses = 0;\n    long minGuessesGuesses = 0;\n    long maxDiffGuessesGuesses\
    \ = 0;\n    long minDiffGuessesGuesses = 0;\n    long maxScoreGuessesGuesses =\
    \ 0;\n    long minScoreGuessesGuesses = 0;\n    long maxGuessesGuessesGuesses\
    \ = 0;\n    long minGuessesGuessesGuesses = 0;\n    long maxDiffGuessesGuessesGuesses\
    \ = 0;\n    long minDiffGuessesGuessesGuesses = 0;\n    long maxScoreGuessesGuessesGuesses\
    \ = 0;\n    long minScoreGuessesGuessesGuesses = 0;\n    long maxGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minGuessesGuessesGuessesGuesses = 0;\n    long maxDiffGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minDiffGuessesGuessesGuessesGuesses = 0;\n    long maxScoreGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minScoreGuessesGuessesGuessesGuesses = 0;\n    long maxGuessesGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minGuessesGuessesGuessesGuessesGuesses = 0;\n    long maxDiffGuessesGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minDiffGuessesGuessesGuessesGuessesGuesses = 0;\n    long maxScoreGuessesGuessesGuessesGuessesGuesses\
    \ = 0;\n    long minScoreGuessesGuessesGuessesGuessesGuesses = 0;\n    \n}\nint\
    \ main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpminz37pl: /tmp/tmpminz37pl.cpp:60: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpgmimdx_u: /tmp/tmpgmimdx_u.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp4fhreg6a: /tmp/tmp4fhreg6a.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long difference = 0;\n    long index = 0;\n    long index2 = 0;\n\
    \    long index3 = 0;\n    long index4 = 0;\n    long index5 = 0;\n    long index6\
    \ = 0;\n    long index7 = 0;\n    long index8 = 0;\n    long index9 = 0;\n   \
    \ long index10 = 0;\n    long index11 = 0;\n    long index12 = 0;\n    long index13\
    \ = 0;\n    long index14 = 0;\n    long index15 = 0;\n    long index16 = 0;\n\
    \    long index17 = 0;\n    long index18 = 0;\n    long index19 = 0;\n    long\
    \ index20 = 0;\n    long index21 = 0;\n    long index22 = 0;\n    long index23\
    \ = 0;\n    long index24 = 0;\n    long index25 = 0;\n    long index26 = 0;\n\
    \    long index27 = 0;\n    long index28 = 0;\n    long index29 = 0;\n    long\
    \ index30 = 0;\n    long index31 = 0;\n    long index32 = 0;\n    long index33\
    \ = 0;\n    long index34 = 0;\n    long index35 = 0;\n    long index36 = 0;\n\
    \    long index37 = 0;\n    long index38 = 0;\n    long index39 = 0;\n    long\
    \ index40 = 0;\n    long index41 = 0;\n    long index42 = 0;\n    long index43\
    \ = 0;\n    long index44 = 0;\n    long index45 = 0;\n    long index46 = 0;\n\
    \    long index47 = 0;\n    long index48 = 0;\n    long index49 = 0;\n    long\
    \ index50 = 0;\n    long index51 = 0;\n    long index52 = 0;\n    long index53\
    \ = 0;\n    long index54 = 0;\n    long index55 = 0;\n    long index56 = 0;\n\
    \    long index57 = 0;\n    long index58 = 0;\n    long index59 = 0;\n    long\
    \ index60 = 0;\n    long index61 = 0;\n    long index62 = 0;\n    long index63\
    \ = 0;\n    long index64 = 0;\n    long index65 = 0;\n    long index66 = 0;\n\
    \    long index67 = 0;\n    long index68 = 0;\n    long index69 = 0;\n    long\
    \ index70 = 0;\n    long index71 = 0;\n    long index72 = 0;\n    long index73\
    \ = 0;\n    long index74 = 0;\n    long index75 = 0;\n    long index76 = 0;\n\
    \    long index77 = 0;\n    long index78 = 0;\n    long index79 = 0;\n    long\
    \ index80 = 0;\n    long index81 = 0;\n    long index82 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu1xra3v1.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpu1xra3v1.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpu1xra3v1.cpp:101:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  101 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpnivfm3y6: /tmp/tmpnivfm3y6.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    for(int i = 0; i < game.size(); i++) {\n \
    \       sum += game[i];\n        diff = game[i] - guess[i];\n        if(diff <\
    \ 0) {\n            diff *= -1;\n        }\n        result[i] = sum - diff;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpvgm6d2f7: /tmp/tmpvgm6d2f7.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n  \
    \  long sum5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10\
    \ = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum43\n}\nint main() {\n\
    \    auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9lqeg47v.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp9lqeg47v.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmp9lqeg47v.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long\
    \ sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long\
    \ sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n \
    \   long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16\
    \ = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long\
    \ sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n\
    \    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27\
    \ = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long\
    \ sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n\
    \    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38\
    \ = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long\
    \ sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n\
    \    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49\
    \ = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long\
    \ sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n\
    \    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60\
    \ = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long\
    \ sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n\
    \    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71\
    \ = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long\
    \ sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n\
    \    long sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82\
    \ = 0;\n    long sum83 = 0;\n    long sum84\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw86cg29i.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpw86cg29i.cpp:100:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  100 | }\n      | ^\n/tmp/tmpw86cg29i.cpp:100:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i] - guess[i];\n    \
    \    result[i] = abs(score);\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpkpy_agvb: /tmp/tmpkpy_agvb.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long diff = 0;\n    long sum2\
    \ = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long diff3 = 0;\n   \
    \ long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long diff4 = 0;\n\
    \    long sum5 = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long diff5 =\
    \ 0;\n    long sum6 = 0;\n    long max6 = 0;\n    long min6 = 0;\n    long diff6\
    \ = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7 = 0;\n    long diff7\
    \ = 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long diff8\
    \ = 0;\n    long sum9 = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long max10 = 0;\n    long min10 = 0;\n    long\
    \ diff10 = 0;\n    long sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n\
    \    long diff11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n    long min12\
    \ = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long\
    \ min13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n\
    \    long min14 = 0;\n    long diff14 = 0;\n    long sum15 = 0;\n    long max15\
    \ = 0;\n    long min15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long\
    \ max16 = 0;\n    long min16 = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n\
    \    long max17 = 0;\n    long min17 = 0;\n    long diff17 = 0;\n    long sum18\
    \ = 0;\n    long max18 = 0;\n    long min18 = 0;\n    long diff18 = 0;\n    long\
    \ sum19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long max20 = 0;\n    long min20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long max21 = 0;\n    long min21 = 0;\n    long\
    \ diff21 = 0;\n    long sum22 = 0;\n    long max22 = 0;\n    long \n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdk6sut35.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpdk6sut35.cpp:103:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  103 | }\n      | ^\n/tmp/tmpdk6sut35.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d = 0;\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbrm93wh.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpnbrm93wh.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:116:10: error: redeclaration of\
    \ \u2018long int d\u2019\n  116 |     long d = 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:64:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   64 |     long d =\
    \ 0;\n      |          ^\n/tmp/tmpnbrm93wh.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd =\
    \ 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n\
    \    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long\
    \ mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq =\
    \ 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n\
    \    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long\
    \ zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n    long Cc = 0;\n    long Dd =\
    \ 0;\n    long Ee = 0;\n    long Ff = 0;\n    long Gg = 0;\n    long Hh = 0;\n\
    \    long Ii = 0;\n    long Jj = 0;\n    long Kk = 0;\n    long Ll = 0;\n    long\
    \ Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n    long Pp = 0;\n    long Qq =\
    \ 0;\n    long Rr = 0;\n    long Ss = 0;\n    long Tt = 0;\n    long Uu = 0;\n\
    \    long Vv = 0;\n    long Ww = 0;\n    long Xx = 0;\n\n}\nint main() {\n   \
    \ auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpyfsz9w09: /tmp/tmpyfsz9w09.cpp:116: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i] - guess[i];\n    \
    \    result[i] = abs(score);\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmptedxq5jr: /tmp/tmptedxq5jr.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplzas222n.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmplzas222n.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmplzas222n.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmplzas222n.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmplzas222n.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i] - guess[i];\n      \
    \  result[i] = sum;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp8rqztjkw: /tmp/tmp8rqztjkw.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    for (size_t i = 0; i < game.size();\
    \ i++) {\n        sum += game[i];\n        if (game[i] > max) {\n            max\
    \ = game[i];\n        }\n        if (game[i] < min) {\n            min = game[i];\n\
    \        }\n    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += guess[i];\n        if (guess[i] > max) {\n            max = guess[i];\n \
    \       }\n        if (guess[i] < min) {\n            min = guess[i];\n      \
    \  }\n    }\n    for (size_t i = 0; i < game.size(); i++) {\n        result[i]\
    \ = abs(game[i] - guess[i]);\n    }\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpv7wregqm: /tmp/tmpv7wregqm.cpp:47: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long total = 0;\n    long score\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmplduen5rk: /tmp/tmplduen5rk.cpp:118: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    long diff\
    \ = 0;\n    long count = 0;\n    long sumOfGuesses = 0;\n    long sumOfGames =\
    \ 0;\n    long maxGuesses = std::max(game.size(), guess.size());\n    long maxGames\
    \ = std::max(game.size(), guess.size());\n    long minGames = std::min(game.size(),\
    \ guess.size());\n    long minGuesses = std::min(game.size(), guess.size());\n\
    \    long maxDiff = std::max(game.size(), guess.size());\n    long minDiff = std::min(game.size(),\
    \ guess.size());\n    long minSum = std::min(game.size(), guess.size());\n   \
    \ long maxSum = std::max(game.size(), guess.size());\n    long minSumOfGuesses\
    \ = std::min(game.size(), guess.size());\n    long maxSumOfGuesses = std::max(game.size(),\
    \ guess.size());\n    long minSumOfGames = std::min(game.size(), guess.size());\n\
    \    long maxSumOfGames = std::max(game.size(), guess.size());\n    long minSumOfDiff\
    \ = std::min(game.size(), guess.size());\n    long maxSumOfDiff = std::max(game.size(),\
    \ guess.size());\n    long minSumOfCount = std::min(game.size(), guess.size());\n\
    \    long maxSumOfCount = std::max(game.size(), guess.size());\n    long minSumOfSumOfGuesses\
    \ = std::min(game.size(), guess.size());\n    long maxSumOfSumOfGuesses = std::max(game.size(),\
    \ guess.size());\n    long minSumOfSumOfGames = std::min(game.size(), guess.size());\n\
    \    long maxSumOfSumOfGames = std::max(game.size(), guess.size());\n    long\
    \ minSumOfSumOfDiff = std::min(game.size(), guess.size());\n    long maxSumOfSumOfDiff\
    \ = std::max(game.size(), guess.size());\n    long minSumOfSumOfCount = std::min(game.size(),\
    \ guess.size());\n    long maxSumOfSumOfCount = std::max(game.size(), guess.size());\n\
    \    long minSumOfSumOfSumOfGuesses = std::min(game.size(), guess.size());\n \
    \   long maxSumOfSumOfSumOfGuesses = std::max(game.size(), guess.size());\n  \
    \  long minSumOfSumOfSumOfGames = std::min(game.size(), guess.size());\n    long\
    \ maxSumOfSumOfSumOfGames = std::max(game.size(), gue\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjsb9bwxy.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpjsb9bwxy.cpp:47:58: error: \u2018\
    gue\u2019 was not declared in this scope\n   47 |     long maxSumOfSumOfSumOfGames\
    \ = std::max(game.size(), gue\n      |                                       \
    \                   ^~~\n/tmp/tmpjsb9bwxy.cpp:48:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   48 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long guess = 0;\n    long game = 0;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n   \
    \ long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s =\
    \ 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n   \
    \ long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B =\
    \ 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n   \
    \ long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K =\
    \ 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n   \
    \ long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T =\
    \ 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n   \
    \ long Y = 0;\n    long Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc\
    \ = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n\
    \    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long\
    \ ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp =\
    \ 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n\
    \    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long\
    \ yy = 0;\n    long zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n    long Cc =\
    \ 0;\n    long Dd = 0;\n    long Ee = 0;\n    long Ff = 0;\n    long Gg = 0;\n\
    \    long Hh = 0;\n    long Ii = 0;\n    long Jj = 0;\n    long Kk = 0;\n    long\
    \ Ll = 0;\n    long Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n    long Pp =\
    \ 0;\n    long Qq = 0;\n    long Rr = 0;\n    long Ss = 0;\n    long Tt = 0;\n\
    \    long Uu = 0;\n    long Vv = 0;\n    long Ww = 0;\n    \n}\nint main() {\n\
    \    auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3gw8smrv.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp3gw8smrv.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp3gw8smrv.cpp:18:10: error: declaration of\
    \ \u2018long int game\u2019 shadows a parameter\n   18 |     long game = 0;\n\
    \      |          ^~~~\n/tmp/tmp3gw8smrv.cpp:113:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  113 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long guess = 0;\n    long diff = 0;\n    for(int i = 0; i < game.size();\
    \ i++) {\n        if(game[i] == guess[i]) {\n            score++;\n        }\n\
    \        else {\n            diff = abs(game[i] - guess[i]);\n            result[i]\
    \ = diff;\n        }\n    }\n    for(int i = 0; i < game.size(); i++) {\n    \
    \    if(game[i] != guess[i]) {\n            result[i] = abs(game[i] - guess[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfmflzsg4.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpfmflzsg4.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpfmflzsg4.cpp:20:30: error: invalid types\
    \ \u2018long int[int]\u2019 for array subscript\n   20 |         if(game[i] ==\
    \ guess[i]) {\n      |                              ^\n/tmp/tmpfmflzsg4.cpp:24:41:\
    \ error: invalid types \u2018long int[int]\u2019 for array subscript\n   24 |\
    \             diff = abs(game[i] - guess[i]);\n      |                       \
    \                  ^\n/tmp/tmpfmflzsg4.cpp:29:30: error: invalid types \u2018\
    long int[int]\u2019 for array subscript\n   29 |         if(game[i] != guess[i])\
    \ {\n      |                              ^\n/tmp/tmpfmflzsg4.cpp:30:46: error:\
    \ invalid types \u2018long int[int]\u2019 for array subscript\n   30 |       \
    \      result[i] = abs(game[i] - guess[i]);\n      |                         \
    \                     ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long max = 0;\n    long min = 0;\n    for\
    \ (size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        if\
    \ (game[i] > max) {\n            max = game[i];\n        }\n        if (game[i]\
    \ < min) {\n            min = game[i];\n        }\n    }\n    for (size_t i =\
    \ 0; i < guess.size(); i++) {\n        diff = guess - game;\n        if (diff\
    \ > max) {\n            max = diff;\n        }\n        if (diff < min) {\n  \
    \          min = diff;\n        }\n    }\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(guess - game);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcn4_ytlh.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpcn4_ytlh.cpp:30:22: error: no match\
    \ for \u2018operator-\u2019 (operand types are \u2018std::vector<long int>\u2019\
    \ and \u2018std::vector<long int>\u2019)\n   30 |         diff = guess - game;\n\
    \      |                ~~~~~ ^ ~~~~\n      |                |       |\n     \
    \ |                |       vector<[...]>\n      |                vector<[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> decltype\
    \ ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const\
    \ reverse_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> decltype\
    \ ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorR>&)\u2019\n 1209 |     operator-(const move_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:361:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  361 |     operator-(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:361:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:370:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  370 |     operator-(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:370:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:379:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  379 |     operator-(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:379:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:456:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&)\u2019\n  456 |     operator-(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:456:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   30 |\
    \         diff = guess - game;\n      |                        ^~~~\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:370:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> typename\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  370 |     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:370:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   30 |         diff = guess - game;\n      |           \
    \             ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n    \
    \             from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type\
    \ std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  382 |     operator-(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   30 |         diff = guess - game;\n      |           \
    \             ^~~~\nIn file included from /usr/include/c++/9/vector:68,\n    \
    \             from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:214:3:\
    \ note: candidate: \u2018std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&,\
    \ const std::_Bit_iterator_base&)\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:214:39:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::_Bit_iterator_base&\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__minus, typename\
    \ _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  406\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-,\
    \ __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   30 |         diff = guess - game;\n  \
    \    |                        ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   30 |         diff = guess - game;\n      |                        ^~~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   30 |         diff\
    \ = guess - game;\n      |                        ^~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   30 |         diff\
    \ = guess - game;\n      |                        ^~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   30 |         diff\
    \ = guess - game;\n      |                        ^~~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\
    \n  974 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   30 |         diff = guess - game;\n      |           \
    \             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)\u2019\
    \n  986 |     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:30:24: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   30 |         diff = guess - game;\n      |           \
    \             ^~~~\n/tmp/tmpcn4_ytlh.cpp:39:31: error: no match for \u2018operator-\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018std::vector<long\
    \ int>\u2019)\n   39 |         result[i] = abs(guess - game);\n      |       \
    \                  ~~~~~ ^ ~~~~\n      |                         |       |\n \
    \     |                         |       vector<[...]>\n      |               \
    \          vector<[...]>\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__y.base()\
    \ - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const\
    \ std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const reverse_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__x.base()\
    \ - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1209 |     operator-(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1209:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   39\
    \ |         result[i] = abs(guess - game);\n      |                          \
    \       ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n       \
    \          from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:361:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  361 |     operator-(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:361:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:370:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  370 |     operator-(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:370:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:379:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  379 |     operator-(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:379:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/complex:456:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&)\u2019\n  456 |     operator-(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:456:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   39 |\
    \         result[i] = abs(guess - game);\n      |                            \
    \     ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n            \
    \     from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:370:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> typename\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  370 |     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:370:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   39 |         result[i] = abs(guess - game);\n      | \
    \                                ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type\
    \ std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  382 |     operator-(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   39 |         result[i] = abs(guess - game);\n      | \
    \                                ^~~~\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:214:3:\
    \ note: candidate: \u2018std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&,\
    \ const std::_Bit_iterator_base&)\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:214:39:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::_Bit_iterator_base&\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__minus, typename\
    \ _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  406\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-,\
    \ __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   39 |         result[i] = abs(guess - game);\n\
    \      |                                 ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   39 |         result[i]\
    \ = abs(guess - game);\n      |                                 ^~~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1186:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1186:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   39 |         result[i] = abs(guess - game);\n      |                    \
    \             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\
    \n  974 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   39 |         result[i] = abs(guess - game);\n      | \
    \                                ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcn4_ytlh.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)\u2019\
    \n  986 |     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpcn4_ytlh.cpp:39:33: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   39 |         result[i] = abs(guess - game);\n      | \
    \                                ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmphg_f47pv: /tmp/tmphg_f47pv.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n}\nint main() {\n    auto candidate = compare;\n  \
    \  assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvvcoe6cb.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvvcoe6cb.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpvvcoe6cb.cpp:70:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   70 |     long i = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:18:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:71:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   71 |     long j = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:19:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   19 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:72:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   72 |     long k = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:20:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   20 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:73:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   73 |     long l = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:21:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   21 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:74:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   74 |     long m = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:22:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   22 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:75:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   75 |     long n = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:23:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   23 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:76:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   76 |     long o = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:24:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   24 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:77:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   77 |     long p = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:25:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   25 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:78:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   78 |     long q = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:26:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   26 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:79:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   79 |     long r = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:27:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   27 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:80:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   80 |     long s = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:28:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   28 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:81:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   81 |     long t = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:29:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   29 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:82:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   82 |     long u = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:30:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   30 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:83:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   83 |     long v = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:31:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   31 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:84:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   84 |     long w = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:32:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   32 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:85:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   85 |     long x = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:33:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   33 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:86:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   86 |     long y = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:34:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   34 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:87:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   87 |     long z = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:35:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   35 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:88:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   88 |     long A = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:36:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   36 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:89:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   89 |     long B = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:37:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   37 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:90:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   90 |     long C = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:38:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   38 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:91:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   91 |     long D = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:39:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   39 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:92:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   92 |     long E = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:40:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   40 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:93:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   93 |     long F = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:41:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   41 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:94:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   94 |     long G = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:42:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   42 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:95:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   95 |     long H = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:43:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   43 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:96:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   96 |     long I = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:44:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   44 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:97:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   97 |     long J = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:45:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   45 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:98:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   98 |     long K = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:46:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   46 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:99:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   99 |     long L = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:47:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   47 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:100:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  100 |     long M = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:48:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   48 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:101:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  101 |     long N = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:49:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   49 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:102:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  102 |     long O = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:50:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   50 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:103:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  103 |     long P = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:51:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   51 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:104:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  104 |     long Q = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:52:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   52 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:105:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  105 |     long R = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:53:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   53 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:106:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  106 |     long S = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:54:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   54 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:107:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  107 |     long T = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:55:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   55 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:108:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  108 |     long U = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:56:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   56 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:109:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  109 |     long V = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:57:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   57 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:110:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  110 |     long W = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:58:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   58 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:111:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  111 |     long X = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:59:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   59 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:112:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  112 |     long Y = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:60:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   60 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:113:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  113 |     long Z = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:61:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   61 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:114:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  114 |     long a = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:62:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   62 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:115:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  115 |     long b = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:63:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   63 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:116:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  116 |     long c = 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:64:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   64 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpvvcoe6cb.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    for (long\
    \ i = 0; i < game.size(); i++) {\n        sum += game[i];\n        result[i] =\
    \ abs(guess[i] - sum);\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpzr880bza: /tmp/tmpzr880bza.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    for(long i = 0; i < game.size(); i++) {\n    \
    \    if(game[i] == guess[i]) {\n            score++;\n        } else {\n     \
    \       diff = abs(game[i] - guess[i]);\n        }\n        result[i] = score;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1c1im2kd: /tmp/tmp1c1im2kd.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i] - guess[i];\n      \
    \  result[i] = sum;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp0q1bbpxw: /tmp/tmp0q1bbpxw.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long diff = 0;\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp89ssf1ut: /tmp/tmp89ssf1ut.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n  \
    \  long sum5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10\
    \ = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi44vl774.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpi44vl774.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpi44vl774.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Write your code here\n    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n   \
    \ long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o =\
    \ 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n   \
    \ long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x =\
    \ 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n   \
    \ long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G =\
    \ 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n   \
    \ long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P =\
    \ 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n   \
    \ long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y =\
    \ 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n   \
    \ long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n   \
    \ long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q =\
    \ 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n   \
    \ long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z =\
    \ 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n   \
    \ long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I =\
    \ 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n   \
    \ long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R =\
    \ 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n   \
    \ long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a =\
    \ 0;\n    long b = 0;\n    long c\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfh1tlj99.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpfh1tlj99.cpp:70:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   70 |     long i = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:18:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:71:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   71 |     long j = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:19:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   19 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:72:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   72 |     long k = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:20:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   20 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:73:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   73 |     long l = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:21:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   21 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:74:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   74 |     long m = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:22:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   22 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:75:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   75 |     long n = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:23:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   23 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:76:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   76 |     long o = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:24:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   24 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:77:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   77 |     long p = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:25:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   25 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:78:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   78 |     long q = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:26:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   26 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:79:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   79 |     long r = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:27:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   27 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:80:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   80 |     long s = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:28:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   28 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:81:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   81 |     long t = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:29:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   29 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:82:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   82 |     long u = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:30:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   30 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:83:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   83 |     long v = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:31:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   31 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:84:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   84 |     long w = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:32:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   32 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:85:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   85 |     long x = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:33:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   33 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:86:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   86 |     long y = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:34:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   34 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:87:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   87 |     long z = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:35:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   35 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:88:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   88 |     long A = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:36:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   36 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:89:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   89 |     long B = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:37:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   37 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:90:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   90 |     long C = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:38:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   38 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:91:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   91 |     long D = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:39:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   39 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:92:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   92 |     long E = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:40:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   40 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:93:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   93 |     long F = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:41:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   41 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:94:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   94 |     long G = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:42:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   42 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:95:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   95 |     long H = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:43:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   43 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:96:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   96 |     long I = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:44:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   44 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:97:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   97 |     long J = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:45:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   45 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:98:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   98 |     long K = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:46:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   46 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:99:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   99 |     long L = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:47:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   47 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:100:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  100 |     long M = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:48:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   48 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:101:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  101 |     long N = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:49:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   49 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:102:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  102 |     long O = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:50:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   50 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:103:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  103 |     long P = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:51:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   51 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:104:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  104 |     long Q = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:52:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   52 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:105:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  105 |     long R = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:53:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   53 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:106:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  106 |     long S = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:54:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   54 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:107:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  107 |     long T = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:55:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   55 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:108:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  108 |     long U = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:56:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   56 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:109:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  109 |     long V = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:57:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   57 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:110:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  110 |     long W = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:58:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   58 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:111:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  111 |     long X = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:59:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   59 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:112:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  112 |     long Y = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:60:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   60 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:113:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  113 |     long Z = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:61:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   61 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:114:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  114 |     long a = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:62:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   62 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:115:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  115 |     long b = 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:63:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   63 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpfh1tlj99.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmpfh1tlj99.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n}\nint main() {\n    auto candidate = compare;\n  \
    \  assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi902tz1d.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpi902tz1d.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpi902tz1d.cpp:70:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   70 |     long i = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:18:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:71:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   71 |     long j = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:19:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   19 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:72:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   72 |     long k = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:20:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   20 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:73:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   73 |     long l = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:21:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   21 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:74:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   74 |     long m = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:22:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   22 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:75:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   75 |     long n = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:23:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   23 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:76:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   76 |     long o = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:24:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   24 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:77:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   77 |     long p = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:25:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   25 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:78:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   78 |     long q = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:26:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   26 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:79:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   79 |     long r = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:27:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   27 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:80:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   80 |     long s = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:28:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   28 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:81:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   81 |     long t = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:29:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   29 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:82:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   82 |     long u = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:30:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   30 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:83:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   83 |     long v = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:31:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   31 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:84:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   84 |     long w = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:32:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   32 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:85:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   85 |     long x = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:33:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   33 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:86:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   86 |     long y = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:34:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   34 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:87:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   87 |     long z = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:35:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   35 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:88:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   88 |     long A = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:36:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   36 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:89:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   89 |     long B = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:37:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   37 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:90:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   90 |     long C = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:38:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   38 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:91:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   91 |     long D = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:39:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   39 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:92:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   92 |     long E = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:40:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   40 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:93:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   93 |     long F = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:41:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   41 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:94:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   94 |     long G = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:42:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   42 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:95:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   95 |     long H = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:43:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   43 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:96:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   96 |     long I = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:44:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   44 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:97:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   97 |     long J = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:45:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   45 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:98:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   98 |     long K = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:46:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   46 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:99:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   99 |     long L = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:47:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   47 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:100:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  100 |     long M = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:48:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   48 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:101:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  101 |     long N = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:49:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   49 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:102:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  102 |     long O = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:50:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   50 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:103:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  103 |     long P = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:51:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   51 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:104:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  104 |     long Q = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:52:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   52 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:105:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  105 |     long R = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:53:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   53 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:106:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  106 |     long S = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:54:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   54 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:107:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  107 |     long T = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:55:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   55 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:108:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  108 |     long U = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:56:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   56 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:109:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  109 |     long V = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:57:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   57 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:110:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  110 |     long W = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:58:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   58 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:111:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  111 |     long X = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:59:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   59 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:112:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  112 |     long Y = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:60:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   60 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:113:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  113 |     long Z = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:61:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   61 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:114:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  114 |     long a = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:62:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   62 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:115:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  115 |     long b = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:63:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   63 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:116:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  116 |     long c = 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:64:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   64 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpi902tz1d.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i] - guess[i];\n      \
    \  result[i] = sum;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1mzzukk1: /tmp/tmp1mzzukk1.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long sum2 = 0;\n    for (size_t i = 0; i < guess.size(); i++)\
    \ {\n        sum += game[i];\n        sum2 += guess[i];\n    }\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        result[i] = abs(sum - sum2);\n    \
    \    sum2 += guess[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpyshrr3mu: /tmp/tmpyshrr3mu.cpp:30: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    long index = 0;\n    long sum = 0;\n    long count\
    \ = 0;\n    long sum2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long\
    \ count3 = 0;\n    long sum4 = 0;\n    long count4 = 0;\n    long sum5 = 0;\n\
    \    long count5 = 0;\n    long sum6 = 0;\n    long count6 = 0;\n    long sum7\
    \ = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long count8 = 0;\n    long\
    \ sum9 = 0;\n    long count9 = 0;\n    long sum10 = 0;\n    long count10 = 0;\n\
    \    long sum11 = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long count12\
    \ = 0;\n    long sum13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n    long\
    \ count14 = 0;\n    long sum15 = 0;\n    long count15 = 0;\n    long sum16 = 0;\n\
    \    long count16 = 0;\n    long sum17 = 0;\n    long count17 = 0;\n    long sum18\
    \ = 0;\n    long count18 = 0;\n    long sum19 = 0;\n    long count19 = 0;\n  \
    \  long sum20 = 0;\n    long count20 = 0;\n    long sum21 = 0;\n    long count21\
    \ = 0;\n    long sum22 = 0;\n    long count22 = 0;\n    long sum23 = 0;\n    long\
    \ count23 = 0;\n    long sum24 = 0;\n    long count24 = 0;\n    long sum25 = 0;\n\
    \    long count25 = 0;\n    long sum26 = 0;\n    long count26 = 0;\n    long sum27\
    \ = 0;\n    long count27 = 0;\n    long sum28 = 0;\n    long count28 = 0;\n  \
    \  long sum29 = 0;\n    long count29 = 0;\n    long sum30 = 0;\n    long count30\
    \ = 0;\n    long sum31 = 0;\n    long count31 = 0;\n    long sum32 = 0;\n    long\
    \ count32 = 0;\n    long sum33 = 0;\n    long count33 = 0;\n    long sum34 = 0;\n\
    \    long count34 = 0;\n    long sum35 = 0;\n    long count35 = 0;\n    long sum36\
    \ = 0;\n    long count36 = 0;\n    long sum37 = 0;\n    long count37 = 0;\n  \
    \  long sum38 = 0;\n    long count38 = 0;\n    long sum39 = 0;\n    long count39\
    \ = 0;\n    long sum40 = 0;\n    long count40 = 0;\n    long sum41 = 0;\n    long\
    \ count41 = 0;\n    \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_mtr09oq.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp_mtr09oq.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmp_mtr09oq.cpp:102:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  102 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long diff = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    long max_score = std::accumulate(game.begin(),\
    \ game.end(), 0);\n    long min_score = std::accumulate(guess.begin(), guess.end(),\
    \ 0);\n    for(long i = 0; i < guess.size(); i++) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        sum += diff;\n        if(diff == 0) {\n            result[i]\
    \ = 0;\n            count++;\n        } else if(diff > max_score) {\n        \
    \    result[i] = max_score - diff;\n            count++;\n        } else if(diff\
    \ < min_score) {\n            result[i] = min_score - diff;\n            count++;\n\
    \        } else {\n            result[i] = diff;\n            count++;\n     \
    \   }\n    }\n    if(count != guess.size()) {\n        std::cerr << \"error: count\
    \ != guess.size()\" << std::endl;\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp32yln5ns: /tmp/tmp32yln5ns.cpp:44: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ diff = 0;\n    for(int i = 0; i < game.size(); i++) {\n        if(game[i] ==\
    \ guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i]\
    \ = abs(game[i] - guess[i]);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long score;\n    long diff;\n    long sum = 0;\n    long count = 0;\n    for(long\
    \ i = 0; i < guess.size(); i++) {\n        score = game[i];\n        diff = abs(guess\
    \ - score);\n        sum += diff;\n        if(diff == 0) {\n            result[i]\
    \ = 0;\n            count++;\n        } else {\n            result[i] = sum;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn40ayq3g.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpn40ayq3g.cpp:22:26: error: no match\
    \ for \u2018operator-\u2019 (operand types are \u2018std::vector<long int>\u2019\
    \ and \u2018long int\u2019)\n   22 |         diff = abs(guess - score);\n    \
    \  |                    ~~~~~ ^ ~~~~~\n      |                    |       |\n\
    \      |                    |       long int\n      |                    std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n   \
    \              from /usr/include/c++/9/bits/char_traits.h:39,\n              \
    \   from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__y.base()\
    \ - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const\
    \ std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const reverse_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> decltype ((__x.base()\
    \ - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1209 |     operator-(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1209:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   22\
    \ |         diff = abs(guess - score);\n      |                            ^~~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/complex:361:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  361 |     operator-(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:361:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n         \
    \        from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/complex:370:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  370 |     operator-(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:370:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n         \
    \        from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/complex:379:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  379 |     operator-(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:379:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   22 |         diff = abs(guess - score);\n      |             \
    \               ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/complex:456:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator-(const\
    \ std::complex<_Tp>&)\u2019\n  456 |     operator-(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:456:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   22 |\
    \         diff = abs(guess - score);\n      |                            ^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:370:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> typename\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type std::operator-(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  370 |     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:370:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   22 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> typename std::_Deque_iterator<_Tp, _Ref, _Ptr>::difference_type\
    \ std::operator-(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  382 |     operator-(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:382:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   22 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:214:3:\
    \ note: candidate: \u2018std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&,\
    \ const std::_Bit_iterator_base&)\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:214:39:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::_Bit_iterator_base&\u2019\n  214 |   operator-(const _Bit_iterator_base&\
    \ __x, const _Bit_iterator_base& __y)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__minus, typename\
    \ _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  406\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-,\
    \ __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018long int\u2019\n   22 |         diff = abs(guess - score);\n     \
    \ |                            ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   22 |         diff = abs(guess - score);\n      |                        \
    \    ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:406:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__minus,\
    \ typename _Dom1::value_type>::result_type> std::operator-(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  406 |     _DEFINE_EXPR_BINARY_OPERATOR(-, __minus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:406:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long int\u2019\n   22 |        \
    \ diff = abs(guess - score);\n      |                            ^~~~~\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/valarray:1186:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus,\
    \ _Tp>::result_type> std::operator-(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   22 |         diff\
    \ = abs(guess - score);\n      |                            ^~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   22 |         diff\
    \ = abs(guess - score);\n      |                            ^~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/valarray:1186:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__minus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__minus, _Tp>::result_type>\
    \ std::operator-(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1186 | _DEFINE_BINARY_OPERATOR(-, __minus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1186:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018long int\u2019\n   22 |         diff = abs(guess - score);\n     \
    \ |                            ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\
    \n  974 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   22 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpn40ayq3g.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)\u2019\
    \n  986 |     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:986:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpn40ayq3g.cpp:22:28: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   22 |         diff = abs(guess - score);\n      |     \
    \                       ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long max = 0;\n    long min = 0;\n    long diff = 0;\n    long\
    \ sum1 = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long\
    \ sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long\
    \ sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n \
    \   long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16\
    \ = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long\
    \ sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n\
    \    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27\
    \ = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long\
    \ sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n\
    \    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38\
    \ = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long\
    \ sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n\
    \    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49\
    \ = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long\
    \ sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n\
    \    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60\
    \ = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long\
    \ sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n\
    \    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71\
    \ = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long\
    \ sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n\
    \    long sum79 = 0;\n    long sum80 = 0;\n    long \n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz88xm9gx.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpz88xm9gx.cpp:101:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpz88xm9gx.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long diff\
    \ = 0;\n    long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4\
    \ = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8\
    \ = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long\
    \ sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n\
    \    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19\
    \ = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long\
    \ sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n\
    \    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30\
    \ = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long\
    \ sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n\
    \    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41\
    \ = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long\
    \ sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n\
    \    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52\
    \ = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long\
    \ sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n\
    \    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63\
    \ = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long\
    \ sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n\
    \    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74\
    \ = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long\
    \ sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n\
    \    long sum82 = 0;\n    long sum83 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmplr8jm3c9: /tmp/tmplr8jm3c9.cpp:104: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long min = 0;\n    long max = 0;\n    long\
    \ mid = 0;\n    long count = 0;\n    long sum1 = 0;\n    long diff1 = 0;\n   \
    \ long min1 = 0;\n    long max1 = 0;\n    long mid1 = 0;\n    long count1 = 0;\n\
    \    long sum2 = 0;\n    long diff2 = 0;\n    long min2 = 0;\n    long max2 =\
    \ 0;\n    long mid2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long diff3\
    \ = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long mid3 = 0;\n    long count3\
    \ = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long min4 = 0;\n    long\
    \ max4 = 0;\n    long mid4 = 0;\n    long count4 = 0;\n    long sum5 = 0;\n  \
    \  long diff5 = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long mid5 = 0;\n\
    \    long count5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long min6\
    \ = 0;\n    long max6 = 0;\n    long mid6 = 0;\n    long count6 = 0;\n    long\
    \ sum7 = 0;\n    long diff7 = 0;\n    long min7 = 0;\n    long max7 = 0;\n   \
    \ long mid7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n\
    \    long min8 = 0;\n    long max8 = 0;\n    long mid8 = 0;\n    long count8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long min9 = 0;\n    long max9\
    \ = 0;\n    long mid9 = 0;\n    long count9 = 0;\n    long sum10 = 0;\n    long\
    \ diff10 = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long mid10 = 0;\n\
    \    long count10 = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long min11\
    \ = 0;\n    long max11 = 0;\n    long mid11 = 0;\n    long count11 = 0;\n    long\
    \ sum12 = 0;\n    long diff12 = 0;\n    long min12 = 0;\n    long max12 = 0;\n\
    \    long mid12 = 0;\n    long count12 = 0;\n    long sum13 = 0;\n    long diff13\
    \ = 0;\n    long min13 = 0;\n    long max13 = 0;\n    long mid13 = 0;\n    long\
    \ count13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n    long min14 = 0;\n\
    \    long max14 = 0;\n    long mid14 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmphrbg987k: /tmp/tmphrbg987k.cpp:109: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long guess = 0;\n    long diff = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long mid = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4\
    \ = 0;\n    long mid5 = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8\
    \ = 0;\n    long mid9 = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long\
    \ mid12 = 0;\n    long mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n\
    \    long mid16 = 0;\n    long mid17 = 0;\n    long mid18 = 0;\n    long mid19\
    \ = 0;\n    long mid20 = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long\
    \ mid23 = 0;\n    long mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n\
    \    long mid27 = 0;\n    long mid28 = 0;\n    long mid29 = 0;\n    long mid30\
    \ = 0;\n    long mid31 = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long\
    \ mid34 = 0;\n    long mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n\
    \    long mid38 = 0;\n    long mid39 = 0;\n    long mid40 = 0;\n    long mid41\
    \ = 0;\n    long mid42 = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long\
    \ mid45 = 0;\n    long mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n\
    \    long mid49 = 0;\n    long mid50 = 0;\n    long mid51 = 0;\n    long mid52\
    \ = 0;\n    long mid53 = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long\
    \ mid56 = 0;\n    long mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n\
    \    long mid60 = 0;\n    long mid61 = 0;\n    long mid62 = 0;\n    long mid63\
    \ = 0;\n    long mid64 = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long\
    \ mid67 = 0;\n    long mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n\
    \    long mid71 = 0;\n    long mid72 = 0;\n    long mid73 = 0;\n    long mid74\
    \ = 0;\n    long mid75 = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long\
    \ mid78 = 0;\n    long mid79 = 0;\n    long mid80\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppfojsrye.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmppfojsrye.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmppfojsrye.cpp:101:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmppfojsrye.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long diff = 0;\n    long count\
    \ = 0;\n    long sum2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long diff2\
    \ = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long max3 = 0;\n    long\
    \ min3 = 0;\n    long diff3 = 0;\n    long count3 = 0;\n    long sum4 = 0;\n \
    \   long max4 = 0;\n    long min4 = 0;\n    long diff4 = 0;\n    long count4 =\
    \ 0;\n    long sum5 = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long diff5\
    \ = 0;\n    long count5 = 0;\n    long sum6 = 0;\n    long max6 = 0;\n    long\
    \ min6 = 0;\n    long diff6 = 0;\n    long count6 = 0;\n    long sum7 = 0;\n \
    \   long max7 = 0;\n    long min7 = 0;\n    long diff7 = 0;\n    long count7 =\
    \ 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long diff8\
    \ = 0;\n    long count8 = 0;\n    long sum9 = 0;\n    long max9 = 0;\n    long\
    \ min9 = 0;\n    long diff9 = 0;\n    long count9 = 0;\n    long sum10 = 0;\n\
    \    long max10 = 0;\n    long min10 = 0;\n    long diff10 = 0;\n    long count10\
    \ = 0;\n    long sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n    long\
    \ diff11 = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n\
    \    long min12 = 0;\n    long diff12 = 0;\n    long count12 = 0;\n    long sum13\
    \ = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long diff13 = 0;\n    long\
    \ count13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n    long min14 = 0;\n\
    \    long diff14 = 0;\n    long count14 = 0;\n    long sum15 = 0;\n    long max15\
    \ = 0;\n    long min15 = 0;\n    long diff15 = 0;\n    long count15 = 0;\n   \
    \ long sum16 = 0;\n    long max16 = 0;\n    long min16 = 0;\n    long diff16 =\
    \ 0;\n    long count16 = 0;\n    long sum17 = 0;\n    long max17 = 0;\n    long\
    \ min17 = 0;\n    long diff17 = 0;\n    long count17 = 0;\n    long sum18 = 0;\n\
    \    long max18 = 0;\n    long \n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw55o2ze7.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpw55o2ze7.cpp:104:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  104 | }\n      | ^\n/tmp/tmpw55o2ze7.cpp:104:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    long diff = 0;\n    for (size_t i = 0; i < game.size(); i++) {\n \
    \       if (game[i] != guess[i]) {\n            diff = abs(game[i] - guess[i]);\n\
    \            result[i] = diff;\n        } else {\n            result[i] = 0;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf2ij3u4y.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpf2ij3u4y.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpf2ij3u4y.cpp:19:31: error: invalid types\
    \ \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n \
    \  19 |         if (game[i] != guess[i]) {\n      |                          \
    \     ^\n/tmp/tmpf2ij3u4y.cpp:20:41: error: invalid types \u2018long int[size_t\
    \ {aka long unsigned int}]\u2019 for array subscript\n   20 |             diff\
    \ = abs(game[i] - guess[i]);\n      |                                        \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n\
    \    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n\
    \    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12\
    \ = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long\
    \ sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n\
    \    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23\
    \ = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long\
    \ sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n\
    \    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34\
    \ = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long\
    \ sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n\
    \    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45\
    \ = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long\
    \ sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n\
    \    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56\
    \ = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long\
    \ sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n\
    \    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67\
    \ = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long\
    \ sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n\
    \    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78\
    \ = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long\
    \ sum82 = 0;\n    long sum83 = 0;\n    long sum\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq86_xq31.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpq86_xq31.cpp:100:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  100 | }\n      | ^\n/tmp/tmpq86_xq31.cpp:100:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgmums9ch.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpgmums9ch.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpgmums9ch.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmpgmums9ch.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    for\
    \ (int i = 0; i < game.size(); i++) {\n        sum += game[i];\n        sum2 +=\
    \ game[i] * game[i];\n    }\n    for (int i = 0; i < guess.size(); i++) {\n  \
    \      diff += abs(guess[i] - sum);\n        diff2 += abs(guess[i] * guess[i]\
    \ - sum2);\n    }\n    for (int i = 0; i < game.size(); i++) {\n        result[i]\
    \ = diff;\n    }\n    for (int i = 0; i < guess.size(); i++) {\n        result[i]\
    \ = diff2;\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpcwzah41q: /tmp/tmpcwzah41q.cpp:38: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    while (i < game.size()\
    \ && j < guess.size()) {\n        if (game[i] == guess[j]) {\n            score++;\n\
    \            i++;\n            j++;\n        } else if (game[i] > guess[j]) {\n\
    \            score++;\n            diff++;\n            i++;\n        } else {\n\
    \            score++;\n            diff++;\n            j++;\n        }\n    }\n\
    \    while (i < game.size()) {\n        result[i] = score;\n        i++;\n   \
    \ }\n    while (j < guess.size()) {\n        result[j] = diff;\n        j++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n \
    \   assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp_rf7ng4c: /tmp/tmp_rf7ng4c.cpp:47: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA\
    \ = 0;\n    long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n\
    \    long FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long\
    \ JJ = 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN =\
    \ 0;\n    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n\
    \    long SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long\
    \ WW = 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA\
    \ = 0;\n    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE\
    \ = 0;\n    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III\
    \ = 0;\n    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM\
    \ = 0;\n    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ\
    \ = 0;\n    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU\
    \ = 0;\n    long VVV = 0;\n    long WWW = 0;\n    long XXX = 0;\n    long \n}\n\
    int main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp067k5vov.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp067k5vov.cpp:112:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  112 | }\n      | ^\n/tmp/tmp067k5vov.cpp:112:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    for(long i = 0; i < guess.size(); i++) {\n\
    \        sum += game[i];\n        diff = abs(guess[i] - sum);\n        result[i]\
    \ = diff;\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp4q6cri15: /tmp/tmp4q6cri15.cpp:27: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guesses\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpfcx2j9ip: /tmp/tmpfcx2j9ip.cpp:118: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpesvi6khm: /tmp/tmpesvi6khm.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ score = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k\
    \ = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n \
    \   long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t\
    \ = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n \
    \   long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long\
    \ ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag =\
    \ 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n\
    \    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long\
    \ ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at =\
    \ 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n\
    \    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long\
    \ bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg =\
    \ 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n\
    \    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long\
    \ bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt =\
    \ 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n\
    \    long by = 0;\n    long bz = 0;\n    long ca = 0;\n    long cb = 0;\n    long\
    \ cc = 0;\n    long cd = 0;\n    long ce = 0;\n    long cf = 0;\n    long cg =\
    \ 0;\n    long ch = 0;\n    long ci = 0;\n    long cj = 0;\n    long ck = 0;\n\
    \    long cl = 0;\n    long cm = 0;\n    long cn = 0;\n    long co = 0;\n    long\
    \ cp = 0;\n    long cq = 0;\n    long cr = 0;\n    long cs = 0;\n    long ct =\
    \ 0;\n    long cu = 0;\n    long cv = 0;\n    long cw = 0;\n    long cx = 0;\n\
    \    long cy = 0;\n    long cz = 0;\n    long da = 0;\n    \n}\nint main() {\n\
    \    auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2,\
    \ 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1q0ten1y: /tmp/tmp1q0ten1y.cpp:119: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5dyxss4r.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp5dyxss4r.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmp5dyxss4r.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmp5dyxss4r.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long min = 0;\n    long max = 0;\n    long min2 = 0;\n    long\
    \ max2 = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long min4 = 0;\n    long\
    \ max4 = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long min6 = 0;\n    long\
    \ max6 = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long min8 = 0;\n    long\
    \ max8 = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long min10 = 0;\n   \
    \ long max10 = 0;\n    long min11 = 0;\n    long max11 = 0;\n    long min12 =\
    \ 0;\n    long max12 = 0;\n    long min13 = 0;\n    long max13 = 0;\n    long\
    \ min14 = 0;\n    long max14 = 0;\n    long min15 = 0;\n    long max15 = 0;\n\
    \    long min16 = 0;\n    long max16 = 0;\n    long min17 = 0;\n    long max17\
    \ = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long min19 = 0;\n    long\
    \ max19 = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long min21 = 0;\n\
    \    long max21 = 0;\n    long min22 = 0;\n    long max22 = 0;\n    long min23\
    \ = 0;\n    long max23 = 0;\n    long min24 = 0;\n    long max24 = 0;\n    long\
    \ min25 = 0;\n    long max25 = 0;\n    long min26 = 0;\n    long max26 = 0;\n\
    \    long min27 = 0;\n    long max27 = 0;\n    long min28 = 0;\n    long max28\
    \ = 0;\n    long min29 = 0;\n    long max29 = 0;\n    long min30 = 0;\n    long\
    \ max30 = 0;\n    long min31 = 0;\n    long max31 = 0;\n    long min32 = 0;\n\
    \    long max32 = 0;\n    long min33 = 0;\n    long max33 = 0;\n    long min34\
    \ = 0;\n    long max34 = 0;\n    long min35 = 0;\n    long max35 = 0;\n    long\
    \ min36 = 0;\n    long max36 = 0;\n    long min37 = 0;\n    long max37 = 0;\n\
    \    long min38 = 0;\n    long max38 = 0;\n    long min39 = 0;\n    long max39\
    \ = 0;\n    long min40 = 0;\n    long max40 = 0;\n    long min41 = 0;\n    long\
    \ max41 = 0;\n    long min42 = 0;\n    long max42\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ksvl197.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp1ksvl197.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmp1ksvl197.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long score = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long\
    \ C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n\
    \    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long\
    \ L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n\
    \    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long\
    \ U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n\
    \    long Z = 0;\n    long AA = 0;\n    long BB = 0;\n    long CC = 0;\n    long\
    \ DD = 0;\n    long EE = 0;\n    long FF = 0;\n    long GG = 0;\n    long HH =\
    \ 0;\n    long II = 0;\n    long JJ = 0;\n    long KK = 0;\n    long LL = 0;\n\
    \    long MM = 0;\n    long NN = 0;\n    long OO = 0;\n    long PP = 0;\n    long\
    \ QQ = 0;\n    long RR = 0;\n    long SS = 0;\n    long TT = 0;\n    long UU =\
    \ 0;\n    long VV = 0;\n    long WW = 0;\n    long XX = 0;\n    long YY = 0;\n\
    \    long ZZ = 0;\n    long AAA = 0;\n    long BBB = 0;\n    long CCC = 0;\n \
    \   long DDD = 0;\n    long EEE = 0;\n    long FFF = 0;\n    long GGG = 0;\n \
    \   long HHH = 0;\n    long III = 0;\n    long JJJ = 0;\n    long KKK = 0;\n \
    \   long LLL = 0;\n    long MMM = 0;\n    long NNN = 0;\n    long OOO = 0;\n \
    \   long PPP = 0;\n    long QQQ = 0;\n    long RRR = 0;\n    long SSS = 0;\n \
    \   long TTT = 0;\n    long UUU = 0;\n    long VVV = 0;\n    long WWW = 0;\n \
    \   \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpejeh7pvx: /tmp/tmpejeh7pvx.cpp:115: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guess\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n\
    \        score = game[i];\n        if (guess == score) {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = abs(guess - score);\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkdcx95xz.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpkdcx95xz.cpp:16:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   16 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpkdcx95xz.cpp:17:34: error: request for member\
    \ \u2018size\u2019 in \u2018guess\u2019, which is of non-class type \u2018long\
    \ int\u2019\n   17 |     for (size_t i = 0; i < guess.size(); i++) {\n      |\
    \                                  ^~~~\n/tmp/tmpkdcx95xz.cpp:18:24: error: invalid\
    \ types \u2018long int[size_t {aka long unsigned int}]\u2019 for array subscript\n\
    \   18 |         guess = guess[i];\n      |                        ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n  \
    \  long sum5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10\
    \ = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxduri3cs.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpxduri3cs.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpxduri3cs.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n       \
    \     score = 0;\n        } else {\n            score = abs(game[i] - guess[i]);\n\
    \        }\n        result[i] = score;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n\
    \    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n\
    \    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12\
    \ = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long\
    \ sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n\
    \    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23\
    \ = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long\
    \ sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n\
    \    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34\
    \ = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long\
    \ sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n\
    \    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45\
    \ = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long\
    \ sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n\
    \    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56\
    \ = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long\
    \ sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n\
    \    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67\
    \ = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long\
    \ sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n\
    \    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78\
    \ = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long\
    \ sum82 = 0;\n    long sum83 = 0;\n    long sum\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3p8nd955.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp3p8nd955.cpp:100:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  100 | }\n      | ^\n/tmp/tmp3p8nd955.cpp:100:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    long sum2\
    \ = 0;\n    long diff = 0;\n    long diff2 = 0;\n    for (long i = 0; i < game.size();\
    \ i++) {\n        sum += game[i];\n        sum2 += guess[i];\n        diff = abs(sum\
    \ - sum2);\n        diff2 = abs(sum - sum2);\n        if (sum == sum2) {\n   \
    \         result[i] = 0;\n        } else {\n            result[i] = diff;\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp05r52mgg: /tmp/tmp05r52mgg.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        result[i]\
    \ = abs(guess[i] - sum);\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpevuyon6d: /tmp/tmpevuyon6d.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for (int i = 0; i < game.size(); i++) {\n        score = game[i];\n\
    \        diff = abs(guess[i] - score);\n        if (guess[i] == score) {\n   \
    \         result[i] = 0;\n        } else {\n            result[i] = diff;\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long count = 0;\n    long diff = 0;\n    long max = 0;\n    long\
    \ min = 0;\n    long min_index = 0;\n    long max_index = 0;\n    long min_diff\
    \ = 0;\n    long max_diff = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n\
    \    long min_count = 0;\n    long max_count = 0;\n    long min_diff = 0;\n  \
    \  long max_diff = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n    long\
    \ min_count = 0;\n    long max_count = 0;\n    long min_diff = 0;\n    long max_diff\
    \ = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n    long min_count = 0;\n\
    \    long max_count = 0;\n    long min_diff = 0;\n    long max_diff = 0;\n   \
    \ long min_sum = 0;\n    long max_sum = 0;\n    long min_count = 0;\n    long\
    \ max_count = 0;\n    long min_diff = 0;\n    long max_diff = 0;\n    long min_sum\
    \ = 0;\n    long max_sum = 0;\n    long min_count = 0;\n    long max_count = 0;\n\
    \    long min_diff = 0;\n    long max_diff = 0;\n    long min_sum = 0;\n    long\
    \ max_sum = 0;\n    long min_count = 0;\n    long max_count = 0;\n    long min_diff\
    \ = 0;\n    long max_diff = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n\
    \    long min_count = 0;\n    long max_count = 0;\n    long min_diff = 0;\n  \
    \  long max_diff = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n    long\
    \ min_count = 0;\n    long max_count = 0;\n    long min_diff = 0;\n    long max_diff\
    \ = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n    long min_count = 0;\n\
    \    long max_count = 0;\n    long min_diff = 0;\n    long max_diff = 0;\n   \
    \ long min_sum = 0;\n    long max_sum = 0;\n    long min_count = 0;\n    long\
    \ max_count = 0;\n    long min_diff = 0;\n    long max_diff = 0;\n    long min_sum\
    \ = 0;\n    long max_sum = 0;\n    long min_count = 0;\n    long max_count = 0;\n\
    \    long min_diff = 0;\n    long max_diff = 0;\n    long min_sum = 0;\n    long\
    \ max_sum = 0;\n    long min_count = 0;\n    long max_count = 0;\n    long min_diff\
    \ = 0;\n    long max_diff = 0;\n    long min_sum = 0;\n    long max_sum = 0;\n\
    \    long min_count = 0;\n    long max_count = 0;\n    long min_diff = 0;\n  \
    \  long max_diff = 0;\n    long min_sum = 0;\n    \n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpts_z6mno.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpts_z6mno.cpp:29:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   29 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:30:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   30 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:31:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   31 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:32:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   32 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:33:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   33 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:34:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   34 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:35:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   35 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:36:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   36 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:37:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   37 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:38:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   38 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:39:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   39 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:40:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n   40 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:41:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   41 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:42:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   42 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:43:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   43 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:44:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   44 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:45:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   45 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:46:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   46 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:47:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   47 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:48:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   48 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:49:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   49 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:50:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   50 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:51:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   51 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:52:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n   52 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:53:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   53 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:54:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   54 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:55:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   55 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:56:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   56 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:57:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   57 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:58:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   58 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:59:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   59 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:60:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   60 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:61:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   61 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:62:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   62 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:63:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   63 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:64:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n   64 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:65:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   65 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:66:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   66 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:67:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   67 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:68:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   68 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:69:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   69 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:70:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   70 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:71:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   71 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:72:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   72 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:73:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   73 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:74:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   74 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:75:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   75 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:76:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n   76 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:77:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   77 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:78:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   78 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:79:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   79 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:80:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   80 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:81:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   81 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:82:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   82 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:83:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   83 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:84:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   84 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:85:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   85 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:86:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   86 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:87:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   87 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:88:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n   88 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:89:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n   89 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:90:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n   90 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:91:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n   91 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:92:10: error: redeclaration of \u2018long int max_sum\u2019\
    \n   92 |     long max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10:\
    \ note: \u2018long int max_sum\u2019 previously declared here\n   26 |     long\
    \ max_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:93:10: error: redeclaration\
    \ of \u2018long int min_count\u2019\n   93 |     long min_count = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10: note: \u2018long int min_count\u2019\
    \ previously declared here\n   27 |     long min_count = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:94:10: error: redeclaration of \u2018long int\
    \ max_count\u2019\n   94 |     long max_count = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:28:10: note: \u2018long int max_count\u2019 previously declared\
    \ here\n   28 |     long max_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:95:10:\
    \ error: redeclaration of \u2018long int min_diff\u2019\n   95 |     long min_diff\
    \ = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long\
    \ int min_diff\u2019 previously declared here\n   23 |     long min_diff = 0;\n\
    \      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:96:10: error: redeclaration of\
    \ \u2018long int max_diff\u2019\n   96 |     long max_diff = 0;\n      |     \
    \     ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10: note: \u2018long int max_diff\u2019\
    \ previously declared here\n   24 |     long max_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:97:10: error: redeclaration of \u2018long int min_sum\u2019\
    \n   97 |     long min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10:\
    \ note: \u2018long int min_sum\u2019 previously declared here\n   25 |     long\
    \ min_sum = 0;\n      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:98:10: error: redeclaration\
    \ of \u2018long int max_sum\u2019\n   98 |     long max_sum = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmpts_z6mno.cpp:26:10: note: \u2018long int max_sum\u2019\
    \ previously declared here\n   26 |     long max_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:99:10: error: redeclaration of \u2018long int min_count\u2019\
    \n   99 |     long min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:27:10:\
    \ note: \u2018long int min_count\u2019 previously declared here\n   27 |     long\
    \ min_count = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:100:10: error:\
    \ redeclaration of \u2018long int max_count\u2019\n  100 |     long max_count\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:28:10: note: \u2018long\
    \ int max_count\u2019 previously declared here\n   28 |     long max_count = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmpts_z6mno.cpp:101:10: error: redeclaration\
    \ of \u2018long int min_diff\u2019\n  101 |     long min_diff = 0;\n      |  \
    \        ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:23:10: note: \u2018long int min_diff\u2019\
    \ previously declared here\n   23 |     long min_diff = 0;\n      |          ^~~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:102:10: error: redeclaration of \u2018long int max_diff\u2019\
    \n  102 |     long max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:24:10:\
    \ note: \u2018long int max_diff\u2019 previously declared here\n   24 |     long\
    \ max_diff = 0;\n      |          ^~~~~~~~\n/tmp/tmpts_z6mno.cpp:103:10: error:\
    \ redeclaration of \u2018long int min_sum\u2019\n  103 |     long min_sum = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmpts_z6mno.cpp:25:10: note: \u2018long int min_sum\u2019\
    \ previously declared here\n   25 |     long min_sum = 0;\n      |          ^~~~~~~\n\
    /tmp/tmpts_z6mno.cpp:105:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n  105 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long guess = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    long \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptonh5lf.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpptonh5lf.cpp:17:10: error: declaration\
    \ of \u2018long int guess\u2019 shadows a parameter\n   17 |     long guess =\
    \ 0;\n      |          ^~~~~\n/tmp/tmpptonh5lf.cpp:115:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n  115 | }\n      | ^\n/tmp/tmpptonh5lf.cpp:115:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    long sum2\
    \ = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5 = 0;\n    long sum6\
    \ = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9 = 0;\n    long sum10\
    \ = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long sum13 = 0;\n    long\
    \ sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n    long sum17 = 0;\n\
    \    long sum18 = 0;\n    long sum19 = 0;\n    long sum20 = 0;\n    long sum21\
    \ = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n    long\
    \ sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n\
    \    long sum29 = 0;\n    long sum30 = 0;\n    long sum31 = 0;\n    long sum32\
    \ = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n    long\
    \ sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n\
    \    long sum40 = 0;\n    long sum41 = 0;\n    long sum42 = 0;\n    long sum43\
    \ = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n    long\
    \ sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n\
    \    long sum51 = 0;\n    long sum52 = 0;\n    long sum53 = 0;\n    long sum54\
    \ = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n    long\
    \ sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n\
    \    long sum62 = 0;\n    long sum63 = 0;\n    long sum64 = 0;\n    long sum65\
    \ = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n    long\
    \ sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n\
    \    long sum73 = 0;\n    long sum74 = 0;\n    long sum75 = 0;\n    long sum76\
    \ = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n    long\
    \ sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n    long sum83 = 0;\n\
    \    long sum84 = 0;\n    long sum85\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp79ol5i4b.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp79ol5i4b.cpp:100:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  100 | }\n      | ^\n/tmp/tmp79ol5i4b.cpp:100:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long max = 0;\n    for (long i = 0; i < game.size(); i++) {\n\
    \        sum += game[i];\n        if (sum > max) {\n            max = sum;\n \
    \       }\n    }\n    for (long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ guess[i];\n        if (sum > max) {\n            max = sum;\n        }\n   \
    \ }\n    for (long i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i]\
    \ - max);\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp7pchvu6w: /tmp/tmp7pchvu6w.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long guesses\
    \ = 0;\n    long maxScore = std::max(game.size(), guess.size());\n    long maxGuesses\
    \ = std::max(game.size(), guess.size());\n    long minScore = std::min(game.size(),\
    \ guess.size());\n    long minGuesses = std::min(game.size(), guess.size());\n\
    \    long minDiff = std::min(game.size(), guess.size());\n    long maxDiff = std::max(game.size(),\
    \ guess.size());\n    long diff = 0;\n    long diffCount = 0;\n    long diffCount2\
    \ = 0;\n    long diffCount3 = 0;\n    long diffCount4 = 0;\n    long diffCount5\
    \ = 0;\n    long diffCount6 = 0;\n    long diffCount7 = 0;\n    long diffCount8\
    \ = 0;\n    long diffCount9 = 0;\n    long diffCount10 = 0;\n    long diffCount11\
    \ = 0;\n    long diffCount12 = 0;\n    long diffCount13 = 0;\n    long diffCount14\
    \ = 0;\n    long diffCount15 = 0;\n    long diffCount16 = 0;\n    long diffCount17\
    \ = 0;\n    long diffCount18 = 0;\n    long diffCount19 = 0;\n    long diffCount20\
    \ = 0;\n    long diffCount21 = 0;\n    long diffCount22 = 0;\n    long diffCount23\
    \ = 0;\n    long diffCount24 = 0;\n    long diffCount25 = 0;\n    long diffCount26\
    \ = 0;\n    long diffCount27 = 0;\n    long diffCount28 = 0;\n    long diffCount29\
    \ = 0;\n    long diffCount30 = 0;\n    long diffCount31 = 0;\n    long diffCount32\
    \ = 0;\n    long diffCount33 = 0;\n    long diffCount34 = 0;\n    long diffCount35\
    \ = 0;\n    long diffCount36 = 0;\n    long diffCount37 = 0;\n    long diffCount38\
    \ = 0;\n    long diffCount39 = 0;\n    long diffCount40 = 0;\n    long diffCount41\
    \ = 0;\n    long diffCount42 = 0;\n    long diffCount43 = 0;\n    long diffCount44\
    \ = 0;\n    long diffCount45 = 0;\n    long diffCount46 = 0;\n    long diffCount47\
    \ = 0;\n    long diffCount48 = 0;\n    long diffCount49 = 0;\n    long diffCount50\
    \ = 0;\n    long diffCount51 = 0;\n    long diffCount52 = 0;\n    long diffCount53\
    \ = 0;\n    long diffCount54 = 0;\n    long diffCount55 = 0;\n    long diffCount56\
    \ = 0;\n    long diffCount57 = 0;\n    long diffCount\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyh0qzrj_.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpyh0qzrj_.cpp:82:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpyh0qzrj_.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    // Your code goes here\n   \
    \ long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += game[i] - guess[i];\n        result[i] = sum;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp278xgb3p: /tmp/tmp278xgb3p.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(game.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long diff3\
    \ = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long\
    \ diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n  \
    \  long diff7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n\
    \    long diff9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long sum11\
    \ = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long\
    \ sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n\
    \    long sum15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long diff16\
    \ = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long\
    \ diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n\
    \    long diff20 = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long sum22\
    \ = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long\
    \ sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n    long diff25 = 0;\n\
    \    long sum26 = 0;\n    long diff26 = 0;\n    long sum27 = 0;\n    long diff27\
    \ = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long sum29 = 0;\n    long\
    \ diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n    long sum31 = 0;\n\
    \    long diff31 = 0;\n    long sum32 = 0;\n    long diff32 = 0;\n    long sum33\
    \ = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long diff34 = 0;\n    long\
    \ sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n    long diff36 = 0;\n\
    \    long sum37 = 0;\n    long diff37 = 0;\n    long sum38 = 0;\n    long diff38\
    \ = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long sum40 = 0;\n    long\
    \ diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpo5sqynl7: /tmp/tmpo5sqynl7.cpp:105: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      result[i] = 0;\n        } else {\n            result[i] = abs(game[i] -\
    \ guess[i]);\n        }\n        score += game[i];\n    }\n    for (size_t i =\
    \ 0; i < guess.size(); i++) {\n        result[i] += abs(game[i] - score);\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n   \
    \ assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp7qbln4_x: /tmp/tmp7qbln4_x.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code goes here\n    std::vector<long> result(guess.size());\n   \
    \ long sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ game[i];\n        result[i] = abs(guess[i] - sum);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpqhwrokmy: /tmp/tmpqhwrokmy.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long temp = 0;\n    long count = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long sum2 = 0;\n    long diff2\
    \ = 0;\n    long temp2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long\
    \ diff3 = 0;\n    long temp3 = 0;\n    long count3 = 0;\n    long sum4 = 0;\n\
    \    long diff4 = 0;\n    long temp4 = 0;\n    long count4 = 0;\n    long sum5\
    \ = 0;\n    long diff5 = 0;\n    long temp5 = 0;\n    long count5 = 0;\n    long\
    \ sum6 = 0;\n    long diff6 = 0;\n    long temp6 = 0;\n    long count6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long temp7 = 0;\n    long count7\
    \ = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long temp8 = 0;\n    long\
    \ count8 = 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long temp9 = 0;\n\
    \    long count9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long temp10\
    \ = 0;\n    long count10 = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n   \
    \ long temp11 = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long diff12\
    \ = 0;\n    long temp12 = 0;\n    long count12 = 0;\n    long sum13 = 0;\n   \
    \ long diff13 = 0;\n    long temp13 = 0;\n    long count13 = 0;\n    long sum14\
    \ = 0;\n    long diff14 = 0;\n    long temp14 = 0;\n    long count14 = 0;\n  \
    \  long sum15 = 0;\n    long diff15 = 0;\n    long temp15 = 0;\n    long count15\
    \ = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long temp16 = 0;\n    long\
    \ count16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long temp17 = 0;\n\
    \    long count17 = 0;\n    long sum18 = 0;\n    long diff18 = 0;\n    long temp18\
    \ = 0;\n    long count18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n   \
    \ long temp19 = 0;\n    long count19 = 0;\n    long sum20 = 0;\n    long diff20\
    \ = 0;\n    long temp20 = 0;\n    long count20 = 0;\n    long sum21 = 0;\n   \
    \ long diff21 = 0;\n    long temp21 = 0;\n    long count21 = 0;\n\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpf6bzdpbk: /tmp/tmpf6bzdpbk.cpp:107: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9v5056cu.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp9v5056cu.cpp:69:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   69 |     long i = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:17:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   17 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:70:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   70 |     long j = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:18:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   18 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:71:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   71 |     long k = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:19:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   19 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:72:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   72 |     long l = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:20:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   20 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:73:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   73 |     long m = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:74:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   74 |     long n = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:22:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   22 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:75:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   75 |     long o = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:23:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   23 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:76:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   76 |     long p = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:24:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   24 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:77:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   77 |     long q = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:25:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   25 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:78:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   78 |     long r = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:26:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   26 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:79:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   79 |     long s = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:27:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   27 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:80:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   80 |     long t = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:28:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   28 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:81:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   81 |     long u = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:29:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   29 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:82:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   82 |     long v = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:30:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   30 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:83:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   83 |     long w = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:31:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   31 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:84:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   84 |     long x = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:32:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   32 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:85:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   85 |     long y = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:33:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   33 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:86:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   86 |     long z = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:34:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   34 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:87:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   87 |     long A = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:35:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   35 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:88:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   88 |     long B = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:36:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   36 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:89:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   89 |     long C = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:37:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   37 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:90:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   90 |     long D = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:38:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   38 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:91:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   91 |     long E = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:39:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   39 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:92:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   92 |     long F = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:40:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   40 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:93:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   93 |     long G = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:41:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   41 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:94:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   94 |     long H = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:42:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   42 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:95:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   95 |     long I = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:43:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   43 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:96:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   96 |     long J = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:44:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   44 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:97:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   97 |     long K = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:45:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   45 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:98:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   98 |     long L = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:46:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   46 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:99:10: error: redeclaration of\
    \ \u2018long int M\u2019\n   99 |     long M = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:47:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   47 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:100:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  100 |     long N = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:48:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   48 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:101:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  101 |     long O = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:49:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   49 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:102:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  102 |     long P = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:50:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   50 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:103:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  103 |     long Q = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:51:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   51 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:104:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  104 |     long R = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:52:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   52 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:105:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  105 |     long S = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:53:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   53 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:106:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  106 |     long T = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:54:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   54 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:107:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  107 |     long U = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:55:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   55 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:108:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  108 |     long V = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:56:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   56 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:109:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  109 |     long W = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:57:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   57 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:110:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  110 |     long X = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:58:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   58 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:111:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  111 |     long Y = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:59:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   59 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:112:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  112 |     long Z = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:60:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   60 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:113:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  113 |     long a = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:61:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   61 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:114:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  114 |     long b = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:62:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   62 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:115:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  115 |     long c = 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:63:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   63 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmp9v5056cu.cpp:117:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  117 | }\n      | ^\n/tmp/tmp9v5056cu.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ score = 0;\n    long diff = 0;\n    long sum = 0;\n    long count = 0;\n   \
    \ long max = 0;\n    long min = 0;\n    long sum2 = 0;\n    long min2 = 0;\n \
    \   long max2 = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long min4 = 0;\n\
    \    long max4 = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long min6 = 0;\n\
    \    long max6 = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long min8 = 0;\n\
    \    long max8 = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long min10 =\
    \ 0;\n    long max10 = 0;\n    long min11 = 0;\n    long max11 = 0;\n    long\
    \ min12 = 0;\n    long max12 = 0;\n    long min13 = 0;\n    long max13 = 0;\n\
    \    long min14 = 0;\n    long max14 = 0;\n    long min15 = 0;\n    long max15\
    \ = 0;\n    long min16 = 0;\n    long max16 = 0;\n    long min17 = 0;\n    long\
    \ max17 = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long min19 = 0;\n\
    \    long max19 = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long min21\
    \ = 0;\n    long max21 = 0;\n    long min22 = 0;\n    long max22 = 0;\n    long\
    \ min23 = 0;\n    long max23 = 0;\n    long min24 = 0;\n    long max24 = 0;\n\
    \    long min25 = 0;\n    long max25 = 0;\n    long min26 = 0;\n    long max26\
    \ = 0;\n    long min27 = 0;\n    long max27 = 0;\n    long min28 = 0;\n    long\
    \ max28 = 0;\n    long min29 = 0;\n    long max29 = 0;\n    long min30 = 0;\n\
    \    long max30 = 0;\n    long min31 = 0;\n    long max31 = 0;\n    long min32\
    \ = 0;\n    long max32 = 0;\n    long min33 = 0;\n    long max33 = 0;\n    long\
    \ min34 = 0;\n    long max34 = 0;\n    long min35 = 0;\n    long max35 = 0;\n\
    \    long min36 = 0;\n    long max36 = 0;\n    long min37 = 0;\n    long max37\
    \ = 0;\n    long min38 = 0;\n    long max38 = 0;\n    long min39 = 0;\n    long\
    \ max39 = 0;\n    long min40 = 0;\n    long max40 = 0;\n    long min\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvf_rjaen.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpvf_rjaen.cpp:102:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  102 | }\n      | ^\n/tmp/tmpvf_rjaen.cpp:102:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (long\
    \ i = 0; i < guess.size(); i++) {\n        if (game[i] == guess[i]) {\n      \
    \      score = 0;\n        } else {\n            score = abs(game[i] - guess[i]);\n\
    \        }\n        result[i] = score;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        if(diff == 0) {\n            result[i] = 0;\n        }\
    \ else {\n            result[i] = diff;\n        }\n        score += diff;\n \
    \   }\n    if(score == 0) {\n        return result;\n    } else {\n        return\
    \ result;\n    }\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < game.size(); i++) {\n        sum += game[i];\n        result[i] =\
    \ sum - guess[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpwmmz1ep5: /tmp/tmpwmmz1ep5.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i] - guess[i];\n    \
    \    result[i] = abs(score);\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmppxhadwd_: /tmp/tmppxhadwd_.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Write your code here\n    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        score\
    \ += game[i];\n        result[i] = abs(guess[i] - score);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmprnjdn7x_: /tmp/tmprnjdn7x_.cpp:25: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long diff = 0;\n    for (size_t\
    \ i = 0; i < game.size(); ++i) {\n        diff = abs(game[i] - guess[i]);\n  \
    \      result[i] = diff;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84 = 0;\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp2r1xesm8: /tmp/tmp2r1xesm8.cpp:103: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long score = 0;\n    long guesses\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    while (i < game.size() && j < guess.size())\
    \ {\n        if (game[i] == guess[j]) {\n            score++;\n            guesses++;\n\
    \            i++;\n            j++;\n        } else if (game[i] > guess[j]) {\n\
    \            score++;\n            i++;\n        } else {\n            score++;\n\
    \            j++;\n        }\n    }\n    while (i < game.size()) {\n        result[i]\
    \ = 0;\n        i++;\n    }\n    while (j < guess.size()) {\n        result[i]\
    \ = 0;\n        j++;\n    }\n    if (guesses == game.size()) {\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            result[i] = abs(game[i] - guess[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = compare;\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp_cfykt7o: /tmp/tmp_cfykt7o.cpp:50: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n}\nint main() {\n    auto candidate = compare;\n  \
    \  assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfoixksh1.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpfoixksh1.cpp:70:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   70 |     long i = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:18:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   18 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:71:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   71 |     long j = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:19:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   19 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:72:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   72 |     long k = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:20:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   20 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:73:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   73 |     long l = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:21:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   21 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:74:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   74 |     long m = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:22:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   22 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:75:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   75 |     long n = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:23:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   23 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:76:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   76 |     long o = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:24:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   24 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:77:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   77 |     long p = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:25:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   25 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:78:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   78 |     long q = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:26:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   26 |     long q =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:79:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   79 |     long r = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:27:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   27 |     long r =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:80:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   80 |     long s = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:28:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   28 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:81:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   81 |     long t = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:29:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   29 |     long t =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:82:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   82 |     long u = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:30:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   30 |     long u =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:83:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   83 |     long v = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:31:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   31 |     long v =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:84:10: error: redeclaration of\
    \ \u2018long int w\u2019\n   84 |     long w = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:32:10:\
    \ note: \u2018long int w\u2019 previously declared here\n   32 |     long w =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:85:10: error: redeclaration of\
    \ \u2018long int x\u2019\n   85 |     long x = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:33:10:\
    \ note: \u2018long int x\u2019 previously declared here\n   33 |     long x =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:86:10: error: redeclaration of\
    \ \u2018long int y\u2019\n   86 |     long y = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:34:10:\
    \ note: \u2018long int y\u2019 previously declared here\n   34 |     long y =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:87:10: error: redeclaration of\
    \ \u2018long int z\u2019\n   87 |     long z = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:35:10:\
    \ note: \u2018long int z\u2019 previously declared here\n   35 |     long z =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:88:10: error: redeclaration of\
    \ \u2018long int A\u2019\n   88 |     long A = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:36:10:\
    \ note: \u2018long int A\u2019 previously declared here\n   36 |     long A =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:89:10: error: redeclaration of\
    \ \u2018long int B\u2019\n   89 |     long B = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:37:10:\
    \ note: \u2018long int B\u2019 previously declared here\n   37 |     long B =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:90:10: error: redeclaration of\
    \ \u2018long int C\u2019\n   90 |     long C = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:38:10:\
    \ note: \u2018long int C\u2019 previously declared here\n   38 |     long C =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:91:10: error: redeclaration of\
    \ \u2018long int D\u2019\n   91 |     long D = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:39:10:\
    \ note: \u2018long int D\u2019 previously declared here\n   39 |     long D =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:92:10: error: redeclaration of\
    \ \u2018long int E\u2019\n   92 |     long E = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:40:10:\
    \ note: \u2018long int E\u2019 previously declared here\n   40 |     long E =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:93:10: error: redeclaration of\
    \ \u2018long int F\u2019\n   93 |     long F = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:41:10:\
    \ note: \u2018long int F\u2019 previously declared here\n   41 |     long F =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:94:10: error: redeclaration of\
    \ \u2018long int G\u2019\n   94 |     long G = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:42:10:\
    \ note: \u2018long int G\u2019 previously declared here\n   42 |     long G =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:95:10: error: redeclaration of\
    \ \u2018long int H\u2019\n   95 |     long H = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:43:10:\
    \ note: \u2018long int H\u2019 previously declared here\n   43 |     long H =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:96:10: error: redeclaration of\
    \ \u2018long int I\u2019\n   96 |     long I = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:44:10:\
    \ note: \u2018long int I\u2019 previously declared here\n   44 |     long I =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:97:10: error: redeclaration of\
    \ \u2018long int J\u2019\n   97 |     long J = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:45:10:\
    \ note: \u2018long int J\u2019 previously declared here\n   45 |     long J =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:98:10: error: redeclaration of\
    \ \u2018long int K\u2019\n   98 |     long K = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:46:10:\
    \ note: \u2018long int K\u2019 previously declared here\n   46 |     long K =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:99:10: error: redeclaration of\
    \ \u2018long int L\u2019\n   99 |     long L = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:47:10:\
    \ note: \u2018long int L\u2019 previously declared here\n   47 |     long L =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:100:10: error: redeclaration of\
    \ \u2018long int M\u2019\n  100 |     long M = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:48:10:\
    \ note: \u2018long int M\u2019 previously declared here\n   48 |     long M =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:101:10: error: redeclaration of\
    \ \u2018long int N\u2019\n  101 |     long N = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:49:10:\
    \ note: \u2018long int N\u2019 previously declared here\n   49 |     long N =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:102:10: error: redeclaration of\
    \ \u2018long int O\u2019\n  102 |     long O = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:50:10:\
    \ note: \u2018long int O\u2019 previously declared here\n   50 |     long O =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:103:10: error: redeclaration of\
    \ \u2018long int P\u2019\n  103 |     long P = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:51:10:\
    \ note: \u2018long int P\u2019 previously declared here\n   51 |     long P =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:104:10: error: redeclaration of\
    \ \u2018long int Q\u2019\n  104 |     long Q = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:52:10:\
    \ note: \u2018long int Q\u2019 previously declared here\n   52 |     long Q =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:105:10: error: redeclaration of\
    \ \u2018long int R\u2019\n  105 |     long R = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:53:10:\
    \ note: \u2018long int R\u2019 previously declared here\n   53 |     long R =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:106:10: error: redeclaration of\
    \ \u2018long int S\u2019\n  106 |     long S = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:54:10:\
    \ note: \u2018long int S\u2019 previously declared here\n   54 |     long S =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:107:10: error: redeclaration of\
    \ \u2018long int T\u2019\n  107 |     long T = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:55:10:\
    \ note: \u2018long int T\u2019 previously declared here\n   55 |     long T =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:108:10: error: redeclaration of\
    \ \u2018long int U\u2019\n  108 |     long U = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:56:10:\
    \ note: \u2018long int U\u2019 previously declared here\n   56 |     long U =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:109:10: error: redeclaration of\
    \ \u2018long int V\u2019\n  109 |     long V = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:57:10:\
    \ note: \u2018long int V\u2019 previously declared here\n   57 |     long V =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:110:10: error: redeclaration of\
    \ \u2018long int W\u2019\n  110 |     long W = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:58:10:\
    \ note: \u2018long int W\u2019 previously declared here\n   58 |     long W =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:111:10: error: redeclaration of\
    \ \u2018long int X\u2019\n  111 |     long X = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:59:10:\
    \ note: \u2018long int X\u2019 previously declared here\n   59 |     long X =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:112:10: error: redeclaration of\
    \ \u2018long int Y\u2019\n  112 |     long Y = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:60:10:\
    \ note: \u2018long int Y\u2019 previously declared here\n   60 |     long Y =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:113:10: error: redeclaration of\
    \ \u2018long int Z\u2019\n  113 |     long Z = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:61:10:\
    \ note: \u2018long int Z\u2019 previously declared here\n   61 |     long Z =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:114:10: error: redeclaration of\
    \ \u2018long int a\u2019\n  114 |     long a = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:62:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   62 |     long a =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:115:10: error: redeclaration of\
    \ \u2018long int b\u2019\n  115 |     long b = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:63:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   63 |     long b =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:116:10: error: redeclaration of\
    \ \u2018long int c\u2019\n  116 |     long c = 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:64:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   64 |     long c =\
    \ 0;\n      |          ^\n/tmp/tmpfoixksh1.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    long min\
    \ = 0;\n    long max = 0;\n    long mindiff = 0;\n    long maxdiff = 0;\n    long\
    \ mindiff2 = 0;\n    long maxdiff2 = 0;\n    long mindiff3 = 0;\n    long maxdiff3\
    \ = 0;\n    long mindiff4 = 0;\n    long maxdiff4 = 0;\n    long mindiff5 = 0;\n\
    \    long maxdiff5 = 0;\n    long mindiff6 = 0;\n    long maxdiff6 = 0;\n    long\
    \ mindiff7 = 0;\n    long maxdiff7 = 0;\n    long mindiff8 = 0;\n    long maxdiff8\
    \ = 0;\n    long mindiff9 = 0;\n    long maxdiff9 = 0;\n    long mindiff10 = 0;\n\
    \    long maxdiff10 = 0;\n    long mindiff11 = 0;\n    long maxdiff11 = 0;\n \
    \   long mindiff12 = 0;\n    long maxdiff12 = 0;\n    long mindiff13 = 0;\n  \
    \  long maxdiff13 = 0;\n    long mindiff14 = 0;\n    long maxdiff14 = 0;\n   \
    \ long mindiff15 = 0;\n    long maxdiff15 = 0;\n    long mindiff16 = 0;\n    long\
    \ maxdiff16 = 0;\n    long mindiff17 = 0;\n    long maxdiff17 = 0;\n    long mindiff18\
    \ = 0;\n    long maxdiff18 = 0;\n    long mindiff19 = 0;\n    long maxdiff19 =\
    \ 0;\n    long mindiff20 = 0;\n    long maxdiff20 = 0;\n    long mindiff21 = 0;\n\
    \    long maxdiff21 = 0;\n    long mindiff22 = 0;\n    long maxdiff22 = 0;\n \
    \   long mindiff23 = 0;\n    long maxdiff23 = 0;\n    long mindiff24 = 0;\n  \
    \  long maxdiff24 = 0;\n    long mindiff25 = 0;\n    long maxdiff25 = 0;\n   \
    \ long mindiff26 = 0;\n    long maxdiff26 = 0;\n    long mindiff27 = 0;\n    long\
    \ maxdiff27 = 0;\n    long mindiff28 = 0;\n    long maxdiff28 = 0;\n    long mindiff29\
    \ = 0;\n    long maxdiff29 = 0;\n    long mindiff30 = 0;\n    long maxdiff30 =\
    \ 0;\n    long mindiff31 = 0;\n    long maxdiff31 = 0;\n    long mindiff32 = 0;\n\
    \    long maxdiff32 = 0;\n    long mindiff33 = 0;\n    long maxdiff33 = 0;\n \
    \   long mindiff34 = 0;\n    long maxdiff34 = 0;\n    long mindiff35 = 0;\n  \
    \  long maxdiff35 = 0;\n    long mindiff36 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp1xxbdpgf: /tmp/tmp1xxbdpgf.cpp:93: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (long\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
    \ 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0, 0})),\
    \ (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0, 0, 0,\
    \ 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmp7hw12utu: /tmp/tmp7hw12utu.cpp:24: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(game.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    long min = 0;\n    long max = 0;\n    long mid\
    \ = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4 = 0;\n    long mid5\
    \ = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8 = 0;\n    long mid9\
    \ = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long mid12 = 0;\n    long\
    \ mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n    long mid16 = 0;\n\
    \    long mid17 = 0;\n    long mid18 = 0;\n    long mid19 = 0;\n    long mid20\
    \ = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long mid23 = 0;\n    long\
    \ mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n    long mid27 = 0;\n\
    \    long mid28 = 0;\n    long mid29 = 0;\n    long mid30 = 0;\n    long mid31\
    \ = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long mid34 = 0;\n    long\
    \ mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n    long mid38 = 0;\n\
    \    long mid39 = 0;\n    long mid40 = 0;\n    long mid41 = 0;\n    long mid42\
    \ = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long mid45 = 0;\n    long\
    \ mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n    long mid49 = 0;\n\
    \    long mid50 = 0;\n    long mid51 = 0;\n    long mid52 = 0;\n    long mid53\
    \ = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long mid56 = 0;\n    long\
    \ mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n    long mid60 = 0;\n\
    \    long mid61 = 0;\n    long mid62 = 0;\n    long mid63 = 0;\n    long mid64\
    \ = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long mid67 = 0;\n    long\
    \ mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n    long mid71 = 0;\n\
    \    long mid72 = 0;\n    long mid73 = 0;\n    long mid74 = 0;\n    long mid75\
    \ = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long mid78 = 0;\n    long\
    \ mid79 = 0;\n    long mid80 = 0;\n    long mid\n}\nint main() {\n    auto candidate\
    \ = compare;\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5, 1})), (std::vector<long>({1,\
    \ 2, 3, 4, 2, -2}))) == (std::vector<long>({0, 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphcd5koga.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmphcd5koga.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmphcd5koga.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    // Your code here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    long\
    \ sum3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n  \
    \  long sum5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n\
    \    long sum7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long diff8 =\
    \ 0;\n    long sum9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n    long diff10\
    \ = 0;\n    long sum11 = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long\
    \ diff12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n\
    \    long diff14 = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long sum16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ sum18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long\
    \ diff23 = 0;\n    long sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long sum26 = 0;\n    long diff26 = 0;\n    long sum27\
    \ = 0;\n    long diff27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long\
    \ sum29 = 0;\n    long diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n\
    \    long sum31 = 0;\n    long diff31 = 0;\n    long sum32 = 0;\n    long diff32\
    \ = 0;\n    long sum33 = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long\
    \ diff34 = 0;\n    long sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n\
    \    long diff36 = 0;\n    long sum37 = 0;\n    long diff37 = 0;\n    long sum38\
    \ = 0;\n    long diff38 = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long\
    \ sum40 = 0;\n    long diff40 = 0;\n    long sum41 = 0;\n    long diff41 = 0;\n\
    \    long sum42 = 0;\n    long diff42 = 0;\n    long sum\n}\nint main() {\n  \
    \  auto candidate = compare;\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe1194f3s.cpp: In function \u2018std::vector<long int> compare(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpe1194f3s.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpe1194f3s.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA\
    \ = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD = 0;\n    long AE = 0;\n\
    \    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n    long AI = 0;\n    long\
    \ AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long AM = 0;\n    long AN =\
    \ 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ = 0;\n    long AR = 0;\n\
    \    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n    long AV = 0;\n    long\
    \ AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long AZ = 0;\n    long BA =\
    \ 0;\n    long BB = 0;\n    long BC = 0;\n    long BD = 0;\n    long BE = 0;\n\
    \    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n    long BI = 0;\n    long\
    \ BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long BM = 0;\n    long BN =\
    \ 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ = 0;\n    long BR = 0;\n\
    \    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n    long BV = 0;\n    long\
    \ BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long BZ = 0;\n    long CA =\
    \ 0;\n    \n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpf_anbei_: /tmp/tmpf_anbei_.cpp:118: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(game.size());\n    long sum = 0;\n    long diff\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long sum2 = 0;\n\
    \    long diff2 = 0;\n    long k2 = 0;\n    long sum3 = 0;\n    long diff3 = 0;\n\
    \    long k3 = 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long k4 = 0;\n\
    \    long sum5 = 0;\n    long diff5 = 0;\n    long k5 = 0;\n    long sum6 = 0;\n\
    \    long diff6 = 0;\n    long k6 = 0;\n    long sum7 = 0;\n    long diff7 = 0;\n\
    \    long k7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long k8 = 0;\n\
    \    long sum9 = 0;\n    long diff9 = 0;\n    long k9 = 0;\n    long sum10 = 0;\n\
    \    long diff10 = 0;\n    long k10 = 0;\n    long sum11 = 0;\n    long diff11\
    \ = 0;\n    long k11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long\
    \ k12 = 0;\n    long sum13 = 0;\n    long diff13 = 0;\n    long k13 = 0;\n   \
    \ long sum14 = 0;\n    long diff14 = 0;\n    long k14 = 0;\n    long sum15 = 0;\n\
    \    long diff15 = 0;\n    long k15 = 0;\n    long sum16 = 0;\n    long diff16\
    \ = 0;\n    long k16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long\
    \ k17 = 0;\n    long sum18 = 0;\n    long diff18 = 0;\n    long k18 = 0;\n   \
    \ long sum19 = 0;\n    long diff19 = 0;\n    long k19 = 0;\n    long sum20 = 0;\n\
    \    long diff20 = 0;\n    long k20 = 0;\n    long sum21 = 0;\n    long diff21\
    \ = 0;\n    long k21 = 0;\n    long sum22 = 0;\n    long diff22 = 0;\n    long\
    \ k22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long k23 = 0;\n   \
    \ long sum24 = 0;\n    long diff24 = 0;\n    long k24 = 0;\n    long sum25 = 0;\n\
    \    long diff25 = 0;\n    long k25 = 0;\n    long sum26 = 0;\n    long diff26\
    \ = 0;\n    long k26 = 0;\n    long sum27 = 0;\n    long diff27 = 0;\n    long\
    \ k27 = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long k28 = 0;\n   \
    \ long sum29 = 0;\n\n}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: "tmpx3934coc: /tmp/tmpx3934coc.cpp:106: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember\
    \ that feeling when the result of some long-awaited\n// event is finally known.\
    \ The feelings and thoughts you have at that moment are\n// definitely worth noting\
    \ down and comparing.\n// Your task is to determine if a person correctly guessed\
    \ the results of a number of matches.\n// You are given two arrays of scores and\
    \ guesses of equal length, where each index shows a match. \n// Return an array\
    \ of the same length denoting how far off each guess was. If they have guessed\
    \ correctly,\n// the value is 0, and if not, the value is the absolute difference\
    \ between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    std::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n\
    \    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 4, 5, 1})), (std::vector<long>({1, 2, 3, 4, 2, -2}))) == (std::vector<long>({0,\
    \ 0, 0, 0, 3, 3})));\n    assert(candidate((std::vector<long>({0, 0, 0, 0, 0,\
    \ 0})), (std::vector<long>({0, 0, 0, 0, 0, 0}))) == (std::vector<long>({0, 0,\
    \ 0, 0, 0, 0})));\n    assert(candidate((std::vector<long>({1, 2, 3})), (std::vector<long>({-1,\
    \ -2, -3}))) == (std::vector<long>({2, 4, 6})));\n    assert(candidate((std::vector<long>({1,\
    \ 2, 3, 5})), (std::vector<long>({-1, 2, 3, 4}))) == (std::vector<long>({2, 0,\
    \ 0, 1})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

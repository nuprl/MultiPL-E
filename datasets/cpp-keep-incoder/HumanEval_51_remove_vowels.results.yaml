name: HumanEval_51_remove_vowels
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpng1p44ba.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpng1p44ba.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpng1p44ba.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpng1p44ba.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpng1p44ba.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpng1p44ba.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpng1p44ba.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpng1p44ba.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text) {\n\
    \        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq602ae56.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpq602ae56.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpq602ae56.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpq602ae56.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpq602ae56.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpq602ae56.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpq602ae56.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpq602ae56.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw3r2hf8u.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpw3r2hf8u.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpw3r2hf8u.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpw3r2hf8u.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpw3r2hf8u.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpw3r2hf8u.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpw3r2hf8u.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpw3r2hf8u.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv0o98eom.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpv0o98eom.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpv0o98eom.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpv0o98eom.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpv0o98eom.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpv0o98eom.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpv0o98eom.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpv0o98eom.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_q43rhc4.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp_q43rhc4.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp_q43rhc4.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp_q43rhc4.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp_q43rhc4.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_q43rhc4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_q43rhc4.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_q43rhc4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmp_q43rhc4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_q43rhc4.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp_q43rhc4.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp_q43rhc4.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp_q43rhc4.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplw_kwcsx.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmplw_kwcsx.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmplw_kwcsx.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmplw_kwcsx.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplw_kwcsx.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmplw_kwcsx.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmplw_kwcsx.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmplw_kwcsx.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm0m6uuec.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpm0m6uuec.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpm0m6uuec.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpm0m6uuec.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpm0m6uuec.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpm0m6uuec.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpm0m6uuec.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpm0m6uuec.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt80k1ata.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpt80k1ata.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpt80k1ata.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpt80k1ata.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpt80k1ata.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpt80k1ata.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpt80k1ata.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpt80k1ata.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.size(); i++) {\n        if\
    \ (vowels.find(text[i]) != std::string::npos) {\n            text.erase(text.begin()\
    \ + i);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd3u4jycn.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpd3u4jycn.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpd3u4jycn.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpd3u4jycn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpd3u4jycn.cpp:26:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   26 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpd3u4jycn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpd3u4jycn.cpp:26:5:\
    \ error: expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpd3u4jycn.cpp:23:12: note: to match this \u2018\
    {\u2019\n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        }\n    }\n\
    \    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6sqj0sr1.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6sqj0sr1.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6sqj0sr1.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6sqj0sr1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6sqj0sr1.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6sqj0sr1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6sqj0sr1.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6sqj0sr1.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            no_vowels +=\
    \ c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4o_l1uer.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp4o_l1uer.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp4o_l1uer.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp4o_l1uer.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4o_l1uer.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp4o_l1uer.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp4o_l1uer.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp4o_l1uer.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4u3irq0c.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp4u3irq0c.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp4u3irq0c.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp4u3irq0c.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4u3irq0c.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp4u3irq0c.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp4u3irq0c.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp4u3irq0c.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            no_vowels +=\
    \ c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwnpq73ki.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwnpq73ki.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwnpq73ki.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwnpq73ki.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwnpq73ki.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwnpq73ki.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwnpq73ki.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwnpq73ki.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto i : text)\
    \ {\n        if (vowels.find(i) != std::string::npos) {\n            novowels\
    \ += i;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjn4ustkz.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjn4ustkz.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjn4ustkz.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpjn4ustkz.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjn4ustkz.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpjn4ustkz.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpjn4ustkz.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpjn4ustkz.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9] || c == vowels[10] || c == vowels[11] || c ==\
    \ vowels[12] || c == vowels[13] || c == vowels[14] || c == vowels[15] || c ==\
    \ vowels[16] || c == vowels[17] || c == vowels[18] || c == vowels[19] || c ==\
    \ vowels[20] || c == vowels[21] || c == vowels[22] || c == vowels[23] || c ==\
    \ vowels[24] || c == vowels[25] || c == vowels[26] || c == vowels[27] || c ==\
    \ vowels[28] || c == vowels[29] || c == vowels[30] || c == vowels[31] || c ==\
    \ vowels[32] || c == vowels[33] || c == vowels[34] || c == vowels[35] || c ==\
    \ vowels[36] || c == vowels[37] || c == vowels[38] || c == vowels[39] || c ==\
    \ vowels[40] || c == vowels[41] || c == vowels[42] || c == vowels[43] || c ==\
    \ vowels[44] || c == vowels[45] || c == vowels[46] || c == vowels[47] || c ==\
    \ vowels[48] || c == vowels[49] || c == vowels[50] || c == vowels[51] || c ==\
    \ vowels[52] || c == vowels[53] || c == vowels[54] || c == vowels[55] || c ==\
    \ vowels[56] || c == vowels[57] || c == vowels[58] || c == vowels[59] || c ==\
    \ vowels[60] || c == vowels[61] || c == vowels[62] || c == vowels[63] || c ==\
    \ vowels[64] || c == vowels[65] || c == vowels[66] || c == vowels[67] || c ==\
    \ vowels[68] || c == vowels[69] || c == vowels[70] || c == vowels[71] || c ==\
    \ vowels[72] || c == vowels[73] || c == vowels[74] || c == vowels[75] || c ==\
    \ vowels[76] || c == vowels[77] || c == vowels[78] || c == vowels[79] || c ==\
    \ vowels[80] || c == vowels[81] || c == vowels[82] || c == vowels[83] || c ==\
    \ vowels[84] || c == vowels[85] || c == vowels[86] || c == vowels[87] || c ==\
    \ vowels[88] || c == vowels[89] || c == vowels[90] || c == vowels[91] || c ==\
    \ vowels[92] || c == vowels[93] || c == vowels[94] || \n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzld7uc70.cpp:23:23: warning: missing terminating \" character\n\
    \   23 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpzld7uc70.cpp:25:7:\
    \ warning: missing terminating \" character\n   25 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpzld7uc70.cpp:31: error: unterminated argument list invoking macro\
    \ \"assert\"\n   31 | }\n      | \n/tmp/tmpzld7uc70.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpzld7uc70.cpp:19:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   19 | }\n      | ^\n/tmp/tmpzld7uc70.cpp:18:1807:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   18 |         if\
    \ (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3] || c ==\
    \ vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c == vowels[8]\
    \ || c == vowels[9] || c == vowels[10] || c == vowels[11] || c == vowels[12] ||\
    \ c == vowels[13] || c == vowels[14] || c == vowels[15] || c == vowels[16] ||\
    \ c == vowels[17] || c == vowels[18] || c == vowels[19] || c == vowels[20] ||\
    \ c == vowels[21] || c == vowels[22] || c == vowels[23] || c == vowels[24] ||\
    \ c == vowels[25] || c == vowels[26] || c == vowels[27] || c == vowels[28] ||\
    \ c == vowels[29] || c == vowels[30] || c == vowels[31] || c == vowels[32] ||\
    \ c == vowels[33] || c == vowels[34] || c == vowels[35] || c == vowels[36] ||\
    \ c == vowels[37] || c == vowels[38] || c == vowels[39] || c == vowels[40] ||\
    \ c == vowels[41] || c == vowels[42] || c == vowels[43] || c == vowels[44] ||\
    \ c == vowels[45] || c == vowels[46] || c == vowels[47] || c == vowels[48] ||\
    \ c == vowels[49] || c == vowels[50] || c == vowels[51] || c == vowels[52] ||\
    \ c == vowels[53] || c == vowels[54] || c == vowels[55] || c == vowels[56] ||\
    \ c == vowels[57] || c == vowels[58] || c == vowels[59] || c == vowels[60] ||\
    \ c == vowels[61] || c == vowels[62] || c == vowels[63] || c == vowels[64] ||\
    \ c == vowels[65] || c == vowels[66] || c == vowels[67] || c == vowels[68] ||\
    \ c == vowels[69] || c == vowels[70] || c == vowels[71] || c == vowels[72] ||\
    \ c == vowels[73] || c == vowels[74] || c == vowels[75] || c == vowels[76] ||\
    \ c == vowels[77] || c == vowels[78] || c == vowels[79] || c == vowels[80] ||\
    \ c == vowels[81] || c == vowels[82] || c == vowels[83] || c == vowels[84] ||\
    \ c == vowels[85] || c == vowels[86] || c == vowels[87] || c == vowels[88] ||\
    \ c == vowels[89] || c == vowels[90] || c == vowels[91] || c == vowels[92] ||\
    \ c == vowels[93] || c == vowels[94] ||\n      |            ~                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                              ^\n      |                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                       )\n   19 | }\n      | ~                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            \n/tmp/tmpzld7uc70.cpp:19:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   19 | }\n      | ^\n/tmp/tmpzld7uc70.cpp:20:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   20 | int main() {\n      |            ^\n/tmp/tmpzld7uc70.cpp:23:5: error:\
    \ expected \u2018}\u2019 at end of input\n   23 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpzld7uc70.cpp:14:45: note: to match this \u2018{\u2019\
    \n   14 | std::string remove_vowels(std::string text) {\n      |             \
    \                                ^\n/tmp/tmpzld7uc70.cpp:23:5: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   23 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no2 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no3 = \"aeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no4 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no5\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no6 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no7 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no8\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no9 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no10 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no11\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no12 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no13 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no14\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no15 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no16 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no17\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no18 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no19 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no20\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no21 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no22 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no23\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no24 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no25 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no26\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no27 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no28 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no29\
    \ = \"aeiouAEIOUaeiou\";\n    std::string vowels_no30 = \"aeiouAEIOUaeiou\";\n\
    \    std::string vowels_no31 = \"aeiouAEIOUaeiou\";\n    std::string vowels_no32\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqmv76ng5.cpp:52:23: warning: missing terminating \" character\n\
    \   52 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpqmv76ng5.cpp:54:7:\
    \ warning: missing terminating \" character\n   54 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpqmv76ng5.cpp:60: error: unterminated argument list invoking macro\
    \ \"assert\"\n   60 | }\n      | \n/tmp/tmpqmv76ng5.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpqmv76ng5.cpp:48:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   48 | }\n      | ^\n/tmp/tmpqmv76ng5.cpp:48:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    /tmp/tmpqmv76ng5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqmv76ng5.cpp:52:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   52 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpqmv76ng5.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpqmv76ng5.cpp:52:5: error: expected \u2018}\u2019 at end of\
    \ input\n   52 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpqmv76ng5.cpp:49:12:\
    \ note: to match this \u2018{\u2019\n   49 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu1vawz9m.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpu1vawz9m.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpu1vawz9m.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpu1vawz9m.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpu1vawz9m.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpu1vawz9m.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpu1vawz9m.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpu1vawz9m.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq5s7slz1.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpq5s7slz1.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpq5s7slz1.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpq5s7slz1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpq5s7slz1.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpq5s7slz1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpq5s7slz1.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpq5s7slz1.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjzimqcyc.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjzimqcyc.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjzimqcyc.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpjzimqcyc.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpjzimqcyc.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjzimqcyc.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjzimqcyc.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjzimqcyc.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpjzimqcyc.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjzimqcyc.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpjzimqcyc.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpjzimqcyc.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpjzimqcyc.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoqef6cv5.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpoqef6cv5.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpoqef6cv5.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpoqef6cv5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpoqef6cv5.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpoqef6cv5.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpoqef6cv5.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpoqef6cv5.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string rev_vowels = \"AEIOU\";\n    std::string rev_vowels_rev\
    \ = \"AEIOUaeiou\";\n    std::string rev_vowels_revrev = \"AEIOUaeiouAEIOU\";\n\
    \    std::string rev_vowels_revrevrev = \"AEIOUaeiouAEIOUaeiou\";\n    std::string\
    \ rev_vowels_revrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string rev_vowels_revrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string rev_vowels_revrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string rev_vowels_revrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string rev_vowels_revrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string rev_vowels_revrevrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string rev_vowels_revrevrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string\
    \ rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgkjmy3g8.cpp:30:55: warning: missing terminating \" character\n\
    \   30 |     std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\n\
    \      |                                                       ^\n/tmp/tmpgkjmy3g8.cpp:30:55:\
    \ error: missing terminating \" character\n   30 |     std::string rev_vowels_revrevrevrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\n\
    \      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgkjmy3g8.cpp:35:23: warning: missing terminating \" character\n   35 |\
    \     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpgkjmy3g8.cpp:37:7:\
    \ warning: missing terminating \" character\n   37 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpgkjmy3g8.cpp:43: error: unterminated argument list invoking macro\
    \ \"assert\"\n   43 | }\n      | \n/tmp/tmpgkjmy3g8.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpgkjmy3g8.cpp:21:17: error: redeclaration\
    \ of \u2018std::string rev_vowels_revrevrevrev\u2019\n   21 |     std::string\
    \ rev_vowels_revrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n      |     \
    \            ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:20:17: note: \u2018\
    std::string rev_vowels_revrevrevrev\u2019 previously declared here\n   20 |  \
    \   std::string rev_vowels_revrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n   \
    \   |                 ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:24:17: error:\
    \ redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrev\u2019\n   24\
    \ |     std::string rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:23:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrev\u2019 previously declared\
    \ here\n   23 |     std::string rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:26:17:\
    \ error: redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrev\u2019\
    \n   26 |     std::string rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:25:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrev\u2019 previously declared\
    \ here\n   25 |     std::string rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:27:17:\
    \ error: redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrev\u2019\
    \n   27 |     std::string rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:25:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrev\u2019 previously declared\
    \ here\n   25 |     std::string rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:29:17:\
    \ error: redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019\
    \n   29 |     std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:28:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019 previously\
    \ declared here\n   28 |     std::string rev_vowels_revrevrevrevrevrevrevrev =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n      | \
    \                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:30:17:\
    \ error: redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019\
    \n   30 |     std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:28:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019 previously\
    \ declared here\n   28 |     std::string rev_vowels_revrevrevrevrevrevrevrev =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n      | \
    \                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgkjmy3g8.cpp:31:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   31 | }\n \
    \     | ^\n/tmp/tmpgkjmy3g8.cpp:31:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n/tmp/tmpgkjmy3g8.cpp: In function \u2018\
    int main()\u2019:\n/tmp/tmpgkjmy3g8.cpp:35:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   35 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpgkjmy3g8.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpgkjmy3g8.cpp:35:5:\
    \ error: expected \u2018}\u2019 at end of input\n   35 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpgkjmy3g8.cpp:32:12: note: to match this \u2018\
    {\u2019\n   32 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp10in0g82.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp10in0g82.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp10in0g82.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp10in0g82.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp10in0g82.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp10in0g82.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp10in0g82.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp10in0g82.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_6_b1cw.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpt_6_b1cw.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpt_6_b1cw.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpt_6_b1cw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpt_6_b1cw.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpt_6_b1cw.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpt_6_b1cw.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpt_6_b1cw.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            no_vowels +=\
    \ c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzkqqjp04.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpzkqqjp04.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpzkqqjp04.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpzkqqjp04.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpzkqqjp04.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpzkqqjp04.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpzkqqjp04.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpzkqqjp04.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = \"\";\n    for (auto &c : text) {\n    \
    \    if (vowels.find(c) != std::string::npos) {\n            ans += c;\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0553lis1.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp0553lis1.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp0553lis1.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp0553lis1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp0553lis1.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp0553lis1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp0553lis1.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp0553lis1.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz40lmn76.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpz40lmn76.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpz40lmn76.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpz40lmn76.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpz40lmn76.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpz40lmn76.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpz40lmn76.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpz40lmn76.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpku3usb6h.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpku3usb6h.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpku3usb6h.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpku3usb6h.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpku3usb6h.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpku3usb6h.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpku3usb6h.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpku3usb6h.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkt5xcal_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpkt5xcal_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpkt5xcal_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpkt5xcal_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkt5xcal_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpkt5xcal_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpkt5xcal_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpkt5xcal_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0g0f_t9k.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp0g0f_t9k.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp0g0f_t9k.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp0g0f_t9k.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp0g0f_t9k.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0g0f_t9k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0g0f_t9k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0g0f_t9k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmp0g0f_t9k.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0g0f_t9k.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp0g0f_t9k.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp0g0f_t9k.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp0g0f_t9k.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9a817hm4.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp9a817hm4.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp9a817hm4.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp9a817hm4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9a817hm4.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp9a817hm4.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp9a817hm4.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp9a817hm4.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphe5v4465.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphe5v4465.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphe5v4465.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphe5v4465.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphe5v4465.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphe5v4465.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphe5v4465.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphe5v4465.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp06ex0kly.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp06ex0kly.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp06ex0kly.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp06ex0kly.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp06ex0kly.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp06ex0kly.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp06ex0kly.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp06ex0kly.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3j_5bnie.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp3j_5bnie.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp3j_5bnie.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp3j_5bnie.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp3j_5bnie.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3j_5bnie.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3j_5bnie.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3j_5bnie.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmp3j_5bnie.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3j_5bnie.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp3j_5bnie.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp3j_5bnie.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp3j_5bnie.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpntdhd1jn.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpntdhd1jn.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpntdhd1jn.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpntdhd1jn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpntdhd1jn.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpntdhd1jn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpntdhd1jn.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpntdhd1jn.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_rev = \"AEIOUaeiou\";\n    std::string\
    \ rev_vowels = \"\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            rev_vowels += c;\n        }\n    }\n    for\
    \ (auto &c : rev_vowels) {\n        if (vowels_rev.find(c) != std::string::npos)\
    \ {\n            rev_vowels += c;\n        }\n    }\n    return rev_vowels;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi_bcg4hm.cpp:33:23: warning: missing terminating \" character\n\
    \   33 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpi_bcg4hm.cpp:35:7:\
    \ warning: missing terminating \" character\n   35 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpi_bcg4hm.cpp:41: error: unterminated argument list invoking macro\
    \ \"assert\"\n   41 | }\n      | \n/tmp/tmpi_bcg4hm.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi_bcg4hm.cpp:33:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   33 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpi_bcg4hm.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpi_bcg4hm.cpp:33:5:\
    \ error: expected \u2018}\u2019 at end of input\n   33 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpi_bcg4hm.cpp:30:12: note: to match this \u2018\
    {\u2019\n   30 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx9op9sae.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpx9op9sae.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpx9op9sae.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpx9op9sae.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx9op9sae.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpx9op9sae.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpx9op9sae.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpx9op9sae.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgeem4zv.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxgeem4zv.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxgeem4zv.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxgeem4zv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxgeem4zv.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxgeem4zv.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxgeem4zv.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxgeem4zv.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3jpof1a_.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp3jpof1a_.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp3jpof1a_.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp3jpof1a_.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp3jpof1a_.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3jpof1a_.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp3jpof1a_.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp3jpof1a_.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmp3jpof1a_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3jpof1a_.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp3jpof1a_.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp3jpof1a_.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp3jpof1a_.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0iy8o3t.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpx0iy8o3t.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpx0iy8o3t.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpx0iy8o3t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx0iy8o3t.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpx0iy8o3t.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpx0iy8o3t.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpx0iy8o3t.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = text;\n    for (size_t i = 0; i < noVowels.size();\
    \ i++) {\n        if (noVowels[i] == vowels[i]) {\n            noVowels.erase(noVowels.begin()\
    \ + i);\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprmok4r6g.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprmok4r6g.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprmok4r6g.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmprmok4r6g.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprmok4r6g.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmprmok4r6g.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmprmok4r6g.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprmok4r6g.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl39x7iru.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpl39x7iru.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpl39x7iru.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpl39x7iru.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpl39x7iru.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpl39x7iru.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpl39x7iru.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpl39x7iru.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1vvwzp25.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp1vvwzp25.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp1vvwzp25.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp1vvwzp25.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp1vvwzp25.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp1vvwzp25.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp1vvwzp25.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp1vvwzp25.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0xwaf88w.cpp:87:23: warning: missing terminating \" character\n\
    \   87 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp0xwaf88w.cpp:89:7:\
    \ warning: missing terminating \" character\n   89 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp0xwaf88w.cpp:95: error: unterminated argument list invoking macro\
    \ \"assert\"\n   95 | }\n      | \n/tmp/tmp0xwaf88w.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp0xwaf88w.cpp:84:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   84 | int main() {\n     \
    \ |            ^\n/tmp/tmp0xwaf88w.cpp:87:5: error: expected \u2018}\u2019 at\
    \ end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp0xwaf88w.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmp0xwaf88w.cpp:87:5: error: expected \u2018\
    }\u2019 at end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmp0xwaf88w.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmp0xwaf88w.cpp:87:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   87 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) == std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdjoi8rqh.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpdjoi8rqh.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpdjoi8rqh.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpdjoi8rqh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdjoi8rqh.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpdjoi8rqh.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpdjoi8rqh.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpdjoi8rqh.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppmy3vf5d.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmppmy3vf5d.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmppmy3vf5d.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmppmy3vf5d.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmppmy3vf5d.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmppmy3vf5d.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmppmy3vf5d.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmppmy3vf5d.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyd6kvq1k.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpyd6kvq1k.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpyd6kvq1k.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpyd6kvq1k.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpyd6kvq1k.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyd6kvq1k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyd6kvq1k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyd6kvq1k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpyd6kvq1k.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyd6kvq1k.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpyd6kvq1k.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpyd6kvq1k.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpyd6kvq1k.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjlubffs8.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjlubffs8.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjlubffs8.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpjlubffs8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjlubffs8.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpjlubffs8.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpjlubffs8.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpjlubffs8.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5drz2uvo.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp5drz2uvo.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp5drz2uvo.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp5drz2uvo.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5drz2uvo.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp5drz2uvo.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp5drz2uvo.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp5drz2uvo.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphcfacrto.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphcfacrto.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphcfacrto.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphcfacrto.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphcfacrto.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphcfacrto.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphcfacrto.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphcfacrto.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk7crvks1.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpk7crvks1.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpk7crvks1.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpk7crvks1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpk7crvks1.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpk7crvks1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpk7crvks1.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpk7crvks1.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy8yt2tb3.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpy8yt2tb3.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpy8yt2tb3.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpy8yt2tb3.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpy8yt2tb3.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpy8yt2tb3.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpy8yt2tb3.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpy8yt2tb3.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxhkk32c7.cpp:87:23: warning: missing terminating \" character\n\
    \   87 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxhkk32c7.cpp:89:7:\
    \ warning: missing terminating \" character\n   89 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxhkk32c7.cpp:95: error: unterminated argument list invoking macro\
    \ \"assert\"\n   95 | }\n      | \n/tmp/tmpxhkk32c7.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpxhkk32c7.cpp:84:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   84 | int main() {\n     \
    \ |            ^\n/tmp/tmpxhkk32c7.cpp:87:5: error: expected \u2018}\u2019 at\
    \ end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpxhkk32c7.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpxhkk32c7.cpp:87:5: error: expected \u2018\
    }\u2019 at end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmpxhkk32c7.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmpxhkk32c7.cpp:87:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   87 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwbvk9h8.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxwbvk9h8.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxwbvk9h8.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxwbvk9h8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxwbvk9h8.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxwbvk9h8.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxwbvk9h8.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxwbvk9h8.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwsnnegoy.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwsnnegoy.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwsnnegoy.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpwsnnegoy.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpwsnnegoy.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpwsnnegoy.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpwsnnegoy.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpwsnnegoy.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpwsnnegoy.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwsnnegoy.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpwsnnegoy.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpwsnnegoy.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpwsnnegoy.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptunxbnq_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmptunxbnq_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmptunxbnq_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmptunxbnq_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmptunxbnq_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmptunxbnq_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmptunxbnq_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmptunxbnq_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n    std::string\
    \ rev_text = text;\n    for (size_t i = 0; i < rev_text.size(); i++) {\n     \
    \   if (rev_text.find(vowels, i) != std::string::npos) {\n            rev_text.replace(i,\
    \ 1, rev_vowels);\n        }\n    }\n    return rev_text;\n}\nint main() {\n \
    \   auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp236pqtrn.cpp:28:23: warning: missing terminating \" character\n\
    \   28 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp236pqtrn.cpp:30:7:\
    \ warning: missing terminating \" character\n   30 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp236pqtrn.cpp:36: error: unterminated argument list invoking macro\
    \ \"assert\"\n   36 | }\n      | \n/tmp/tmp236pqtrn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp236pqtrn.cpp:28:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   28 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp236pqtrn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp236pqtrn.cpp:28:5:\
    \ error: expected \u2018}\u2019 at end of input\n   28 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp236pqtrn.cpp:25:12: note: to match this \u2018\
    {\u2019\n   25 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5340f_la.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp5340f_la.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp5340f_la.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp5340f_la.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5340f_la.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp5340f_la.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp5340f_la.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp5340f_la.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpukw2ww8_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpukw2ww8_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpukw2ww8_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpukw2ww8_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpukw2ww8_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpukw2ww8_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpukw2ww8_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpukw2ww8_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphrvph7yt.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphrvph7yt.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphrvph7yt.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphrvph7yt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphrvph7yt.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphrvph7yt.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphrvph7yt.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphrvph7yt.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = text;\n    for (auto &c : no_vowels)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels.replace(no_vowels.find(c),\
    \ 1, \"*\");\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwzbd6ffo.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwzbd6ffo.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwzbd6ffo.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwzbd6ffo.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwzbd6ffo.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwzbd6ffo.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwzbd6ffo.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwzbd6ffo.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprjn27zw_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprjn27zw_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprjn27zw_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmprjn27zw_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprjn27zw_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmprjn27zw_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmprjn27zw_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprjn27zw_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto i : text)\
    \ {\n        if (vowels.find(i) != std::string::npos) {\n            novowels\
    \ += i;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuqi59f3d.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpuqi59f3d.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpuqi59f3d.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpuqi59f3d.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpuqi59f3d.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpuqi59f3d.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpuqi59f3d.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpuqi59f3d.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string result = \"\";\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwxhug9zv.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwxhug9zv.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwxhug9zv.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwxhug9zv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwxhug9zv.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwxhug9zv.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwxhug9zv.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwxhug9zv.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4s9l_0f0.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp4s9l_0f0.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp4s9l_0f0.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp4s9l_0f0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4s9l_0f0.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp4s9l_0f0.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp4s9l_0f0.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp4s9l_0f0.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptj8gn80o.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmptj8gn80o.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmptj8gn80o.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmptj8gn80o.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmptj8gn80o.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmptj8gn80o.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmptj8gn80o.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmptj8gn80o.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmptj8gn80o.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptj8gn80o.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmptj8gn80o.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmptj8gn80o.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmptj8gn80o.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphnmvyief.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphnmvyief.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphnmvyief.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphnmvyief.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphnmvyief.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphnmvyief.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphnmvyief.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphnmvyief.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnfpenalt.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpnfpenalt.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpnfpenalt.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpnfpenalt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnfpenalt.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpnfpenalt.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpnfpenalt.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpnfpenalt.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwp716v7r.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwp716v7r.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwp716v7r.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwp716v7r.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwp716v7r.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwp716v7r.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwp716v7r.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwp716v7r.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx6rqqb4c.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpx6rqqb4c.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpx6rqqb4c.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpx6rqqb4c.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpx6rqqb4c.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpx6rqqb4c.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpx6rqqb4c.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpx6rqqb4c.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_rev = vowels + std::string(\" \");\n\
    \    std::string rev_vowels = vowels_rev + std::string(\" \");\n    std::string\
    \ rev_vowels_rev = rev_vowels + std::string(\" \");\n    std::string rev_vowels_rev2\
    \ = rev_vowels_rev + std::string(\" \");\n    std::string rev_vowels_rev3 = rev_vowels_rev2\
    \ + std::string(\" \");\n    std::string rev_vowels_rev4 = rev_vowels_rev3 + std::string(\"\
    \ \");\n    std::string rev_vowels_rev5 = rev_vowels_rev4 + std::string(\" \"\
    );\n    std::string rev_vowels_rev6 = rev_vowels_rev5 + std::string(\" \");\n\
    \    std::string rev_vowels_rev7 = rev_vowels_rev6 + std::string(\" \");\n   \
    \ std::string rev_vowels_rev8 = rev_vowels_rev7 + std::string(\" \");\n    std::string\
    \ rev_vowels_rev9 = rev_vowels_rev8 + std::string(\" \");\n    std::string rev_vowels_rev10\
    \ = rev_vowels_rev9 + std::string(\" \");\n    std::string rev_vowels_rev11 =\
    \ rev_vowels_rev10 + std::string(\" \");\n    std::string rev_vowels_rev12 = rev_vowels_rev11\
    \ + std::string(\" \");\n    std::string rev_vowels_rev13 = rev_vowels_rev12 +\
    \ std::string(\" \");\n    std::string rev_vowels_rev14 = rev_vowels_rev13 + std::string(\"\
    \ \");\n    std::string rev_vowels_rev15 = rev_vowels_rev14 + std::string(\" \"\
    );\n    std::string rev_vowels_rev16 = rev_vowels_rev15 + std::string(\" \");\n\
    \    std::string rev_vowels_rev17 = rev_vowels_rev16 + std::string(\" \");\n \
    \   std::string rev_vowels_rev18 = rev_vowels_rev17 + std::string(\" \");\n  \
    \  std::string rev_vowels_rev19 = rev_vowels_rev18 + std::string(\" \");\n   \
    \ std::string rev_vowels_rev20 = rev_vowels_rev19 + std::string(\" \");\n    std::string\
    \ rev_vowels_rev21 = rev_vowels_rev20 + std::string(\" \");\n    std::string rev_vowels_rev22\
    \ = rev_vowels_rev21 + std::string(\" \");\n    std::string rev_vowels_rev23 =\
    \ rev_vowels_rev22 + std::string(\" \");\n    std::string rev_vowels_rev24 = rev_vowels_rev23\
    \ + std::string(\n}\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp74zkqiv2.cpp:46:23: warning: missing terminating \" character\n\
    \   46 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp74zkqiv2.cpp:48:7:\
    \ warning: missing terminating \" character\n   48 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp74zkqiv2.cpp:54: error: unterminated argument list invoking macro\
    \ \"assert\"\n   54 | }\n      | \n/tmp/tmp74zkqiv2.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp74zkqiv2.cpp:41:66: error: expected\
    \ primary-expression before \u2018(\u2019 token\n   41 |     std::string rev_vowels_rev24\
    \ = rev_vowels_rev23 + std::string(\n      |                                 \
    \                                 ^\n/tmp/tmp74zkqiv2.cpp:42:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   42 | }\n      | ^\n/tmp/tmp74zkqiv2.cpp:42:1:\
    \ error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n\
    /tmp/tmp74zkqiv2.cpp:42:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n/tmp/tmp74zkqiv2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp74zkqiv2.cpp:46:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   46 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp74zkqiv2.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp74zkqiv2.cpp:46:5: error:\
    \ expected \u2018}\u2019 at end of input\n   46 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp74zkqiv2.cpp:43:12: note: to match this \u2018{\u2019\
    \n   43 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_rev = vowels + std::string(\" \");\n\
    \    std::string vowels_rev_reverse = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev_reverse_reverse = vowels_rev_reverse + std::string(\" \");\n    std::string\
    \ vowels_rev_reverse_reverse_reverse = vowels_rev_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse = vowels_rev_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse + std::string(\" \");\n\
    \    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse =\
    \ vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_\n}\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprc0yr0p1.cpp:34:23: warning: missing terminating \" character\n\
    \   34 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprc0yr0p1.cpp:36:7:\
    \ warning: missing terminating \" character\n   36 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprc0yr0p1.cpp:42: error: unterminated argument list invoking macro\
    \ \"assert\"\n   42 | }\n      | \n/tmp/tmprc0yr0p1.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmprc0yr0p1.cpp:22:78: error: \u2018\
    vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019 was not\
    \ declared in this scope; did you mean \u2018vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    ?\n   22 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n      |                                                              \
    \                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                                                     \
    \         vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\n/tmp/tmprc0yr0p1.cpp:25:17:\
    \ error: redeclaration of \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \n   25 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmprc0yr0p1.cpp:24:17: note: \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ previously declared here\n   24 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmprc0yr0p1.cpp:26:17: error: redeclaration of \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \n   26 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmprc0yr0p1.cpp:24:17: note: \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ previously declared here\n   24 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmprc0yr0p1.cpp:26:94: error: \u2018vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ was not declared in this scope; did you mean \u2018vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    ?\n   26 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                                             \
    \                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                                                     \
    \                         vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    /tmp/tmprc0yr0p1.cpp:27:102: error: \u2018vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ was not declared in this scope; did you mean \u2018vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    ?\n   27 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                                             \
    \                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                                                     \
    \                                 vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    /tmp/tmprc0yr0p1.cpp:29:110: error: \u2018vowels_\u2019 was not declared in this\
    \ scope; did you mean \u2018vowels\u2019?\n   29 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_\n      |                                                         \
    \                                                     ^~~~~~~\n      |       \
    \                                                                            \
    \                           vowels\n/tmp/tmprc0yr0p1.cpp:30:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   30 | }\n      |\
    \ ^\n/tmp/tmprc0yr0p1.cpp: In function \u2018int main()\u2019:\n/tmp/tmprc0yr0p1.cpp:34:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   34 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprc0yr0p1.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmprc0yr0p1.cpp:34:5: error: expected \u2018}\u2019 at end of\
    \ input\n   34 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmprc0yr0p1.cpp:31:12:\
    \ note: to match this \u2018{\u2019\n   31 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text) {\n  \
    \      if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjqdf5kc4.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjqdf5kc4.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjqdf5kc4.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpjqdf5kc4.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjqdf5kc4.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpjqdf5kc4.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpjqdf5kc4.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpjqdf5kc4.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpau41f0wr.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpau41f0wr.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpau41f0wr.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpau41f0wr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpau41f0wr.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpau41f0wr.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpau41f0wr.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpau41f0wr.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7d7ep2_e.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7d7ep2_e.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7d7ep2_e.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp7d7ep2_e.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7d7ep2_e.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7d7ep2_e.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7d7ep2_e.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7d7ep2_e.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp758qs8fr.cpp:87:23: warning: missing terminating \" character\n\
    \   87 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp758qs8fr.cpp:89:7:\
    \ warning: missing terminating \" character\n   89 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp758qs8fr.cpp:95: error: unterminated argument list invoking macro\
    \ \"assert\"\n   95 | }\n      | \n/tmp/tmp758qs8fr.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp758qs8fr.cpp:84:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   84 | int main() {\n     \
    \ |            ^\n/tmp/tmp758qs8fr.cpp:87:5: error: expected \u2018}\u2019 at\
    \ end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp758qs8fr.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmp758qs8fr.cpp:87:5: error: expected \u2018\
    }\u2019 at end of input\n   87 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmp758qs8fr.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmp758qs8fr.cpp:87:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   87 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvrhjpve_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvrhjpve_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvrhjpve_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpvrhjpve_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvrhjpve_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpvrhjpve_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpvrhjpve_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpvrhjpve_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkj3w639e.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpkj3w639e.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpkj3w639e.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpkj3w639e.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkj3w639e.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpkj3w639e.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpkj3w639e.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpkj3w639e.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvppynktp.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvppynktp.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvppynktp.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpvppynktp.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpvppynktp.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvppynktp.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpvppynktp.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpvppynktp.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpvppynktp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvppynktp.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpvppynktp.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpvppynktp.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpvppynktp.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (size_t i = 0; i < text.length();\
    \ i++) {\n        if (vowels.find(text[i]) != std::string::npos) {\n         \
    \   new_text += text[i];\n        }\n    }\n    return new_text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm_ti6krp.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpm_ti6krp.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpm_ti6krp.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpm_ti6krp.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpm_ti6krp.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpm_ti6krp.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpm_ti6krp.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpm_ti6krp.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwzmzjwn6.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwzmzjwn6.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwzmzjwn6.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwzmzjwn6.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwzmzjwn6.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwzmzjwn6.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwzmzjwn6.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwzmzjwn6.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9imyezs1.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp9imyezs1.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp9imyezs1.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp9imyezs1.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9imyezs1.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp9imyezs1.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp9imyezs1.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp9imyezs1.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (auto &c : ans) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans.erase(ans.begin()\
    \ + c);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpey9w8d_2.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpey9w8d_2.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpey9w8d_2.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpey9w8d_2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpey9w8d_2.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpey9w8d_2.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpey9w8d_2.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpey9w8d_2.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpor3kal9j.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpor3kal9j.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpor3kal9j.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpor3kal9j.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpor3kal9j.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7: note:\
    \ candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/deque:67,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n             \
    \    from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/vector:68,\n      \
    \           from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpor3kal9j.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpor3kal9j.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpor3kal9j.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\n/tmp/tmpor3kal9j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpor3kal9j.cpp:26:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpor3kal9j.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpor3kal9j.cpp:26:5: error: expected \u2018}\u2019 at end of\
    \ input\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpor3kal9j.cpp:23:12:\
    \ note: to match this \u2018{\u2019\n   23 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n        }\n \
    \   }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpifgrj9kt.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpifgrj9kt.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpifgrj9kt.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpifgrj9kt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpifgrj9kt.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpifgrj9kt.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpifgrj9kt.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpifgrj9kt.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpexuxm8ba.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpexuxm8ba.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpexuxm8ba.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpexuxm8ba.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpexuxm8ba.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpexuxm8ba.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpexuxm8ba.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpexuxm8ba.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwaadrkl.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxwaadrkl.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxwaadrkl.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpxwaadrkl.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpxwaadrkl.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxwaadrkl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxwaadrkl.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxwaadrkl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpxwaadrkl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxwaadrkl.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpxwaadrkl.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpxwaadrkl.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpxwaadrkl.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = \"\";\n    for (auto c : text) {\n     \
    \   if (vowels.find(c) != std::string::npos) {\n            ans += c;\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfsuqq4b.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmplfsuqq4b.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmplfsuqq4b.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmplfsuqq4b.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplfsuqq4b.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmplfsuqq4b.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmplfsuqq4b.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmplfsuqq4b.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto i : text) {\n\
    \        if (vowels.find(i) == std::string::npos) {\n            no_vowels +=\
    \ i;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr1htr2cr.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpr1htr2cr.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpr1htr2cr.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpr1htr2cr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr1htr2cr.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpr1htr2cr.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpr1htr2cr.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpr1htr2cr.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = \"\";\n    for (auto c : text) {\n     \
    \   if (vowels.find(c) != std::string::npos) {\n            ans += c;\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp58qycsfx.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp58qycsfx.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp58qycsfx.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp58qycsfx.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp58qycsfx.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp58qycsfx.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp58qycsfx.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp58qycsfx.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no2 = \"AEIOUaeiou\";\n    std::string vowels_no3 = \"aeiouAEIOU\";\n\
    \    std::string vowels_no4 = \"aeiouAEIOU\";\n    std::string vowels_no5 = \"\
    aeiouAEIOU\";\n    std::string vowels_no6 = \"aeiouAEIOU\";\n    std::string vowels_no7\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no8 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no9 = \"aeiouAEIOU\";\n    std::string vowels_no10 = \"aeiouAEIOU\";\n\
    \    std::string vowels_no11 = \"aeiouAEIOU\";\n    std::string vowels_no12 =\
    \ \"aeiouAEIOU\";\n    std::string vowels_no13 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no14 = \"aeiouAEIOU\";\n    std::string vowels_no15 = \"aeiouAEIOU\"\
    ;\n    std::string vowels_no16 = \"aeiouAEIOU\";\n    std::string vowels_no17\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no18 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no19 = \"aeiouAEIOU\";\n    std::string vowels_no20 = \"aeiouAEIOU\"\
    ;\n    std::string vowels_no21 = \"aeiouAEIOU\";\n    std::string vowels_no22\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no23 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no24 = \"aeiouAEIOU\";\n    std::string vowels_no25 = \"aeiouAEIOU\"\
    ;\n    std::string vowels_no26 = \"aeiouAEIOU\";\n    std::string vowels_no27\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no28 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no29 = \"aeiouAEIOU\";\n    std::string vowels_no30 = \"aeiouAEIOU\"\
    ;\n    std::string vowels_no31 = \"aeiouAEIOU\";\n    std::string vowels_no32\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no33 = \"aeiouAEIOU\";\n    std::string\
    \ vowels_no34 = \"aeiouAEIOU\";\n    std::string vowels_no35 = \"aeiouAEIOU\"\
    ;\n    std::string vowels_no36 = \"aeiouAE\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmrl7neh4.cpp:51:31: warning: missing terminating \" character\n\
    \   51 |     std::string vowels_no36 = \"aeiouAE\n      |                    \
    \           ^\n/tmp/tmpmrl7neh4.cpp:51:31: error: missing terminating \" character\n\
    \   51 |     std::string vowels_no36 = \"aeiouAE\n      |                    \
    \           ^~~~~~~~\n/tmp/tmpmrl7neh4.cpp:56:23: warning: missing terminating\
    \ \" character\n   56 |     assert(candidate((\"abcdef\n      |              \
    \         ^\n/tmp/tmpmrl7neh4.cpp:58:7: warning: missing terminating \" character\n\
    \   58 | ghjklm\"));\n      |       ^\n/tmp/tmpmrl7neh4.cpp:64: error: unterminated\
    \ argument list invoking macro \"assert\"\n   64 | }\n      | \n/tmp/tmpmrl7neh4.cpp:\
    \ In function \u2018std::string remove_vowels(std::string)\u2019:\n/tmp/tmpmrl7neh4.cpp:52:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n \
    \     | ^\n/tmp/tmpmrl7neh4.cpp:52:1: error: expected \u2018,\u2019 or \u2018\
    ;\u2019 before \u2018}\u2019 token\n/tmp/tmpmrl7neh4.cpp:52:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n/tmp/tmpmrl7neh4.cpp:\
    \ In function \u2018int main()\u2019:\n/tmp/tmpmrl7neh4.cpp:56:5: error: \u2018\
    assert\u2019 was not declared in this scope\n   56 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpmrl7neh4.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpmrl7neh4.cpp:56:5: error: expected \u2018}\u2019 at end of\
    \ input\n   56 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpmrl7neh4.cpp:53:12:\
    \ note: to match this \u2018{\u2019\n   53 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp84mclpci.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp84mclpci.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp84mclpci.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp84mclpci.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp84mclpci.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp84mclpci.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp84mclpci.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp84mclpci.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprtopxdjl.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprtopxdjl.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprtopxdjl.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmprtopxdjl.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprtopxdjl.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmprtopxdjl.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmprtopxdjl.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprtopxdjl.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkw_qftpf.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpkw_qftpf.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpkw_qftpf.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpkw_qftpf.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpkw_qftpf.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkw_qftpf.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkw_qftpf.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkw_qftpf.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpkw_qftpf.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkw_qftpf.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpkw_qftpf.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpkw_qftpf.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpkw_qftpf.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string rev_vowels = \"AEIOU\";\n    std::string rev_vowels_rev\
    \ = \"AEIOUaeiou\";\n    std::string rev_vowels_revrev = \"aeiouAEIOU\";\n   \
    \ std::string rev_vowels_revrevrev = \"AEIOUaeiouAEIOU\";\n    std::string rev_vowels_revrevrevrev\
    \ = \"aeiouAEIOUaeiouAEIOU\";\n    std::string rev_vowels_revrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string rev_vowels_revrevrevrevrevrevrev\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvqu7i393.cpp:36:23: warning: missing terminating \" character\n\
    \   36 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvqu7i393.cpp:38:7:\
    \ warning: missing terminating \" character\n   38 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvqu7i393.cpp:44: error: unterminated argument list invoking macro\
    \ \"assert\"\n   44 | }\n      | \n/tmp/tmpvqu7i393.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpvqu7i393.cpp:21:17: error: redeclaration\
    \ of \u2018std::string rev_vowels_revrevrevrev\u2019\n   21 |     std::string\
    \ rev_vowels_revrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n      |          \
    \       ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:20:17: note: \u2018std::string\
    \ rev_vowels_revrevrevrev\u2019 previously declared here\n   20 |     std::string\
    \ rev_vowels_revrevrevrev = \"aeiouAEIOUaeiouAEIOU\";\n      |               \
    \  ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:24:17: error: redeclaration of\
    \ \u2018std::string rev_vowels_revrevrevrevrevrev\u2019\n   24 |     std::string\
    \ rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:23:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrev\u2019 previously declared\
    \ here\n   23 |     std::string rev_vowels_revrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:27:17:\
    \ error: redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019\
    \n   27 |     std::string rev_vowels_revrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:26:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrevrev\u2019 previously\
    \ declared here\n   26 |     std::string rev_vowels_revrevrevrevrevrevrevrev =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n      |           \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:30:17: error:\
    \ redeclaration of \u2018std::string rev_vowels_revrevrevrevrevrevrevrevrevrev\u2019\
    \n   30 |     std::string rev_vowels_revrevrevrevrevrevrevrevrevrev = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:29:17:\
    \ note: \u2018std::string rev_vowels_revrevrevrevrevrevrevrevrevrev\u2019 previously\
    \ declared here\n   29 |     std::string rev_vowels_revrevrevrevrevrevrevrevrevrev\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n \
    \     |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpvqu7i393.cpp:32:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   32 | }\n      | ^\n\
    /tmp/tmpvqu7i393.cpp:32:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n/tmp/tmpvqu7i393.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvqu7i393.cpp:36:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   36 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpvqu7i393.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpvqu7i393.cpp:36:5: error:\
    \ expected \u2018}\u2019 at end of input\n   36 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpvqu7i393.cpp:33:12: note: to match this \u2018{\u2019\
    \n   33 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvlkz1bza.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvlkz1bza.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvlkz1bza.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpvlkz1bza.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvlkz1bza.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpvlkz1bza.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpvlkz1bza.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpvlkz1bza.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvbqialkt.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvbqialkt.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvbqialkt.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpvbqialkt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvbqialkt.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpvbqialkt.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpvbqialkt.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpvbqialkt.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi4dd_2rt.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpi4dd_2rt.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpi4dd_2rt.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpi4dd_2rt.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi4dd_2rt.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpi4dd_2rt.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpi4dd_2rt.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpi4dd_2rt.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string novowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            novowels += c;\n\
    \        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp91fd8r2n.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp91fd8r2n.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp91fd8r2n.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp91fd8r2n.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp91fd8r2n.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp91fd8r2n.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp91fd8r2n.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp91fd8r2n.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ new_text;\n    for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos)\
    \ {\n            new_text += c;\n        }\n    }\n    return new_text;\n}\nint\
    \ main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmhbip7nn.cpp:28:23: warning: missing terminating \" character\n\
    \   28 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpmhbip7nn.cpp:30:7:\
    \ warning: missing terminating \" character\n   30 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpmhbip7nn.cpp:36: error: unterminated argument list invoking macro\
    \ \"assert\"\n   36 | }\n      | \n/tmp/tmpmhbip7nn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpmhbip7nn.cpp:28:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   28 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpmhbip7nn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpmhbip7nn.cpp:28:5:\
    \ error: expected \u2018}\u2019 at end of input\n   28 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpmhbip7nn.cpp:25:12: note: to match this \u2018\
    {\u2019\n   25 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnexudrgl.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpnexudrgl.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpnexudrgl.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpnexudrgl.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpnexudrgl.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpnexudrgl.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpnexudrgl.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpnexudrgl.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpnexudrgl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnexudrgl.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpnexudrgl.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpnexudrgl.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpnexudrgl.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppdogyf69.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmppdogyf69.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmppdogyf69.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmppdogyf69.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmppdogyf69.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmppdogyf69.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmppdogyf69.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmppdogyf69.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6jglfo_3.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6jglfo_3.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6jglfo_3.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6jglfo_3.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6jglfo_3.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6jglfo_3.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6jglfo_3.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6jglfo_3.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxabedeik.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxabedeik.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxabedeik.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxabedeik.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxabedeik.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxabedeik.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxabedeik.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxabedeik.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9] || c == vowels[10] || c == vowels[11] || c ==\
    \ vowels[12] || c == vowels[13] || c == vowels[14] || c == vowels[15] || c ==\
    \ vowels[16] || c == vowels[17] || c == vowels[18] || c == vowels[19] || c ==\
    \ vowels[20] || c == vowels[21] || c == vowels[22] || c == vowels[23] || c ==\
    \ vowels[24] || c == vowels[25] || c == vowels[26] || c == vowels[27] || c ==\
    \ vowels[28] || c == vowels[29] || c == vowels[30] || c == vowels[31] || c ==\
    \ vowels[32] || c == vowels[33] || c == vowels[34] || c == vowels[35] || c ==\
    \ vowels[36] || c == vowels[37] || c == vowels[38] || c == vowels[39] || c ==\
    \ vowels[40] || c == vowels[41] || c == vowels[42] || c == vowels[43] || c ==\
    \ vowels[44] || c == vowels[45] || c == vowels[46] || c == vowels[47] || c ==\
    \ vowels[48] || c == vowels[49] || c == vowels[50] || c == vowels[51] || c ==\
    \ vowels[52] || c == vowels[53] || c == vowels[54] || c == vowels[55] || c ==\
    \ vowels[56] || c == vowels[57] || c == vowels[58] || c == vowels[59] || c ==\
    \ vowels[60] || c == vowels[61] || c == vowels[62] || c == vowels[63] || c ==\
    \ vowels[64] || c == vowels[65] || c == vowels[66] || c == vowels[67] || c ==\
    \ vowels[68] || c == vowels[69] || c == vowels[70] || c == vowels[71] || c ==\
    \ vowels[72] || c == vowels[73] || c == vowels[74] || c == vowels[75] || c ==\
    \ vowels[76] || c == vowels[77] || c == vowels[78] || c == vowels[79] || c ==\
    \ vowels[80] || c == vowels[81] || c == vowels[82] || c == vowels[83] || c ==\
    \ vowels[84] || c == vowels[85] || c == vowels[86] || c == vowels[87] || c ==\
    \ vowels[88] || c == vowels[89] || c == vowels[90] || c == vowels[91] || c ==\
    \ vowels[92] || c == vowels[93] || c == vowel\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa541u_db.cpp:23:23: warning: missing terminating \" character\n\
    \   23 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpa541u_db.cpp:25:7:\
    \ warning: missing terminating \" character\n   25 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpa541u_db.cpp:31: error: unterminated argument list invoking macro\
    \ \"assert\"\n   31 | }\n      | \n/tmp/tmpa541u_db.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpa541u_db.cpp:18:1794: error: \u2018\
    vowel\u2019 was not declared in this scope; did you mean \u2018vowels\u2019?\n\
    \   18 |         if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c ==\
    \ vowels[3] || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7]\
    \ || c == vowels[8] || c == vowels[9] || c == vowels[10] || c == vowels[11] ||\
    \ c == vowels[12] || c == vowels[13] || c == vowels[14] || c == vowels[15] ||\
    \ c == vowels[16] || c == vowels[17] || c == vowels[18] || c == vowels[19] ||\
    \ c == vowels[20] || c == vowels[21] || c == vowels[22] || c == vowels[23] ||\
    \ c == vowels[24] || c == vowels[25] || c == vowels[26] || c == vowels[27] ||\
    \ c == vowels[28] || c == vowels[29] || c == vowels[30] || c == vowels[31] ||\
    \ c == vowels[32] || c == vowels[33] || c == vowels[34] || c == vowels[35] ||\
    \ c == vowels[36] || c == vowels[37] || c == vowels[38] || c == vowels[39] ||\
    \ c == vowels[40] || c == vowels[41] || c == vowels[42] || c == vowels[43] ||\
    \ c == vowels[44] || c == vowels[45] || c == vowels[46] || c == vowels[47] ||\
    \ c == vowels[48] || c == vowels[49] || c == vowels[50] || c == vowels[51] ||\
    \ c == vowels[52] || c == vowels[53] || c == vowels[54] || c == vowels[55] ||\
    \ c == vowels[56] || c == vowels[57] || c == vowels[58] || c == vowels[59] ||\
    \ c == vowels[60] || c == vowels[61] || c == vowels[62] || c == vowels[63] ||\
    \ c == vowels[64] || c == vowels[65] || c == vowels[66] || c == vowels[67] ||\
    \ c == vowels[68] || c == vowels[69] || c == vowels[70] || c == vowels[71] ||\
    \ c == vowels[72] || c == vowels[73] || c == vowels[74] || c == vowels[75] ||\
    \ c == vowels[76] || c == vowels[77] || c == vowels[78] || c == vowels[79] ||\
    \ c == vowels[80] || c == vowels[81] || c == vowels[82] || c == vowels[83] ||\
    \ c == vowels[84] || c == vowels[85] || c == vowels[86] || c == vowels[87] ||\
    \ c == vowels[88] || c == vowels[89] || c == vowels[90] || c == vowels[91] ||\
    \ c == vowels[92] || c == vowels[93] || c == vowel\n      |                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            ^~~~~\n      |                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            vowels\n/tmp/tmpa541u_db.cpp:18:1799: error: expected \u2018)\u2019\
    \ before \u2018}\u2019 token\n   18 |         if (c == vowels[0] || c == vowels[1]\
    \ || c == vowels[2] || c == vowels[3] || c == vowels[4] || c == vowels[5] || c\
    \ == vowels[6] || c == vowels[7] || c == vowels[8] || c == vowels[9] || c == vowels[10]\
    \ || c == vowels[11] || c == vowels[12] || c == vowels[13] || c == vowels[14]\
    \ || c == vowels[15] || c == vowels[16] || c == vowels[17] || c == vowels[18]\
    \ || c == vowels[19] || c == vowels[20] || c == vowels[21] || c == vowels[22]\
    \ || c == vowels[23] || c == vowels[24] || c == vowels[25] || c == vowels[26]\
    \ || c == vowels[27] || c == vowels[28] || c == vowels[29] || c == vowels[30]\
    \ || c == vowels[31] || c == vowels[32] || c == vowels[33] || c == vowels[34]\
    \ || c == vowels[35] || c == vowels[36] || c == vowels[37] || c == vowels[38]\
    \ || c == vowels[39] || c == vowels[40] || c == vowels[41] || c == vowels[42]\
    \ || c == vowels[43] || c == vowels[44] || c == vowels[45] || c == vowels[46]\
    \ || c == vowels[47] || c == vowels[48] || c == vowels[49] || c == vowels[50]\
    \ || c == vowels[51] || c == vowels[52] || c == vowels[53] || c == vowels[54]\
    \ || c == vowels[55] || c == vowels[56] || c == vowels[57] || c == vowels[58]\
    \ || c == vowels[59] || c == vowels[60] || c == vowels[61] || c == vowels[62]\
    \ || c == vowels[63] || c == vowels[64] || c == vowels[65] || c == vowels[66]\
    \ || c == vowels[67] || c == vowels[68] || c == vowels[69] || c == vowels[70]\
    \ || c == vowels[71] || c == vowels[72] || c == vowels[73] || c == vowels[74]\
    \ || c == vowels[75] || c == vowels[76] || c == vowels[77] || c == vowels[78]\
    \ || c == vowels[79] || c == vowels[80] || c == vowels[81] || c == vowels[82]\
    \ || c == vowels[83] || c == vowels[84] || c == vowels[85] || c == vowels[86]\
    \ || c == vowels[87] || c == vowels[88] || c == vowels[89] || c == vowels[90]\
    \ || c == vowels[91] || c == vowels[92] || c == vowels[93] || c == vowel\n   \
    \   |            ~                                                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                       ^\n      |           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        )\n   19 | }\n      | ~             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                     \n/tmp/tmpa541u_db.cpp:19:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   19 | }\n      | ^\n/tmp/tmpa541u_db.cpp:20:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   20 | int main() {\n      |            ^\n/tmp/tmpa541u_db.cpp:23:5: error:\
    \ expected \u2018}\u2019 at end of input\n   23 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpa541u_db.cpp:14:45: note: to match this \u2018{\u2019\
    \n   14 | std::string remove_vowels(std::string text) {\n      |             \
    \                                ^\n/tmp/tmpa541u_db.cpp:23:5: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   23 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwhpmzhzw.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwhpmzhzw.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwhpmzhzw.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwhpmzhzw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwhpmzhzw.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwhpmzhzw.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwhpmzhzw.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwhpmzhzw.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.length(); i++) {\n      \
    \  if (vowels.find(text[i]) != std::string::npos) {\n            text.erase(text.begin()\
    \ + i);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnb5t08i8.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpnb5t08i8.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpnb5t08i8.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpnb5t08i8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpnb5t08i8.cpp:26:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   26 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpnb5t08i8.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpnb5t08i8.cpp:26:5:\
    \ error: expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpnb5t08i8.cpp:23:12: note: to match this \u2018\
    {\u2019\n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_new = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_new\
    \ += c;\n        }\n    }\n    return vowels_new;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpozsbonxm.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpozsbonxm.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpozsbonxm.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpozsbonxm.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpozsbonxm.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpozsbonxm.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpozsbonxm.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpozsbonxm.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphf51s3z8.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphf51s3z8.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphf51s3z8.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphf51s3z8.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphf51s3z8.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphf51s3z8.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphf51s3z8.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphf51s3z8.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2z6bmfq9.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp2z6bmfq9.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp2z6bmfq9.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp2z6bmfq9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp2z6bmfq9.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp2z6bmfq9.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp2z6bmfq9.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp2z6bmfq9.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ result = \"\";\n    for (size_t i = 0; i < text.length(); i++) {\n        if\
    \ (vowels.find(text[i]) != std::string::npos) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyc2yd5hq.cpp:28:23: warning: missing terminating \" character\n\
    \   28 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpyc2yd5hq.cpp:30:7:\
    \ warning: missing terminating \" character\n   30 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpyc2yd5hq.cpp:36: error: unterminated argument list invoking macro\
    \ \"assert\"\n   36 | }\n      | \n/tmp/tmpyc2yd5hq.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpyc2yd5hq.cpp:28:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   28 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpyc2yd5hq.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpyc2yd5hq.cpp:28:5:\
    \ error: expected \u2018}\u2019 at end of input\n   28 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpyc2yd5hq.cpp:25:12: note: to match this \u2018\
    {\u2019\n   25 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) == std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxw9pxsph.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxw9pxsph.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxw9pxsph.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxw9pxsph.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxw9pxsph.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxw9pxsph.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxw9pxsph.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxw9pxsph.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf5_zkkkv.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpf5_zkkkv.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpf5_zkkkv.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpf5_zkkkv.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpf5_zkkkv.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpf5_zkkkv.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpf5_zkkkv.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpf5_zkkkv.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpf5_zkkkv.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf5_zkkkv.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpf5_zkkkv.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpf5_zkkkv.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpf5_zkkkv.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyay8ka22.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpyay8ka22.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpyay8ka22.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpyay8ka22.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpyay8ka22.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyay8ka22.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpyay8ka22.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpyay8ka22.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpyay8ka22.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyay8ka22.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpyay8ka22.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpyay8ka22.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpyay8ka22.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9h43nnae.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp9h43nnae.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp9h43nnae.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp9h43nnae.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp9h43nnae.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp9h43nnae.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp9h43nnae.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp9h43nnae.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyhn23dnk.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpyhn23dnk.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpyhn23dnk.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpyhn23dnk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpyhn23dnk.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpyhn23dnk.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpyhn23dnk.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpyhn23dnk.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0wm8zi0z.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp0wm8zi0z.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp0wm8zi0z.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp0wm8zi0z.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp0wm8zi0z.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp0wm8zi0z.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp0wm8zi0z.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp0wm8zi0z.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6a2dmxde.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6a2dmxde.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6a2dmxde.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6a2dmxde.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6a2dmxde.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6a2dmxde.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6a2dmxde.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6a2dmxde.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.length(); i++) {\n      \
    \  if (vowels.find(text[i]) != std::string::npos) {\n            text.erase(text.begin()\
    \ + i);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi_ogstf2.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpi_ogstf2.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpi_ogstf2.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpi_ogstf2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi_ogstf2.cpp:26:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   26 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpi_ogstf2.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpi_ogstf2.cpp:26:5:\
    \ error: expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpi_ogstf2.cpp:23:12: note: to match this \u2018\
    {\u2019\n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = \"\";\n    for (auto i : text) {\n     \
    \   if (vowels.find(i) != std::string::npos) {\n            ans += i;\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpevyq0oj_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpevyq0oj_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpevyq0oj_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpevyq0oj_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpevyq0oj_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpevyq0oj_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpevyq0oj_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpevyq0oj_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.length(); i++) {\n      \
    \  if (vowels.find(text[i]) != std::string::npos) {\n            text.erase(text.begin()\
    \ + i);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7q4nybu_.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7q4nybu_.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7q4nybu_.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp7q4nybu_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7q4nybu_.cpp:26:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   26 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7q4nybu_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7q4nybu_.cpp:26:5:\
    \ error: expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7q4nybu_.cpp:23:12: note: to match this \u2018\
    {\u2019\n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc2pykxc7.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpc2pykxc7.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpc2pykxc7.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpc2pykxc7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpc2pykxc7.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpc2pykxc7.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpc2pykxc7.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpc2pykxc7.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (size_t i = 0; i < text.length();\
    \ i++) {\n        if (vowels.find(text[i]) != std::string::npos) {\n         \
    \   new_text += text[i];\n        }\n    }\n    return new_text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptxjs8_kg.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmptxjs8_kg.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmptxjs8_kg.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmptxjs8_kg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmptxjs8_kg.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmptxjs8_kg.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmptxjs8_kg.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmptxjs8_kg.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5uk3zy12.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp5uk3zy12.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp5uk3zy12.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp5uk3zy12.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5uk3zy12.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp5uk3zy12.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp5uk3zy12.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp5uk3zy12.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpisvlw0cb.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpisvlw0cb.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpisvlw0cb.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpisvlw0cb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpisvlw0cb.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpisvlw0cb.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpisvlw0cb.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpisvlw0cb.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.size(); i++) {\n        if\
    \ (vowels.find(text[i]) != std::string::npos) {\n            text.erase(i, 1);\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi2hpw86k.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpi2hpw86k.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpi2hpw86k.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpi2hpw86k.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpi2hpw86k.cpp:26:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   26 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpi2hpw86k.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpi2hpw86k.cpp:26:5:\
    \ error: expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpi2hpw86k.cpp:23:12: note: to match this \u2018\
    {\u2019\n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_l6dacc0.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp_l6dacc0.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp_l6dacc0.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp_l6dacc0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_l6dacc0.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp_l6dacc0.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp_l6dacc0.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp_l6dacc0.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6b69nrgs.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6b69nrgs.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6b69nrgs.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6b69nrgs.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6b69nrgs.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6b69nrgs.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6b69nrgs.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6b69nrgs.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiwx_ou8x.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpiwx_ou8x.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpiwx_ou8x.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpiwx_ou8x.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpiwx_ou8x.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpiwx_ou8x.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpiwx_ou8x.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpiwx_ou8x.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr0k5ijmg.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpr0k5ijmg.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpr0k5ijmg.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpr0k5ijmg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpr0k5ijmg.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpr0k5ijmg.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpr0k5ijmg.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpr0k5ijmg.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ygpvmfy.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6ygpvmfy.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6ygpvmfy.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6ygpvmfy.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6ygpvmfy.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6ygpvmfy.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6ygpvmfy.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6ygpvmfy.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq_s3fezz.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpq_s3fezz.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpq_s3fezz.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpq_s3fezz.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpq_s3fezz.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpq_s3fezz.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpq_s3fezz.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpq_s3fezz.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        }\n    }\n\
    \    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8luynwok.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp8luynwok.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp8luynwok.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp8luynwok.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp8luynwok.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp8luynwok.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp8luynwok.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp8luynwok.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj9xmn_u5.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpj9xmn_u5.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpj9xmn_u5.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpj9xmn_u5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpj9xmn_u5.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpj9xmn_u5.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpj9xmn_u5.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpj9xmn_u5.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7hjg3vl5.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7hjg3vl5.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7hjg3vl5.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp7hjg3vl5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7hjg3vl5.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7hjg3vl5.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7hjg3vl5.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7hjg3vl5.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ result;\n    for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos)\
    \ {\n            result += c;\n        }\n    }\n    for (auto &c : text) {\n\
    \        if (vowels_no.find(c) != std::string::npos) {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpos1gbpvy.cpp:33:23: warning: missing terminating \" character\n\
    \   33 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpos1gbpvy.cpp:35:7:\
    \ warning: missing terminating \" character\n   35 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpos1gbpvy.cpp:41: error: unterminated argument list invoking macro\
    \ \"assert\"\n   41 | }\n      | \n/tmp/tmpos1gbpvy.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpos1gbpvy.cpp:33:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   33 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpos1gbpvy.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpos1gbpvy.cpp:33:5:\
    \ error: expected \u2018}\u2019 at end of input\n   33 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpos1gbpvy.cpp:30:12: note: to match this \u2018\
    {\u2019\n   30 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplpkip35c.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmplpkip35c.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmplpkip35c.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmplpkip35c.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmplpkip35c.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmplpkip35c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmplpkip35c.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmplpkip35c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmplpkip35c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmplpkip35c.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmplpkip35c.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmplpkip35c.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmplpkip35c.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn56qq7ix.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpn56qq7ix.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpn56qq7ix.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpn56qq7ix.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpn56qq7ix.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpn56qq7ix.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpn56qq7ix.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpn56qq7ix.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        }\n    }\n\
    \    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6codw6bf.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6codw6bf.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6codw6bf.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6codw6bf.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6codw6bf.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6codw6bf.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6codw6bf.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6codw6bf.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgajgd2k.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxgajgd2k.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxgajgd2k.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpxgajgd2k.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpxgajgd2k.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxgajgd2k.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxgajgd2k.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxgajgd2k.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpxgajgd2k.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxgajgd2k.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpxgajgd2k.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpxgajgd2k.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpxgajgd2k.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        }\n    }\n\
    \    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ud__c2k.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp_ud__c2k.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp_ud__c2k.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp_ud__c2k.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp_ud__c2k.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp_ud__c2k.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp_ud__c2k.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp_ud__c2k.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4gfkv639.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp4gfkv639.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp4gfkv639.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp4gfkv639.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4gfkv639.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp4gfkv639.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp4gfkv639.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp4gfkv639.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpez_atepq.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpez_atepq.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpez_atepq.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpez_atepq.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpez_atepq.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7: note:\
    \ candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/deque:67,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n             \
    \    from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/vector:68,\n      \
    \           from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpez_atepq.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpez_atepq.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpez_atepq.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\n/tmp/tmpez_atepq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpez_atepq.cpp:26:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpez_atepq.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpez_atepq.cpp:26:5: error: expected \u2018}\u2019 at end of\
    \ input\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpez_atepq.cpp:23:12:\
    \ note: to match this \u2018{\u2019\n   23 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n            noV\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm4e2oxkl.cpp:88:23: warning: missing terminating \" character\n\
    \   88 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpm4e2oxkl.cpp:90:7:\
    \ warning: missing terminating \" character\n   90 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpm4e2oxkl.cpp:96: error: unterminated argument list invoking macro\
    \ \"assert\"\n   96 | }\n      | \n/tmp/tmpm4e2oxkl.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpm4e2oxkl.cpp:83:13: error: \u2018\
    noV\u2019 was not declared in this scope\n   83 |             noV\n      |   \
    \          ^~~\n/tmp/tmpm4e2oxkl.cpp:85:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n   85 | int main() {\n      |     \
    \       ^\n/tmp/tmpm4e2oxkl.cpp:88:5: error: expected \u2018}\u2019 at end of\
    \ input\n   88 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpm4e2oxkl.cpp:17:25:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto c : text) {\n     \
    \ |                         ^\n/tmp/tmpm4e2oxkl.cpp:88:5: error: expected \u2018\
    }\u2019 at end of input\n   88 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmpm4e2oxkl.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmpm4e2oxkl.cpp:88:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   88 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6opsqirc.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6opsqirc.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6opsqirc.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp6opsqirc.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp6opsqirc.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp6opsqirc.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp6opsqirc.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp6opsqirc.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu62rogh4.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpu62rogh4.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpu62rogh4.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpu62rogh4.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpu62rogh4.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7: note:\
    \ candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/deque:67,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n             \
    \    from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/vector:68,\n      \
    \           from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu62rogh4.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu62rogh4.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpu62rogh4.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\n/tmp/tmpu62rogh4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu62rogh4.cpp:26:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpu62rogh4.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpu62rogh4.cpp:26:5: error: expected \u2018}\u2019 at end of\
    \ input\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpu62rogh4.cpp:23:12:\
    \ note: to match this \u2018{\u2019\n   23 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk_z7c33c.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpk_z7c33c.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpk_z7c33c.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpk_z7c33c.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpk_z7c33c.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpk_z7c33c.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpk_z7c33c.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpk_z7c33c.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpk_z7c33c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpk_z7c33c.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpk_z7c33c.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpk_z7c33c.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpk_z7c33c.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no2 = \"AEIOUaeiouAEIOU\";\n    std::string vowels_no3 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no4 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string\
    \ vowels_no5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string vowels_no6\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string vowels_no7 = \"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string vowels_no8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n}\n\
    int main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp192fppm6.cpp:31:31: warning: missing terminating \" character\n\
    \   31 |     std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n\
    \      |                               ^\n/tmp/tmp192fppm6.cpp:31:31: error: missing\
    \ terminating \" character\n   31 |     std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n\
    \      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp192fppm6.cpp:36:23: warning: missing terminating \" character\n   36 |\
    \     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp192fppm6.cpp:38:7:\
    \ warning: missing terminating \" character\n   38 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp192fppm6.cpp:44: error: unterminated argument list invoking macro\
    \ \"assert\"\n   44 | }\n      | \n/tmp/tmp192fppm6.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp192fppm6.cpp:32:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   32 | }\n      | ^\n/tmp/tmp192fppm6.cpp:32:1:\
    \ error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n\
    /tmp/tmp192fppm6.cpp:32:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n/tmp/tmp192fppm6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp192fppm6.cpp:36:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   36 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp192fppm6.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp192fppm6.cpp:36:5: error:\
    \ expected \u2018}\u2019 at end of input\n   36 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp192fppm6.cpp:33:12: note: to match this \u2018{\u2019\
    \n   33 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text) {\n\
    \        if (c == vowels[0] || c == vowels[1] || c == vowels[2] || c == vowels[3]\
    \ || c == vowels[4] || c == vowels[5] || c == vowels[6] || c == vowels[7] || c\
    \ == vowels[8] || c == vowels[9] || c == vowels[10] || c == vowels[11] || c ==\
    \ vowels[12] || c == vowels[13] || c == vowels[14] || c == vowels[15] || c ==\
    \ vowels[16] || c == vowels[17] || c == vowels[18] || c == vowels[19] || c ==\
    \ vowels[20] || c == vowels[21] || c == vowels[22] || c == vowels[23] || c ==\
    \ vowels[24] || c == vowels[25] || c == vowels[26] || c == vowels[27] || c ==\
    \ vowels[28] || c == vowels[29] || c == vowels[30] || c == vowels[31]) {\n   \
    \         noVowels += c;\n        }\n    }\n    return noVowels;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu0qikveh.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpu0qikveh.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpu0qikveh.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpu0qikveh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpu0qikveh.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpu0qikveh.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpu0qikveh.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpu0qikveh.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n            no\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk8lwwzqs.cpp:88:23: warning: missing terminating \" character\n\
    \   88 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpk8lwwzqs.cpp:90:7:\
    \ warning: missing terminating \" character\n   90 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpk8lwwzqs.cpp:96: error: unterminated argument list invoking macro\
    \ \"assert\"\n   96 | }\n      | \n/tmp/tmpk8lwwzqs.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpk8lwwzqs.cpp:83:13: error: \u2018\
    no\u2019 was not declared in this scope\n   83 |             no\n      |     \
    \        ^~\n/tmp/tmpk8lwwzqs.cpp:85:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n   85 | int main() {\n      |            ^\n\
    /tmp/tmpk8lwwzqs.cpp:88:5: error: expected \u2018}\u2019 at end of input\n   88\
    \ |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpk8lwwzqs.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpk8lwwzqs.cpp:88:5: error: expected \u2018\
    }\u2019 at end of input\n   88 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmpk8lwwzqs.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmpk8lwwzqs.cpp:88:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   88 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqnru9co5.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpqnru9co5.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpqnru9co5.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpqnru9co5.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpqnru9co5.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpqnru9co5.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpqnru9co5.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpqnru9co5.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4ej0wcdx.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp4ej0wcdx.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp4ej0wcdx.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp4ej0wcdx.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp4ej0wcdx.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp4ej0wcdx.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp4ej0wcdx.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp4ej0wcdx.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsjxm9fwv.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpsjxm9fwv.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpsjxm9fwv.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpsjxm9fwv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpsjxm9fwv.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpsjxm9fwv.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpsjxm9fwv.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpsjxm9fwv.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvfmtut7.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphvfmtut7.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphvfmtut7.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphvfmtut7.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphvfmtut7.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphvfmtut7.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphvfmtut7.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphvfmtut7.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjljdg8p5.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjljdg8p5.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjljdg8p5.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpjljdg8p5.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpjljdg8p5.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjljdg8p5.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjljdg8p5.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjljdg8p5.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpjljdg8p5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjljdg8p5.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpjljdg8p5.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpjljdg8p5.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpjljdg8p5.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfdyceu5v.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpfdyceu5v.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpfdyceu5v.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpfdyceu5v.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpfdyceu5v.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpfdyceu5v.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpfdyceu5v.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpfdyceu5v.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans += c;\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph6nz_s6x.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmph6nz_s6x.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmph6nz_s6x.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmph6nz_s6x.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmph6nz_s6x.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmph6nz_s6x.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmph6nz_s6x.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmph6nz_s6x.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvv_9jl0h.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvv_9jl0h.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvv_9jl0h.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpvv_9jl0h.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvv_9jl0h.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpvv_9jl0h.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpvv_9jl0h.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpvv_9jl0h.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph89oy6yg.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmph89oy6yg.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmph89oy6yg.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmph89oy6yg.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmph89oy6yg.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmph89oy6yg.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmph89oy6yg.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmph89oy6yg.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdasarh01.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpdasarh01.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpdasarh01.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpdasarh01.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpdasarh01.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpdasarh01.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpdasarh01.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpdasarh01.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwcebcvjd.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwcebcvjd.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwcebcvjd.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwcebcvjd.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwcebcvjd.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwcebcvjd.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwcebcvjd.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwcebcvjd.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplupc7pka.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmplupc7pka.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmplupc7pka.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmplupc7pka.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplupc7pka.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmplupc7pka.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmplupc7pka.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmplupc7pka.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpluo353bk.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpluo353bk.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpluo353bk.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpluo353bk.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpluo353bk.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpluo353bk.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpluo353bk.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpluo353bk.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (auto &c : ans) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans.replace(ans.find(c),\
    \ 1, '');\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxy07_r2w.cpp:19:41: error: empty character constant\n   19 |  \
    \           ans.replace(ans.find(c), 1, '');\n      |                        \
    \                 ^~\n/tmp/tmpxy07_r2w.cpp:27:23: warning: missing terminating\
    \ \" character\n   27 |     assert(candidate((\"abcdef\n      |              \
    \         ^\n/tmp/tmpxy07_r2w.cpp:29:7: warning: missing terminating \" character\n\
    \   29 | ghjklm\"));\n      |       ^\n/tmp/tmpxy07_r2w.cpp:35: error: unterminated\
    \ argument list invoking macro \"assert\"\n   35 | }\n      | \n/tmp/tmpxy07_r2w.cpp:\
    \ In function \u2018std::string remove_vowels(std::string)\u2019:\n/tmp/tmpxy07_r2w.cpp:19:43:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::size_type,\
    \ int, char)\u2019\n   19 |             ans.replace(ans.find(c), 1, '');\n   \
    \   |                                           ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxy07_r2w.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1965:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1965 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1965:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpxy07_r2w.cpp:19:41:\
    \ error: invalid conversion from \u2018char\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |             ans.replace(ans.find(c), 1, '');\n      |               \
    \                          ^~\n      |                                       \
    \  |\n      |                                         char\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxy07_r2w.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1893:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1893 |       replace(size_type __pos, size_type\
    \ __n, const basic_string& __str)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1893:67:\
    \ note:   no known conversion for argument 3 from \u2018char\u2019 to \u2018const\
    \ std::__cxx11::basic_string<char>&\u2019\n 1893 |       replace(size_type __pos,\
    \ size_type __n, const basic_string& __str)\n      |                         \
    \                      ~~~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1915:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type)\
    \ [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1915 |       replace(size_type __pos1, size_type __n1, const basic_string&\
    \ __str,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1915:7:\
    \ note:   candidate expects 5 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:1940:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type)\
    \ [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1940 |       replace(size_type __pos, size_type __n1, const _CharT*\
    \ __s,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1940:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:1989:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with\
    \ _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1989 |       replace(size_type __pos, size_type __n1, size_type\
    \ __n2, _CharT __c)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1989:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2007:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const\
    \ char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*]\u2019\n 2007 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2007:32:\
    \ note:   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019} to \u2018std::__cxx11::basic_string<char>::__const_iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >\u2019}\n 2007 |       replace(__const_iterator __i1, __const_iterator __i2,\n\
    \      |               ~~~~~~~~~~~~~~~~~^~~~\n/usr/include/c++/9/bits/basic_string.h:2027:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 2027 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2027:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2049:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 2049 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2, const _CharT* __s)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2049:32:\
    \ note:   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019} to \u2018std::__cxx11::basic_string<char>::__const_iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >\u2019}\n 2049 |       replace(__const_iterator __i1, __const_iterator __i2,\
    \ const _CharT* __s)\n      |               ~~~~~~~~~~~~~~~~~^~~~\n/usr/include/c++/9/bits/basic_string.h:2070:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const\
    \ char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long\
    \ unsigned int]\u2019\n 2070 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2, size_type __n,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2070:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2097:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 2097 |         replace(const_iterator __i1, const_iterator __i2,\n      | \
    \        ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2097:9: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxy07_r2w.cpp:19:43: note: \
    \  candidate expects 4 arguments, 3 provided\n   19 |             ans.replace(ans.find(c),\
    \ 1, '');\n      |                                           ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxy07_r2w.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:2127:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator,\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, _CharT*,\
    \ _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const\
    \ char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*]\u2019\n 2127 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2127:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2138:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*, const _CharT*) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*,\
    \ std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*]\u2019\n 2138 |       replace(__const_iterator __i1, __const_iterator\
    \ __i2,\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2138:7:\
    \ note:   candidate expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2149:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator,\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator) [with _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*,\
    \ std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*]\u2019\
    \n 2149 |       replace(__const_iterator __i1, __const_iterator __i2,\n      |\
    \       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2149:7: note:   candidate\
    \ expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2160:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator,\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator) [with _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*,\
    \ std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator =\
    \ __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]\u2019\
    \n 2160 |       replace(__const_iterator __i1, __const_iterator __i2,\n      |\
    \       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2160:7: note:   candidate\
    \ expects 4 arguments, 3 provided\n/usr/include/c++/9/bits/basic_string.h:2185:21:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT = char; _Traits\
    \ = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*,\
    \ std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename\
    \ __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const\
    \ char*]\u2019\n 2185 |       basic_string& replace(const_iterator __i1, const_iterator\
    \ __i2,\n      |                     ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:2185:44:\
    \ note:   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019} to \u2018std::__cxx11::basic_string<char>::const_iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >\u2019}\n 2185 |       basic_string& replace(const_iterator __i1, const_iterator\
    \ __i2,\n      |                             ~~~~~~~~~~~~~~~^~~~\n/tmp/tmpxy07_r2w.cpp:\
    \ In function \u2018int main()\u2019:\n/tmp/tmpxy07_r2w.cpp:27:5: error: \u2018\
    assert\u2019 was not declared in this scope\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxy07_r2w.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpxy07_r2w.cpp:27:5: error: expected \u2018}\u2019 at end of\
    \ input\n   27 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpxy07_r2w.cpp:24:12:\
    \ note: to match this \u2018{\u2019\n   24 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplaqemula.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmplaqemula.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmplaqemula.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmplaqemula.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmplaqemula.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmplaqemula.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmplaqemula.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmplaqemula.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeuy3vvog.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpeuy3vvog.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpeuy3vvog.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpeuy3vvog.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpeuy3vvog.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpeuy3vvog.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpeuy3vvog.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpeuy3vvog.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpraxkj71t.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpraxkj71t.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpraxkj71t.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpraxkj71t.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpraxkj71t.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpraxkj71t.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpraxkj71t.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpraxkj71t.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg7r0e3wr.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpg7r0e3wr.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpg7r0e3wr.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpg7r0e3wr.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpg7r0e3wr.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpg7r0e3wr.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpg7r0e3wr.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpg7r0e3wr.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            no_vowels +=\
    \ c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmply4abcbi.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmply4abcbi.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmply4abcbi.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmply4abcbi.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmply4abcbi.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmply4abcbi.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmply4abcbi.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmply4abcbi.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n    for (auto\
    \ &c : text) {\n        if (vowels.find(c) != std::string::npos) {\n         \
    \   text.erase(text.begin() + vowels.find(c));\n        }\n        if (rev_vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + rev_vowels.find(c));\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprdr186oh.cpp:30:23: warning: missing terminating \" character\n\
    \   30 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprdr186oh.cpp:32:7:\
    \ warning: missing terminating \" character\n   32 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprdr186oh.cpp:38: error: unterminated argument list invoking macro\
    \ \"assert\"\n   38 | }\n      | \n/tmp/tmprdr186oh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprdr186oh.cpp:30:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   30 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmprdr186oh.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmprdr186oh.cpp:30:5:\
    \ error: expected \u2018}\u2019 at end of input\n   30 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprdr186oh.cpp:27:12: note: to match this \u2018\
    {\u2019\n   27 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_new;\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            vowels_new +=\
    \ c;\n        }\n    }\n    return vowels_new;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7mcmxiwa.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7mcmxiwa.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7mcmxiwa.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp7mcmxiwa.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7mcmxiwa.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7mcmxiwa.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7mcmxiwa.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7mcmxiwa.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7e6r3ewc.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7e6r3ewc.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7e6r3ewc.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp7e6r3ewc.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7e6r3ewc.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7e6r3ewc.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7e6r3ewc.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7e6r3ewc.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvv4tymi.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmphvv4tymi.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmphvv4tymi.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmphvv4tymi.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmphvv4tymi.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmphvv4tymi.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmphvv4tymi.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmphvv4tymi.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text) {\n\
    \        if (c == vowels[0]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n            no\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgy3dwudk.cpp:88:23: warning: missing terminating \" character\n\
    \   88 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpgy3dwudk.cpp:90:7:\
    \ warning: missing terminating \" character\n   90 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpgy3dwudk.cpp:96: error: unterminated argument list invoking macro\
    \ \"assert\"\n   96 | }\n      | \n/tmp/tmpgy3dwudk.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpgy3dwudk.cpp:83:13: error: \u2018\
    no\u2019 was not declared in this scope\n   83 |             no\n      |     \
    \        ^~\n/tmp/tmpgy3dwudk.cpp:85:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n   85 | int main() {\n      |            ^\n\
    /tmp/tmpgy3dwudk.cpp:88:5: error: expected \u2018}\u2019 at end of input\n   88\
    \ |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpgy3dwudk.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpgy3dwudk.cpp:88:5: error: expected \u2018\
    }\u2019 at end of input\n   88 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n\
    /tmp/tmpgy3dwudk.cpp:14:45: note: to match this \u2018{\u2019\n   14 | std::string\
    \ remove_vowels(std::string text) {\n      |                                 \
    \            ^\n/tmp/tmpgy3dwudk.cpp:88:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   88 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp60q592nh.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp60q592nh.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp60q592nh.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp60q592nh.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp60q592nh.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp60q592nh.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp60q592nh.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp60q592nh.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7bn5fd2f.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7bn5fd2f.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7bn5fd2f.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp7bn5fd2f.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp7bn5fd2f.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp7bn5fd2f.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp7bn5fd2f.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp7bn5fd2f.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf6u5fa0_.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpf6u5fa0_.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpf6u5fa0_.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpf6u5fa0_.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpf6u5fa0_.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpf6u5fa0_.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpf6u5fa0_.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpf6u5fa0_.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprl0__lnb.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmprl0__lnb.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmprl0__lnb.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmprl0__lnb.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmprl0__lnb.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmprl0__lnb.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmprl0__lnb.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmprl0__lnb.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = text;\n    for (auto &c : no_vowels)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels.replace(no_vowels.find(c),\
    \ 1, \"*\");\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwqcblqii.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpwqcblqii.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpwqcblqii.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpwqcblqii.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpwqcblqii.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpwqcblqii.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpwqcblqii.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpwqcblqii.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjld3bey3.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjld3bey3.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjld3bey3.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpjld3bey3.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpjld3bey3.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7: note:\
    \ candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/deque:67,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n             \
    \    from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/vector:68,\n      \
    \           from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjld3bey3.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpjld3bey3.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpjld3bey3.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\n/tmp/tmpjld3bey3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjld3bey3.cpp:26:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpjld3bey3.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmpjld3bey3.cpp:26:5: error: expected \u2018}\u2019 at end of\
    \ input\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpjld3bey3.cpp:23:12:\
    \ note: to match this \u2018{\u2019\n   23 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0qk0njr9.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp0qk0njr9.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp0qk0njr9.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp0qk0njr9.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp0qk0njr9.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7: note:\
    \ candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/deque:67,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n             \
    \    from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/vector:68,\n      \
    \           from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/c++/9/valarray:603,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n  \
    \               from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c));\n      |                        \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0qk0njr9.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c));\n      |                                                              \
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0qk0njr9.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0qk0njr9.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c));\n\
    \      |                                                                     \
    \       ^\n/tmp/tmp0qk0njr9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0qk0njr9.cpp:26:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   26 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp0qk0njr9.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/tmp/tmp0qk0njr9.cpp:26:5: error: expected \u2018}\u2019 at end of\
    \ input\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp0qk0njr9.cpp:23:12:\
    \ note: to match this \u2018{\u2019\n   23 | int main() {\n      |           \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string result = \"\";\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvjq5r4l0.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpvjq5r4l0.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpvjq5r4l0.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpvjq5r4l0.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpvjq5r4l0.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpvjq5r4l0.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpvjq5r4l0.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpvjq5r4l0.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxev4i8aw.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxev4i8aw.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxev4i8aw.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxev4i8aw.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxev4i8aw.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxev4i8aw.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxev4i8aw.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxev4i8aw.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5w5uytls.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp5w5uytls.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp5w5uytls.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp5w5uytls.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp5w5uytls.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp5w5uytls.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp5w5uytls.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp5w5uytls.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no2 = \"AEIOUaeiouAEIOU\";\n    std::string vowels_no3 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no4 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string\
    \ vowels_no5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string vowels_no6\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    std::string vowels_no7 = \"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    std::string vowels_no8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    std::string vowels_no15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n}\n\
    int main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6xfye_u5.cpp:31:31: warning: missing terminating \" character\n\
    \   31 |     std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n\
    \      |                               ^\n/tmp/tmp6xfye_u5.cpp:31:31: error: missing\
    \ terminating \" character\n   31 |     std::string vowels_no16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n\
    \      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp6xfye_u5.cpp:36:23: warning: missing terminating \" character\n   36 |\
    \     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp6xfye_u5.cpp:38:7:\
    \ warning: missing terminating \" character\n   38 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp6xfye_u5.cpp:44: error: unterminated argument list invoking macro\
    \ \"assert\"\n   44 | }\n      | \n/tmp/tmp6xfye_u5.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp6xfye_u5.cpp:32:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   32 | }\n      | ^\n/tmp/tmp6xfye_u5.cpp:32:1:\
    \ error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n\
    /tmp/tmp6xfye_u5.cpp:32:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n/tmp/tmp6xfye_u5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp6xfye_u5.cpp:36:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   36 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp6xfye_u5.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp6xfye_u5.cpp:36:5: error:\
    \ expected \u2018}\u2019 at end of input\n   36 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp6xfye_u5.cpp:33:12: note: to match this \u2018{\u2019\
    \n   33 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsrq8yt7q.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpsrq8yt7q.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpsrq8yt7q.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpsrq8yt7q.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpsrq8yt7q.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpsrq8yt7q.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpsrq8yt7q.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpsrq8yt7q.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpsrq8yt7q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsrq8yt7q.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpsrq8yt7q.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpsrq8yt7q.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpsrq8yt7q.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxz8tsqqa.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpxz8tsqqa.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpxz8tsqqa.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpxz8tsqqa.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpxz8tsqqa.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpxz8tsqqa.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpxz8tsqqa.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpxz8tsqqa.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd1rbgq75.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpd1rbgq75.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpd1rbgq75.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpd1rbgq75.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpd1rbgq75.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpd1rbgq75.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpd1rbgq75.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpd1rbgq75.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n    std::string\
    \ rev_text = text;\n    for (size_t i = 0; i < rev_text.size(); i++) {\n     \
    \   if (vowels.find(rev_text[i]) != std::string::npos) {\n            rev_text[i]\
    \ = rev_vowels[vowels.find(rev_text[i])];\n        }\n    }\n    return rev_text;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg2a3qez2.cpp:28:23: warning: missing terminating \" character\n\
    \   28 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpg2a3qez2.cpp:30:7:\
    \ warning: missing terminating \" character\n   30 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpg2a3qez2.cpp:36: error: unterminated argument list invoking macro\
    \ \"assert\"\n   36 | }\n      | \n/tmp/tmpg2a3qez2.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpg2a3qez2.cpp:28:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   28 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpg2a3qez2.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpg2a3qez2.cpp:28:5:\
    \ error: expected \u2018}\u2019 at end of input\n   28 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpg2a3qez2.cpp:25:12: note: to match this \u2018\
    {\u2019\n   25 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa4_i_o3q.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpa4_i_o3q.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpa4_i_o3q.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpa4_i_o3q.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpa4_i_o3q.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpa4_i_o3q.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpa4_i_o3q.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpa4_i_o3q.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string vowels_new;\n    for (auto &c : text) {\n    \
    \    if (vowels.find(c) != std::string::npos) {\n            vowels_new += c;\n\
    \        }\n    }\n    return vowels_new;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3uszrs9w.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp3uszrs9w.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp3uszrs9w.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmp3uszrs9w.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmp3uszrs9w.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmp3uszrs9w.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmp3uszrs9w.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmp3uszrs9w.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0; i < ans.size();\
    \ i++) {\n        if (vowels.find(ans[i]) != std::string::npos) {\n          \
    \  ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpprtq5jjv.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpprtq5jjv.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpprtq5jjv.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpprtq5jjv.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpprtq5jjv.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpprtq5jjv.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpprtq5jjv.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpprtq5jjv.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto i : text) {\n\
    \        if (vowels.find(i) != std::string::npos) {\n            no_vowels +=\
    \ i;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj9o37psl.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpj9o37psl.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpj9o37psl.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpj9o37psl.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpj9o37psl.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpj9o37psl.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpj9o37psl.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpj9o37psl.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string ans = \"\";\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans += c;\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\nghijklm\"\
    )) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa7yt05sn.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpa7yt05sn.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpa7yt05sn.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpa7yt05sn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpa7yt05sn.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpa7yt05sn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpa7yt05sn.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpa7yt05sn.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj246gwwo.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpj246gwwo.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpj246gwwo.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmpj246gwwo.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmpj246gwwo.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpj246gwwo.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpj246gwwo.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpj246gwwo.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmpj246gwwo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpj246gwwo.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmpj246gwwo.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmpj246gwwo.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmpj246gwwo.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkyxlmd9u.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpkyxlmd9u.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpkyxlmd9u.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpkyxlmd9u.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpkyxlmd9u.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpkyxlmd9u.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpkyxlmd9u.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpkyxlmd9u.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string vowels_new = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_new\
    \ += c;\n        }\n    }\n    return vowels_new;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjwxuffrn.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpjwxuffrn.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpjwxuffrn.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpjwxuffrn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpjwxuffrn.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpjwxuffrn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpjwxuffrn.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpjwxuffrn.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text) {\n \
    \       if (vowels.find(c) != std::string::npos) {\n            new_text += c;\n\
    \        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbdxio5n9.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpbdxio5n9.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpbdxio5n9.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpbdxio5n9.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpbdxio5n9.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpbdxio5n9.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpbdxio5n9.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpbdxio5n9.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n   \
    \ assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7i6un82y.cpp:26:23: warning: missing terminating \" character\n\
    \   26 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmp7i6un82y.cpp:28:7:\
    \ warning: missing terminating \" character\n   28 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmp7i6un82y.cpp:34: error: unterminated argument list invoking macro\
    \ \"assert\"\n   34 | }\n      | \n/tmp/tmp7i6un82y.cpp: In function \u2018std::string\
    \ remove_vowels(std::string)\u2019:\n/tmp/tmp7i6un82y.cpp:18:37: error: no match\
    \ for \u2018operator+\u2019 (operand types are \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::operator+(typename\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type, const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*;\
    \ _Container = std::__cxx11::basic_string<char>; typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type = long int]\u2019\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:994:8: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >::difference_type\u2019 {aka \u2018long int\u2019}\n  993 |     operator+(typename\
    \ __normal_iterator<_Iterator, _Container>::difference_type\n      |         \
    \      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  994\
    \ |        __n, const __normal_iterator<_Iterator, _Container>& __i)\n      |\
    \        ^~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note: candidate: \u2018\
    template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename\
    \ std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note: \
    \  \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                                      \
    \                                      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |   \
    \          text.erase(text.begin() + std::find(text.begin(), text.end(), c), text.end());\n\
    \      |                                                                     \
    \       ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/complex:450:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::complex<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 | \
    \  operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:3: note: candidate: \u2018std::_Bit_const_iterator\
    \ std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)\u2019\n  393\
    \ |   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_bvector.h:393:23: note:   no known conversion for\
    \ argument 1 from \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019\
    } to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   18 |             text.erase(text.begin()\
    \ + std::find(text.begin(), text.end(), c), text.end());\n      |            \
    \                                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7i6un82y.cpp:18:76: note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 | \
    \            text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             text.erase(text.begin() + std::find(text.begin(), text.end(),\
    \ c), text.end());\n      |                                                  \
    \                          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7i6un82y.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7i6un82y.cpp:18:76:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |  \
    \           text.erase(text.begin() + std::find(text.begin(), text.end(), c),\
    \ text.end());\n      |                                                      \
    \                      ^\n/tmp/tmp7i6un82y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7i6un82y.cpp:26:5: error: \u2018assert\u2019 was not declared in this\
    \ scope\n   26 |     assert(candidate((\"abcdef\n      |     ^~~~~~\n/tmp/tmp7i6un82y.cpp:3:1:\
    \ note: \u2018assert\u2019 is defined in header \u2018<cassert>\u2019; did you\
    \ forget to \u2018#include <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n\
    \  +++ |+#include <cassert>\n    3 | // remove_vowels is a function that takes\
    \ string and returns string without vowels.\n/tmp/tmp7i6un82y.cpp:26:5: error:\
    \ expected \u2018}\u2019 at end of input\n   26 |     assert(candidate((\"abcdef\n\
    \      |     ^~~~~~\n/tmp/tmp7i6un82y.cpp:23:12: note: to match this \u2018{\u2019\
    \n   23 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcptsiqzn.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpcptsiqzn.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpcptsiqzn.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpcptsiqzn.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpcptsiqzn.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpcptsiqzn.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpcptsiqzn.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpcptsiqzn.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels('')\n\
    // ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n// >>> remove_vowels('aaaaa')\n\
    // ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n// >>> remove_vowels('zbcd')\n//\
    \ 'zbcd'\nstd::string remove_vowels(std::string text) {\n    std::string vowels\
    \ = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\nghijklm\")) == (\"bcdf\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpizrciq5j.cpp:27:23: warning: missing terminating \" character\n\
    \   27 |     assert(candidate((\"abcdef\n      |                       ^\n/tmp/tmpizrciq5j.cpp:29:7:\
    \ warning: missing terminating \" character\n   29 | ghjklm\"));\n      |    \
    \   ^\n/tmp/tmpizrciq5j.cpp:35: error: unterminated argument list invoking macro\
    \ \"assert\"\n   35 | }\n      | \n/tmp/tmpizrciq5j.cpp: In function \u2018int\
    \ main()\u2019:\n/tmp/tmpizrciq5j.cpp:27:5: error: \u2018assert\u2019 was not\
    \ declared in this scope\n   27 |     assert(candidate((\"abcdef\n      |    \
    \ ^~~~~~\n/tmp/tmpizrciq5j.cpp:3:1: note: \u2018assert\u2019 is defined in header\
    \ \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019?\n \
    \   2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // remove_vowels\
    \ is a function that takes string and returns string without vowels.\n/tmp/tmpizrciq5j.cpp:27:5:\
    \ error: expected \u2018}\u2019 at end of input\n   27 |     assert(candidate((\"\
    abcdef\n      |     ^~~~~~\n/tmp/tmpizrciq5j.cpp:24:12: note: to match this \u2018\
    {\u2019\n   24 | int main() {\n      |            ^\n"
  exit_code: 1
  status: SyntaxError

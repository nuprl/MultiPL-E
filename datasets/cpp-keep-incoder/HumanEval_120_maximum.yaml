name: HumanEval_120_maximum
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array arr of integers\
  \ and a positive integer k, return a sorted list \n// of length k with the maximum\
  \ k numbers in arr.\n// Example 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output:\
  \ [-4, -3, 5]\n// Example 2:\n// Input: arr = [4, -4, 4], k = 2\n// Output: [4,\
  \ 4]\n// Example 3:\n// Input: arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output:\
  \ [2]\n// Note:\n// 1. The length of the array will be in the range of [1, 1000].\n\
  // 2. The elements in the array will be in the range of [-1000, 1000].\n// 3. 0\
  \ <= k <= len(arr)\nstd::vector<long> maximum(std::vector<long> arr, long k) {\n"
tests: "}\nint main() {\n    auto candidate = maximum;\n    assert(candidate((std::vector<long>({-3,\
  \ -4, 5})), (3)) == (std::vector<long>({-4, -3, 5})));\n    assert(candidate((std::vector<long>({4,\
  \ -4, 4})), (2)) == (std::vector<long>({4, 4})));\n    assert(candidate((std::vector<long>({-3,\
  \ 2, 1, 2, -1, -2, 1})), (1)) == (std::vector<long>({2})));\n    assert(candidate((std::vector<long>({123,\
  \ -123, 20, 0, 1, 2, -3})), (3)) == (std::vector<long>({2, 20, 123})));\n    assert(candidate((std::vector<long>({-123,\
  \ 20, 0, 1, 2, -3})), (4)) == (std::vector<long>({0, 1, 2, 20})));\n    assert(candidate((std::vector<long>({5,\
  \ 15, 0, 3, -13, -8, 0})), (7)) == (std::vector<long>({-13, -8, 0, 0, 3, 5, 15})));\n\
  \    assert(candidate((std::vector<long>({-1, 0, 2, 5, 3, -10})), (2)) == (std::vector<long>({3,\
  \ 5})));\n    assert(candidate((std::vector<long>({1, 0, 5, -7})), (1)) == (std::vector<long>({5})));\n\
  \    assert(candidate((std::vector<long>({4, -4})), (2)) == (std::vector<long>({-4,\
  \ 4})));\n    assert(candidate((std::vector<long>({-10, 10})), (2)) == (std::vector<long>({-10,\
  \ 10})));\n    assert(candidate((std::vector<long>({1, 2, 3, -23, 243, -400, 0})),\
  \ (0)) == (std::vector<long>()));\n}\n"
completions: ["    // Your code here\n    std::vector<long> result;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    result.push_back(max_val);\n    result.push_back(arr[max_idx]);\n\
    \    return result;", "    // code here\n    std::vector<long> max;\n    max.reserve(k);\n\
    \    long max_val = arr[0];\n    for(long i = 1; i < k; i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n        }\n    }\n    for(long\
    \ i = 0; i < k; i++) {\n        if(arr[i] > max_val) {\n            max.push_back(arr[i]);\n\
    \        }\n    }\n    return max;", "    std::vector<long> ans;\n    long max\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n    }\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] == max) {\n            ans.push_back(arr[i]);\n \
    \       }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for (long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n \
    \           ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    long\
    \ n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n  \
    \  long max_idx = -1;\n    for(long i = 1; i < n; i++) {\n        if(arr[i] >\
    \ max_val) {\n            max_val = arr[i];\n            max_idx = i;\n      \
    \  }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx + 1; i < n;\
    \ i++) {\n        if(arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    for(long i = max_idx; i >= 0; i--) {\n        if(arr[i]\
    \ > max_val) {\n            ans.push_back(arr[i]);\n        }\n    }\n    return\
    \ ans;", "    long long int max_so_far = arr[0];\n    std::vector<long> max_ending_here;\n\
    \    max_ending_here.push_back(max_so_far);\n    for(long long int i = 1; i <\
    \ arr.size(); i++) {\n        if(arr[i] > max_so_far) {\n            max_so_far\
    \ = arr[i];\n        }\n        if(max_so_far >= arr[i]) {\n            max_ending_here.push_back(max_so_far);\n\
    \            max_so_far = arr[i];\n        }\n    }\n    if(max_so_far >= arr[k])\
    \ {\n        max_ending_here.push_back(max_so_far);\n    }\n    return max_ending_here;",
  "    std::vector<long> ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long n = arr.size();\n    long mid = n / 2;\n    while (i < n) {\n      \
    \  if (arr[i] > max) {\n            max = arr[i];\n            ans.clear();\n\
    \            ans.push_back(i);\n        }\n        else if (arr[i] == max) {\n\
    \            ans.push_back(arr[i]);\n        }\n        else if (arr[i] < max)\
    \ {\n            j = i;\n            while (j < n && arr[j] < max) {\n       \
    \         j++;\n            }\n            ans.push_back(arr[j]);\n          \
    \  i = j;\n        }\n        i++;\n    }\n    if (k > ans.size()) {\n       \
    \ k = ans.size();\n    }\n    ans.resize(k);\n    return ans;", "    std::vector<long>\
    \ res;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n    long n = arr.size();\n\
    \    long mid = n / 2;\n    while (i < n) {\n        if (arr[i] > max) {\n   \
    \         max = arr[i];\n        }\n        i++;\n    }\n    while (j < k) {\n\
    \        if (max < arr[j]) {\n            max = arr[j];\n        }\n        j++;\n\
    \    }\n    while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        i++;\n    }\n    while (j < k) {\n        if (max < arr[j])\
    \ {\n            max = arr[j];\n        }\n        j++;\n    }\n    while (i <\
    \ n) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n  \
    \      i++;\n    }\n    while (j < k) {\n        if (max < arr[j]) {\n       \
    \     max = arr[j];\n        }\n        j++;\n    }\n    while (i < n) {\n   \
    \     if (arr[i] > max) {\n            max = arr[i];\n        }\n        i++;\n\
    \    }\n    while (j < k) {\n        if (max < arr[j]) {\n            max = arr[j];\n\
    \        }\n        j++;\n    }\n    while (i < n) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n        i++;\n    }\n    while (j <\
    \ k) {\n        if (max < arr[j]) {\n            max = arr[j];\n        }\n  \
    \      j++;\n    }\n    while (i < n) {\n        if (arr[i] > max) {\n       \
    \     max = arr[i];\n        }\n        i++;\n    }\n    while (j < k) {\n   \
    \     if (max < arr[j]) {\n            max = arr[j];\n        }\n        j++;\n\
    \    }\n    while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        i++;\n    }\n    while (j < k) {\n        if (max < arr[j])\
    \ {\n            max = arr[j];\n        }\n        j++;\n    }\n    while (i <\
    \ n) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n  \
    \      i++;\n    }\n    while (j < k) {\n        if (max < arr[j]) {\n       \
    \     max = arr[j];\n        }\n        j++;\n    }\n    while (i < n) {\n   \
    \     if (arr[i] > max) {\n            max = arr[i];\n        }\n        i++;\n\
    \    }\n    while (j < k) {\n        if (max < arr[j]) {\n            max = arr[j];\n\
    \        }\n        j++;\n    }\n    while (i < n) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n        i++;\n    }\n    while (j <\
    \ k) {\n        if (max < arr[j]) {\n", "    std::vector<long> max_arr(k);\n \
    \   long max_num = arr[0];\n    long index = 0;\n    for (long i = 1; i < k; i++)\
    \ {\n        if (arr[i] > max_num) {\n            max_num = arr[i];\n        }\n\
    \    }\n    for (long i = 0; i < k; i++) {\n        if (arr[i] > max_num) {\n\
    \            max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;", " \
    \   std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n   \
    \     }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long size = arr.size();\n    long\
    \ mid = size / 2;\n    while (i < size) {\n        if (arr[i] > max) {\n     \
    \       max = arr[i];\n            ans.clear();\n        }\n        if (arr[i]\
    \ == max) {\n            ans.push_back(arr[i]);\n        }\n        i++;\n   \
    \ }\n    while (j < k) {\n        if (max < arr[j]) {\n            max = arr[j];\n\
    \            ans.clear();\n        }\n        if (arr[j] == max) {\n         \
    \   ans.push_back(arr[j]);\n        }\n        j++;\n    }\n    return ans;",
  "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    while(max_idx != -1) {\n        ans.push_back(arr[max_idx]);\n\
    \        max_idx = max_idx > 0 ? max_idx - 1 : 0;\n    }\n    return ans;", " \
    \   std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n    for (long i\
    \ = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n   \
    \         ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    //\
    \ write your code here\n    long n = arr.size();\n    long max_size = n;\n   \
    \ std::vector<long> max_arr;\n    long max_num = arr[0];\n    long max_pos = 0;\n\
    \    for(long i = 1; i < n; i++) {\n        if(arr[i] > max_num) {\n         \
    \   max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n            max_pos = i;\n        }\n    }\n    max_arr.push_back(max_num);\n\
    \    for(long i = max_pos; i < n; i++) {\n        if(arr[i] > max_num) {\n", " \
    \   long n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    long cur_idx = max_idx;\n    for\
    \ (long i = max_idx + 1; i < n; i++) {\n        if (arr[i] > arr[cur_idx]) {\n\
    \            ans.push_back(arr[i]);\n            cur_idx = i;\n        }\n   \
    \ }\n    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long\
    \ index = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] >\
    \ max) {\n            max = arr[i];\n            index = i;\n        }\n    }\n\
    \    ans.push_back(max);\n    while(index < arr.size() && k > 0) {\n        if(arr[index]\
    \ > max) {\n            max = arr[index];\n            ans.push_back(max);\n \
    \       }\n        index++;\n        k--;\n    }\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> max;\n    max.reserve(k);\n    long maxVal\
    \ = arr[0];\n    for(long i = 1; i < k; i++) {\n        if(arr[i] > maxVal) {\n\
    \            maxVal = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++)\
    \ {\n        if(arr[i] > maxVal) {\n            max.push_back(arr[i]);\n     \
    \   }\n    }\n    return max;", "    std::vector<long> result;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (size_t i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    for (size_t i = 0; i < k; i++) {\n  \
    \      result.push_back(arr[max_idx]);\n        max_idx--;\n    }\n    return\
    \ result;", "    std::vector<long> max_arr(k);\n    long max_num = arr[0];\n \
    \   for(long i = 1; i < k; i++) {\n        if(arr[i] > max_num) {\n          \
    \  max_num = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++) {\n  \
    \      if(arr[i] > max_num) {\n            max_arr[i] = arr[i];\n        }\n \
    \   }\n    return max_arr;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    ans.reserve(k);\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < n; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_val = arr[i];\n            max_idx = i;\n        }\n    }\n    for (long\
    \ i = 0; i < k; i++) {\n        ans.push_back(arr[max_idx]);\n        max_idx--;\n\
    \    }\n    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    for (long i = max_idx;\
    \ i >= 0; i--) {\n        if (i >= k) {\n            break;\n        }\n     \
    \   ans.push_back(arr[i]);\n    }\n    return ans;", "    std::vector<long> max_arr;\n\
    \    long max_num = arr[0];\n    for(long i = 0; i < arr.size(); i++) {\n    \
    \    if(arr[i] > max_num) {\n            max_num = arr[i];\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_num) {\n\
    \            max_arr.push_back(max_num);\n        }\n    }\n    for(long i = 0;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_num) {\n            max_arr.push_back(arr[i]);\n\
    \        }\n    }\n    return max_arr;", "    long long ans = arr[0];\n    long\
    \ long max_val = arr[0];\n    long long max_idx = 1;\n    for(long long i = 1;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    std::vector<long>\
    \ ans_list;\n    for(long long i = max_idx; i < k; i++) {\n        ans_list.push_back(arr[i]);\n\
    \    }\n    ans_list.push_back(ans);\n    return ans_list;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    for (size_t i = 0;\
    \ i < arr.size(); i++) {\n        if (i == max_idx) {\n            ans.push_back(max_val);\n\
    \        } else {\n            ans.push_back(arr[i]);\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    std::vector<long> max;\n    long maxVal =\
    \ arr[0];\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > maxVal)\
    \ {\n            maxVal = arr[i];\n        }\n    }\n    for(long i = 0; i < k;\
    \ i++) {\n        max.push_back(maxVal);\n    }\n    return max;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    ans.push_back(arr[max_idx]);\n    for (long i = max_idx + 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> result;\n    long\
    \ max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max) {\n            max = arr[i];\n        }\n    }\n    for (long i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max && arr[i] != max) {\n       \
    \     result.push_back(max);\n            max = arr[i];\n        }\n    }\n  \
    \  for (long i = 0; i < k; i++) {\n        result.push_back(max);\n    }\n   \
    \ return result;", "    long n = arr.size();\n    std::vector<long> ans;\n   \
    \ long max_val = arr[0];\n    long max_idx = -1;\n    \n    for (long i = 1; i\
    \ < n; i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    \n    ans.push_back(max_val);\n\
    \    \n    for (long i = max_idx + 1; i < n; i++) {\n        if (arr[i] > arr[i-max_idx])\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    \n    return ans;",
  "    // Your code here\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx + 1; i <\
    \ arr.size(); i++) {\n        if(arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // code here\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    while(max_idx != -1) {\n        ans.push_back(arr[max_idx]);\n        max_idx\
    \ = max_idx > 0 ? max_idx - 1 : 0;\n    }\n    ans.push_back(arr[0]);\n    return\
    \ ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    while(max_idx != -1) {\n        ans.push_back(arr[max_idx]);\n\
    \        max_idx = max_idx > 0 ? max_idx - 1 : 0;\n    }\n    ans.push_back(arr[0]);\n\
    \    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long cur\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n            cur = i;\n        }\n    }\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] == max) {\n        \
    \    ans.push_back(arr[cur]);\n        }\n    }\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> ans;\n    long max_val = arr[0];\n    long\
    \ max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx + 1; i <\
    \ arr.size(); i++) {\n        if(arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long curr_idx\
    \ = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > arr[curr_idx]) {\n            ans.push_back(arr[i]);\n           \
    \ curr_idx = i;\n        }\n    }\n    return ans;", "    std::vector<long> ans;\n\
    \    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i <\
    \ arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n   \
    \ long idx = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n\
    \        if (arr[i] > arr[idx]) {\n            ans.push_back(arr[i]);\n      \
    \      idx = i;\n        }\n    }\n    return ans;", "    std::vector<long> ans;\n\
    \    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val =\
    \ arr[i];\n            max_idx = i;\n        }\n    }\n    for (size_t i = 0;\
    \ i < k; i++) {\n        ans.push_back(arr[max_idx]);\n        max_idx--;\n  \
    \  }\n    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    long max_idx = max_idx;\n\
    \    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n    return ans;",
  "    long n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    long idx = 0;\n    for (long i = 1; i < n; i++) {\n\
    \        if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n\
    \    for (long i = max_idx + 1; i < n; i++) {\n        if (arr[i] > max_val) {\n\
    \            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "   \
    \ std::vector<long> ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long count = 0;\n    while(i < arr.size() && j < k) {\n        if(arr[i]\
    \ > max) {\n            max = arr[i];\n            ans.clear();\n            count\
    \ = 0;\n        }\n        else if(arr[i] == max) {\n            count++;\n  \
    \      }\n        else {\n            ans.push_back(max);\n            max = arr[i];\n\
    \            count = 0;\n        }\n        i++;\n        j++;\n    }\n    while(i\
    \ < arr.size() && j < k) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \            ans.clear();\n            count = 0;\n        }\n        else if(arr[i]\
    \ == max) {\n            count++;\n        }\n        else {\n            ans.push_back(max);\n\
    \            max = arr[i];\n            count = 0;\n        }\n        i++;\n\
    \        j++;\n    }\n    while(i < arr.size() && count < k) {\n        if(arr[i]\
    \ > max) {\n            max = arr[i];\n            ans.clear();\n            count\
    \ = 0;\n        }\n        else if(arr[i] == max) {\n            count++;\n  \
    \      }\n        else {\n            ans.push_back(max);\n            max = arr[i];\n\
    \            count = 0;\n        }\n        i++;\n    }\n    return ans;", " \
    \   long n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 0; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for (long i = max_idx + 1; i <\
    \ n; i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long cur = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n           \
    \ cur = i;\n        }\n    }\n    ans.push_back(max);\n    for (long i = cur;\
    \ i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> max;\n    max.reserve(k);\n    long maxVal\
    \ = arr[0];\n    for(long i = 1; i < k; i++) {\n        if(arr[i] > maxVal) {\n\
    \            max.push_back(maxVal);\n            maxVal = arr[i];\n        }\n\
    \        else {\n            max.push_back(arr[i]);\n        }\n    }\n    max.push_back(maxVal);\n\
    \    return max;", "    std::vector<long> ans;\n    long max = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long n = arr.size();\n    long mid = n / 2;\n   \
    \ while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n  \
    \          ans.clear();\n        }\n        if (arr[i] == max) {\n           \
    \ ans.push_back(arr[i]);\n        }\n        i++;\n    }\n    while (j < k) {\n\
    \        if (max < arr[j]) {\n            max = arr[j];\n            ans.clear();\n\
    \        }\n        if (arr[j] == max) {\n            ans.push_back(arr[j]);\n\
    \        }\n        j++;\n    }\n    return ans;", "    std::vector<long> ans;\n\
    \    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1; i < arr.size();\
    \ i++) {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n    \
    \        max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    while(max_idx\
    \ != -1) {\n        ans.push_back(arr[max_idx]);\n        max_idx = max_idx >\
    \ 0 ? max_idx - 1 : 0;\n    }\n    return ans;", "    std::vector<long> ans;\n\
    \    long max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max) {\n            max = arr[i];\n        }\n    }\n    long cur = 0;\n \
    \   for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n   \
    \         ans.push_back(arr[cur]);\n            cur++;\n        }\n    }\n   \
    \ ans.push_back(arr[cur]);\n    return ans;", "    std::vector<long> res;\n  \
    \  long max = 0;\n    long index = 0;\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max) {\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++) {\n       \
    \ if(arr[i] == max) {\n            res.push_back(arr[i]);\n        }\n    }\n\
    \    for(long i = 0; i < k; i++) {\n        res.push_back(arr[index]);\n     \
    \   index++;\n    }\n    return res;", "    std::vector<long> ans;\n    long max\
    \ = 0;\n    long index = 0;\n    for (auto i : arr) {\n        if (i > max) {\n\
    \            max = i;\n            index = i;\n        }\n    }\n    ans.push_back(max);\n\
    \    for (auto i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    ans.push_back(arr[index]);\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n    long mid = 0;\n\
    \    long cnt = 0;\n    long n = arr.size();\n    long m = n;\n    long cur =\
    \ 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n", "    std::vector<long> ans;\n    long max = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long mid = 0;\n    while (i < arr.size() && j < k)\
    \ {\n        if (arr[i] > max) {\n            max = arr[i];\n            mid =\
    \ i;\n        }\n        i++;\n    }\n    while (j < k) {\n        if (arr[j]\
    \ > max) {\n            max = arr[j];\n            mid = j;\n        }\n     \
    \   j++;\n    }\n    ans.push_back(max);\n    while (i < arr.size()) {\n     \
    \   if (arr[i] > max) {\n            max = arr[i];\n            mid = i;\n   \
    \     }\n        i++;\n    }\n    while (j < k) {\n        if (arr[j] > max) {\n\
    \            max = arr[j];\n            mid = j;\n        }\n        j++;\n  \
    \  }\n    ans.push_back(max);\n    while (i < arr.size()) {\n        if (arr[i]\
    \ > max) {\n            max = arr[i];\n            mid = i;\n        }\n     \
    \   i++;\n    }\n    while (j < k) {\n        if (arr[j] > max) {\n          \
    \  max = arr[j];\n            mid = j;\n        }\n        j++;\n    }\n    ans.push_back(max);\n\
    \    while (i < arr.size()) {\n        if (arr[i] > max) {\n            max =\
    \ arr[i];\n            mid = i;\n        }\n        i++;\n    }\n    while (j\
    \ < k) {\n        if (arr[j] > max) {\n            max = arr[j];\n           \
    \ mid = j;\n        }\n        j++;\n    }\n    ans.push_back(max);\n    while\
    \ (i < arr.size()) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \            mid = i;\n        }\n        i++;\n    }\n    while (j < k) {\n \
    \       if (arr[j] > max) {\n            max = arr[j];\n            mid = j;\n\
    \        }\n        j++;\n    }\n    ans.push_back(max);\n    while (i < arr.size())\
    \ {\n        if (arr[i] > max) {\n            max = arr[i];\n            mid =\
    \ i;\n        }\n        i++;\n    }\n    while (j < k) {\n        if (arr[j]\
    \ > max) {\n            max = arr[j];\n            mid = j;\n        }\n     \
    \   j++;\n    }\n    ans.push_back(max);\n    while (i < arr.size()) {\n     \
    \   if (arr[i] > max) {\n            max = arr[i];\n            mid = i;\n   \
    \     }\n        i++;\n    }\n    while (j < k) {\n        if (arr[j] > max) {\n\
    \            max = arr[j];\n            mid = j;\n        }\n        j++;\n  \
    \  }\n    ans.push_back(max);\n", "    std::vector<long> result;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    result.push_back(max_val);\n    result.push_back(arr[max_idx]);\n\
    \    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long mid = 0;\n    while (i < arr.size() && j < k) {\n        if (arr[i]\
    \ > max) {\n            max = arr[i];\n            mid = i;\n        }\n     \
    \   i++;\n    }\n    while (j < k) {\n        if (arr[j] > max) {\n          \
    \  max = arr[j];\n            mid = j;\n        }\n        j++;\n    }\n    while\
    \ (i < arr.size()) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \            mid = i;\n        }\n        i++;\n    }\n    while (j < k) {\n \
    \       if (arr[j] > max) {\n            max = arr[j];\n            mid = j;\n\
    \        }\n        j++;\n    }\n    ans.push_back(max);\n    ans.push_back(arr[mid]);\n\
    \    return ans;", "    std::vector<long> result;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    for (long i = 0; i < k; i++) {\n        result.push_back(arr[max_idx]);\n\
    \        max_idx--;\n    }\n    return result;", "    std::vector<long> ans;\n\
    \    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i <\
    \ arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n   \
    \ ans.push_back(arr[max_idx]);\n    \n    long cnt = 0;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \            cnt++;\n        }\n    }\n    ans.push_back(cnt);\n    \n    sort(ans.begin(),\
    \ ans.end());\n    \n    return ans;", "    std::vector<long> result;\n    long\
    \ max = 0;\n    long index = 0;\n    for (auto i : arr) {\n        if (index ==\
    \ k) {\n            result.push_back(max);\n            max = i;\n           \
    \ index = 0;\n        } else {\n            if (i > max) {\n                max\
    \ = i;\n                index++;\n            }\n        }\n    }\n    if (index\
    \ != 0) {\n        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    long\
    \ start = 0;\n    long end = arr.size() - 1;\n    while (start < end) {\n    \
    \    long mid = (start + end) / 2;\n        if (arr[mid] > max) {\n          \
    \  end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n\
    \    }\n    for (long i = start; i <= end; i++) {\n        if (arr[i] > max) {\n\
    \            max = arr[i];\n        }\n    }\n    for (long i = start; i <= end;\
    \ i++) {\n        if (arr[i] > max) {\n            res.push_back(arr[i]);\n  \
    \      }\n    }\n    return res;", "    std::vector<long> ans;\n    long max =\
    \ 0;\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > max) {\n            max = arr[i];\n            index = i;\n \
    \       }\n    }\n    ans.push_back(max);\n    for (long i = index; i < arr.size();\
    \ i++) {\n        if (arr[i] > max) {\n            ans.push_back(arr[i]);\n  \
    \      }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n         \
    \   max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for(long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n  \
    \          ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for(long i = max_idx + 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", " \
    \   // Your code here\n    std::vector<long> ans;\n    long max = 0;\n    long\
    \ min = 0;\n    long sum = 0;\n    long count = 0;\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \       if(arr[i] < min) {\n            min = arr[i];\n        }\n        sum\
    \ += arr[i];\n        count++;\n    }\n    long mid = sum / count;\n    for(long\
    \ i = 0; i < arr.size(); i++) {\n        if(arr[i] > mid) {\n            ans.push_back(max);\n\
    \            max = max * -1;\n        }\n        if(arr[i] < mid) {\n        \
    \    ans.push_back(min);\n            min = min * -1;\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n   \
    \     }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long n = arr.size();\n    long mid\
    \ = n / 2;\n    while (i < n) {\n        if (arr[i] > max) {\n            max\
    \ = arr[i];\n        }\n        i++;\n    }\n    while (j < n) {\n        if (arr[j]\
    \ > max) {\n            max = arr[j];\n        }\n        j++;\n    }\n    while\
    \ (i < n) {\n        if (arr[i] > max) {\n            ans.push_back(arr[i]);\n\
    \            i++;\n        }\n    }\n    while (j < n) {\n        if (arr[j] >\
    \ max) {\n            ans.push_back(arr[j]);\n            j++;\n        }\n  \
    \  }\n    return ans;", "    std::vector<long> res;\n    long max = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long mid = 0;\n    long n = arr.size();\n    long\
    \ count = 0;\n    long temp = 0;\n    while(i < n) {\n        mid = (i + j)/2;\n\
    \        if(arr[mid] > max) {\n            max = arr[mid];\n            j = mid;\n\
    \        } else {\n            i = mid + 1;\n        }\n    }\n    while(j < n)\
    \ {\n        mid = (i + j)/2;\n        if(arr[mid] > max) {\n            max =\
    \ arr[mid];\n            i = mid + 1;\n        } else {\n            j = mid +\
    \ 1;\n        }\n    }\n    while(j < n) {\n        mid = (i + j)/2;\n       \
    \ if(arr[mid] > max) {\n            max = arr[mid];\n            i = mid + 1;\n\
    \        } else {\n            j = mid + 1;\n        }\n    }\n    while(j < n)\
    \ {\n        mid = (i + j)/2;\n        if(arr[mid] > max) {\n            max =\
    \ arr[mid];\n            i = mid + 1;\n        } else {\n            j = mid +\
    \ 1;\n        }\n    }\n    while(j < n) {\n        mid = (i + j)/2;\n       \
    \ if(arr[mid] > max) {\n            max = arr[mid];\n            i = mid + 1;\n\
    \        } else {\n            j = mid + 1;\n        }\n    }\n    while(j < n)\
    \ {\n        mid = (i + j)/2;\n        if(arr[mid] > max) {\n            max =\
    \ arr[mid];\n            i = mid + 1;\n        } else {\n            j = mid +\
    \ 1;\n        }\n    }\n    while(j < n) {\n        mid = (i + j)/2;\n       \
    \ if(arr[mid] > max) {\n            max = arr[mid];\n            i = mid + 1;\n\
    \        } else {\n            j = mid + 1;\n        }\n    }\n    while(j < n)\
    \ {\n        mid = (i + j)/2;\n        if(arr[mid] > max) {\n            max =\
    \ arr[mid];\n            i = mid + 1;\n        } else {\n            j = mid +\
    \ 1;\n        }\n    }\n    while(j < n) {\n        mid = (i + j)/2;\n       \
    \ if(arr[mid] > max) {\n            max = arr[mid];\n            i = mid + 1;\n\
    \        } else {\n            j = mid + 1;\n        }\n    }\n    while(j < n)\
    \ {\n        mid = (i + j)/2;\n        if(arr[mid] > max) {\n            max =\
    \ arr[mid];\n            i = mid + 1;\n        } else {\n            j = mid +\
    \ 1;\n        }\n    }\n    while(j < n) {\n        mid = (i + j)/2;\n       \
    \ if(arr[mid] > max) {\n            max = arr[mid];\n            i = mid + 1;\n",
  "    std::vector<long> ans;\n    long max = 0;\n    long curr = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long size = arr.size();\n    while(i < size) {\n  \
    \      max = arr[i];\n        while(j < size && arr[j] > max) {\n            max\
    \ = arr[j];\n            j++;\n        }\n        if(max > curr) {\n         \
    \   ans.push_back(max);\n            curr = max;\n        }\n        i++;\n  \
    \  }\n    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long mid = 0;\n    long size = arr.size();\n  \
    \  while(i < size) {\n        mid = (i + j) / 2;\n        if(arr[mid] > max) {\n\
    \            max = arr[mid];\n            j = mid;\n        } else {\n       \
    \     i = mid + 1;\n        }\n    }\n    while(j < size) {\n        mid = (i\
    \ + j) / 2;\n        if(arr[mid] > max) {\n            max = arr[mid];\n     \
    \       i = mid + 1;\n        } else {\n            j = mid + 1;\n        }\n\
    \    }\n    while(i < size) {\n        mid = (i + j) / 2;\n        if(arr[mid]\
    \ > max) {\n            max = arr[mid];\n            i = mid + 1;\n        } else\
    \ {\n            j = mid + 1;\n        }\n    }\n    while(j < size) {\n     \
    \   mid = (i + j) / 2;\n        if(arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid + 1;\n        } else {\n            i = mid + 1;\n      \
    \  }\n    }\n    while(j < size) {\n        mid = (i + j) / 2;\n        if(arr[mid]\
    \ > max) {\n            max = arr[mid];\n            j = mid + 1;\n        } else\
    \ {\n            i = mid + 1;\n        }\n    }\n    while(j < size) {\n     \
    \   mid = (i + j) / 2;\n        if(arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid + 1;\n        } else {\n            i = mid + 1;\n      \
    \  }\n    }\n    while(j < size) {\n        mid = (i + j) / 2;\n        if(arr[mid]\
    \ > max) {\n            max = arr[mid];\n            j = mid + 1;\n        } else\
    \ {\n            i = mid + 1;\n        }\n    }\n    while(j < size) {\n     \
    \   mid = (i + j) / 2;\n        if(arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid + 1;\n        } else {\n            i = mid + 1;\n      \
    \  }\n    }\n    while(j < size) {\n        mid = (i + j) / 2;\n        if(arr[mid]\
    \ > max) {\n            max = arr[mid];\n            j = mid + 1;\n        } else\
    \ {\n            i = mid + 1;\n        }\n    }\n    while(j < size) {\n     \
    \   mid = (i + j) / 2;\n        if(arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid + 1;\n        } else {\n            i = mid + 1;\n      \
    \  }\n    }\n    while(j < size) {\n        mid = (i + j) / 2;\n        if(arr[mid]\
    \ > max) {\n            max = arr[mid];\n            j = mid + 1;\n        } else\
    \ {\n            i = mid + 1;\n", "    // write your code here\n    std::vector<long>\
    \ result;\n    long max = 0;\n    long index = 0;\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    result.push_back(max);\n    for(long i = index;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \        }\n    }\n    result.push_back(max);\n    for(long i = index; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \   }\n    result.push_back(max);\n    for(long i = index; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n\
    \    result.push_back(max);\n    for(long i = index; i < arr.size(); i++) {\n\
    \        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n   \
    \ result.push_back(max);\n    for(long i = index; i < arr.size(); i++) {\n   \
    \     if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    result.push_back(max);\n\
    \    for(long i = index; i < arr.size(); i++) {\n        if(arr[i] > max) {\n\
    \            max = arr[i];\n        }\n    }\n    result.push_back(max);\n   \
    \ for(long i = index; i < arr.size(); i++) {\n        if(arr[i] > max) {\n   \
    \         max = arr[i];\n        }\n    }\n    result.push_back(max);\n    for(long\
    \ i = index; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max\
    \ = arr[i];\n        }\n    }\n    result.push_back(max);\n    for(long i = index;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \        }\n    }\n    result.push_back(max);\n    for(long i = index; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \   }\n    result.push_back(max);\n    for(long i = index; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n\
    \    result.push_back(max);\n    for(long i = index; i < arr.size(); i++) {\n\
    \        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n   \
    \ result.push_back(max);\n    for(long i = index; i < arr.size(); i++) {\n   \
    \     if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    result.push_back(max);\n\
    \    for(long i = index; i < arr.size(); i++) {\n        if(arr[i] > max) {\n\
    \            max = arr[i];\n        }\n    }\n    result.push_back(max);\n   \
    \ for(long i = index; i < arr.size(); i++) {", "    // Your code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long sum = 0;\n    for(long i = 0; i < arr.size();\
    \ i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n\
    \        }\n    }\n    for(long i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ > max){\n            ans.push_back(arr[i]);\n        }\n    }\n    ans.push_back(max);\n\
    \    return ans;", "    // Your code here\n    std::vector<long> ans;\n    long\
    \ max = 0;\n    long min = 0;\n    long sum = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        sum += arr[i];\n        if (sum > max) {\n            max =\
    \ sum;\n        }\n        if (sum < min) {\n            min = sum;\n        }\n\
    \    }\n    long mid = sum / 2;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > mid) {\n            ans.push_back(arr[i]);\n        }\n\
    \    }\n    ans.push_back(max);\n    ans.push_back(min);\n    return ans;", " \
    \   // Your code here\n    std::vector<long> max;\n    max.reserve(k);\n    long\
    \ maxVal = arr[0];\n    for(long i = 1; i < k; i++) {\n        if(arr[i] > maxVal)\
    \ {\n            maxVal = arr[i];\n        }\n    }\n    for(long i = 0; i < k;\
    \ i++) {\n        if(arr[i] > maxVal) {\n            max.push_back(arr[i]);\n\
    \        }\n    }\n    return max;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for (long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n \
    \           ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    ans.push_back(arr[max_idx]);\n    for (long i = max_idx + 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    long long max\
    \ = 0;\n    std::vector<long> ans;\n    for(long i = 0; i < arr.size(); i++) {\n\
    \        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n   \
    \ for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n       \
    \     ans.push_back(max);\n            max = arr[i];\n        }\n    }\n    ans.push_back(max);\n\
    \    return ans;", "    std::vector<long> max_arr(k);\n    long max_val = arr[0];\n\
    \    long index = 0;\n    for (long i = 1; i < k; i++) {\n        if (arr[i] >\
    \ max_val) {\n            max_val = arr[i];\n        }\n    }\n    max_arr[0]\
    \ = max_val;\n    for (long i = 1; i < k; i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;",
  "    std::vector<long> ans;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max\
    \ = arr[i];\n            cur = i;\n        }\n    }\n    ans.push_back(max);\n\
    \    for (long i = cur + 1; i < arr.size(); i++) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n            ans.push_back(max);\n        }\n \
    \   }\n    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long\
    \ index = 0;\n    for (auto i : arr) {\n        if (i > max) {\n            max\
    \ = i;\n            index = i;\n        }\n    }\n    for (auto i : arr) {\n \
    \       if (i == max) {\n            ans.push_back(index);\n        }\n    }\n\
    \    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n \
    \   long max_pos = 0;\n    for (long i = 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > max_val) {\n            max_val = arr[i];\n            max_pos = i;\n\
    \        }\n    }\n    ans.push_back(max_val);\n    long max_pos2 = max_pos;\n\
    \    for (long i = max_pos + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_pos2 = i;\n        }\n   \
    \ }\n    ans.push_back(max_val);\n    long max_pos3 = max_pos2;\n    for (long\
    \ i = max_pos2 + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_pos3 = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    long max_pos4 = max_pos3;\n    for (long i =\
    \ max_pos3 + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n    \
    \        max_val = arr[i];\n            max_pos4 = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    long max_pos5 = max_pos4;\n    for (long i = max_pos4 + 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_pos5 = i;\n        }\n    }\n    ans.push_back(max_val);\n    long\
    \ max_pos6 = max_pos5;\n    for (long i = max_pos5 + 1; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_pos6\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    long max_pos7 = max_pos6;\n\
    \    for (long i = max_pos6 + 1; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_val) {\n            max_val = arr[i];\n            max_pos7 = i;\n     \
    \   }\n    }\n    ans.push_back(max_val);\n    long max_pos8 = max_pos7;\n   \
    \ for (long i = max_pos7 + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_pos8 = i;\n        }\n   \
    \ }\n    ans.push_back(max_val);\n    long max_pos9 = max_pos8;\n    for (long\
    \ i = max_pos8 + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_pos9 = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    long max_pos10 = max_pos9;\n    for (long i\
    \ = max_pos9 + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n  \
    \          max_val = arr[i];\n            max_pos10 = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    long max_pos11 = max_pos10;\n    for (long i\
    \ = max_pos10 + 1", "    long n = arr.size();\n    std::vector<long> ans;\n  \
    \  long max_val = arr[0];\n    long max_idx = -1;\n    \n    for (long i = 1;\
    \ i < n; i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    \n    for (long i = 0; i < k;\
    \ i++) {\n        ans.push_back(arr[max_idx]);\n        max_idx--;\n    }\n  \
    \  \n    return ans;", "    std::vector<long> result;\n    long max = 0;\n   \
    \ long index = 0;\n    for (auto i : arr) {\n        if (i > max) {\n        \
    \    max = i;\n            index = i;\n        }\n    }\n    for (auto i : arr)\
    \ {\n        if (i == max) {\n            result.push_back(index);\n        }\n\
    \    }\n    if (result.size() < k) {\n        for (auto i : arr) {\n         \
    \   if (i == max) {\n                result.push_back(i);\n            }\n   \
    \     }\n    }\n    return result;", "    // code here\n    std::vector<long>\
    \ result;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i\
    \ = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    for (long i = 0;\
    \ i < k; i++) {\n        result.push_back(arr[max_idx]);\n        max_idx--;\n\
    \    }\n    return result;", "    long long max = 0;\n    std::vector<long> ans;\n\
    \    for(long i = 0; i < k; i++) {\n        max = std::max(max, arr[i]);\n   \
    \     ans.push_back(max);\n    }\n    return ans;", "    long n = arr.size();\n\
    \    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < n; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_val = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    long max_idx = max_idx;\n    for (long i = max_idx + 1; i < n; i++) {\n \
    \       if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    return ans;", "   \
    \ std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n   \
    \     }\n    }\n    return ans;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < n; i++) {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n   \
    \ for(long i = max_idx + 1; i < n; i++) {\n        if(arr[i] > max_val) {\n  \
    \          ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    long\
    \ n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n  \
    \  long max_idx = -1;\n    for(long i = 1; i < n; i++) {\n        if(arr[i] >\
    \ max_val) {\n            max_val = arr[i];\n            max_idx = i;\n      \
    \  }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx; i < k; i++)\
    \ {\n        ans.push_back(arr[i]);\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max = 0;\n    long curr = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n\
    \    }\n    long curr2 = 0;\n    for (long i = 0; i < arr.size(); i++) {\n   \
    \     if (arr[i] > max) {\n            ans.push_back(max);\n            curr2\
    \ = max;\n            max = arr[i];\n        } else if (arr[i] == max) {\n   \
    \         curr2 = max;\n            max = arr[i];\n        }\n    }\n    ans.push_back(max);\n\
    \    ans.push_back(curr2);\n    return ans;", "    std::vector<long> ans;\n  \
    \  long max_val = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n\
    \    return ans;", "    std::vector<long> max_arr(k);\n    long max_num = arr[0];\n\
    \    for(long i = 1; i < k; i++) {\n        if(arr[i] > max_num) {\n         \
    \   max_num = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++) {\n \
    \       if(arr[i] > max_num) {\n            max_arr[i] = arr[i];\n        }\n\
    \    }\n    return max_arr;", "    std::vector<long> ans;\n    long max_val =\
    \ arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n\
    \    \n    long max_val_2 = arr[0];\n    long max_idx_2 = -1;\n    for (long i\
    \ = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val_2) {\n           \
    \ max_val_2 = arr[i];\n            max_idx_2 = i;\n        }\n    }\n    ans.push_back(max_val_2);\n\
    \    ans.push_back(arr[max_idx_2]);\n    \n    long max_val_3 = arr[0];\n    long\
    \ max_idx_3 = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val_3) {\n            max_val_3 = arr[i];\n            max_idx_3 = i;\n\
    \        }\n    }\n    ans.push_back(max_val_3);\n    ans.push_back(arr[max_idx_3]);\n\
    \    \n    long max_val_4 = arr[0];\n    long max_idx_4 = -1;\n    for (long i\
    \ = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val_4) {\n           \
    \ max_val_4 = arr[i];\n            max_idx_4 = i;\n        }\n    }\n    ans.push_back(max_val_4);\n\
    \    ans.push_back(arr[max_idx_4]);\n    \n    long max_val_5 = arr[0];\n    long\
    \ max_idx_5 = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val_5) {\n            max_val_5 = arr[i];\n            max_idx_5 = i;\n\
    \        }\n    }\n    ans.push_back(max_val_5);\n    ans.push_back(arr[max_idx_5]);\n\
    \    \n    long max_val_6 = arr[0];\n    long max_idx_6 = -1;\n    for (long i\
    \ = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val_6) {\n           \
    \ max_val_6 = arr[i];\n            max_idx_6 = i;\n        }\n    }\n    ans.push_back(max_val_6);\n\
    \    ans.push_back(arr[max_idx_6]);\n    \n    long max_val_7 = arr[0];\n    long\
    \ max_idx_7 = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val_7) {\n            max_val_7 = arr[i];\n            max_idx_7 = i;\n\
    \        }\n    }\n    ans.push_back(max_val_7);\n    ans.push_back(arr[max_idx_7]);\n\
    \    \n    long max_val_8 = arr[0];\n    long max_idx_8 = -1;\n    for (long i\
    \ = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val_8) {\n           \
    \ max_val_8 = arr[i];\n", "    // code here\n    std::vector<long> max_arr;\n\
    \    long max_num = arr[0];\n    for(long i = 1; i < arr.size(); i++) {\n    \
    \    if(arr[i] > max_num) {\n            max_num = arr[i];\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_num) {\n\
    \            max_arr.push_back(arr[i]);\n        }\n    }\n    for(long i = 0;\
    \ i < k; i++) {\n        max_arr.push_back(max_num);\n    }\n    return max_arr;",
  "    long n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for (long i = max_idx + 1; i <\
    \ n; i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < n; i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n   \
    \ for (long i = max_idx + 1; i < n; i++) {\n        if (arr[i] > max_val) {\n\
    \            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "   \
    \ std::vector<long> ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long n = arr.size();\n    while(i < n && j < k) {\n        if(arr[i] > arr[j])\
    \ {\n            max = arr[i];\n            i++;\n        } else {\n         \
    \   max = arr[j];\n            j++;\n        }\n    }\n    while(i < n) {\n  \
    \      max = arr[i];\n        ans.push_back(max);\n        i++;\n    }\n    while(j\
    \ < k) {\n        max = arr[j];\n        ans.push_back(max);\n        j++;\n \
    \   }\n    return ans;", "    // Your code here\n    long long max = 0;\n    std::vector<long>\
    \ arr1;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n    }\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            arr1.push_back(max);\n     \
    \       max = arr[i];\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max) {\n            arr1.push_back(arr[i]);\n       \
    \ }\n    }\n    return arr1;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    ans.reserve(n);\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < n; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_val = arr[i];\n            max_idx = i;\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        if (max_idx != i) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    ans.push_back(max_val);\n    return ans;", "    long n\
    \ = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n    long\
    \ max_idx = -1;\n    for(long i = 1; i < n; i++) {\n        if(arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for(long i = max_idx + 1; i < k; i++) {\n  \
    \      long val = arr[i];\n        long idx = i;\n        for(long j = i; j <\
    \ n; j++) {\n            if(arr[j] > val) {\n                val = arr[j];\n \
    \               idx = j;\n            }\n        }\n        ans.push_back(val);\n\
    \    }\n    return ans;", "    // code here\n    std::vector<long> result;\n \
    \   long max = 0;\n    long temp = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] == max) {\n \
    \           temp = arr[i];\n        }\n    }\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > temp) {\n            result.push_back(arr[i]);\n\
    \        }\n    }\n    for (long i = 0; i < result.size(); i++) {\n        if\
    \ (result[i] > k) {\n            result.erase(result.begin() + i);\n        }\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> max;\n\
    \    long maxVal = arr[0];\n    for(long i = 1; i < arr.size(); i++) {\n     \
    \   if(arr[i] > maxVal) {\n            maxVal = arr[i];\n        }\n    }\n  \
    \  for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > maxVal) {\n   \
    \         max.push_back(arr[i]);\n        }\n    }\n    for(long i = 0; i < k;\
    \ i++) {\n        max.push_back(maxVal);\n    }\n    return max;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for (size_t i = max_idx + 1; i < arr.size(); i++) {\n        long val = arr[i];\n\
    \        long idx = i;\n        while (idx > 0 && arr[idx - 1] > val) {\n    \
    \        ans.push_back(val);\n            idx--;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    std::vector<long> ans;\n    long max = 0;\n\
    \    long cur = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max) {\n            max = arr[i];\n            cur = i;\n        }\n    }\n\
    \    ans.push_back(max);\n    for(long i = 0; i < arr.size(); i++) {\n       \
    \ if(arr[i] == max) {\n            ans.push_back(arr[cur]);\n        }\n    }\n\
    \    return ans;", "    std::vector<long> res;\n    long max = 0;\n    long cur\
    \ = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n\
    \            max = arr[i];\n            cur = i;\n        }\n    }\n    for(long\
    \ i = 0; i < arr.size(); i++) {\n        if(arr[i] == max) {\n            res.push_back(arr[cur]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n         \
    \   max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for(long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n  \
    \          ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for (size_t i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_val) {\n            ans.push_back(arr[i]);\n        }\n    }\n    return\
    \ ans;", "    long n = arr.size();\n    std::vector<long> max_arr(n);\n    long\
    \ max_num = arr[0];\n    long max_idx = 0;\n    for(long i = 1; i < n; i++) {\n\
    \        if(arr[i] > max_num) {\n            max_num = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        if(arr[i]\
    \ > max_num) {\n            max_arr[max_idx] = arr[i];\n            max_idx++;\n\
    \        }\n    }\n    return max_arr;", "    std::vector<long> ans;\n    long\
    \ max_val = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long\
    \ idx = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n    \
    \    if (arr[i] > arr[idx]) {\n            ans.push_back(arr[i]);\n          \
    \  idx = i;\n        }\n    }\n    return ans;", "    std::vector<long> max_arr(k);\n\
    \    long max_val = arr[0];\n    long max_index = 0;\n    for (long i = 1; i <\
    \ k; i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    max_arr[max_index] = max_val;\n\
    \    for (long i = 1; i < k; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for (size_t i = 0; i < arr.size(); i++) {\n        if (i != max_idx) {\n\
    \            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "   \
    \ // Your code here\n    std::vector<long> ans;\n    long max = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long mid = 0;\n    long count = 0;\n    while(i <\
    \ arr.size() && j < k) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \            mid = i;\n        }\n        i++;\n    }\n    while(j < k) {\n  \
    \      if(arr[j] > max) {\n            max = arr[j];\n            mid = j;\n \
    \       }\n        j++;\n    }\n    while(i < arr.size()) {\n        if(arr[i]\
    \ > max) {\n            max = arr[i];\n            mid = i;\n        }\n     \
    \   i++;\n    }\n    while(j < k) {\n        if(arr[j] > max) {\n            max\
    \ = arr[j];\n            mid = j;\n        }\n        j++;\n    }\n    while(i\
    \ < arr.size() && j < k) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \            mid = i;\n        }\n        i++;\n        j++;\n    }\n    while(j\
    \ < k) {\n        if(arr[j] > max) {\n            max = arr[j];\n            mid\
    \ = j;\n        }\n        j++;\n    }\n    while(i < arr.size() && j < k) {\n\
    \        if(arr[i] > max) {\n            max = arr[i];\n            mid = i;\n\
    \        }\n        i++;\n        j++;\n    }\n    while(j < k) {\n        if(arr[j]\
    \ > max) {\n            max = arr[j];\n            mid = j;\n        }\n     \
    \   j++;\n    }\n    while(i < arr.size() && j < k) {\n        if(arr[i] > max)\
    \ {\n            max = arr[i];\n            mid = i;\n        }\n        i++;\n\
    \        j++;\n    }\n    while(j < k) {\n        if(arr[j] > max) {\n       \
    \     max = arr[j];\n            mid = j;\n        }\n        j++;\n    }\n  \
    \  while(i < arr.size() && j < k) {\n        if(arr[i] > max) {\n            max\
    \ = arr[i];\n            mid = i;\n        }\n        i++;\n        j++;\n   \
    \ }\n    while(j < k) {\n        if(arr[j] > max) {\n            max = arr[j];\n\
    \            mid = j;\n        }\n        j++;\n    }\n    while(i < arr.size()\
    \ && j < k) {\n        if(arr[i] > max) {\n            max = arr[i];\n       \
    \     mid = i;\n        }\n        i++;\n        j++;\n    }\n    while(j < k)\
    \ {\n        if(arr[j] > max) {\n            max = arr[j];\n            mid =\
    \ j;\n        }\n        j", "    // Your code here\n    std::vector<long> max;\n\
    \    long max_val = arr[0];\n    for(long i = 1; i < arr.size(); i++){\n     \
    \   if(arr[i] > max_val){\n            max_val = arr[i];\n        }\n    }\n \
    \   for(long i = 0; i < k; i++){\n        max.push_back(max_val);\n    }\n   \
    \ return max;", "    std::vector<long> result;\n    long max_val = arr[0];\n \
    \   long max_idx = -1;\n    for (size_t i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    result.push_back(max_val);\n    for (size_t i =\
    \ max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n     \
    \       result.push_back(arr[i]);\n        }\n    }\n    if (result.size() > k)\
    \ {\n        result.resize(k);\n    }\n    return result;", "    std::vector<long>\
    \ max_arr(k);\n    long max_num = arr[0];\n    long index = 0;\n    for (long\
    \ i = 1; i < k; i++) {\n        if (arr[i] > max_num) {\n            max_num =\
    \ arr[i];\n        }\n    }\n    for (long i = 0; i < k; i++) {\n        if (arr[i]\
    \ > max_num) {\n            max_arr[i] = arr[i];\n        }\n    }\n    return\
    \ max_arr;", "    std::vector<long> max_arr;\n    long max_num = arr[0];\n   \
    \ for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_num) {\n   \
    \         max_num = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++)\
    \ {\n        max_arr.push_back(max_num);\n    }\n    return max_arr;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    long curr_idx = max_idx;\n    for (long i = max_idx + 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[curr_idx]) {\n            ans.push_back(arr[i]);\n\
    \            curr_idx = i;\n        }\n    }\n    return ans;", "    // code here\n\
    \    long long max = 0;\n    std::vector<long> ans;\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \   }\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] == max) {\n\
    \            ans.push_back(max);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for(long i = max_idx + 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", " \
    \   std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n   \
    \     }\n    }\n    return ans;", "    // Your code here\n    long n = arr.size();\n\
    \    long max_element = 0;\n    std::vector<long> max_elements(k, 0);\n    for(long\
    \ i = 0; i < n; i++) {\n        if(arr[i] > max_element) {\n            max_element\
    \ = arr[i];\n        }\n        if(max_elements[max_elements - 1] < arr[i]) {\n\
    \            max_elements[max_elements - 1] = arr[i];\n        }\n    }\n    return\
    \ max_elements;", "    std::vector<long> ans;\n    long max = 0;\n    long min\
    \ = 0;\n    long sum = 0;\n    long count = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        sum += arr[i];\n        if (sum > max) {\n            max =\
    \ sum;\n            ans.clear();\n            ans.push_back(i);\n        } else\
    \ if (sum < min) {\n            min = sum;\n            ans.clear();\n       \
    \     ans.push_back(i);\n        } else if (sum == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    if (k == ans.size()) {\n        return ans;\n    }\n  \
    \  long mid = ans.size() / 2;\n    ans.erase(ans.begin() + mid);\n    ans.insert(ans.begin(),\
    \ ans.begin() + mid);\n    ans.insert(ans.begin() + mid, ans.begin() + k);\n \
    \   return ans;", "    // Your code here\n    std::vector<long> ans;\n    long\
    \ max = 0;\n    long min = 0;\n    long mid = 0;\n    for(long i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] > max){\n            max = arr[i];\n            mid\
    \ = i;\n        }\n        if(arr[i] < min){\n            min = arr[i];\n    \
    \        mid = i;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++){\n\
    \        if(arr[i] == max && i != mid){\n            ans.push_back(max);\n   \
    \         max = arr[i];\n        }\n        if(arr[i] == min && i != mid){\n \
    \           ans.push_back(min);\n            min = arr[i];\n        }\n    }\n\
    \    ans.push_back(max);\n    return ans;", "    // Your code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long index = 0;\n    for (auto i : arr) {\n   \
    \     if (i > max) {\n            max = i;\n            index = i;\n        }\n\
    \    }\n    ans.push_back(max);\n    for (auto i : arr) {\n        if (i == max)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    ans.push_back(arr[index]);\n\
    \    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n \
    \   long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx + 1; i <\
    \ arr.size(); i++) {\n        if(arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max\
    \ = 0;\n    long cur = 0;\n    for(long i = 0; i < arr.size(); i++) {\n      \
    \  if(arr[i] > max) {\n            max = arr[i];\n            cur = i;\n     \
    \   }\n    }\n    ans.push_back(max);\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        if(arr[i] == max) {\n            ans.push_back(arr[cur]);\n     \
    \   }\n    }\n    return ans;", "    // write your code here\n    std::vector<long>\
    \ max_arr(k);\n    long max_val = arr[0];\n    for(long i = 1; i < k; i++) {\n\
    \        if(arr[i] > max_val) {\n            max_val = arr[i];\n        }\n  \
    \  }\n    for(long i = 0; i < k; i++) {\n        if(arr[i] > max_val) {\n    \
    \        max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;", "    std::vector<long>\
    \ ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n    while(i < arr.size()\
    \ && j < k) {\n        if(arr[i] > arr[j]) {\n            max = arr[i];\n    \
    \        i++;\n        } else {\n            max = arr[j];\n            j++;\n\
    \        }\n    }\n    while(i < arr.size()) {\n        max = arr[i];\n      \
    \  i++;\n        ans.push_back(max);\n    }\n    while(j < k) {\n        max =\
    \ arr[j];\n        j++;\n        ans.push_back(max);\n    }\n    return ans;",
  "    // Your code here\n    std::vector<long> result;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    result.push_back(max_val);\n    result.push_back(arr[max_idx]);\n\
    \    return result;", "    std::vector<long> ans;\n    long max = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long n = arr.size();\n    while(i < n && j < k)\
    \ {\n        if(arr[i] > arr[j]) {\n            max = arr[i];\n            i++;\n\
    \        } else {\n            max = arr[j];\n            j++;\n        }\n  \
    \      ans.push_back(max);\n    }\n    return ans;", "    std::vector<long> max_arr(k);\n\
    \    long max_val = arr[0];\n    for(long i = 1; i < k; i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n        }\n    }\n    for(long\
    \ i = 0; i < k; i++) {\n        if(arr[i] > max_val) {\n            max_arr[i]\
    \ = arr[i];\n        }\n    }\n    return max_arr;", "    // Your code here\n\
    \    std::vector<long> arr1(arr.begin(), arr.end());\n    std::sort(arr1.begin(),\
    \ arr1.end());\n    std::vector<long> arr2(arr1.begin(), arr1.begin() + k);\n\
    \    return arr2;", "    std::vector<long> result;\n    long max_val = arr[0];\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n        }\n    }\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            result.push_back(max_val);\n\
    \            max_val = arr[i];\n        }\n    }\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            result.push_back(arr[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    long\
    \ max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max) {\n            max = arr[i];\n        }\n    }\n    ans.push_back(max);\n\
    \    for (long i = 0; i < arr.size() - k + 1; i++) {\n        long cur = max;\n\
    \        for (long j = 0; j < k; j++) {\n            if (arr[i + j] > cur) {\n\
    \                cur = arr[i + j];\n            }\n        }\n        ans.push_back(cur);\n\
    \    }\n    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    ans.push_back(max_val);\n    long max_idx = max_idx;\n\
    \    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    long max_idx = max_idx;\n    for (long i = max_idx\
    \ + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    return ans;", "    // write your code here\n    std::vector<long> ans;\n\
    \    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1; i < arr.size();\
    \ i++){\n        if(arr[i] > max_val){\n            max_val = arr[i];\n      \
    \      max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for(long\
    \ i = max_idx; i < k; i++){\n        ans.push_back(arr[i]);\n    }\n    return\
    \ ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (size_t i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for (size_t i = max_idx + 1; i < arr.size();\
    \ i++) {\n        long val = arr[i];\n        long idx = i;\n        while (idx\
    \ > 0 && arr[idx - 1] > val) {\n            ans.push_back(arr[idx - 1]);\n   \
    \         idx--;\n        }\n        ans.push_back(val);\n    }\n    return ans;",
  "    std::vector<long> result;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   result.push_back(max_val);\n    result.push_back(arr[max_idx]);\n    return\
    \ result;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long\
    \ max_idx = -1;\n    for (size_t i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for (size_t i = max_idx + 1; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long min = 0;\n    long mid = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long temp = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n\
    \    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n\
    \    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13\
    \ = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long\
    \ cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n\
    \    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24\
    \ = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long\
    \ cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n\
    \    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35\
    \ = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long\
    \ cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n\
    \    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46\
    \ = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long\
    \ cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n\
    \    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57\
    \ = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long\
    \ cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n\
    \    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68\
    \ = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long\
    \ cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n\
    \    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    ", "    //\
    \ code here\n    std::vector<long> ans;\n    long max = 0;\n    long temp = 0;\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n    \
    \        max = arr[i];\n        }\n    }\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            temp = max;\n            max\
    \ = arr[i];\n        }\n    }\n    for(long i = 0; i < arr.size(); i++) {\n  \
    \      if(arr[i] > temp) {\n            ans.push_back(max);\n            max =\
    \ temp;\n        }\n    }\n    return ans;", "    long n = arr.size();\n    std::vector<long>\
    \ arr2(k);\n    long max = 0;\n    long i = 0;\n    long j = 0;\n    long k1 =\
    \ 0;\n    long k2 = 0;\n    long k3 = 0;\n    long k4 = 0;\n    long k5 = 0;\n\
    \    long k6 = 0;\n    long k7 = 0;\n    long k8 = 0;\n    long k9 = 0;\n    long\
    \ k10 = 0;\n    long k11 = 0;\n    long k12 = 0;\n    long k13 = 0;\n    long\
    \ k14 = 0;\n    long k15 = 0;\n    long k16 = 0;\n    long k17 = 0;\n    long\
    \ k18 = 0;\n    long k19 = 0;\n    long k20 = 0;\n    long k21 = 0;\n    long\
    \ k22 = 0;\n    long k23 = 0;\n    long k24 = 0;\n    long k25 = 0;\n    long\
    \ k26 = 0;\n    long k27 = 0;\n    long k28 = 0;\n    long k29 = 0;\n    long\
    \ k30 = 0;\n    long k31 = 0;\n    long k32 = 0;\n    long k33 = 0;\n    long\
    \ k34 = 0;\n    long k35 = 0;\n    long k36 = 0;\n    long k37 = 0;\n    long\
    \ k38 = 0;\n    long k39 = 0;\n    long k40 = 0;\n    long k41 = 0;\n    long\
    \ k42 = 0;\n    long k43 = 0;\n    long k44 = 0;\n    long k45 = 0;\n    long\
    \ k46 = 0;\n    long k47 = 0;\n    long k48 = 0;\n    long k49 = 0;\n    long\
    \ k50 = 0;\n    long k51 = 0;\n    long k52 = 0;\n    long k53 = 0;\n    long\
    \ k54 = 0;\n    long k55 = 0;\n    long k56 = 0;\n    long k57 = 0;\n    long\
    \ k58 = 0;\n    long k59 = 0;\n    long k60 = 0;\n    long k61 = 0;\n    long\
    \ k62 = 0;\n    long k63 = 0;\n    long k64 = 0;\n    long k65 = 0;\n    long\
    \ k66 = 0;\n    long k67 = 0;\n    long k68 = 0;\n    long k69 = 0;\n    long\
    \ k70 = 0;\n    long k71 = 0;\n    long k72 = 0;\n    long k73 = 0;\n    long\
    \ k74 = 0;\n    long k75 = 0;\n    long k76 = 0;\n    long k77 = 0;\n    long\
    \ k78 = 0;\n    long k79 = 0;\n    long k80 = 0;\n    long k81 = 0;\n    long ",
  "    std::vector<long> result;\n    long max = 0;\n    for (long i = 0; i < k; i++)\
    \ {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n\
    \    for (long i = 0; i < k; i++) {\n        if (arr[i] > max) {\n           \
    \ result.push_back(max);\n            max = arr[i];\n        }\n    }\n    for\
    \ (long i = 0; i < k; i++) {\n        if (arr[i] > max) {\n            result.push_back(arr[i]);\n\
    \        }\n    }\n    return result;", "    // write your code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long index = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n           \
    \ index = i;\n        }\n    }\n    ans.push_back(max);\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] == max) {\n            ans.push_back(arr[index]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for (long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n \
    \           ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    for (size_t i = 0;\
    \ i < arr.size(); i++) {\n        if (i == max_idx) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max\
    \ = 0;\n    long index = 0;\n    for(long i = 0; i < arr.size(); i++) {\n    \
    \    if(arr[i] > max) {\n            max = arr[i];\n            index = i;\n \
    \       }\n    }\n    ans.push_back(max);\n    for(long i = index; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \   }\n    while(ans.size() < k) {\n        ans.push_back(max);\n    }\n    return\
    \ ans;", "    // Your code here\n    std::vector<long> ans;\n    long max = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long n = arr.size();\n    long mid = n\
    \ / 2;\n    while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        i++;\n    }\n    while (j < k) {\n        if (max < arr[j])\
    \ {\n            ans.push_back(max);\n            max = arr[j];\n        }\n \
    \       j++;\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n\
    \    for (long i = max_idx + 1; i < arr.size(); i++) {\n        long val = arr[i];\n\
    \        long idx = i;\n        while (idx > 0 && arr[idx - 1] > val) {\n    \
    \        ans.push_back(val);\n            idx--;\n        }\n        ans.push_back(val);\n\
    \    }\n    return ans;", "    // Your code here\n    std::vector<long> arr2(arr.size());\n\
    \    long max = 0;\n    long i = 0;\n    long j = 0;\n    long k1 = 0;\n    long\
    \ k2 = 0;\n    long k3 = 0;\n    long k4 = 0;\n    long k5 = 0;\n    long k6 =\
    \ 0;\n    long k7 = 0;\n    long k8 = 0;\n    long k9 = 0;\n    long k10 = 0;\n\
    \    long k11 = 0;\n    long k12 = 0;\n    long k13 = 0;\n    long k14 = 0;\n\
    \    long k15 = 0;\n    long k16 = 0;\n    long k17 = 0;\n    long k18 = 0;\n\
    \    long k19 = 0;\n    long k20 = 0;\n    long k21 = 0;\n    long k22 = 0;\n\
    \    long k23 = 0;\n    long k24 = 0;\n    long k25 = 0;\n    long k26 = 0;\n\
    \    long k27 = 0;\n    long k28 = 0;\n    long k29 = 0;\n    long k30 = 0;\n\
    \    long k31 = 0;\n    long k32 = 0;\n    long k33 = 0;\n    long k34 = 0;\n\
    \    long k35 = 0;\n    long k36 = 0;\n    long k37 = 0;\n    long k38 = 0;\n\
    \    long k39 = 0;\n    long k40 = 0;\n    long k41 = 0;\n    long k42 = 0;\n\
    \    long k43 = 0;\n    long k44 = 0;\n    long k45 = 0;\n    long k46 = 0;\n\
    \    long k47 = 0;\n    long k48 = 0;\n    long k49 = 0;\n    long k50 = 0;\n\
    \    long k51 = 0;\n    long k52 = 0;\n    long k53 = 0;\n    long k54 = 0;\n\
    \    long k55 = 0;\n    long k56 = 0;\n    long k57 = 0;\n    long k58 = 0;\n\
    \    long k59 = 0;\n    long k60 = 0;\n    long k61 = 0;\n    long k62 = 0;\n\
    \    long k63 = 0;\n    long k64 = 0;\n    long k65 = 0;\n    long k66 = 0;\n\
    \    long k67 = 0;\n    long k68 = 0;\n    long k69 = 0;\n    long k70 = 0;\n\
    \    long k71 = 0;\n    long k72 = 0;\n    long k73 = 0;\n    long k74 = 0;\n\
    \    long k75 = 0;\n    long k76 = 0;\n    long k77 = 0;\n    long k78 = 0;\n\
    \    long k79 = 0;\n    long k80 = 0;\n    long k81 = 0;\n    long k", "    //\
    \ code here\n    std::vector<long> max;\n    max.reserve(k);\n    for(long i =\
    \ 0; i < arr.size(); i++) {\n        if(max.size() == k) {\n            break;\n\
    \        }\n        if(arr[i] > max[k-1]) {\n            max.resize(k);\n    \
    \        max[k-1] = arr[i];\n        }\n    }\n    return max;", "    // write\
    \ your code here\n    std::vector<long> ans;\n    long max = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long mid = 0;\n    while(i < arr.size() && j < k) {\n\
    \        if(arr[i] > arr[j]) {\n            mid = arr[i];\n            arr[i]\
    \ = arr[j];\n            arr[j] = mid;\n        }\n        i++;\n        j++;\n\
    \    }\n    while(i < arr.size()) {\n        mid = arr[i];\n        ans.push_back(mid);\n\
    \        i++;\n    }\n    while(j < k) {\n        mid = arr[j];\n        ans.push_back(mid);\n\
    \        j++;\n    }\n    return ans;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < n; i++) {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n   \
    \ for(long i = max_idx + 1; i < n; i++) {\n        if(arr[i] > max_val) {\n  \
    \          ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    //\
    \ write your code here\n    std::vector<long> result;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    result.push_back(max_val);\n    for (long i = max_idx\
    \ + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            result.push_back(arr[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    long\
    \ max_val = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long\
    \ cnt = 0;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n            cnt++;\n\
    \        }\n    }\n    ans.push_back(cnt);\n    return ans;", "    // code here\n\
    \    std::vector<long> max;\n    max.reserve(k);\n    long max_val = arr[0];\n\
    \    for(long i = 1; i < k; i++) {\n        if(arr[i] > max_val) {\n         \
    \   max_val = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++) {\n \
    \       if(arr[i] > max_val) {\n            max.push_back(arr[i]);\n        }\n\
    \    }\n    return max;", "    // Your code here\n    std::vector<long> max;\n\
    \    max.reserve(k);\n    long max_val = arr[0];\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \     }\n    }\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ == max_val) {\n            max.push_back(arr[i]);\n        }\n    }\n    return\
    \ max;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    long cur_idx = max_idx;\n    for (long i = max_idx\
    \ + 1; i < arr.size(); i++) {\n        if (arr[i] > arr[cur_idx]) {\n        \
    \    ans.push_back(arr[i]);\n            cur_idx = i;\n        }\n    }\n    ans.push_back(arr[cur_idx]);\n\
    \    return ans;", "    long n = arr.size();\n    std::vector<long> ans;\n   \
    \ long max_val = arr[0];\n    long max_idx = 1;\n    long idx = 0;\n    \n   \
    \ // Find max element and it's index\n    for (long i = 1; i < n; i++) {\n   \
    \     if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    \n    // If k is greater than max element then return\
    \ max element and it's index\n    if (k > max_val) {\n        ans.push_back(max_val);\n\
    \        ans.push_back(max_idx);\n        return ans;\n    }\n    \n    // If\
    \ k is less than max element then find max element and it's index\n    if (k <\
    \ max_val) {\n        ans.push_back(max_val);\n        ans.push_back(max_idx);\n\
    \        return ans;\n    }\n    \n    // If k is equal to max element then find\
    \ max element and it's index\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    \n    // If k is greater than max element then return max element\
    \ and it's index\n    if (k > max_val) {\n        ans.push_back(max_val);\n  \
    \      ans.push_back(max_idx);\n        return ans;\n    }\n    \n    // If k\
    \ is less than max element then find max element and it's index\n    if (k < max_val)\
    \ {\n        ans.push_back(max_val);\n        ans.push_back(max_idx);\n      \
    \  return ans;\n    }\n    \n    // If k is equal to max element then find max\
    \ element and it's index\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    \n    // If k is greater than max element then return max element\
    \ and it's index\n    if (k > max_val) {\n        ans.push_back(max_val);\n  \
    \      ans.push_back(max_idx);\n        return ans;\n    }\n    \n    // If k\
    \ is less than max element then find max element and it's index\n    if (k < max_val)\
    \ {\n        ans.push_back(max_val);\n        ans.push_back(max_idx);\n      \
    \  return ans;\n    }\n    \n    // If k is equal to max element then find max\
    \ element and it's index\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    \n    // If k is greater than max element then return max element\
    \ and it's index\n    if (k > max_val) {\n        ans.push_back(max_val);\n  \
    \      ans.push_back(max_idx);\n        return ans;\n    }\n    \n", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", " \
    \   std::vector<long> max_arr(k);\n    long max_num = arr[0];\n    for(long i\
    \ = 1; i < k; i++) {\n        if(arr[i] > max_num) {\n            max_num = arr[i];\n\
    \        }\n    }\n    for(long i = 0; i < k; i++) {\n        if(arr[i] > max_num)\
    \ {\n            max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;",
  "    // Your code here\n    std::vector<long> max;\n    long max_val = arr[0];\n\
    \    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n\
    \            max_val = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++)\
    \ {\n        max.push_back(max_val);\n    }\n    return max;", "    // Your code\
    \ here\n    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for(int i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    while(max_idx != -1) {\n        ans.push_back(arr[max_idx]);\n\
    \        max_idx = max_idx > 0 ? max_idx - 1 : 0;\n    }\n    ans.push_back(arr[0]);\n\
    \    return ans;", "    std::vector<long> max_arr(k);\n    long max_val = arr[0];\n\
    \    for (long i = 1; i < k; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_val = arr[i];\n        }\n    }\n    for (long i = 0; i < k; i++) {\n\
    \        max_arr[i] = max_val;\n    }\n    return max_arr;", "    // Your code\
    \ here\n    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    ans.push_back(arr[max_idx]);\n    return ans;",
  "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    long curr_idx = max_idx;\n    while (curr_idx\
    \ > 0 && curr_idx - k >= 0) {\n        ans.push_back(arr[curr_idx - k]);\n   \
    \     curr_idx = curr_idx - k;\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (size_t i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    ans.push_back(arr[max_idx]);\n    for (size_t i = max_idx + 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // code here\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for (long i =\
    \ 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    long idx = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > arr[idx]) {\n            ans.push_back(arr[i]);\n  \
    \          idx = i;\n        }\n    }\n    ans.push_back(arr[idx]);\n    return\
    \ ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (size_t i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for (size_t i = 0; i < arr.size() - k + 1; i++)\
    \ {\n        long curr = arr[i];\n        for (size_t j = i + 1; j < arr.size()\
    \ && j < i + k; j++) {\n            if (arr[j] > curr) {\n                curr\
    \ = arr[j];\n            }\n        }\n        ans.push_back(curr);\n    }\n \
    \   return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n  \
    \  long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    while(max_idx != -1) {\n     \
    \   ans.push_back(arr[max_idx]);\n        max_idx = max_idx > 0 ? max_idx - 1\
    \ : 0;\n    }\n    ans.push_back(arr[0]);\n    return ans;", "    // code here\n\
    \    std::vector<long> arr2(arr.size());\n    long max = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k1 = 0;\n    long k2 = 0;\n    long k3 = 0;\n    long\
    \ k4 = 0;\n    long k5 = 0;\n    long k6 = 0;\n    long k7 = 0;\n    long k8 =\
    \ 0;\n    long k9 = 0;\n    long k10 = 0;\n    long k11 = 0;\n    long k12 = 0;\n\
    \    long k13 = 0;\n    long k14 = 0;\n    long k15 = 0;\n    long k16 = 0;\n\
    \    long k17 = 0;\n    long k18 = 0;\n    long k19 = 0;\n    long k20 = 0;\n\
    \    long k21 = 0;\n    long k22 = 0;\n    long k23 = 0;\n    long k24 = 0;\n\
    \    long k25 = 0;\n    long k26 = 0;\n    long k27 = 0;\n    long k28 = 0;\n\
    \    long k29 = 0;\n    long k30 = 0;\n    long k31 = 0;\n    long k32 = 0;\n\
    \    long k33 = 0;\n    long k34 = 0;\n    long k35 = 0;\n    long k36 = 0;\n\
    \    long k37 = 0;\n    long k38 = 0;\n    long k39 = 0;\n    long k40 = 0;\n\
    \    long k41 = 0;\n    long k42 = 0;\n    long k43 = 0;\n    long k44 = 0;\n\
    \    long k45 = 0;\n    long k46 = 0;\n    long k47 = 0;\n    long k48 = 0;\n\
    \    long k49 = 0;\n    long k50 = 0;\n    long k51 = 0;\n    long k52 = 0;\n\
    \    long k53 = 0;\n    long k54 = 0;\n    long k55 = 0;\n    long k56 = 0;\n\
    \    long k57 = 0;\n    long k58 = 0;\n    long k59 = 0;\n    long k60 = 0;\n\
    \    long k61 = 0;\n    long k62 = 0;\n    long k63 = 0;\n    long k64 = 0;\n\
    \    long k65 = 0;\n    long k66 = 0;\n    long k67 = 0;\n    long k68 = 0;\n\
    \    long k69 = 0;\n    long k70 = 0;\n    long k71 = 0;\n    long k72 = 0;\n\
    \    long k73 = 0;\n    long k74 = 0;\n    long k75 = 0;\n    long k76 = 0;\n\
    \    long k77 = 0;\n    long k78 = 0;\n    long k79 = 0;\n    long k80 = 0;\n\
    \    long k81 = 0;\n    long k82", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long curr_idx\
    \ = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > arr[curr_idx]) {\n            ans.push_back(arr[i]);\n           \
    \ curr_idx = i;\n        }\n    }\n    ans.push_back(arr[curr_idx]);\n    return\
    \ ans;", "    // Your code here\n    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long cur_idx\
    \ = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > arr[cur_idx]) {\n            ans.push_back(arr[i]);\n            cur_idx\
    \ = i;\n        }\n    }\n    ans.push_back(arr[cur_idx]);\n    return ans;",
  "    std::vector<long> ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long mid = 0;\n    long cnt = 0;\n    while (i < arr.size()) {\n        mid\
    \ = (i + j) / 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid;\n        } else {\n            i = mid + 1;\n        }\n\
    \    }\n    mid = (i + j) / 2;\n    ans.push_back(max);\n    while (j < arr.size())\
    \ {\n        mid = (i + j) / 2;\n        if (arr[mid] > max) {\n            max\
    \ = arr[mid];\n            j = mid;\n        } else {\n            i = mid + 1;\n\
    \        }\n    }\n    ans.push_back(max);\n    while (j < arr.size()) {\n   \
    \     mid = (i + j) / 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n\
    \            j = mid;\n        } else {\n            i = mid + 1;\n        }\n\
    \    }\n    ans.push_back(max);\n    while (j < arr.size()) {\n        mid = (i\
    \ + j) / 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n    \
    \        j = mid;\n        } else {\n            i = mid + 1;\n        }\n   \
    \ }\n    ans.push_back(max);\n    while (j < arr.size()) {\n        mid = (i +\
    \ j) / 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n      \
    \      j = mid;\n        } else {\n            i = mid + 1;\n        }\n    }\n\
    \    ans.push_back(max);\n    while (j < arr.size()) {\n        mid = (i + j)\
    \ / 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n         \
    \   j = mid;\n        } else {\n            i = mid + 1;\n        }\n    }\n \
    \   ans.push_back(max);\n    while (j < arr.size()) {\n        mid = (i + j) /\
    \ 2;\n        if (arr[mid] > max) {\n            max = arr[mid];\n           \
    \ j = mid;\n        } else {\n            i = mid + 1;\n        }\n    }\n   \
    \ ans.push_back(max);\n    while (j < arr.size()) {\n        mid = (i + j) / 2;\n\
    \        if (arr[mid] > max) {\n            max = arr[mid];\n            j = mid;\n\
    \        } else {\n            i = mid + 1;\n        }\n    }\n    ans.push_back(max);\n\
    \    while (j < arr.size()) {\n        mid = (i + j) / 2;\n        if (arr[mid]\
    \ > max) {\n            max = arr[mid];\n            j = mid;\n        } else\
    \ {\n            i = mid + 1;\n        }\n    }\n    ans.push_back(max);\n   \
    \ while (j < arr.size()) {\n        mid = (i + j) / 2;\n", "    // code here\n\
    \    std::vector<long> max_arr(k);\n    long max_num = arr[0];\n    for(long i\
    \ = 1; i < k; i++) {\n        if(arr[i] > max_num) {\n            max_num = arr[i];\n\
    \        }\n    }\n    for(long i = 0; i < k; i++) {\n        if(arr[i] > max_num)\
    \ {\n            max_arr[i] = arr[i];\n        }\n    }\n    return max_arr;",
  "    std::vector<long> res;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   res.push_back(max_val);\n    res.push_back(arr[max_idx]);\n    for (long i\
    \ = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n   \
    \         res.push_back(arr[i]);\n        }\n    }\n    return res;", "    //\
    \ Your code here\n    std::vector<long> ans;\n    long max = 0;\n    long min\
    \ = 0;\n    for(long i = 0; i < arr.size(); i++){\n        if(arr[i] > max){\n\
    \            max = arr[i];\n        }\n        if(arr[i] < min){\n           \
    \ min = arr[i];\n        }\n    }\n    long mid = max;\n    long count = 0;\n\
    \    for(long i = 0; i < arr.size(); i++){\n        if(arr[i] == max){\n     \
    \       count++;\n        }\n    }\n    while(count < k){\n        ans.push_back(mid);\n\
    \        mid = mid*2;\n        if(mid > max){\n            mid = max;\n      \
    \  }\n        if(mid < min){\n            mid = min;\n        }\n        count\
    \ = 0;\n        for(long i = 0; i < arr.size(); i++){\n            if(arr[i] ==\
    \ mid){\n                count++;\n            }\n        }\n    }\n    return\
    \ ans;", "    long n = arr.size();\n    std::vector<long> max_arr(n);\n    long\
    \ max_index = 0;\n    long max_val = arr[0];\n    for(long i = 1; i < n; i++)\
    \ {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n         \
    \   max_index = i;\n        }\n    }\n    for(long i = 0; i < k; i++) {\n    \
    \    max_arr[max_index] = arr[i];\n        max_index++;\n    }\n    return max_arr;",
  "    std::vector<long> ans;\n    long max = 0;\n    long min = 0;\n    long mid\
    \ = 0;\n    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n   \
    \     if (arr[i] > max) {\n            max = arr[i];\n            mid = i;\n \
    \       }\n        if (arr[i] < min) {\n            min = arr[i];\n          \
    \  mid = i;\n        }\n    }\n    for (long i = 0; i < arr.size(); i++) {\n \
    \       if (arr[i] == max) {\n            ans.push_back(arr[mid]);\n         \
    \   count++;\n        }\n        if (arr[i] == min) {\n            ans.push_back(arr[mid]);\n\
    \            count++;\n        }\n    }\n    if (count > k) {\n        ans.push_back(arr[mid]);\n\
    \    }\n    return ans;", "    std::vector<long> ans;\n    long max = 0;\n   \
    \ long i = 0;\n    long j = 0;\n    long n = arr.size();\n    long m = n;\n  \
    \  while(i < n && j < k) {\n        if(arr[i] > arr[j]) {\n            max = arr[i];\n\
    \            i++;\n        } else {\n            max = arr[j];\n            j++;\n\
    \        }\n    }\n    while(i < n) {\n        max = arr[i];\n        i++;\n \
    \       ans.push_back(max);\n    }\n    while(j < k) {\n        max = arr[j];\n\
    \        j++;\n        ans.push_back(max);\n    }\n    return ans;", "    long\
    \ n = arr.size();\n    std::vector<long> max(n);\n    long max_val = arr[0];\n\
    \    long max_idx = 1;\n    for(long i = 1; i < n; i++) {\n        if(arr[i] >\
    \ max_val) {\n            max_val = arr[i];\n            max_idx = i;\n      \
    \  }\n    }\n    for(long i = 0; i < k; i++) {\n        max[max_idx] = arr[i];\n\
    \        max_idx++;\n    }\n    return max;", "    std::vector<long> ans;\n  \
    \  long max = 0;\n    long cur = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max) {\n            max = arr[i];\n            cur =\
    \ i;\n        }\n    }\n    ans.push_back(max);\n    for (long i = cur + 1; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        ans.push_back(max);\n    }\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> ans;\n    long max = 0;\n    long min = 0;\n\
    \    long mid = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max) {\n            max = arr[i];\n            mid = i;\n        }\n     \
    \   if (arr[i] < min) {\n            min = arr[i];\n            mid = i;\n   \
    \     }\n    }\n    long mid1 = mid - k;\n    long mid2 = mid + k;\n    long mid3\
    \ = mid - 1;\n    long mid4 = mid + 1;\n    long mid5 = mid - 2;\n    long mid6\
    \ = mid + 2;\n    long mid7 = mid - 3;\n    long mid8 = mid + 3;\n    long mid9\
    \ = mid - 4;\n    long mid10 = mid + 4;\n    long mid11 = mid - 5;\n    long mid12\
    \ = mid + 5;\n    long mid13 = mid - 6;\n    long mid14 = mid + 6;\n    long mid15\
    \ = mid - 7;\n    long mid16 = mid + 7;\n    long mid17 = mid - 8;\n    long mid18\
    \ = mid + 8;\n    long mid19 = mid - 9;\n    long mid20 = mid + 9;\n    long mid21\
    \ = mid - 10;\n    long mid22 = mid + 10;\n    long mid23 = mid - 11;\n    long\
    \ mid24 = mid + 11;\n    long mid25 = mid - 12;\n    long mid26 = mid + 12;\n\
    \    long mid27 = mid - 13;\n    long mid28 = mid + 13;\n    long mid29 = mid\
    \ - 14;\n    long mid30 = mid + 14;\n    long mid31 = mid - 15;\n    long mid32\
    \ = mid + 15;\n    long mid33 = mid - 16;\n    long mid34 = mid + 16;\n    long\
    \ mid35 = mid - 17;\n    long mid36 = mid + 17;\n    long mid37 = mid - 18;\n\
    \    long mid38 = mid + 18;\n    long mid39 = mid - 19;\n    long mid40 = mid\
    \ + 19;\n    long mid41 = mid - 20;\n    long mid42 = mid + 20;\n    long mid43\
    \ = mid - 21;\n    long mid44 = mid + 21;\n    long mid45 = mid - 22;\n    long\
    \ mid46 = mid + 22;\n    long mid47 = mid - 23;\n    long mid48 = mid + 23;\n\
    \    long mid49 = mid - 24;\n    long ", "    std::vector<long> res;\n    long\
    \ max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max) {\n            max = arr[i];\n        }\n    }\n    long count = 0;\n \
    \   for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] == max) {\n  \
    \          count++;\n        }\n    }\n    if (count == k) {\n        for (long\
    \ i = 0; i < arr.size(); i++) {\n            if (arr[i] == max) {\n          \
    \      res.push_back(max);\n            }\n        }\n    }\n    return res;",
  "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    long cur_idx = max_idx;\n    for (long i = max_idx\
    \ + 1; i < arr.size(); i++) {\n        if (arr[i] > arr[cur_idx]) {\n        \
    \    ans.push_back(arr[i]);\n            cur_idx = i;\n        }\n    }\n    ans.push_back(arr[cur_idx]);\n\
    \    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long index\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n            index = i;\n        }\n    }\n   \
    \ ans.push_back(max);\n    long left = 0;\n    long right = arr.size() - 1;\n\
    \    while (left < right) {\n        long mid = (left + right) / 2;\n        if\
    \ (arr[mid] > max) {\n            ans.push_back(arr[mid]);\n            right\
    \ = mid;\n        } else {\n            left = mid;\n        }\n    }\n    if\
    \ (k > ans.size()) {\n        ans.resize(ans.size() + k);\n    }\n    return ans;",
  "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n\
    \    for (size_t i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for (size_t i = max_idx; i < arr.size(); i++)\
    \ {\n        ans.push_back(arr[i]);\n    }\n    std::sort(ans.begin(), ans.end());\n\
    \    return ans;", "    std::vector<long> ans;\n    long max = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long mid = 0;\n    long size = arr.size();\n    while(i\
    \ < size) {\n        mid = i + (size - i) / 2;\n        if(arr[mid] > max) {\n\
    \            max = arr[mid];\n            j = mid;\n        }\n        else if(arr[mid]\
    \ == max) {\n            if(j == mid) {\n                ans.push_back(max);\n\
    \                j++;\n            }\n            else {\n                ans.push_back(max);\n\
    \                j = mid;\n            }\n        }\n        else {\n        \
    \    i = mid + 1;\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ ans;\n    long max = 0;\n    long i = 0;\n    long j = 0;\n    long n = arr.size();\n\
    \    long mid = n / 2;\n    long mid2 = n / 2;\n    while (i < n) {\n        if\
    \ (arr[i] > max) {\n            max = arr[i];\n        }\n        i++;\n    }\n\
    \    while (j < n) {\n        if (arr[j] > max) {\n            max = arr[j];\n\
    \        }\n        j++;\n    }\n    while (i < n) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n        i++;\n    }\n    while (j <\
    \ n) {\n        if (arr[j] > max) {\n            max = arr[j];\n        }\n  \
    \      j++;\n    }\n    while (i < n) {\n        if (arr[i] > max) {\n       \
    \     max = arr[i];\n        }\n        i++;\n    }\n    while (j < n) {\n   \
    \     if (arr[j] > max) {\n            max = arr[j];\n        }\n        j++;\n\
    \    }\n    while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        i++;\n    }\n    while (j < n) {\n        if (arr[j] > max)\
    \ {\n            max = arr[j];\n        }\n        j++;\n    }\n    while (i <\
    \ n) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n  \
    \      i++;\n    }\n    while (j < n) {\n        if (arr[j] > max) {\n       \
    \     max = arr[j];\n        }\n        j++;\n    }\n    while (i < n) {\n   \
    \     if (arr[i] > max) {\n            max = arr[i];\n        }\n        i++;\n\
    \    }\n    while (j < n) {\n        if (arr[j] > max) {\n            max = arr[j];\n\
    \        }\n        j++;\n    }\n    while (i < n) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n        i++;\n    }\n    while (j <\
    \ n) {\n        if (arr[j] > max) {\n            max = arr[j];\n        }\n  \
    \      j++;\n    }\n    while (i < n) {\n        if (arr[i] > max) {\n       \
    \     max = arr[i];\n        }\n        i++;\n    }\n    while (j < n) {\n   \
    \     if (arr[j] > max) {\n            max = arr[j];\n        }\n        j++;\n\
    \    }\n    while (i < n) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        i++;\n    }\n    while (j < n) {\n        if (arr[j] > max)\
    \ {\n            max = arr[j];\n        }\n        j++;\n    }\n    while (i <\
    \ n) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n  \
    \      i++;\n    }\n    while (j < n) {\n        if (arr[j] > max) {\n       \
    \     ", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    long idx = max_idx;\n    for (long i = max_idx\
    \ + 1; i < arr.size(); i++) {\n        if (arr[i] > arr[idx]) {\n            ans.push_back(arr[i]);\n\
    \            idx = i;\n        }\n    }\n    ans.push_back(arr[idx]);\n    return\
    \ ans;", "    std::vector<long> res;\n    long max = 0;\n    long index = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n  \
    \          max = arr[i];\n            index = i;\n        }\n    }\n    res.push_back(max);\n\
    \    for (long i = index; i < arr.size(); i++) {\n        if (arr[i] > max) {\n\
    \            max = arr[i];\n        }\n    }\n    res.push_back(max);\n    return\
    \ res;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    for (long i = max_idx + 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n   \
    \     }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    long max_idx\
    \ = max_idx;\n    for (long i = max_idx + 1; i < arr.size(); i++) {\n        if\
    \ (arr[i] > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n\
    \        }\n    }\n    ans.push_back(max_val);\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> max;\n    long maxNum = arr[0];\n    for(long\
    \ i = 1; i < arr.size(); i++) {\n        if(maxNum < arr[i]) {\n            maxNum\
    \ = arr[i];\n        }\n    }\n    max.push_back(maxNum);\n    for(long i = 1;\
    \ i < arr.size(); i++) {\n        if(maxNum < arr[i]) {\n            max.push_back(arr[i]);\n\
    \        }\n    }\n    return max;", "    std::vector<long> ans;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n        \
    \    max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n    for (long\
    \ i = max_idx + 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n \
    \           ans.push_back(arr[i]);\n        }\n    }\n    return ans;", "    long\
    \ n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n  \
    \  long max_idx = -1;\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for (long i = max_idx + 1; i <\
    \ n; i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    std::vector<long>\
    \ max;\n    long maxNum = arr[0];\n    for(long i = 1; i < arr.size(); i++){\n\
    \        if(arr[i] > maxNum){\n            maxNum = arr[i];\n        }\n    }\n\
    \    for(long i = 0; i < k; i++){\n        max.push_back(maxNum);\n    }\n   \
    \ return max;", "    // Your code here\n    std::vector<long> ans;\n    long max\
    \ = 0;\n    long min = 0;\n    long count = 0;\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n            ans.clear();\n\
    \            ans.push_back(max);\n            count++;\n        }\n        if(arr[i]\
    \ < min) {\n            min = arr[i];\n            ans.clear();\n            ans.push_back(min);\n\
    \            count++;\n        }\n        if(arr[i] == max) {\n            ans.push_back(max);\n\
    \            count++;\n        }\n        if(arr[i] == min) {\n            ans.push_back(min);\n\
    \            count++;\n        }\n    }\n    if(count == k) {\n        ans.push_back(max);\n\
    \        ans.push_back(min);\n    }\n    return ans;", "    // Your code here\n\
    \    std::vector<long> max;\n    long maxNum = arr[0];\n    for(long i = 1; i\
    \ < arr.size(); i++){\n        if(arr[i] > maxNum){\n            maxNum = arr[i];\n\
    \        }\n    }\n    max.push_back(maxNum);\n    for(long i = 1; i < arr.size();\
    \ i++){\n        if(arr[i] > maxNum){\n            max.push_back(arr[i]);\n  \
    \      }\n    }\n    return max;", "    long long max = 0;\n    std::vector<long>\
    \ ans;\n    for(long i = 0; i < k; i++) {\n        max = std::max(max, arr[i]);\n\
    \        ans.push_back(max);\n    }\n    return ans;", "    // Your code here\n\
    \    std::vector<long> ans;\n    long max = 0;\n    long min = 0;\n    long sum\
    \ = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n \
    \       if(sum > max) {\n            max = sum;\n        }\n        if(sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = sum;\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n        if(sum\
    \ > max) {\n            max = sum;\n        }\n        if(sum < min) {\n     \
    \       min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = sum;\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n        if(sum\
    \ > max) {\n            max = sum;\n        }\n        if(sum < min) {\n     \
    \       min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = sum;\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n        if(sum\
    \ > max) {\n            max = sum;\n        }\n        if(sum < min) {\n     \
    \       min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = sum;\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n        if(sum\
    \ > max) {\n            max = sum;\n        }\n        if(sum < min) {\n     \
    \       min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = sum;\n        }\n    }\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n        if(sum\
    \ > max) {\n            max = sum;\n        }\n        if(sum < min) {\n     \
    \       min = sum;\n        }\n    }\n    for(long i = 0; i < arr.size(); i++)\
    \ {\n        sum += arr[i];\n        if(sum > max) {\n            max = sum;\n\
    \        }\n        if(sum < min) {\n            min = ", "    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long max_idx = -1;\n    for(long i = 1;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_idx = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for(long i = max_idx + 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", " \
    \   long n = arr.size();\n    std::vector<long> ans;\n    long max_val = arr[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < n; i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for (long i = max_idx + 1; i <\
    \ n; i++) {\n        if (arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> ans;\n    long max\
    \ = 0;\n    long curr = 0;\n    for (long i = 0; i < arr.size(); i++) {\n    \
    \    if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n         \
    \   ans.push_back(max);\n            max = arr[i];\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx\
    \ = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_idx = i;\n        }\n    }\n\
    \    ans.push_back(max_val);\n    while(max_idx != -1) {\n        ans.push_back(arr[max_idx]);\n\
    \        max_idx = max_idx > 0 ? max_idx - 1 : 0;\n    }\n    ans.push_back(arr[0]);\n\
    \    return ans;", "    std::vector<long> ans;\n    long max_val = arr[0];\n \
    \   long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++) {\n        if(arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_idx = i;\n    \
    \    }\n    }\n    ans.push_back(max_val);\n    for(long i = max_idx + 1; i <\
    \ arr.size(); i++) {\n        if(arr[i] > max_val) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

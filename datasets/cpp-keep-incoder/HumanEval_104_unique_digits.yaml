name: HumanEval_104_unique_digits
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
  \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
  // Note: Returned list should be sorted in increasing order.\n// For example:\n\
  // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
  \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x) {\n"
tests: "}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
  \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
  \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
  \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
  \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
completions: []
stop_tokens:
- "\n}"

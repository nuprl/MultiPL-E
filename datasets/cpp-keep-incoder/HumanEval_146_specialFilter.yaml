name: HumanEval_146_specialFilter
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an array of numbers as input and returns \n// the number of elements in the array\
  \ that are greater than 10 and both \n// first and last digits of a number are odd\
  \ (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15, -73, 14, -15]) => 1 \n\
  // specialFilter([33, -2, -3, 45, 21, 109]) => 2\nlong specialFilter(std::vector<long>\
  \ nums) {\n"
tests: "}\nint main() {\n    auto candidate = specialFilter;\n    assert(candidate((std::vector<long>({5,\
  \ -2, 1, -5}))) == (0));\n    assert(candidate((std::vector<long>({15, -73, 14,\
  \ -15}))) == (1));\n    assert(candidate((std::vector<long>({33, -2, -3, 45, 21,\
  \ 109}))) == (2));\n    assert(candidate((std::vector<long>({43, -12, 93, 125, 121,\
  \ 109}))) == (4));\n    assert(candidate((std::vector<long>({71, -2, -33, 75, 21,\
  \ 19}))) == (3));\n    assert(candidate((std::vector<long>({1}))) == (0));\n   \
  \ assert(candidate((std::vector<long>())) == (0));\n}\n"
completions: []
stop_tokens:
- "\n}"

name: HumanEval_13_greatest_common_divisor
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        long long mod\
    \ = a % b;\n        a = b;\n        b = mod;\n        gcd = gcd ? gcd : b;\n \
    \   }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmprk7y67h2: /tmp/tmprk7y67h2.cpp:21: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g == 0 ? a : g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g * b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpeb6xizb9: /tmp/tmpeb6xizb9.cpp:16: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        if (b & 1) gcd\
    \ = (gcd * a) % b;\n        a /= b;\n        b /= 2;\n    }\n    return gcd;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmptakvw8wv: /tmp/tmptakvw8wv.cpp:19: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r != 0)\n        return greatest_common_divisor(b, r);\n    return b;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = (a % b) ? gcd:\
    \ b;\n        a = b;\n        b = gcd;\n    }\n    return gcd;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpu4mw4oy9: /tmp/tmpu4mw4oy9.cpp:19: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (b > 0) {\n \
    \       if (a % b == 0)\n            greatest_common_divisor = b;\n        b =\
    \ b / 2;\n    }\n    return greatest_common_divisor;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpx973k0bu: /tmp/tmpx973k0bu.cpp:20: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b);\n     \
    \   a = b;\n        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b);\n     \
    \   a = b;\n        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = (a % b) ? a\
    \ : b;\n        a = b;\n        b = gcd;\n    }\n    return gcd;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (b > 0) {\n \
    \       long temp = a;\n        a = b;\n        b = temp % b;\n        greatest_common_divisor\
    \ = temp;\n    }\n    return greatest_common_divisor;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmp_mt_5a3i: /tmp/tmp_mt_5a3i.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = b%gcd;\n   \
    \     b/gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest = 0;\n    while (a != 0) {\n        long remainder\
    \ = a % b;\n        a = b;\n        b = remainder;\n        greatest++;\n    }\n\
    \    return greatest;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        long long mod\
    \ = a % b;\n        a = b;\n        b = mod;\n        gcd = (gcd > mod) ? gcd\
    \ : mod;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmplseqvma1: /tmp/tmplseqvma1.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        long long remainder\
    \ = a % b;\n        a = b;\n        b = remainder;\n        gcd = gcd * b;\n \
    \   }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmphg8y8rck: /tmp/tmphg8y8rck.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long r = a % b;\n    if (r == 0)\
    \ return b;\n    return greatest_common_divisor(b, r);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b != 0) {\n        long long\
    \ temp = b;\n        b = a % b;\n        a = temp;\n        gcd = b % gcd;\n \
    \   }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    long gcd = greatest_common_divisor(b, a % b);\n    if (gcd == 0)\n \
    \       return b;\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b), a = b;\n\
    \        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    if (a > b)\n        std::swap(a, b);\n    long g = a;\n    while (a\
    \ % b != 0) {\n        g = b;\n        b -= a % b;\n        a /= b;\n    }\n \
    \   return g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpx__o019p: /tmp/tmpx__o019p.cpp:25: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (a != 0) {\n\
    \        if (a % b == 0)\n            greatest_common_divisor = b;\n        b\
    \ = b + 1;\n        a = a / b;\n    }\n    return greatest_common_divisor;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmp4982bjn1: /tmp/tmp4982bjn1.cpp:21: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (a != 0) {\n        if (a &\
    \ 1) {\n            gcd = (gcd > b) ? gcd : b;\n        }\n        a >>= 1;\n\
    \        b >>= 1;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmp2j12q6q3: /tmp/tmp2j12q6q3.cpp:21: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long r = a % b;\n    return greatest_common_divisor(b,\
    \ r);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = b%gcd;\n   \
    \     b/gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        long long t =\
    \ a % b;\n        a = b;\n        b = t;\n        gcd = gcd * b;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmphueufopx: /tmp/tmphueufopx.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long r = a % b;\n    if (r == 0)\
    \ return b;\n    return greatest_common_divisor(b, r);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g * b % a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmph8s37bnl: /tmp/tmph8s37bnl.cpp:15: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b != 0) {\n        gcd = b;\n      \
    \  b = a % b;\n        a = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b);\n     \
    \   a = b;\n        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        if (a % b ==\
    \ 0)\n            gcd = b;\n        b /= 2;\n    }\n    return gcd;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmphry0yna3: /tmp/tmphry0yna3.cpp:20: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        long long mod\
    \ = a % b;\n        a = b;\n        b = mod;\n        gcd = (gcd > mod) ? gcd\
    \ : mod;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpifd7l1ia: /tmp/tmpifd7l1ia.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b > 0) {\n        long long\
    \ mod = a % b;\n        a = b;\n        b = mod;\n        gcd = gcd % b;\n   \
    \ }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    if (a > b)\n        std::swap(a, b);\n    long r = a % b;\n    if (r\
    \ != 0)\n        return greatest_common_divisor(b, r);\n    return b;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g == 0 ? a : g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g * b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpo31cszsz: /tmp/tmpo31cszsz.cpp:16: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        if (b & 1) gcd\
    \ = (gcd * a) % b;\n        b /= 2;\n        a = (a / b) % b;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    long r = a % b;\n    if (r != 0)\n        return greatest_common_divisor(b,\
    \ r);\n    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long t = a % b;\n\
    \        a = b;\n        b = t;\n        gcd++;\n    }\n    return gcd;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpr0wb1284: /tmp/tmpr0wb1284.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = b%gcd;\n   \
    \     b/gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b);\n     \
    \   a = b;\n        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b) {\n        gcd = (a % b);\n     \
    \   a = b;\n        b = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (a != 0) {\n\
    \        if (b != 0) {\n            if (a > b) {\n                greatest_common_divisor\
    \ = a;\n                a = a % b;\n            } else {\n                greatest_common_divisor\
    \ = b;\n                b = b % a;\n            }\n        } else {\n        \
    \    break;\n        }\n    }\n    return greatest_common_divisor;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmplvaa4pvq: /tmp/tmplvaa4pvq.cpp:27: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long greatest_common_divisor\
    \ = greatest_common_divisor(b, a % b);\n    return greatest_common_divisor ==\
    \ 0 ? a : greatest_common_divisor;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz4iw03xj.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpz4iw03xj.cpp:11:68: error: \u2018greatest_common_divisor\u2019\
    \ cannot be used as a function\n   11 |     long greatest_common_divisor = greatest_common_divisor(b,\
    \ a % b);\n      |                                                           \
    \         ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b) {\n        if (b & 1) gcd\
    \ = (gcd * a) % b;\n        b >>= 1;\n        a = (a * a) % b;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (a != 0) {\n\
    \        if (a % b == 0)\n            greatest_common_divisor = b;\n        b\
    \ = b + 1;\n        a = a / b;\n    }\n    return greatest_common_divisor;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmp_lzhwn08: /tmp/tmp_lzhwn08.cpp:21: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (b > 0) {\n        long long\
    \ mod = a % b;\n        a = b;\n        b = mod;\n        gcd = (gcd > mod) ?\
    \ gcd : mod;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpmmjwc7dy: /tmp/tmpmmjwc7dy.cpp:20: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b != 0) {\n        gcd = b;\n      \
    \  b = a % b;\n        a = gcd;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        long r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g == b ? a : g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpgev7fbj3: /tmp/tmpgev7fbj3.cpp:16: int main(): Assertion `candidate((3),\
    \ (7)) == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (a != 0) {\n\
    \        if (a % b == 0)\n            greatest_common_divisor = b;\n        b\
    \ = b + 1;\n        a = a / b;\n    }\n    return greatest_common_divisor;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmpecng0gyk: /tmp/tmpecng0gyk.cpp:21: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b) {\n        gcd = (a % b) ? b\
    \ : gcd;\n        a = b;\n        b = gcd;\n    }\n    return gcd;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r != 0)\n        return greatest_common_divisor(b, r);\n    return b;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = a % b;\n    if\
    \ (r == 0)\n        return b;\n    return greatest_common_divisor(b, r);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long gcd = 1;\n    while (a != 0) {\n        if (a %\
    \ b == 0)\n            gcd = b;\n        b = a % b;\n        a = gcd % b;\n  \
    \  }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  stdout: ''
  stderr: "tmp1wzkknwd: /tmp/tmp1wzkknwd.cpp:21: int main(): Assertion `candidate((10),\
    \ (15)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n\
    // >>> greatest_common_divisor(25, 15)\n// 5\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

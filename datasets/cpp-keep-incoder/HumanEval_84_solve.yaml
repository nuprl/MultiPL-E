name: HumanEval_84_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ N, return the total sum of its digits in binary.\n// Example\n// For N = 1000,\
  \ the sum of digits will be 1 the output should be \"1\".\n// For N = 150, the sum\
  \ of digits will be 6 the output should be \"110\".\n// For N = 147, the sum of\
  \ digits will be 12 the output should be \"1100\".\n// Variables:\n// @N integer\n\
  // Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string of binary number\n\
  std::string solve(long N) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
  \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
  \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
  \ == (\"10010\"));\n}\n"
completions: ["    std::string ans = \"\";\n    long sum = 0;\n    long cur = N;\n\
    \    while (cur != 0) {\n        sum += cur % 10;\n        cur /= 10;\n    }\n\
    \    while (sum != 0) {\n        ans += '1' + sum % 2;\n        sum /= 2;\n  \
    \  }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans +=\
    \ std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    if (sum > 0) {\n        ans += std::to_string(sum);\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  while (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans\
    \ = std::to_string(sum);\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans +=\
    \ std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n\
    \    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp > 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    long sum = 0;\n    std::string ans;\n    long remain =\
    \ N;\n    while (remain > 0) {\n        sum += remain % 2;\n        remain /=\
    \ 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", "    long sum =\
    \ 0;\n    long temp = N;\n    std::string ans;\n    while (temp != 0) {\n    \
    \    sum += (temp % 10);\n        temp /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans +=\
    \ std::to_string(sum);\n        sum = 0;\n    }\n    if (sum > 0) {\n        ans\
    \ += std::to_string(sum);\n    }\n    return ans;", "    std::string ans = \"\
    0\";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n       \
    \ N /= 2;\n    }\n    ans = std::to_string(sum) + ans;\n    return ans;", "  \
    \  std::string ans = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum\
    \ += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n\
    \    while (temp != 0) {\n        sum += temp % 10;\n        temp = temp / 10;\n\
    \    }\n    while (sum > 0) {\n        ans += '1' + sum % 2;\n        sum /= 2;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  while (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum)\
    \ + ans;\n        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    long remainder = 0;\n    while (N !=0){\n        remainder\
    \ = N % 10;\n        sum += remainder;\n        N = N / 10;\n    }\n    long remainder2\
    \ = sum % 10;\n    ans = std::to_string(remainder2);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n\
    \        sum += curr % 10;\n        curr /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    long sum = 0;\n    long temp = 0;\n    long ans = 0;\n\
    \    long count = 0;\n    long mod = pow(10, N);\n    long temp = N;\n    while\
    \ (temp > 0) {\n        sum += (temp % mod);\n        temp /= mod;\n        count++;\n\
    \    }\n    ans = sum;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans =\
    \ ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n\
    \    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans =\
    \ ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n\
    \    ans = ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n    ans =\
    \ ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n\
    \    ans = ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans =\
    \ ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n\
    \    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans =\
    \ ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n\
    \    ans = ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n    ans =\
    \ ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n\
    \    ans = ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans =\
    \ ans * count;\n    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n\
    \    ans = ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans =\
    \ ans % mod;\n    ans = ans / mod;\n    ans = ans * count;\n    ans = ans % mod;\n\
    \    ans = ans / mod;\n", "    long sum = 0;\n    std::string ans;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += to_string(sum);\n        sum = 0;\n    }\n \
    \   ans += to_string(sum);\n    return ans;", "    std::string ans = \"\";\n \
    \   long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n    while\
    \ (N) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long digit = 0;\n    long\
    \ sumOfDigits = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        sumOfDigits\
    \ += N % 10;\n        N /= 10;\n    }\n    digit = sumOfDigits % 2;\n    sumOfDigits\
    \ /= 2;\n    while (sumOfDigits > 0) {\n        ans += (digit ? \"1\" : \"0\"\
    );\n        sumOfDigits -= 1;\n        digit ^= 1;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    ans += std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n    \
    \    sum += temp % 10;\n        temp /= 10;\n    }\n    temp = sum;\n    while\
    \ (temp != 0) {\n        ans += (temp % 2) + '0';\n        temp /= 2;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n    long\
    \ long mod = N;\n    while (mod > 0) {\n        sum += mod % 10;\n        mod\
    \ = mod / 10;\n    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    while (ans.size() > 1) {\n        ans.insert(ans.size() - 1, std::to_string(sum\
    \ % 2));\n        sum /= 2;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n      \
    \  N /= 10;\n    }\n    while (sum > 0) {\n        ans += (sum % 2 == 0 ? \"1\"\
    \ : \"0\");\n        sum /= 2;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    if (sum !=\
    \ 0) {\n        ans += std::to_string(sum);\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n\
    \        sum += temp % 10;\n        temp = temp / 10;\n    }\n    long remain\
    \ = N - sum;\n    while (remain > 0) {\n        ans += \"1\";\n        remain\
    \ = remain / 10;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    long temp = N;\n    while (temp != 0) {\n        sum += temp %\
    \ 10;\n        temp /= 10;\n    }\n    long rem = sum;\n    while (rem != 0) {\n\
    \        ans += \"1\";\n        rem /= 10;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long remainder = 0;\n    long digit = 0;\n\
    \    long sumOfDigits = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4\
    \ = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long\
    \ temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n\
    \    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15\
    \ = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n   \
    \ long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22\
    \ = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n   \
    \ long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29\
    \ = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n   \
    \ long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36\
    \ = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n   \
    \ long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43\
    \ = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n   \
    \ long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50\
    \ = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n   \
    \ long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57\
    \ = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n   \
    \ long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64\
    \ = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n   \
    \ long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71\
    \ = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n   \
    \ long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78\
    \ = 0;\n    long temp79 = 0;", "    std::string ans = \"\";\n    long sum = 0;\n\
    \    while (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n\
    \        sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long curr = N;\n    while\
    \ (curr != 0) {\n        sum += curr % 10;\n        curr /= 10;\n    }\n    long\
    \ cur = sum;\n    while (cur != 0) {\n        ans += (cur % 2 == 0 ? \"1\" : \"\
    0\");\n        cur /= 2;\n    }\n    return ans;", "    long sum = 0;\n    long\
    \ remainder = 0;\n    long sumOfDigits = 0;\n    long digit = 0;\n    std::string\
    \ binaryNumber;\n    std::string binaryNumberWithZeroes;\n    std::string binaryNumberWithOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroes;\n    std::string binaryNumberWithOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroes;\n    std::string\
    \ binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnes;\n    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnes;\n\
    \    std::string binaryNumberWithOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAndZeroesAndOnesAnd",
  "    long sum = 0;\n    std::string ans;\n    long n = N;\n    long remainder =\
    \ 0;\n    long temp = 0;\n    long count = 0;\n    long i = 0;\n    long j = 0;\n\
    \    while (n > 0) {\n        remainder = n % 10;\n        sum += remainder;\n\
    \        temp = sum;\n        sum = sum - remainder;\n        n = n / 10;\n  \
    \  }\n    ans = std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(temp);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ans = ans + std::to_string(sum);\n    ans = ans.substr(0, ans.size() - 1);\n\
    \    ", "    long sum = 0;\n    long remainder = 0;\n    long temp = 0;\n    long\
    \ count = 0;\n    std::string ans;\n    while (N !=0){\n        remainder = N\
    \ % 10;\n        sum += remainder;\n        N = N/10;\n        temp = sum;\n \
    \       sum = temp;\n        count++;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans +=\
    \ std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while\
    \ (temp != 0) {\n        sum += temp % 10;\n        temp = temp / 10;\n    }\n\
    \    long remain = N % 10;\n    ans = std::to_string(sum) + std::to_string(remain);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += to_string(sum);\n      \
    \  sum = 0;\n    }\n    ans += to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n\
    \        sum += curr % 10;\n        curr /= 10;\n    }\n    long rem = sum;\n\
    \    while (sum != 0) {\n        ans = to_string(sum % 2) + ans;\n        sum\
    \ /= 10;\n    }\n    ans = to_string(sum % 2) + ans;\n    ans = ans.substr(0,\
    \ ans.size() - 1);\n    return ans;", "    std::string ans = \"\";\n    long sum\
    \ = 0;\n    long curr = N;\n    while (curr != 0) {\n        sum += curr % 10;\n\
    \        curr = curr / 10;\n    }\n    ans = std::to_string(sum);\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 2) {\n\
    \        sum += N % 2;\n        N /= 2;\n    }\n    long curr = sum;\n    while\
    \ (curr != 0) {\n        ans.push_back((curr % 2 == 1) ? '1' : '0');\n       \
    \ curr /= 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    long curr = N;\n    while (curr != 0) {\n        sum += curr %\
    \ 10;\n        curr /= 10;\n    }\n    long remain = N - sum;\n    long cur =\
    \ sum;\n    while (remain != 0) {\n        ans += \"1\";\n        remain -= cur;\n\
    \        cur *= 10;\n    }\n    return ans;", "    long sum = 0;\n    long temp\
    \ = N;\n    std::string ans;\n    while (temp != 0) {\n        sum += (temp %\
    \ 10);\n        temp = temp / 10;\n    }\n    ans = std::to_string(sum);\n   \
    \ return ans;", "    long sum = 0;\n    long temp = 0;\n    std::string ans =\
    \ \"\";\n    long remain = N;\n    while (remain > 0) {\n        temp = (remain\
    \ % 10) + sum;\n        sum = temp;\n        remain = remain / 10;\n        ans\
    \ = to_string(temp) + ans;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long long sum = 0;\n    long long remainder = 0;\n    long long temp\
    \ = N;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum +=\
    \ remainder;\n        temp /= 10;\n    }\n    ans = std::to_string(sum);\n   \
    \ return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"0\";\n  \
    \  long long sum = 0;\n    long long remain = N;\n    while (remain > 0) {\n \
    \       sum += remain % 2;\n        remain /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    while (sum) {\n\
    \        ans += '1';\n        sum--;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n\
    \        sum += temp % 10;\n        temp /= 10;\n    }\n    long an = sum;\n \
    \   while (an > 0) {\n        ans = std::to_string(an % 2) + ans;\n        an\
    \ /= 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum =\
    \ 0;\n    long curr = N;\n    while (curr != 0) {\n        sum += curr % 10;\n\
    \        curr = curr /= 10;\n    }\n    while (sum != 0) {\n        ans += '1'\
    \ + sum % 2;\n        sum /= 2;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n  \
    \      N /= 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", "   \
    \ std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp\
    \ != 0) {\n        sum += temp % 10;\n        temp /= 10;\n    }\n    while (sum\
    \ > 0) {\n        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n        sum /= 2;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n\
    \    long long remainder = 0;\n    long long digit = 0;\n    long long sumOfDigits\
    \ = 0;\n    long long power = 0;\n    long long sumOfPowers = 0;\n    long long\
    \ digitSum = 0;\n    long long powerSum = 0;\n    long long digitPower = 0;\n\
    \    long long digitPowerSum = 0;\n    long long digitPowerPower = 0;\n    long\
    \ long digitPowerPowerSum = 0;\n    long long digitPowerPowerPower = 0;\n    long\
    \ long digitPowerPowerPowerSum = 0;\n    long long digitPowerPowerPowerPower =\
    \ 0;\n    long long digitPowerPowerPowerPowerSum = 0;\n    long long digitPowerPowerPowerPowerPower\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerSum = 0;\n    long long digitPowerPowerPowerPowerPowerPower\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerSum = 0;\n    long long\
    \ digitPowerPowerPowerPowerPowerPowerSum = 0;\n    long long digitPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerSum = 0;\n    long\
    \ long digitPowerPowerPowerPowerPowerPowerPowerSum = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerSum =\
    \ 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n\
    \    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n  \
    \  long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n    long\
    \ long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n    long\
    \ long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n    long\
    \ long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum = 0;\n\
    \    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerSum\
    \ = 0;\n    long long digitPowerPowerPowerPowerPowerPowerPowerPowerPowerPower",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n       \
    \ sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n    }\n\
    \    ans += std::to_string(sum);\n    return ans;", "    std::string ans = \"\"\
    ;\n    long long sum = 0;\n    long long remainder = 0;\n    long long temp =\
    \ 0;\n    long long count = 0;\n    long long sumOfDigits = 0;\n    long long\
    \ sumOfDigitsRemainder = 0;\n    long long sumOfDigitsTemp = 0;\n    long long\
    \ sumOfDigitsCount = 0;\n    long long sumOfDigitsSum = 0;\n    long long sumOfDigitsSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumTemp = 0;\n    long long sumOfDigitsSumCount\
    \ = 0;\n    long long sumOfDigitsSumSum = 0;\n    long long sumOfDigitsSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumTemp = 0;\n    long long sumOfDigitsSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSum = 0;\n    long long sumOfDigitsSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSum = 0;\n    long long sumOfDigitsSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSum = 0;\n    long long sumOfDigitsSumSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSum = 0;\n    long long sumOfDigitsSumSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumSum = 0;\n    long long sumOfDigitsSumSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumSum = 0;\n    long long sumOfDigitsSumSumSumSumRemainder\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumTemp = 0;\n    long long sumOfDigitsSumSumSumSumCount\
    \ = 0;\n    long long sumOfDigitsSumSumSumSumSum = 0;\n    long long sumOfDigits",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum\
    \ += N % 2;\n        N /= 2;\n    }\n    ans += std::to_string(sum);\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long curr = N;\n\
    \    while (curr != 0) {\n        sum += curr % 10;\n        curr /= 10;\n   \
    \ }\n    long rem = sum;\n    while (rem != 0) {\n        ans += '1' + rem % 2;\n\
    \        rem /= 2;\n    }\n    return ans;", "    std::string ans = \"\";\n  \
    \  long sum = 0;\n    long temp = N;\n    while (temp > 0) {\n        sum += temp\
    \ % 10;\n        temp = temp / 10;\n    }\n    temp = sum;\n    while (temp >\
    \ 0) {\n        ans += std::to_string(temp % 2);\n        temp = temp / 2;\n \
    \   }\n    return ans;", "    long sum = 0;\n    std::string ans = \"\";\n   \
    \ long remain = N;\n    while (remain > 0) {\n        sum += remain % 2;\n   \
    \     remain /= 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    ans += std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n    \
    \    sum += temp % 10;\n        temp = temp / 10;\n    }\n    while (sum > 0)\
    \ {\n        ans += '1' + sum % 2;\n        sum = (sum / 2) % 10;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long cur\
    \ = 0;\n    long mod = pow(10, N);\n    long curSum = 0;\n    while (cur < mod)\
    \ {\n        cur = cur * 2 + N % 10;\n        sum += cur;\n        curSum += cur;\n\
    \        N /= 10;\n    }\n    ans = std::to_string(sum % mod);\n    ans += std::to_string(curSum\
    \ % mod);\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n\
    \    long temp = N;\n    while (temp != 0) {\n        sum += temp % 10;\n    \
    \    temp /= 10;\n    }\n    ans = std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    ans += std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    long remain = N;\n    while (remain > 0) {\n \
    \       sum += remain % 2;\n        remain /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n\
    \    }\n    while (sum) {\n        ans += '1' + sum % 2;\n        sum /= 2;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  long temp = N;\n    while (temp > 0) {\n        sum += temp % 10;\n       \
    \ temp /= 10;\n    }\n    temp = sum;\n    while (temp > 0) {\n        ans +=\
    \ std::to_string(temp % 2);\n        temp /= 2;\n    }\n    return ans;", "  \
    \  std::string ans = \"\";\n    long sum = 0;\n    long cur = 0;\n    while (N\
    \ /= 2) {\n        cur = N % 2;\n        sum += cur;\n        ans = std::to_string(sum)\
    \ + ans;\n        N = N / 2;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n  \
    \      ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long curr\
    \ = N;\n    while (curr != 0) {\n        sum += curr % 10;\n        curr /= 10;\n\
    \    }\n    long mod = sum % 2;\n    if (mod != 0) {\n        ans += \"1\";\n\
    \    }\n    while (sum != 0) {\n        ans += \"0\";\n        sum -= 1;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long\
    \ curr = N;\n    while (curr != 0) {\n        sum += curr % 10;\n        curr\
    \ /= 10;\n    }\n    long temp = sum;\n    while (temp != 0) {\n        ans +=\
    \ \"1\";\n        temp--;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n        sum\
    \ += temp % 10;\n        temp = temp / 10;\n    }\n    long rem = sum;\n    while\
    \ (sum != 0) {\n        ans += (rem % 2 == 0 ? \"1\" : \"0\");\n        rem =\
    \ rem / 2;\n    }\n    return ans;", "    long sum = 0;\n    long remainder =\
    \ 0;\n    long temp = 0;\n    std::string ans;\n    long long i = 1;\n    long\
    \ long j = 1;\n    long long k = 1;\n    long long l = 1;\n    long long m = 1;\n\
    \    long long n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long\
    \ q = 1;\n    long long r = 1;\n    long long s = 1;\n    long long t = 1;\n \
    \   long long u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long\
    \ x = 1;\n    long long y = 1;\n    long long z = 1;\n    long long A = 1;\n \
    \   long long B = 1;\n    long long C = 1;\n    long long D = 1;\n    long long\
    \ E = 1;\n    long long F = 1;\n    long long G = 1;\n    long long H = 1;\n \
    \   long long I = 1;\n    long long J = 1;\n    long long K = 1;\n    long long\
    \ L = 1;\n    long long M = 1;\n    long long N = 1;\n    long long O = 1;\n \
    \   long long P = 1;\n    long long Q = 1;\n    long long R = 1;\n    long long\
    \ S = 1;\n    long long T = 1;\n    long long U = 1;\n    long long V = 1;\n \
    \   long long W = 1;\n    long long X = 1;\n    long long Y = 1;\n    long long\
    \ Z = 1;\n    long long A1 = 1;\n    long long B1 = 1;\n    long long C1 = 1;\n\
    \    long long D1 = 1;\n    long long E1 = 1;\n    long long F1 = 1;\n    long\
    \ long G1 = 1;\n    long long H1 = 1;\n    long long I1 = 1;\n    long long J1\
    \ = 1;\n    long long K1 = 1;\n    long long L1 = 1;\n    long long M1 = 1;\n\
    \    long long N1 = 1;\n    long long O1 = 1;\n    long long P1 = 1;\n    long\
    \ long Q1 = 1;\n    long long R1 = 1;\n    long long S1 = 1;\n    long long T1\
    \ = 1;\n    long long U1 = 1;\n    long long V1 = 1;\n    long long W1 = 1;\n\
    \    long long X1 = 1;\n    long long Y1 = 1;\n    long long Z1 = 1;\n    long\
    \ long A2 = 1;\n    long long B2 = 1;\n    long long C2 = 1;\n    long long D2\
    \ = 1;\n    long long E2 = 1;\n    long long F2 = 1;\n    long long G2 = 1;\n\
    \    long long H2 = 1;\n    long long I2 = 1;\n    long long J2 = 1;\n    ", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    ans += std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n  \
    \      ans += to_string(sum);\n        sum = 0;\n    }\n    ans += to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp != 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    temp = sum;\n    while (temp != 0) {\n        ans += std::to_string(temp\
    \ % 2);\n        temp /= 2;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n        sum\
    \ += curr % 2;\n        curr = curr / 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long remainder\
    \ = 0;\n    long power = 1;\n    long temp = N;\n    while (temp != 0) {\n   \
    \     remainder = temp % 10;\n        sum += remainder;\n        temp /= 10;\n\
    \        power *= 10;\n    }\n    ans = std::to_string(sum);\n    ans = ans.substr(0,\
    \ ans.size() - 1);\n    ans = ans + std::to_string(power);\n    return ans;",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n       \
    \ sum += N % 10;\n        ans = std::to_string(sum) + ans;\n        N /= 10;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  while (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    while\
    \ (sum) {\n        ans.push_back('0' + sum % 2);\n        sum /= 2;\n    }\n \
    \   return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 10) {\n        sum += N % 10;\n        ans += to_string(sum);\n        sum\
    \ = 0;\n    }\n    ans += to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp != 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    long remain = N;\n    while (remain != 0) {\n        remain %= 10;\n\
    \        ans += std::to_string(remain % 2);\n        remain /= 10;\n    }\n  \
    \  ans += std::to_string(sum);\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ += to_string(sum);\n        sum = 0;\n    }\n    ans += to_string(sum);\n  \
    \  return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp != 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    temp = sum;\n    while (temp != 0) {\n        ans += std::to_string(temp\
    \ % 2);\n        temp /= 2;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    long remainder = 0;\n    long temp = N;\n    while(temp\
    \ != 0) {\n        remainder = temp % 10;\n        sum += remainder;\n       \
    \ temp = temp / 10;\n    }\n    ans = std::to_string(sum);\n    return ans;",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n       \
    \ sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n  \
    \  return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long cur\
    \ = 0;\n    long mod = pow(10, N);\n    long rem = N;\n    while (cur < mod) {\n\
    \        sum += cur;\n        cur += rem;\n        rem = rem % 10;\n    }\n  \
    \  ans = std::to_string(sum);\n    return ans;", "    std::string ans = \"\";\n\
    \    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ += std::to_string(sum);\n        sum = 0;\n    }\n    if (sum > 0) {\n     \
    \   ans += std::to_string(sum);\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    long digit = 0;\n    while (N /= 10) {\n   \
    \     sum += N % 10;\n        N /= 10;\n    }\n    digit = sum;\n    while (digit\
    \ > 0) {\n        ans = std::to_string(digit) + ans;\n        digit /= 10;\n \
    \   }\n    return ans;", "    std::string ans = \"0\";\n    long sum = 0;\n  \
    \  long remain = N;\n    while (remain > 0) {\n        sum += remain % 2;\n  \
    \      remain /= 2;\n    }\n    ans = std::to_string(sum);\n    return ans;",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n       \
    \ sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n    }\n\
    \    ans += std::to_string(sum);\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n        sum\
    \ += temp % 10;\n        temp = temp / 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long long sum = 0;\n    long\
    \ long mod = N;\n    while (mod > 0) {\n        sum += mod % 2;\n        mod =\
    \ mod / 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n\
    \        N /= 2;\n    }\n    ans = to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp != 0) {\n        sum += temp % 10;\n        temp = temp\
    \ / 10;\n    }\n    long rem = sum;\n    while (rem > 0) {\n        ans += '1'\
    \ + rem % 2;\n        rem = rem / 2;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n\
    \        sum += curr % 10;\n        curr = curr / 10;\n    }\n    long rem = sum;\n\
    \    while (rem != 0) {\n        ans += \"1\";\n        rem = rem / 10;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += to_string(sum);\n        sum = 0;\n    }\n \
    \   ans += to_string(sum);\n    return ans;", "    long sum = 0;\n    long remainder\
    \ = 0;\n    long temp = N;\n    std::string ans = \"\";\n    while (temp != 0)\
    \ {\n        remainder = temp % 2;\n        sum += remainder;\n        temp /=\
    \ 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n\
    \        N /= 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while\
    \ (temp != 0) {\n        sum += (temp % 10);\n        temp /= 10;\n    }\n   \
    \ while (sum > 0) {\n        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n        sum\
    \ /= 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum =\
    \ 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum)\
    \ + ans;\n        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n      \
    \  ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"0\";\n  \
    \  long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        N /=\
    \ 10;\n    }\n    ans = to_string(sum) + ans;\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans = std::to_string(sum) + ans;\n        N /= 10;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n\
    \    while (temp > 0) {\n        sum += temp % 10;\n        temp = temp / 10;\n\
    \    }\n    ans = to_string(sum);\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    long temp = N;\n    while (temp > 0) {\n        sum\
    \ += temp % 10;\n        temp = temp / 10;\n    }\n    temp = sum;\n    while\
    \ (temp != 0) {\n        ans += std::to_string(temp % 2);\n        temp = temp\
    \ / 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum =\
    \ 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n\
    \        sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while\
    \ (temp > 0) {\n        sum += temp % 10;\n        temp = temp / 10;\n    }\n\
    \    temp = sum;\n    while (temp > 0) {\n        ans += std::to_string(temp %\
    \ 2);\n        temp = temp / 2;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n  \
    \      sum += curr % 10;\n        curr /= 10;\n    }\n    while (sum != 0) {\n\
    \        ans += '1' + sum % 2;\n        sum /= 2;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n        sum += temp\
    \ % 10;\n        temp = temp / 10;\n    }\n    long remain = N - sum;\n    while\
    \ (remain != 0) {\n        ans += \"1\";\n        remain = remain / 10;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp > 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n  \
    \      sum += temp % 10;\n        temp /= 10;\n    }\n    ans = to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    long remain = N;\n    long curr = remain;\n    while (remain >\
    \ 0) {\n        sum += (remain % 10);\n        remain /= 10;\n    }\n    long\
    \ temp = sum;\n    temp = temp * 2;\n    temp = temp + curr;\n    ans = to_string(temp);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n   \
    \ }\n    ans += std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n  \
    \      ans += to_string(sum);\n        sum = 0;\n    }\n    ans += to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp\
    \ = N;\n    while (temp != 0) {\n        sum += temp % 10;\n        temp /= 10;\n\
    \    }\n    ans = to_string(sum);\n    return ans;", "    std::string ans = \"\
    0\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n       \
    \ sum += temp % 10;\n        temp = temp / 10;\n    }\n    long remain = N - sum;\n\
    \    while (remain != 0) {\n        ans += '1';\n        remain = remain / 10;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  while (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n\
    \        sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while\
    \ (temp != 0) {\n        sum += temp % 10;\n        temp /= 10;\n    }\n    long\
    \ power = 1;\n    while (sum > 0) {\n        ans += to_string(power);\n      \
    \  sum += power % 10;\n        power /= 10;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n\
    \        sum += temp % 10;\n        temp = temp / 10;\n    }\n    temp = sum;\n\
    \    while (temp != 0) {\n        ans += (temp % 2 == 0 ? \"1\" : \"0\");\n  \
    \      temp = temp / 2;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ += std::to_string(sum);\n        sum = 0;\n    }\n    if (sum) {\n        ans\
    \ += std::to_string(sum);\n    }\n    return ans;", "    std::string ans = \"\
    0\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n     \
    \   ans = std::to_string(sum) + ans;\n        N /= 10;\n    }\n    return ans;",
  "    std::string ans = \"0\";\n    long sum = 0;\n    while (N /= 2) {\n       \
    \ sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum) + ans;\n\
    \    return ans;", "    std::string ans = \"0\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum)\
    \ + ans;\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n\
    \    while (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum)\
    \ + ans;\n        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n        N\
    \ /= 2;\n    }\n    while (sum > 0) {\n        ans += (sum % 2 == 0 ? \"1\" :\
    \ \"0\");\n        sum /= 2;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n  \
    \      ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ long sum = 0;\n    long remainder = 0;\n    long temp = N;\n    while (N > 0)\
    \ {\n        remainder = N % 10;\n        sum += remainder;\n        N = N / 10;\n\
    \    }\n    temp = sum;\n    while (temp != 0) {\n        ans += std::to_string(temp\
    \ % 2);\n        temp = temp / 2;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n  \
    \      N /= 2;\n    }\n    ans = std::to_string(sum);\n    return ans;", "   \
    \ std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp\
    \ != 0) {\n        sum += temp % 10;\n        temp /= 10;\n    }\n    temp = sum;\n\
    \    while (temp != 0) {\n        ans += (temp % 2) + '0';\n        temp /= 2;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  long temp = N;\n    while (temp != 0) {\n        sum += (temp % 10);\n    \
    \    temp /= 10;\n    }\n    long rem = sum;\n    while (sum > 0) {\n        ans\
    \ += (sum % 2 == 0 ? \"0\" : \"1\");\n        sum /= 2;\n    }\n    ans = ans.substr(0,\
    \ ans.size() - 1);\n    return ans;", "    std::string ans = \"\";\n    long sum\
    \ = 0;\n    long cur = N;\n    while (cur != 0) {\n        sum += cur % 2;\n \
    \       cur /= 2;\n    }\n    while (sum != 0) {\n        ans += (sum % 2 == 0\
    \ ? \"1\" : \"0\");\n        sum /= 2;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans = std::to_string(sum) + ans;\n        N /= 10;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10)\
    \ {\n        sum += N % 10;\n        ans += std::to_string(sum);\n        sum\
    \ = 0;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum =\
    \ 0;\n    while (N /= 10) {\n        sum += N % 10;\n        N /= 10;\n    }\n\
    \    ans = std::to_string(sum);\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    long temp = N;\n    while (temp > 0) {\n        sum\
    \ += (temp % 10);\n        temp /= 10;\n    }\n    long rem = sum;\n    while\
    \ (rem > 0) {\n        ans += (rem % 2);\n        rem /= 2;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n\
    \    while (temp > 0) {\n        sum += temp % 10;\n        temp = temp / 10;\n\
    \    }\n    ans = std::to_string(sum);\n    return ans;", "    std::string ans\
    \ = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n  \
    \      sum += temp % 10;\n        temp /= 10;\n    }\n    temp = sum;\n    while\
    \ (temp != 0) {\n        ans += temp % 2;\n        temp /= 2;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10)\
    \ {\n        sum += N % 10;\n        N /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long curr\
    \ = N;\n    while (curr != 0) {\n        sum += curr % 10;\n        curr /= 10;\n\
    \    }\n    while (sum != 0) {\n        ans += '1' + sum % 2;\n        sum /=\
    \ 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n\
    \    long temp = N;\n    while (temp > 0) {\n        sum += temp % 10;\n     \
    \   temp = temp / 10;\n    }\n    temp = sum;\n    while (temp > 0) {\n      \
    \  ans += (temp % 2 == 0 ? \"1\" : \"0\");\n        temp = temp / 2;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n \
    \       sum = 0;\n    }\n    ans += std::to_string(sum);\n    return ans;", " \
    \   std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n      \
    \  sum += N % 10;\n        ans = std::to_string(sum) + ans;\n        N /= 10;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  while (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    while\
    \ (sum > 0) {\n        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n        sum /=\
    \ 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n\
    \    long cur = 0;\n    long mod = pow(10, N);\n    long rem = N % mod;\n    long\
    \ cur2 = 1;\n    long cur3 = 1;\n    long cur4 = 0;\n    long cur5 = 0;\n    long\
    \ cur6 = 0;\n    long cur7 = 0;\n    long cur8 = 0;\n    long cur9 = 0;\n    long\
    \ cur10 = 0;\n    long cur11 = 0;\n    long cur12 = 0;\n    long cur13 = 0;\n\
    \    long cur14 = 0;\n    long cur15 = 0;\n    long cur16 = 0;\n    long cur17\
    \ = 0;\n    long cur18 = 0;\n    long cur19 = 0;\n    long cur20 = 0;\n    long\
    \ cur21 = 0;\n    long cur22 = 0;\n    long cur23 = 0;\n    long cur24 = 0;\n\
    \    long cur25 = 0;\n    long cur26 = 0;\n    long cur27 = 0;\n    long cur28\
    \ = 0;\n    long cur29 = 0;\n    long cur30 = 0;\n    long cur31 = 0;\n    long\
    \ cur32 = 0;\n    long cur33 = 0;\n    long cur34 = 0;\n    long cur35 = 0;\n\
    \    long cur36 = 0;\n    long cur37 = 0;\n    long cur38 = 0;\n    long cur39\
    \ = 0;\n    long cur40 = 0;\n    long cur41 = 0;\n    long cur42 = 0;\n    long\
    \ cur43 = 0;\n    long cur44 = 0;\n    long cur45 = 0;\n    long cur46 = 0;\n\
    \    long cur47 = 0;\n    long cur48 = 0;\n    long cur49 = 0;\n    long cur50\
    \ = 0;\n    long cur51 = 0;\n    long cur52 = 0;\n    long cur53 = 0;\n    long\
    \ cur54 = 0;\n    long cur55 = 0;\n    long cur56 = 0;\n    long cur57 = 0;\n\
    \    long cur58 = 0;\n    long cur59 = 0;\n    long cur60 = 0;\n    long cur61\
    \ = 0;\n    long cur62 = 0;\n    long cur63 = 0;\n    long cur64 = 0;\n    long\
    \ cur65 = 0;\n    long cur66 = 0;\n    long cur67 = 0;\n    long cur68 = 0;\n\
    \    long cur69 = 0;\n    long cur70 = 0;\n    long cur71 = 0;\n    long cur72\
    \ = 0;\n    long cur73 = 0;\n    long cur74 = 0;\n    long cur75 = 0;\n    long\
    \ cur76 = 0;\n    long cur77 = 0;\n    long cur78 = 0;\n    long cur79 = 0;\n\
    \    long cur80 = 0;\n    long cur81 = 0;\n    long ", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n    \
    \    sum += curr % 10;\n        curr /= 10;\n    }\n    ans = to_string(sum);\n\
    \    return ans;", "    long sum = 0;\n    long remainder = 0;\n    long count\
    \ = 0;\n    long i = 0;\n    std::string ans = \"\";\n    while (N /= 10) {\n\
    \        sum += N % 10;\n        N = N / 10;\n    }\n    while (sum > 0) {\n \
    \       remainder = sum % 2;\n        sum = sum / 2;\n        ans += remainder;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n  \
    \  long temp = N;\n    while (temp > 0) {\n        sum += temp % 10;\n       \
    \ temp = temp / 10;\n    }\n    ans = to_string(sum);\n    return ans;", "   \
    \ std::string ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp\
    \ > 0) {\n        sum += temp % 10;\n        temp /= 10;\n    }\n    long rem\
    \ = sum;\n    while (rem > 0) {\n        ans += '1';\n        rem -= 10;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    while (sum) {\n\
    \        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n        sum /= 2;\n    }\n  \
    \  return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    while (sum) {\n\
    \        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n        sum /= 2;\n    }\n  \
    \  return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while (N\
    \ /= 10) {\n        sum += N % 10;\n        ans += std::to_string(sum);\n    \
    \    sum = 0;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n   \
    \ }\n    ans = std::to_string(sum);\n    return ans;", "    std::string ans =\
    \ \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n  \
    \      ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = std::to_string(sum) + ans;\n\
    \        N /= 10;\n    }\n    return ans;", "    long sum = 0;\n    std::string\
    \ ans;\n    long temp = 0;\n    long digit = 0;\n    long power = 1;\n    long\
    \ remainder = 0;\n    long count = 0;\n    long digits[1000];\n    long sumOfDigits\
    \ = 0;\n    long i = 1;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n \
    \   long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I\
    \ = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n \
    \   long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R\
    \ = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n \
    \   long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long A2\
    \ = 0;\n    long B2 = 0;\n    long C2 = 0;\n    long D2 = 0;\n    long E2 = 0;\n\
    \    long F2 = 0;\n    long G2 = 0;\n    long H2 = 0;\n    long I2 = 0;\n    long\
    \ J2 = 0;\n    long K2 = 0;\n    long L2 = 0;\n    long M2 = 0;\n    long N2 =\
    \ 0;\n    long O2 = 0;\n    long P2 = 0;\n    long Q2 = 0;\n    long R2 = 0;\n\
    \    long S2 = 0;\n    long T2 = 0;\n    long U2 = 0;\n    long V2 = 0;\n    long\
    \ W2 = 0;\n    long X2 = 0;\n    long Y2 = 0;\n    long Z2 = 0;\n    long A3 =\
    \ 0;\n    long B3 = 0;\n    long C3 = 0;\n    long D3 = 0;\n    long E3 = 0;\n\
    \    long F3 = 0;\n    long G3 = 0;\n    long H3 = 0;\n    long I3 = 0;\n    long\
    \ J3 = 0;\n    long K3 = 0;\n    long L3 = 0;\n    long M3 = 0;\n    long N3 =\
    \ 0;\n    long O3 = 0;\n    long P3 = 0;\n    long Q3 = 0;\n    long R3 = 0;\n\
    \    long S3 = 0;\n    long T3 = 0;\n    long U3 = 0;\n    long V3 = 0;\n    long\
    \ W", "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n\
    \        sum += N % 10;\n        N /= 10;\n    }\n    while (sum) {\n        ans\
    \ += '1' + sum % 2;\n        sum /= 2;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long curr = N;\n    while (curr != 0) {\n\
    \        sum += curr % 10;\n        curr /= 10;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n    }\n    ans = std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    long curr\
    \ = N;\n    while (curr != 0) {\n        sum += curr % 10;\n        curr /= 10;\n\
    \    }\n    long remain = sum;\n    while (remain != 0) {\n        ans += \"1\"\
    ;\n        remain -= 10;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ = to_string(sum) + ans;\n        N /= 10;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    long temp = N;\n    while (temp != 0) {\n\
    \        sum += temp % 10;\n        temp = temp / 10;\n    }\n    temp = sum;\n\
    \    while (temp != 0) {\n        ans += std::to_string(temp % 2);\n        temp\
    \ = temp / 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans += to_string(sum);\n\
    \        sum = 0;\n    }\n    ans += to_string(sum);\n    return ans;", "    std::string\
    \ ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n\
    \        ans += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;", "    std::string ans = \"\";\n    long sum = 0;\n    while\
    \ (N /= 10) {\n        sum += N % 10;\n        ans = to_string(sum) + ans;\n \
    \       N /= 10;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    while (N /= 2) {\n        sum += N % 2;\n        N /= 2;\n   \
    \ }\n    while (sum) {\n        ans += (sum % 2 == 0 ? \"1\" : \"0\");\n     \
    \   sum /= 2;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ sum = 0;\n    long curr = N;\n    while (curr != 0) {\n        sum += curr %\
    \ 10;\n        curr = curr / 10;\n    }\n    long mod = sum;\n    while (mod !=\
    \ 0) {\n        ans += '1';\n        mod = mod / 10;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long sum = 0;\n    while (N /= 10) {\n       \
    \ sum += N % 10;\n        ans += std::to_string(sum);\n        sum = 0;\n    }\n\
    \    ans += std::to_string(sum);\n    return ans;", "    std::string ans = \"\"\
    ;\n    long sum = 0;\n    while (N /= 10) {\n        sum += N % 10;\n        ans\
    \ += std::to_string(sum);\n        sum = 0;\n    }\n    ans += std::to_string(sum);\n\
    \    return ans;"]
stop_tokens:
- "\n}"

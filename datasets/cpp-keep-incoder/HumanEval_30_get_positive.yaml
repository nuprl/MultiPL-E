name: HumanEval_30_get_positive
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
  \ in the list.\n// >>> get_positive([-1, 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nstd::vector<long>\
  \ get_positive(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({-1,\
  \ -2, 4, 5, 6}))) == (std::vector<long>({4, 5, 6})));\n    assert(candidate((std::vector<long>({5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}))) == (std::vector<long>({5, 3, 2, 3, 3, 9,\
  \ 123, 1})));\n    assert(candidate((std::vector<long>({-1, -2}))) == (std::vector<long>()));\n\
  \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n}\n"
completions: ["    std::vector<long> res;\n    for(long i : l) {\n        if(i >=\
    \ 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n  \
    \          res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0)\n\
    \            positive.push_back(i);\n    }\n    return positive;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (long i : l) {\n     \
    \   if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for (long i : l) {\n        if\
    \ (i >= 0)\n            res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0)\n            res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (auto i : l) {\n        if (i >= 0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0)\n            res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> positive;\n    long long sum = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > 0) {\n            sum += l[i];\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;",
  "    std::vector<long> positive;\n    positive.reserve(l.size());\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n      \
    \  }\n    }\n    return positive;", "    std::vector<long> res;\n    for (auto\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (auto i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n    \
    \        res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> positive;\n    for (long i : l) {\n     \
    \   if (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for(long i = 0; i < l.size(); i++)\
    \ {\n        if(l[i] > 0) {\n            res.push_back(l[i]);\n        }\n   \
    \ }\n    return res;", "    std::vector<long> res;\n    for(long i : l) {\n  \
    \      if(i > 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0)\n            res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for(long\
    \ i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n            res.push_back(l[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for(long i : l) {\n\
    \        if(i>0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for (auto i : l) {\n        if\
    \ (i >= 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (auto i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n    \
    \        res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for(long i : l) {\n        if(i >= 0) res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    positive.reserve(l.size());\n \
    \   for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;", "    std::vector<long> res;\n    for (long i :\
    \ l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n    \
    \        res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (auto i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for(long\
    \ i : l) {\n        if(i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    long long sum = 0;\n    for (long\
    \ long i : l) {\n        if (i >= 0) {\n            sum += i;\n            positive.push_back(i);\n\
    \        }\n    }\n    if (sum < 0) {\n        std::reverse(positive.begin(),\
    \ positive.end());\n    }\n    return positive;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   positive.reserve(l.size());\n    for (long i : l) {\n        if (i >= 0)\n\
    \            positive.push_back(i);\n    }\n    return positive;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0)\n            res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n     \
    \   }\n    }\n    return res;", "    std::vector<long> positive;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n      \
    \  }\n    }\n    return positive;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n     \
    \   }\n    }\n    return res;", "    std::vector<long> positive;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n      \
    \  }\n    }\n    return positive;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n    \
    \        res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    long\
    \ long sum = 0;\n    for (long long i : l) {\n        sum += i;\n        if (sum\
    \ >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for(long i : l) {\n        if(i > 0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> positive;\n    for (long i :\
    \ l) {\n        if (i >= 0) {\n            positive.push_back(i);\n        }\n\
    \    }\n    return positive;", "    std::vector<long> res;\n    for (long i :\
    \ l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (auto i : l) {\n     \
    \   if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for(long i : l) {\n        if(i>0) {\n       \
    \     res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> positive;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n\
    \    return positive;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   long temp;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] >\
    \ 0) {\n            positive.push_back(l[i]);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n     \
    \       res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for(long i : l) {\n        if(i>0)\n            res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (auto i : l) {\n        if (i >=\
    \ 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for(long i : l) {\n        if(i>0) res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n     \
    \       res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    positive.reserve(l.size());\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for(long\
    \ i : l) {\n        if(i >= 0) {\n            res.push_back(i);\n        }\n \
    \   }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return res;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for(long i : l) {\n\
    \        if(i>0)\n            res.push_back(i);\n    }\n    return res;", "  \
    \  std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   long long sum = 0;\n    for (long long i : l) {\n        if (i >= 0) {\n \
    \           sum += i;\n            positive.push_back(i);\n        }\n    }\n\
    \    return positive;", "    std::vector<long> positive;\n    positive.reserve(l.size());\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (long i : l) {\n     \
    \   if (i >= 0)\n            res.push_back(i);\n    }\n    return res;", "   \
    \ std::vector<long> res;\n    for(long i : l) {\n        if(i>0) {\n         \
    \   res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n   \
    \         res.push_back(l[i]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for(long\
    \ i : l) {\n        if(i > 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0)\n            res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> positive;\n    positive.reserve(l.size());\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> positive;\n \
    \   positive.reserve(l.size());\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n     \
    \       res.push_back(i);\n    }\n    return res;", "    std::vector<long> res;\n\
    \    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0)\n            res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for(long i : l) {\n      \
    \  if(i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return res;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (auto i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> positive;\n    positive.reserve(l.size());\n\
    \    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n     \
    \   }\n    }\n    return res;", "    std::vector<long> res;\n    for (long i :\
    \ l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (long i : l) {\n     \
    \   if (i >= 0)\n            res.push_back(i);\n    }\n    return res;", "   \
    \ std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n    \
    \        res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0)\n            res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    long\
    \ long sum = 0;\n    for (long long i : l) {\n        if (i >= 0) {\n        \
    \    sum += i;\n            positive.push_back(i);\n        }\n    }\n    if (sum\
    \ > 0) {\n        positive.push_back(sum);\n    }\n    return positive;", "  \
    \  std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n   \
    \         res.push_back(l[i]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (long i : l) {\n     \
    \   if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for(long i : l) {\n        if(i>0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> positive;\n    for (long i :\
    \ l) {\n        if (i >= 0) {\n            positive.push_back(i);\n        }\n\
    \    }\n    return positive;", "    std::vector<long> res;\n    for (long i :\
    \ l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for(long i : l) {\n        if(i >= 0) res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n  \
    \          res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for(long\
    \ i : l) {\n        if(i>0) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> positive;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n\
    \    return positive;", "    std::vector<long> positive;\n    for (long i : l)\
    \ {\n        if (i >= 0) {\n            positive.push_back(i);\n        }\n  \
    \  }\n    return positive;", "    std::vector<long> res;\n    for (long i : l)\
    \ {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> res;\n    for (long i : l) {\n     \
    \   if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return res;",
  "    std::vector<long> res;\n    for(long i : l) {\n        if(i>0) {\n        \
    \    res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> positive;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n     \
    \   }\n    }\n    return res;", "    std::vector<long> res;\n    for (auto i :\
    \ l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n\
    \    return res;", "    std::vector<long> positive;\n    for (long i : l) {\n\
    \        if (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n\
    \    return positive;", "    std::vector<long> res;\n    for (long i : l) {\n\
    \        if (i >= 0) res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    for (long\
    \ i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    for(long i : l) {\n\
    \        if(i>0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> positive;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            positive.push_back(i);\n        }\n    }\n    return\
    \ positive;", "    std::vector<long> res;\n    for (long i : l) {\n        if\
    \ (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return res;",
  "    std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0) {\n   \
    \         res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> positive;\n    for (long i :\
    \ l) {\n        if (i >= 0) {\n            positive.push_back(i);\n        }\n\
    \    }\n    return positive;", "    std::vector<long> res;\n    for (auto i :\
    \ l) {\n        if (i >= 0)\n            res.push_back(i);\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0)\n            res.push_back(i);\n    }\n    return res;", "    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;", "    std::vector<long> res;\n    for\
    \ (auto i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n    return res;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n     \
    \       res.push_back(i);\n    }\n    return res;", "    std::vector<long> positive;\n\
    \    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n    \
    \    if (sum >= 0) {\n            positive.push_back(i);\n        }\n    }\n \
    \   return positive;", "    std::vector<long> res;\n    for (long i : l) {\n \
    \       if (i >= 0) {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    for (long i : l) {\n        if (i >=\
    \ 0) {\n            res.push_back(i);\n        }\n    }\n    return res;", " \
    \   std::vector<long> positive;\n    for (long i : l) {\n        if (i >= 0) {\n\
    \            positive.push_back(i);\n        }\n    }\n    return positive;",
  "    std::vector<long> res;\n    for (long i : l) {\n        if (i >= 0)\n     \
    \       res.push_back(i);\n    }\n    return res;"]
stop_tokens:
- "\n}"

name: HumanEval_55_fib
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long prev = 0;\n    long curr = 1;\n    long sum = 0;\n\
    \    long i;\n    for (i = 2; i <= n; i++) {\n        sum += curr;\n        curr\
    \ += prev;\n        prev = curr;\n    }\n    return sum;\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpm5tj6xz7: /tmp/tmpm5tj6xz7.cpp:24: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1, c;\n    long i;\n    for(i = 2; i <=\
    \ n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmpyz9m9q6t: /tmp/tmpyz9m9q6t.cpp:23: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1)\n        return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n  else\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1)\n        return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp9u2dlck3: /tmp/tmp9u2dlck3.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long sum = 0;\n    long temp;\n    long i;\n    for(i = 2; i <= n; i++) {\n\
    \        temp = a + b;\n        a = b;\n        b = temp;\n        sum += c;\n\
    \        c = d;\n        d = temp;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpb1p1fzmj: /tmp/tmpb1p1fzmj.cpp:30: int main(): Assertion `candidate((1))\
    \ == (1)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1, c;\n    long i;\n    for (i = 1; i\
    \ <= n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n  \
    \  return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmprjf78vog: /tmp/tmprjf78vog.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long temp;\n    long ans = 1;\n    long i;\n    for(i = 2; i <= n; i++) {\n\
    \        temp = c;\n        c = a + b;\n        a = b;\n        b = temp;\n  \
    \      ans = ans * c + d;\n        d = c;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpq8hy4wz3: /tmp/tmpq8hy4wz3.cpp:29: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long temp;\n    long i;\n    long j;\n    long k;\n    long l;\n    long\
    \ m;\n    long n;\n    long o;\n    long p;\n    long q;\n    long r;\n    long\
    \ s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long\
    \ y;\n    long z;\n    long A;\n    long B;\n    long C;\n    long D;\n    long\
    \ E;\n    long F;\n    long G;\n    long H;\n    long I;\n    long J;\n    long\
    \ K;\n    long L;\n    long M;\n    long N;\n    long O;\n    long P;\n    long\
    \ Q;\n    long R;\n    long S;\n    long T;\n    long U;\n    long V;\n    long\
    \ W;\n    long X;\n    long Y;\n    long Z;\n    long A;\n    long B;\n    long\
    \ C;\n    long D;\n    long E;\n    long F;\n    long G;\n    long H;\n    long\
    \ I;\n    long J;\n    long K;\n    long L;\n    long M;\n    long N;\n    long\
    \ O;\n    long P;\n    long Q;\n    long R;\n    long S;\n    long T;\n    long\
    \ U;\n    long V;\n    long W;\n    long X;\n    long Y;\n    long Z;\n    long\
    \ A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n    long\
    \ G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n    long\
    \ M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n    long\
    \ S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n    long\
    \ Y;\n    long Z;\n    long A;\n    long B;\n    long C;\n    long D;\n    long\
    \ E;\n    long F;\n    long \n}\nint main() {\n    auto candidate = fib;\n   \
    \ assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8))\
    \ == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphfcsesug.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmphfcsesug.cpp:20:10: error: declaration of \u2018long int n\u2019 shadows\
    \ a parameter\n   20 |     long n;\n      |          ^\n/tmp/tmphfcsesug.cpp:59:10:\
    \ error: redeclaration of \u2018long int A\u2019\n   59 |     long A;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:33:10: note: \u2018long int A\u2019 previously\
    \ declared here\n   33 |     long A;\n      |          ^\n/tmp/tmphfcsesug.cpp:60:10:\
    \ error: redeclaration of \u2018long int B\u2019\n   60 |     long B;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:34:10: note: \u2018long int B\u2019 previously\
    \ declared here\n   34 |     long B;\n      |          ^\n/tmp/tmphfcsesug.cpp:61:10:\
    \ error: redeclaration of \u2018long int C\u2019\n   61 |     long C;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:35:10: note: \u2018long int C\u2019 previously\
    \ declared here\n   35 |     long C;\n      |          ^\n/tmp/tmphfcsesug.cpp:62:10:\
    \ error: redeclaration of \u2018long int D\u2019\n   62 |     long D;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:36:10: note: \u2018long int D\u2019 previously\
    \ declared here\n   36 |     long D;\n      |          ^\n/tmp/tmphfcsesug.cpp:63:10:\
    \ error: redeclaration of \u2018long int E\u2019\n   63 |     long E;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:37:10: note: \u2018long int E\u2019 previously\
    \ declared here\n   37 |     long E;\n      |          ^\n/tmp/tmphfcsesug.cpp:64:10:\
    \ error: redeclaration of \u2018long int F\u2019\n   64 |     long F;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:38:10: note: \u2018long int F\u2019 previously\
    \ declared here\n   38 |     long F;\n      |          ^\n/tmp/tmphfcsesug.cpp:65:10:\
    \ error: redeclaration of \u2018long int G\u2019\n   65 |     long G;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:39:10: note: \u2018long int G\u2019 previously\
    \ declared here\n   39 |     long G;\n      |          ^\n/tmp/tmphfcsesug.cpp:66:10:\
    \ error: redeclaration of \u2018long int H\u2019\n   66 |     long H;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:40:10: note: \u2018long int H\u2019 previously\
    \ declared here\n   40 |     long H;\n      |          ^\n/tmp/tmphfcsesug.cpp:67:10:\
    \ error: redeclaration of \u2018long int I\u2019\n   67 |     long I;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:41:10: note: \u2018long int I\u2019 previously\
    \ declared here\n   41 |     long I;\n      |          ^\n/tmp/tmphfcsesug.cpp:68:10:\
    \ error: redeclaration of \u2018long int J\u2019\n   68 |     long J;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:42:10: note: \u2018long int J\u2019 previously\
    \ declared here\n   42 |     long J;\n      |          ^\n/tmp/tmphfcsesug.cpp:69:10:\
    \ error: redeclaration of \u2018long int K\u2019\n   69 |     long K;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:43:10: note: \u2018long int K\u2019 previously\
    \ declared here\n   43 |     long K;\n      |          ^\n/tmp/tmphfcsesug.cpp:70:10:\
    \ error: redeclaration of \u2018long int L\u2019\n   70 |     long L;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:44:10: note: \u2018long int L\u2019 previously\
    \ declared here\n   44 |     long L;\n      |          ^\n/tmp/tmphfcsesug.cpp:71:10:\
    \ error: redeclaration of \u2018long int M\u2019\n   71 |     long M;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:45:10: note: \u2018long int M\u2019 previously\
    \ declared here\n   45 |     long M;\n      |          ^\n/tmp/tmphfcsesug.cpp:72:10:\
    \ error: redeclaration of \u2018long int N\u2019\n   72 |     long N;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:46:10: note: \u2018long int N\u2019 previously\
    \ declared here\n   46 |     long N;\n      |          ^\n/tmp/tmphfcsesug.cpp:73:10:\
    \ error: redeclaration of \u2018long int O\u2019\n   73 |     long O;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:47:10: note: \u2018long int O\u2019 previously\
    \ declared here\n   47 |     long O;\n      |          ^\n/tmp/tmphfcsesug.cpp:74:10:\
    \ error: redeclaration of \u2018long int P\u2019\n   74 |     long P;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:48:10: note: \u2018long int P\u2019 previously\
    \ declared here\n   48 |     long P;\n      |          ^\n/tmp/tmphfcsesug.cpp:75:10:\
    \ error: redeclaration of \u2018long int Q\u2019\n   75 |     long Q;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:49:10: note: \u2018long int Q\u2019 previously\
    \ declared here\n   49 |     long Q;\n      |          ^\n/tmp/tmphfcsesug.cpp:76:10:\
    \ error: redeclaration of \u2018long int R\u2019\n   76 |     long R;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:50:10: note: \u2018long int R\u2019 previously\
    \ declared here\n   50 |     long R;\n      |          ^\n/tmp/tmphfcsesug.cpp:77:10:\
    \ error: redeclaration of \u2018long int S\u2019\n   77 |     long S;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:51:10: note: \u2018long int S\u2019 previously\
    \ declared here\n   51 |     long S;\n      |          ^\n/tmp/tmphfcsesug.cpp:78:10:\
    \ error: redeclaration of \u2018long int T\u2019\n   78 |     long T;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:52:10: note: \u2018long int T\u2019 previously\
    \ declared here\n   52 |     long T;\n      |          ^\n/tmp/tmphfcsesug.cpp:79:10:\
    \ error: redeclaration of \u2018long int U\u2019\n   79 |     long U;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:53:10: note: \u2018long int U\u2019 previously\
    \ declared here\n   53 |     long U;\n      |          ^\n/tmp/tmphfcsesug.cpp:80:10:\
    \ error: redeclaration of \u2018long int V\u2019\n   80 |     long V;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:54:10: note: \u2018long int V\u2019 previously\
    \ declared here\n   54 |     long V;\n      |          ^\n/tmp/tmphfcsesug.cpp:81:10:\
    \ error: redeclaration of \u2018long int W\u2019\n   81 |     long W;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:55:10: note: \u2018long int W\u2019 previously\
    \ declared here\n   55 |     long W;\n      |          ^\n/tmp/tmphfcsesug.cpp:82:10:\
    \ error: redeclaration of \u2018long int X\u2019\n   82 |     long X;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:56:10: note: \u2018long int X\u2019 previously\
    \ declared here\n   56 |     long X;\n      |          ^\n/tmp/tmphfcsesug.cpp:83:10:\
    \ error: redeclaration of \u2018long int Y\u2019\n   83 |     long Y;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:57:10: note: \u2018long int Y\u2019 previously\
    \ declared here\n   57 |     long Y;\n      |          ^\n/tmp/tmphfcsesug.cpp:84:10:\
    \ error: redeclaration of \u2018long int Z\u2019\n   84 |     long Z;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:58:10: note: \u2018long int Z\u2019 previously\
    \ declared here\n   58 |     long Z;\n      |          ^\n/tmp/tmphfcsesug.cpp:85:10:\
    \ error: redeclaration of \u2018long int A\u2019\n   85 |     long A;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:33:10: note: \u2018long int A\u2019 previously\
    \ declared here\n   33 |     long A;\n      |          ^\n/tmp/tmphfcsesug.cpp:86:10:\
    \ error: redeclaration of \u2018long int B\u2019\n   86 |     long B;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:34:10: note: \u2018long int B\u2019 previously\
    \ declared here\n   34 |     long B;\n      |          ^\n/tmp/tmphfcsesug.cpp:87:10:\
    \ error: redeclaration of \u2018long int C\u2019\n   87 |     long C;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:35:10: note: \u2018long int C\u2019 previously\
    \ declared here\n   35 |     long C;\n      |          ^\n/tmp/tmphfcsesug.cpp:88:10:\
    \ error: redeclaration of \u2018long int D\u2019\n   88 |     long D;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:36:10: note: \u2018long int D\u2019 previously\
    \ declared here\n   36 |     long D;\n      |          ^\n/tmp/tmphfcsesug.cpp:89:10:\
    \ error: redeclaration of \u2018long int E\u2019\n   89 |     long E;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:37:10: note: \u2018long int E\u2019 previously\
    \ declared here\n   37 |     long E;\n      |          ^\n/tmp/tmphfcsesug.cpp:90:10:\
    \ error: redeclaration of \u2018long int F\u2019\n   90 |     long F;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:38:10: note: \u2018long int F\u2019 previously\
    \ declared here\n   38 |     long F;\n      |          ^\n/tmp/tmphfcsesug.cpp:91:10:\
    \ error: redeclaration of \u2018long int G\u2019\n   91 |     long G;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:39:10: note: \u2018long int G\u2019 previously\
    \ declared here\n   39 |     long G;\n      |          ^\n/tmp/tmphfcsesug.cpp:92:10:\
    \ error: redeclaration of \u2018long int H\u2019\n   92 |     long H;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:40:10: note: \u2018long int H\u2019 previously\
    \ declared here\n   40 |     long H;\n      |          ^\n/tmp/tmphfcsesug.cpp:93:10:\
    \ error: redeclaration of \u2018long int I\u2019\n   93 |     long I;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:41:10: note: \u2018long int I\u2019 previously\
    \ declared here\n   41 |     long I;\n      |          ^\n/tmp/tmphfcsesug.cpp:94:10:\
    \ error: redeclaration of \u2018long int J\u2019\n   94 |     long J;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:42:10: note: \u2018long int J\u2019 previously\
    \ declared here\n   42 |     long J;\n      |          ^\n/tmp/tmphfcsesug.cpp:95:10:\
    \ error: redeclaration of \u2018long int K\u2019\n   95 |     long K;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:43:10: note: \u2018long int K\u2019 previously\
    \ declared here\n   43 |     long K;\n      |          ^\n/tmp/tmphfcsesug.cpp:96:10:\
    \ error: redeclaration of \u2018long int L\u2019\n   96 |     long L;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:44:10: note: \u2018long int L\u2019 previously\
    \ declared here\n   44 |     long L;\n      |          ^\n/tmp/tmphfcsesug.cpp:97:10:\
    \ error: redeclaration of \u2018long int M\u2019\n   97 |     long M;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:45:10: note: \u2018long int M\u2019 previously\
    \ declared here\n   45 |     long M;\n      |          ^\n/tmp/tmphfcsesug.cpp:98:10:\
    \ error: redeclaration of \u2018long int N\u2019\n   98 |     long N;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:46:10: note: \u2018long int N\u2019 previously\
    \ declared here\n   46 |     long N;\n      |          ^\n/tmp/tmphfcsesug.cpp:99:10:\
    \ error: redeclaration of \u2018long int O\u2019\n   99 |     long O;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:47:10: note: \u2018long int O\u2019 previously\
    \ declared here\n   47 |     long O;\n      |          ^\n/tmp/tmphfcsesug.cpp:100:10:\
    \ error: redeclaration of \u2018long int P\u2019\n  100 |     long P;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:48:10: note: \u2018long int P\u2019 previously\
    \ declared here\n   48 |     long P;\n      |          ^\n/tmp/tmphfcsesug.cpp:101:10:\
    \ error: redeclaration of \u2018long int Q\u2019\n  101 |     long Q;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:49:10: note: \u2018long int Q\u2019 previously\
    \ declared here\n   49 |     long Q;\n      |          ^\n/tmp/tmphfcsesug.cpp:102:10:\
    \ error: redeclaration of \u2018long int R\u2019\n  102 |     long R;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:50:10: note: \u2018long int R\u2019 previously\
    \ declared here\n   50 |     long R;\n      |          ^\n/tmp/tmphfcsesug.cpp:103:10:\
    \ error: redeclaration of \u2018long int S\u2019\n  103 |     long S;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:51:10: note: \u2018long int S\u2019 previously\
    \ declared here\n   51 |     long S;\n      |          ^\n/tmp/tmphfcsesug.cpp:104:10:\
    \ error: redeclaration of \u2018long int T\u2019\n  104 |     long T;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:52:10: note: \u2018long int T\u2019 previously\
    \ declared here\n   52 |     long T;\n      |          ^\n/tmp/tmphfcsesug.cpp:105:10:\
    \ error: redeclaration of \u2018long int U\u2019\n  105 |     long U;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:53:10: note: \u2018long int U\u2019 previously\
    \ declared here\n   53 |     long U;\n      |          ^\n/tmp/tmphfcsesug.cpp:106:10:\
    \ error: redeclaration of \u2018long int V\u2019\n  106 |     long V;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:54:10: note: \u2018long int V\u2019 previously\
    \ declared here\n   54 |     long V;\n      |          ^\n/tmp/tmphfcsesug.cpp:107:10:\
    \ error: redeclaration of \u2018long int W\u2019\n  107 |     long W;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:55:10: note: \u2018long int W\u2019 previously\
    \ declared here\n   55 |     long W;\n      |          ^\n/tmp/tmphfcsesug.cpp:108:10:\
    \ error: redeclaration of \u2018long int X\u2019\n  108 |     long X;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:56:10: note: \u2018long int X\u2019 previously\
    \ declared here\n   56 |     long X;\n      |          ^\n/tmp/tmphfcsesug.cpp:109:10:\
    \ error: redeclaration of \u2018long int Y\u2019\n  109 |     long Y;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:57:10: note: \u2018long int Y\u2019 previously\
    \ declared here\n   57 |     long Y;\n      |          ^\n/tmp/tmphfcsesug.cpp:110:10:\
    \ error: redeclaration of \u2018long int Z\u2019\n  110 |     long Z;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:58:10: note: \u2018long int Z\u2019 previously\
    \ declared here\n   58 |     long Z;\n      |          ^\n/tmp/tmphfcsesug.cpp:111:10:\
    \ error: redeclaration of \u2018long int A\u2019\n  111 |     long A;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:33:10: note: \u2018long int A\u2019 previously\
    \ declared here\n   33 |     long A;\n      |          ^\n/tmp/tmphfcsesug.cpp:112:10:\
    \ error: redeclaration of \u2018long int B\u2019\n  112 |     long B;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:34:10: note: \u2018long int B\u2019 previously\
    \ declared here\n   34 |     long B;\n      |          ^\n/tmp/tmphfcsesug.cpp:113:10:\
    \ error: redeclaration of \u2018long int C\u2019\n  113 |     long C;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:35:10: note: \u2018long int C\u2019 previously\
    \ declared here\n   35 |     long C;\n      |          ^\n/tmp/tmphfcsesug.cpp:114:10:\
    \ error: redeclaration of \u2018long int D\u2019\n  114 |     long D;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:36:10: note: \u2018long int D\u2019 previously\
    \ declared here\n   36 |     long D;\n      |          ^\n/tmp/tmphfcsesug.cpp:115:10:\
    \ error: redeclaration of \u2018long int E\u2019\n  115 |     long E;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:37:10: note: \u2018long int E\u2019 previously\
    \ declared here\n   37 |     long E;\n      |          ^\n/tmp/tmphfcsesug.cpp:116:10:\
    \ error: redeclaration of \u2018long int F\u2019\n  116 |     long F;\n      |\
    \          ^\n/tmp/tmphfcsesug.cpp:38:10: note: \u2018long int F\u2019 previously\
    \ declared here\n   38 |     long F;\n      |          ^\n/tmp/tmphfcsesug.cpp:118:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n  118 | }\n     \
    \ | ^\n/tmp/tmphfcsesug.cpp:118:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long ret = 1;\n    long f1 = 1;\n    long f2 = 1;\n  \
    \  long f3 = 1;\n    long f4 = 1;\n    long f5 = 1;\n    long f6 = 1;\n    long\
    \ f7 = 1;\n    long f8 = 1;\n    long f9 = 1;\n    long f10 = 1;\n    long f11\
    \ = 1;\n    long f12 = 1;\n    long f13 = 1;\n    long f14 = 1;\n    long f15\
    \ = 1;\n    long f16 = 1;\n    long f17 = 1;\n    long f18 = 1;\n    long f19\
    \ = 1;\n    long f20 = 1;\n    long f21 = 1;\n    long f22 = 1;\n    long f23\
    \ = 1;\n    long f24 = 1;\n    long f25 = 1;\n    long f26 = 1;\n    long f27\
    \ = 1;\n    long f28 = 1;\n    long f29 = 1;\n    long f30 = 1;\n    long f31\
    \ = 1;\n    long f32 = 1;\n    long f33 = 1;\n    long f34 = 1;\n    long f35\
    \ = 1;\n    long f36 = 1;\n    long f37 = 1;\n    long f38 = 1;\n    long f39\
    \ = 1;\n    long f40 = 1;\n    long f41 = 1;\n    long f42 = 1;\n    long f43\
    \ = 1;\n    long f44 = 1;\n    long f45 = 1;\n    long f46 = 1;\n    long f47\
    \ = 1;\n    long f48 = 1;\n    long f49 = 1;\n    long f50 = 1;\n    long f51\
    \ = 1;\n    long f52 = 1;\n    long f53 = 1;\n    long f54 = 1;\n    long f55\
    \ = 1;\n    long f56 = 1;\n    long f57 = 1;\n    long f58 = 1;\n    long f59\
    \ = 1;\n    long f60 = 1;\n    long f61 = 1;\n    long f62 = 1;\n    long f63\
    \ = 1;\n    long f64 = 1;\n    long f65 = 1;\n    long f66 = 1;\n    long f67\
    \ = 1;\n    long f68 = 1;\n    long f69 = 1;\n    long f70 = 1;\n    long f71\
    \ = 1;\n    long f72 = 1;\n    long f73 = 1;\n    long f74 = 1;\n    long f75\
    \ = 1;\n    long f76 = 1;\n    long f77 = 1;\n    long f78 = 1;\n    long f79\
    \ = 1;\n    long f80 = 1;\n    long f81 = 1;\n    long f82 = 1;\n    long f83\
    \ = 1;\n    long f84 = 1;\n    long f85 = 1;\n    long f86 = 1;\n    long f87\
    \ = 1;\n    long \n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvfhaoapi.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpvfhaoapi.cpp:100:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n  100 | }\n      | ^\n/tmp/tmpvfhaoapi.cpp:100:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n\
    \ == 1) return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1, c;\n    long i;\n    for (i = 1; i\
    \ <= n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n  \
    \  return c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpsarww97j: /tmp/tmpsarww97j.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long ret = 1;\n    long tmp;\n    long i;\n    for (i\
    \ = 2; i <= n; i++) {\n        tmp = ret;\n        ret = ret + ret;\n        ret\
    \ = tmp - tmp;\n    }\n    return ret;\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpr84nggf6: /tmp/tmpr84nggf6.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 1, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long\
    \ D = 0;\n    long sum1 = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long\
    \ sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long\
    \ sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n  \
    \  long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 =\
    \ 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long\
    \ sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n\
    \    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26\
    \ = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long\
    \ sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n\
    \    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37\
    \ = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long\
    \ sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n\
    \    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48\
    \ = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long\
    \ sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n\
    \    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59\
    \ = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long\
    \ sum63 = 0;\n    long sum64 = 0;\n    long sum65\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplrvqrkdl.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmplrvqrkdl.cpp:20:10: error: declaration of \u2018long int n\u2019 shadows\
    \ a parameter\n   20 |     long n = 0;\n      |          ^\n/tmp/tmplrvqrkdl.cpp:102:1:\
    \ error: expected initializer before \u2018}\u2019 token\n  102 | }\n      | ^\n\
    /tmp/tmplrvqrkdl.cpp:102:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long prev = 0;\n    long curr = 1;\n    long next = 1;\n\
    \    long sum = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n        sum =\
    \ curr + next;\n        prev = curr;\n        curr = next;\n        next = sum;\n\
    \    }\n    return prev;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmpr0i3y407: /tmp/tmpr0i3y407.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp4_gwkdaw: /tmp/tmp4_gwkdaw.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0)\n        return 0;\n\
    \    if (n == 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long prev = 0;\n    long curr = 1;\n    long next = 1;\n\
    \    long sum = 0;\n    long i = 0;\n    while (i < n) {\n        sum += next;\n\
    \        prev = curr;\n        curr = next;\n        next = prev + curr;\n   \
    \     i++;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmprant8kgu: /tmp/tmprant8kgu.cpp:27: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long ret = 1;\n    long temp;\n    long i;\n    for (i\
    \ = 2; i <= n; i++) {\n        temp = ret;\n        ret = ret + ret;\n       \
    \ ret = temp - ret;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmphfg8xs_r: /tmp/tmphfg8xs_r.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long i;\n    for (i = 0; i < n;\
    \ i++) {\n        long c = a + b;\n        a = b;\n        b = c;\n    }\n   \
    \ return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: "tmppbtcv3e4: /tmp/tmppbtcv3e4.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 1, b = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmp01b5bd5b: /tmp/tmp01b5bd5b.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        sum += c;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpa3nc3azp: /tmp/tmpa3nc3azp.cpp:26: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a=0, b=1, c;\n    long i;\n    for(i=1;i<=n;i++)\n\
    \    {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmp31obwer_: /tmp/tmp31obwer_.cpp:23: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1) return n;\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n <= 1)\n        return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 0, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long sum = 0;\n    long i;\n    for (i = 1; i <= n; i++) {\n        sum =\
    \ a + b;\n        a = b;\n        b = sum;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpc79_ly08: /tmp/tmpc79_ly08.cpp:25: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long long int a=0, b=1, c;\n    while(n>0){\n        c\
    \ = a+b;\n        a = b;\n        b = c;\n        n--;\n    }\n    return c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmpur6p6b84: /tmp/tmpur6p6b84.cpp:22: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n == 0 || n == 1)\n        return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long long int a=0, b=1, c;\n    for(int i=0;i<n;i++) {\n\
    \        c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmptgutl_fd: /tmp/tmptgutl_fd.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 1, b = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "tmptbtvanws: /tmp/tmptbtvanws.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 1, b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgjbh4yq7.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpgjbh4yq7.cpp:23:10: error: declaration of \u2018long int n\u2019 shadows\
    \ a parameter\n   23 |     long n = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:36:10:\
    \ error: redeclaration of \u2018long int a\u2019\n   36 |     long a = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:10: note: \u2018long int a\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:37:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   37 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:17: note: \u2018long int b\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |                 ^\n/tmp/tmpgjbh4yq7.cpp:38:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   38 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:12:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   12 |     long c = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:39:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   39 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:13:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   13 |     long d = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:40:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   40 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:14:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   14 |     long e = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:41:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   41 |     long f = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:15:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   15 |     long f = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:42:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   42 |     long g = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:16:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   16 |     long g = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:43:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   43 |     long h = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:17:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   17 |     long h = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:44:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   44 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:18:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   18 |     long i = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:45:10:\
    \ error: redeclaration of \u2018long int j\u2019\n   45 |     long j = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:19:10: note: \u2018long int j\u2019 previously\
    \ declared here\n   19 |     long j = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:46:10:\
    \ error: redeclaration of \u2018long int k\u2019\n   46 |     long k = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:20:10: note: \u2018long int k\u2019 previously\
    \ declared here\n   20 |     long k = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:47:10:\
    \ error: redeclaration of \u2018long int l\u2019\n   47 |     long l = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:21:10: note: \u2018long int l\u2019 previously\
    \ declared here\n   21 |     long l = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:48:10:\
    \ error: redeclaration of \u2018long int m\u2019\n   48 |     long m = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:22:10: note: \u2018long int m\u2019 previously\
    \ declared here\n   22 |     long m = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:49:10:\
    \ error: redeclaration of \u2018long int n\u2019\n   49 |     long n = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:23:10: note: \u2018long int n\u2019 previously\
    \ declared here\n   23 |     long n = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:50:10:\
    \ error: redeclaration of \u2018long int o\u2019\n   50 |     long o = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:24:10: note: \u2018long int o\u2019 previously\
    \ declared here\n   24 |     long o = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:51:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   51 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:25:10: note: \u2018long int p\u2019 previously\
    \ declared here\n   25 |     long p = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:52:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   52 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:26:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   26 |     long q = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:53:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   53 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:27:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   27 |     long r = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:54:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   54 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:28:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   28 |     long s = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:55:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   55 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:29:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   29 |     long t = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:56:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   56 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:30:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   30 |     long u = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:57:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   57 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:31:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   31 |     long v = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:58:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   58 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:32:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   32 |     long w = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:59:10:\
    \ error: redeclaration of \u2018long int x\u2019\n   59 |     long x = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:33:10: note: \u2018long int x\u2019 previously\
    \ declared here\n   33 |     long x = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:60:10:\
    \ error: redeclaration of \u2018long int y\u2019\n   60 |     long y = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:34:10: note: \u2018long int y\u2019 previously\
    \ declared here\n   34 |     long y = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:61:10:\
    \ error: redeclaration of \u2018long int z\u2019\n   61 |     long z = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:35:10: note: \u2018long int z\u2019 previously\
    \ declared here\n   35 |     long z = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:62:10:\
    \ error: redeclaration of \u2018long int a\u2019\n   62 |     long a = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:10: note: \u2018long int a\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:63:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   63 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:17: note: \u2018long int b\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |                 ^\n/tmp/tmpgjbh4yq7.cpp:64:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   64 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:12:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   12 |     long c = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:65:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   65 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:13:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   13 |     long d = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:66:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   66 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:14:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   14 |     long e = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:67:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   67 |     long f = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:15:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   15 |     long f = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:68:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   68 |     long g = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:16:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   16 |     long g = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:69:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   69 |     long h = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:17:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   17 |     long h = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:70:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   70 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:18:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   18 |     long i = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:71:10:\
    \ error: redeclaration of \u2018long int j\u2019\n   71 |     long j = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:19:10: note: \u2018long int j\u2019 previously\
    \ declared here\n   19 |     long j = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:72:10:\
    \ error: redeclaration of \u2018long int k\u2019\n   72 |     long k = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:20:10: note: \u2018long int k\u2019 previously\
    \ declared here\n   20 |     long k = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:73:10:\
    \ error: redeclaration of \u2018long int l\u2019\n   73 |     long l = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:21:10: note: \u2018long int l\u2019 previously\
    \ declared here\n   21 |     long l = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:74:10:\
    \ error: redeclaration of \u2018long int m\u2019\n   74 |     long m = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:22:10: note: \u2018long int m\u2019 previously\
    \ declared here\n   22 |     long m = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:75:10:\
    \ error: redeclaration of \u2018long int n\u2019\n   75 |     long n = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:23:10: note: \u2018long int n\u2019 previously\
    \ declared here\n   23 |     long n = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:76:10:\
    \ error: redeclaration of \u2018long int o\u2019\n   76 |     long o = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:24:10: note: \u2018long int o\u2019 previously\
    \ declared here\n   24 |     long o = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:77:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   77 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:25:10: note: \u2018long int p\u2019 previously\
    \ declared here\n   25 |     long p = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:78:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   78 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:26:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   26 |     long q = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:79:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   79 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:27:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   27 |     long r = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:80:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   80 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:28:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   28 |     long s = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:81:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   81 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:29:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   29 |     long t = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:82:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   82 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:30:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   30 |     long u = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:83:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   83 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:31:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   31 |     long v = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:84:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   84 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:32:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   32 |     long w = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:85:10:\
    \ error: redeclaration of \u2018long int x\u2019\n   85 |     long x = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:33:10: note: \u2018long int x\u2019 previously\
    \ declared here\n   33 |     long x = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:86:10:\
    \ error: redeclaration of \u2018long int y\u2019\n   86 |     long y = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:34:10: note: \u2018long int y\u2019 previously\
    \ declared here\n   34 |     long y = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:87:10:\
    \ error: redeclaration of \u2018long int z\u2019\n   87 |     long z = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:35:10: note: \u2018long int z\u2019 previously\
    \ declared here\n   35 |     long z = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:88:10:\
    \ error: redeclaration of \u2018long int a\u2019\n   88 |     long a = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:10: note: \u2018long int a\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:89:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   89 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:11:17: note: \u2018long int b\u2019 previously\
    \ declared here\n   11 |     long a = 1, b = 1;\n      |                 ^\n/tmp/tmpgjbh4yq7.cpp:90:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   90 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:12:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   12 |     long c = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:91:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   91 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:13:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   13 |     long d = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:92:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   92 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:14:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   14 |     long e = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:93:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   93 |     long f = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:15:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   15 |     long f = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:94:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   94 |     long g = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:16:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   16 |     long g = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:95:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   95 |     long h = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:17:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   17 |     long h = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:96:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   96 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:18:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   18 |     long i = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:97:10:\
    \ error: redeclaration of \u2018long int j\u2019\n   97 |     long j = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:19:10: note: \u2018long int j\u2019 previously\
    \ declared here\n   19 |     long j = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:98:10:\
    \ error: redeclaration of \u2018long int k\u2019\n   98 |     long k = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:20:10: note: \u2018long int k\u2019 previously\
    \ declared here\n   20 |     long k = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:99:10:\
    \ error: redeclaration of \u2018long int l\u2019\n   99 |     long l = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:21:10: note: \u2018long int l\u2019 previously\
    \ declared here\n   21 |     long l = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:100:10:\
    \ error: redeclaration of \u2018long int m\u2019\n  100 |     long m = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:22:10: note: \u2018long int m\u2019 previously\
    \ declared here\n   22 |     long m = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:101:10:\
    \ error: redeclaration of \u2018long int n\u2019\n  101 |     long n = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:23:10: note: \u2018long int n\u2019 previously\
    \ declared here\n   23 |     long n = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:102:10:\
    \ error: redeclaration of \u2018long int o\u2019\n  102 |     long o = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:24:10: note: \u2018long int o\u2019 previously\
    \ declared here\n   24 |     long o = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:103:10:\
    \ error: redeclaration of \u2018long int p\u2019\n  103 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:25:10: note: \u2018long int p\u2019 previously\
    \ declared here\n   25 |     long p = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:104:10:\
    \ error: redeclaration of \u2018long int q\u2019\n  104 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:26:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   26 |     long q = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:105:10:\
    \ error: redeclaration of \u2018long int r\u2019\n  105 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:27:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   27 |     long r = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:106:10:\
    \ error: redeclaration of \u2018long int s\u2019\n  106 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:28:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   28 |     long s = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:107:10:\
    \ error: redeclaration of \u2018long int t\u2019\n  107 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:29:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   29 |     long t = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:108:10:\
    \ error: redeclaration of \u2018long int u\u2019\n  108 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:30:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   30 |     long u = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:109:10:\
    \ error: redeclaration of \u2018long int v\u2019\n  109 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:31:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   31 |     long v = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:110:10:\
    \ error: redeclaration of \u2018long int w\u2019\n  110 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:32:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   32 |     long w = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:111:10:\
    \ error: redeclaration of \u2018long int x\u2019\n  111 |     long x = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:33:10: note: \u2018long int x\u2019 previously\
    \ declared here\n   33 |     long x = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:112:10:\
    \ error: redeclaration of \u2018long int y\u2019\n  112 |     long y = 1;\n  \
    \    |          ^\n/tmp/tmpgjbh4yq7.cpp:34:10: note: \u2018long int y\u2019 previously\
    \ declared here\n   34 |     long y = 1;\n      |          ^\n/tmp/tmpgjbh4yq7.cpp:114:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  114 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1) return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    long a = 1, b = 1;\n    for (long i = 1; i <= n; i++)\
    \ {\n        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  stdout: ''
  stderr: "tmp7lx4ivd9: /tmp/tmp7lx4ivd9.cpp:21: int main(): Assertion `candidate((10))\
    \ == (55)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\n\
    long fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

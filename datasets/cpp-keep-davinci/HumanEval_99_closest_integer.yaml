name: HumanEval_99_closest_integer
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ a value (string) representing a number\n// and returns the closest integer to\
  \ it. If the number is equidistant\n// from two integers, round it away from zero.\n\
  // Examples\n// >>> closest_integer(\"10\")\n// 10\n// >>> closest_integer(\"15.3\"\
  )\n// 15\n// Note:\n// Rounding away from zero means that if the given number is\
  \ equidistant\n// from two integers, the one you should return is the one that is\
  \ the\n// farthest from zero. For example closest_integer(\"14.5\") should\n// return\
  \ 15 and closest_integer(\"-14.5\") should return -15.\nlong closest_integer(std::string\
  \ value) {\n"
tests: "}\nint main() {\n    auto candidate = closest_integer;\n    assert(candidate((\"\
  10\")) == (10));\n    assert(candidate((\"14.5\")) == (15));\n    assert(candidate((\"\
  -15.5\")) == (-16));\n    assert(candidate((\"15.3\")) == (15));\n    assert(candidate((\"\
  0\")) == (0));\n}\n"
completions: []
stop_tokens:
- "\n}"

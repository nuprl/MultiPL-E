name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
  \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
  \ numbers that are negative or not integers.\n// double_the_difference([1, 3, 2,\
  \ 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n// double_the_difference([9,\
  \ -2]) == 81\n// double_the_difference([0]) == 0  \n// If the input list is empty,\
  \ return 0.\nlong double_the_difference(std::vector<float> lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)5.0, (float)4.0})))\
  \ == (25));\n    assert(candidate((std::vector<float>({(float)0.1, (float)0.2, (float)0.3})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-10.0, (float)-20.0,\
  \ (float)-30.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)-1.0,\
  \ (float)-2.0, (float)8.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)0.2,\
  \ (float)3.0, (float)5.0}))) == (34));\n    assert(candidate((std::vector<float>({(float)-9.0,\
  \ (float)-7.0, (float)-5.0, (float)-3.0, (float)-1.0, (float)1.0, (float)3.0, (float)5.0,\
  \ (float)7.0, (float)9.0}))) == (165));\n}\n"
completions: ["    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n    \
    \    if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n          \
    \  sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] >= 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n          \
    \  sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && floor(lst[i]) == lst[i]) {\n\
    \            if(lst[i] % 2 != 0) {\n                sum += pow(lst[i], 2);\n \
    \           }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && (int)lst[i] == lst[i]) {\n            if((int)lst[i]\
    \ % 2 != 0) {\n                sum += (int)lst[i] * (int)lst[i];\n           \
    \ }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0;\
    \ i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i]\
    \ > 0 && (int)lst[i] == lst[i]) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum +=\
    \ lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\t\
    for (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == int(lst[i]))\
    \ {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += lst[i] * lst[i];\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && std::floor(lst[i]) == lst[i]) {\n         \
    \   if(lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n         \
    \   }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] &&\
    \ lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (lst[i] >= 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n      sum\
    \ += lst[i] * lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] &&\
    \ lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += pow(lst[i], 2);\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ (int)lst[i] == lst[i]) {\n            if((int)lst[i] % 2 == 1) {\n         \
    \       sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n    }\n\
    \  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tfor (auto i : lst) {\n\t\tif (i > 0 &&\
    \ i == (int)i && i % 2 != 0) {\n\t\t\tsum += i * i;\n\t\t}\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && (int)lst[i] == lst[i])\
    \ {\n      if (lst[i] % 2 == 1) {\n        sum += lst[i] * lst[i];\n      }\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "\t\
    long sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n\
    \  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n     \
    \ sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor\
    \ (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && (int)lst[i]\
    \ == lst[i]) {\n      if (lst[i] % 2 != 0) {\n        sum += lst[i] * lst[i];\n\
    \      }\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i <\
    \ lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] %\
    \ 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n\
    \  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n     \
    \ sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor\
    \ (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n\t\t\tsum += lst[i] * lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += (lst[i] * lst[i]);\n        }\n    }\n    return sum;", "\t\
    long sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += (lst[i] * lst[i]);\n\
    \        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\
    \t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] ==\
    \ (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for(auto i: lst){\n\
    \        if(i > 0 && i == (int)i && i%2 != 0){\n            sum += i*i;\n    \
    \    }\n    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && (int)lst[i] == lst[i]) {\n      if (lst[i] % 2\
    \ == 1) {\n        sum += lst[i] * lst[i];\n      }\n    }\n  }\n  return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n\t\t\tsum += lst[i] * lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += pow(lst[i], 2);\n        }\n    }\n    return sum;", "\tlong\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] >= 0 && lst[i]\
    \ == (int)lst[i]) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += lst[i] * lst[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(auto i: lst){\n        if(i > 0 && (int)i\
    \ == i && i%2 != 0){\n            sum += i*i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for(auto i : lst) {\n        if(i > 0 && i == (int)i &&\
    \ i % 2 == 1) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] >= 0 && lst[i] == (int)lst[i]) {\n            if(lst[i]\
    \ % 2 == 1) {\n                sum += lst[i] * lst[i];\n            }\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && (int)lst[i] == lst[i]) {\n            if((int)lst[i] % 2 != 0) {\n  \
    \              sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] < 0) {\n  \
    \          continue;\n        }\n        if(lst[i] - (int)lst[i] != 0) {\n   \
    \         continue;\n        }\n        if(lst[i] % 2 == 0) {\n            continue;\n\
    \        }\n        sum += lst[i] * lst[i];\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += (lst[i] * lst[i]);\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += pow(lst[i], 2);\n \
    \       }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i <\
    \ lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && (int)lst[i] == lst[i])\
    \ {\n            if((int)lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float\
    \ i : lst) {\n    if (i > 0 && i == (int)i && i % 2 != 0) {\n      sum += pow(i,\
    \ 2);\n    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i <\
    \ lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(auto i : lst)\n    {\n        if(i > 0 &&\
    \ i == (int)i && i % 2 == 1)\n        {\n            sum += i * i;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(auto i : lst) {\n        if(i > 0 && i == (int)i &&\
    \ i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ (int)lst[i] == lst[i]) {\n            if((int)lst[i] % 2 != 0) {\n         \
    \       sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 &&\
    \ (int)lst[i] == lst[i]) {\n      if (lst[i] % 2 != 0) {\n        sum += lst[i]\
    \ * lst[i];\n      }\n    }\n  }\n  return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n\
    \  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += pow(lst[i], 2);\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i]\
    \ > 0 && lst[i] == int(lst[i])) {\n      if (lst[i] % 2 == 1) {\n        sum +=\
    \ lst[i] * lst[i];\n      }\n    }\n  }\n  return sum;", "  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (auto\
    \ i : lst) {\n    if (i > 0 && i == (int)i && i % 2 != 0) {\n      sum += i *\
    \ i;\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0 && lst[i]==(int)lst[i])\n\
    \        {\n            if(lst[i]%2!=0)\n            {\n                sum=sum+(lst[i]*lst[i]);\n\
    \            }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] < 0 || lst[i] != (int)lst[i]) {\n            continue;\n       \
    \ }\n        if(lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n    \
    \    }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ >= 0 && lst[i] == (int)lst[i]) {\n            if(lst[i] % 2 == 1) {\n      \
    \          sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] >= 0 && lst[i]\
    \ == (int)lst[i]) {\n            if(lst[i] % 2 == 1) {\n                sum +=\
    \ lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += (int)lst[i]\
    \ * (int)lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] ==\
    \ (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == int(lst[i])) {\n            if(lst[i]\
    \ % 2 == 1) {\n                sum += lst[i] * lst[i];\n            }\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  // your code here\n  long\
    \ sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i]){\n      if(lst[i] % 2 != 0){\n        sum += lst[i] * lst[i];\n\
    \      }\n    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && (int)lst[i]\
    \ == lst[i]) {\n            if((int)lst[i] % 2 == 1) {\n                sum +=\
    \ lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == floor(lst[i])) {\n            if(lst[i] % 2 !=\
    \ 0) {\n                sum += lst[i] * lst[i];\n            }\n        }\n  \
    \  }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\t\t\
    sum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == floor(lst[i]))\
    \ {\n            if(lst[i] % 2 != 0) {\n                sum += pow(lst[i], 2);\n\
    \            }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "\tlong\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for(auto i : lst) {\n        if(i\
    \ > 0 && i == (int)i && i % 2 == 1) {\n            sum += i * i;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for(auto i : lst) {\n      \
    \  if(i > 0 && i == (int)i && i % 2 == 1) {\n            sum += i * i;\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(auto i : lst)\
    \ {\n        if(i > 0 && i == (int)i && i % 2 != 0) {\n            sum += i *\
    \ i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] &&\
    \ lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && floor(lst[i]) == lst[i]) {\n\
    \            if(lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && (int)lst[i] == lst[i]) {\n            if((int)lst[i]\
    \ % 2 != 0) {\n                sum += (int)lst[i] * (int)lst[i];\n           \
    \ }\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0;\
    \ i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && (int)lst[i]\
    \ == lst[i]) {\n            if((int)lst[i] % 2 != 0) {\n                sum +=\
    \ lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] < 0) {\n            continue;\n        }\n       \
    \ if(lst[i] - (int)lst[i] != 0) {\n            continue;\n        }\n        if(lst[i]\
    \ % 2 == 0) {\n            continue;\n        }\n        sum += lst[i] * lst[i];\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n\t\
    \t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && lst[i] == (int)lst[i] &&\
    \ lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i]\
    \ && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 == 1) {\n  \
    \          sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 &&\
    \ lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0) {\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] > 0 && (int)lst[i]\
    \ == lst[i]) {\n            if((int)lst[i] % 2 == 1) {\n                sum +=\
    \ pow(lst[i], 2);\n            }\n        }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\n// >>> order_by_points([1,\
  \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
  std::vector<long> order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long n = nums[i];\n        while (n != 0) {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = 0; j\
    \ < sum.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n         \
    \       std::swap(sum[j], sum[j + 1]);\n                std::swap(nums[j], nums[j\
    \ + 1]);\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       sum_of_digits.push_back(sum);\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int min = sum_of_digits[i];\n        int min_index = i;\n  \
    \      for (int j = i; j < nums.size(); j++) {\n            if (sum_of_digits[j]\
    \ < min) {\n                min = sum_of_digits[j];\n                min_index\
    \ = j;\n            }\n        }\n        std::swap(sum_of_digits[i], sum_of_digits[min_index]);\n\
    \        std::swap(nums[i], nums[min_index]);\n    }\n    return nums;", "   \
    \ std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n     \
    \       num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n \
    \   for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num > 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n  \
    \          num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> map;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        map[sum] = nums[i];\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        result.push_back(it->second);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n        long\
    \ temp=0;\n        long temp1=nums[i];\n        while(temp1!=0){\n           \
    \ temp+=temp1%10;\n            temp1/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        std::sort(temp.begin(), temp.end());\n        for\
    \ (int i = 0; i < temp.size(); i++) {\n            result.push_back(temp[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n      \
    \  }\n        while (num > 0) {\n            sum += num % 10;\n            num\
    \ = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n  \
    \          num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> ans;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long temp_sum=0;\n        while(temp!=0){\n\
    \            temp_sum+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(temp_sum);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long temp_sum=0;\n        while(temp!=0){\n            temp_sum+=temp%10;\n\
    \            temp/=10;\n        }\n        for(int j=0;j<nums.size();j++){\n \
    \           if(temp_sum<sum[j]){\n                ans.push_back(nums[i]);\n  \
    \              break;\n            }\n        }\n    }\n    return ans;", "  \
    \  std::vector<long> result;\n    std::map<long, long> m;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        long temp = nums[i];\n\
    \        while (temp > 0) {\n            sum += temp % 10;\n            temp /=\
    \ 10;\n        }\n        m[sum] = nums[i];\n    }\n    for (auto it = m.begin();\
    \ it != m.end(); it++) {\n        result.push_back(it->second);\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long temp = nums[i];\n        while (temp != 0) {\n            sum +=\
    \ temp % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (long i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long temp = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        temp = 0;\n        while (nums[i] != 0) {\n\
    \            temp += nums[i] % 10;\n            nums[i] /= 10;\n        }\n  \
    \      sum.push_back(temp);\n        index.push_back(i);\n    }\n    for (long\
    \ i = 0; i < sum.size(); i++) {\n        for (long j = i + 1; j < sum.size();\
    \ j++) {\n            if (sum[i] > sum[j]) {\n                temp = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = index[i];\n                index[i] = index[j];\n              \
    \  index[j] = temp;\n            }\n        }\n    }\n    for (long i = 0; i <\
    \ index.size(); i++) {\n        result.push_back(nums[index[i]]);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto i = map.begin(); i != map.end(); i++) {\n        for (int\
    \ j = 0; j < i->second.size(); j++) {\n            result.push_back(i->second[j]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j < nums.size()\
    \ - i - 1; j++) {\n            if (sum_of_digits[j] > sum_of_digits[j + 1]) {\n\
    \                long temp = sum_of_digits[j];\n                sum_of_digits[j]\
    \ = sum_of_digits[j + 1];\n                sum_of_digits[j + 1] = temp;\n    \
    \            temp = index[j];\n                index[j] = index[j + 1];\n    \
    \            index[j + 1] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    long sum = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int j = i\
    \ + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] > sum_of_digits[j])\
    \ {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n        \
    \        std::swap(index[i], index[j]);\n            }\n        }\n    }\n   \
    \ for (int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        if (num < 0) {\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = num / 10;\n        }\n        map[sum] = nums[i];\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long temp = nums[i];\n        while (temp != 0) {\n\
    \            sum += temp % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    std::map<long, std::vector<long>> m;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        if (num < 0) {\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin(); it !=\
    \ m.end(); it++) {\n        std::vector<long> v = it->second;\n        for (int\
    \ i = 0; i < v.size(); i++) {\n            res.push_back(v[i]);\n        }\n \
    \   }\n    return res;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        for (long\
    \ j = 0; j < std::to_string(nums[i]).size(); j++) {\n            sum_of_digits\
    \ += std::to_string(nums[i])[j] - '0';\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum.size(); i++)\
    \ {\n        for (long j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (long i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      if (num < 0) {\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     sum = 0;\n        while (nums[i] != 0) {\n            sum += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        for (int j = 0; j < nums.size() - i - 1; j++) {\n            if (sum_of_digits[j]\
    \ > sum_of_digits[j + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j\
    \ + 1]);\n                std::swap(index[j], index[j + 1]);\n            }\n\
    \        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num > 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = 0; j\
    \ < sum.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n         \
    \       std::swap(sum[j], sum[j + 1]);\n                std::swap(nums[j], nums[j\
    \ + 1]);\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n   \
    \     long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long sum_of_digits=0;\n \
    \       long temp=nums[i];\n        while(temp!=0){\n            sum_of_digits+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_of_digits);\n   \
    \ }\n    std::vector<long> temp=nums;\n    std::sort(sum.begin(),sum.end());\n\
    \    for(int i=0;i<sum.size();i++){\n        for(int j=0;j<nums.size();j++){\n\
    \            long sum_of_digits=0;\n            long temp=nums[j];\n         \
    \   while(temp!=0){\n                sum_of_digits+=temp%10;\n               \
    \ temp/=10;\n            }\n            if(sum_of_digits==sum[i]){\n         \
    \       result.push_back(nums[j]);\n                nums[j]=0;\n             \
    \   break;\n            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    long\
    \ sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum_of_digits\
    \ = 0;\n        while (nums[i] != 0) {\n            sum_of_digits += nums[i] %\
    \ 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum.size(); i++)\
    \ {\n        for (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < sum.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      sum = 0;\n        while (nums[i] != 0) {\n            sum += nums[i] %\
    \ 10;\n            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (long j = i + 1; j < sum_of_digits.size(); j++) {\n    \
    \        if (sum_of_digits[i] > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i],\
    \ sum_of_digits[j]);\n                std::swap(index[i], index[j]);\n       \
    \     }\n        }\n    }\n    for (long i = 0; i < index.size(); i++) {\n   \
    \     result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      sum = 0;\n        while (nums[i] != 0) {\n            sum += nums[i] %\
    \ 10;\n            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (long j = i + 1; j < sum_of_digits.size(); j++) {\n    \
    \        if (sum_of_digits[i] > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i],\
    \ sum_of_digits[j]);\n                std::swap(index[i], index[j]);\n       \
    \     }\n        }\n    }\n    for (long i = 0; i < index.size(); i++) {\n   \
    \     result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> temp;\n    std::vector<long> temp2;\n    std::vector<long>\
    \ temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long>\
    \ temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    std::vector<long>\
    \ temp9;\n    std::vector<long> temp10;\n    std::vector<long> temp11;\n    std::vector<long>\
    \ temp12;\n    std::vector<long> temp13;\n    std::vector<long> temp14;\n    std::vector<long>\
    \ temp15;\n    std::vector<long> temp16;\n    std::vector<long> temp17;\n    std::vector<long>\
    \ temp18;\n    std::vector<long> temp19;\n    std::vector<long> temp20;\n    std::vector<long>\
    \ temp21;\n    std::vector<long> temp22;\n    std::vector<long> temp23;\n    std::vector<long>\
    \ temp24;\n    std::vector<long> temp25;\n    std::vector<long> temp26;\n    std::vector<long>\
    \ temp27;\n    std::vector<long> temp28;\n    std::vector<long> temp29;\n    std::vector<long>\
    \ temp30;\n    std::vector<long> temp31;\n    std::vector<long> temp32;\n    std::vector<long>\
    \ temp33;\n    std::vector<long> temp34;\n    std::vector<long> temp35;\n    std::vector<long>\
    \ temp36;\n    std::vector<long> temp37;\n    std::vector<long> temp38;\n    std::vector<long>\
    \ temp39;\n    std::vector<long> temp40;\n    std::vector<long> temp41;\n    std::vector<long>\
    \ temp42;\n    std::vector<long> temp43;\n    std::vector<long> temp44;\n    std::vector<long>\
    \ temp45;\n    std::vector<long>", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (int i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size(); j++) {\n         \
    \   if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[j]);\n\
    \                sum_of_digits[j] = -1;\n                break;\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum\
    \ = 0;\n        int num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        int min = sum_of_digits[i];\n\
    \        int index = i;\n        for (int j = i + 1; j < nums.size(); j++) {\n\
    \            if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                index = j;\n            }\n        }\n        std::swap(sum_of_digits[i],\
    \ sum_of_digits[index]);\n        std::swap(nums[i], nums[index]);\n    }\n  \
    \  return nums;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ long temp = sum[i];\n                sum[i] = sum[j];\n                sum[j]\
    \ = temp;\n                temp = index[i];\n                index[i] = index[j];\n\
    \                index[j] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (long i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n  \
    \          num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (long i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        if (num < 0) {\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = num / 10;\n        }\n        map[sum] = nums[i];\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    for (long i = 0; i < sum_of_digits.size(); i++) {\n        for (long j =\
    \ i + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] >\
    \ sum_of_digits[j]) {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n        }\n  \
    \  }\n    for (long i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long>::iterator it;\n  \
    \  long sum_of_digits = 0;\n    long i = 0;\n    for (it = nums.begin(); it !=\
    \ nums.end(); it++) {\n        sum_of_digits = 0;\n        while (*it != 0) {\n\
    \            sum_of_digits += *it % 10;\n            *it /= 10;\n        }\n \
    \       sum.push_back(sum_of_digits);\n        index.push_back(i);\n        i++;\n\
    \    }\n    for (i = 0; i < nums.size(); i++) {\n        for (long j = 0; j <\
    \ nums.size() - i - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n      \
    \          long temp = sum[j];\n                sum[j] = sum[j + 1];\n       \
    \         sum[j + 1] = temp;\n                temp = index[j];\n             \
    \   index[j] = index[j + 1];\n                index[j + 1] = temp;\n         \
    \   }\n        }\n    }\n    for (i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ std::swap(sum[i], sum[j]);\n                std::swap(index[i], index[j]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, long> sum_map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       sum_map[sum] = nums[i];\n    }\n    for (auto it = sum_map.begin(); it\
    \ != sum_map.end(); it++) {\n        result.push_back(it->second);\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        if (num < 0) {\n            num = -num;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sums;\n    std::vector<long> indices;\n    long sum = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        sum = 0;\n        long num = nums[i];\n   \
    \     while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        sums.push_back(sum);\n        indices.push_back(i);\n    }\n\
    \    for (int i = 0; i < sums.size(); i++) {\n        for (int j = i + 1; j <\
    \ sums.size(); j++) {\n            if (sums[i] > sums[j]) {\n                long\
    \ temp = sums[i];\n                sums[i] = sums[j];\n                sums[j]\
    \ = temp;\n                temp = indices[i];\n                indices[i] = indices[j];\n\
    \                indices[j] = temp;\n            }\n        }\n    }\n    for\
    \ (int i = 0; i < indices.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    std::vector<long> temp;\n    long sum_of_digits = 0;\n    long temp_sum\
    \ = 0;\n    long temp_index = 0;\n    long temp_num = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        temp_num = nums[i];\n        while (temp_num\
    \ != 0) {\n            sum_of_digits += temp_num % 10;\n            temp_num /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        sum_of_digits\
    \ = 0;\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j\
    \ < nums.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n        \
    \        temp_sum = sum[j];\n                sum[j] = sum[j + 1];\n          \
    \      sum[j + 1] = temp_sum;\n                temp_index = index[j];\n      \
    \          index[j] = index[j + 1];\n                index[j + 1] = temp_index;\n\
    \            }\n        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        temp.push_back(nums[index[i]]);\n    }\n    return temp;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n \
    \       long temp=0;\n        long temp2=nums[i];\n        if(temp2<0){\n    \
    \        temp2*=-1;\n        }\n        while(temp2>0){\n            temp+=temp2%10;\n\
    \            temp2/=10;\n        }\n        sum.push_back(temp);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        int min=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<sum[min]){\n                min=j;\n            }\n   \
    \     }\n        long temp=sum[i];\n        sum[i]=sum[min];\n        sum[min]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[min];\n        nums[min]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum_of_digits;\n    std::vector<int> index;\n    int sum = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int j = i\
    \ + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] > sum_of_digits[j])\
    \ {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n        \
    \        std::swap(index[i], index[j]);\n            }\n        }\n    }\n   \
    \ for (int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int temp;\n    int temp2;\n    int temp3;\n\
    \    for(int i = 0; i < nums.size(); i++){\n        temp = 0;\n        temp2 =\
    \ nums[i];\n        while(temp2 != 0){\n            temp += temp2 % 10;\n    \
    \        temp2 /= 10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i = 0; i < sum.size(); i++){\n        for(int j = i + 1; j\
    \ < sum.size(); j++){\n            if(sum[i] > sum[j]){\n                temp\
    \ = sum[i];\n                sum[i] = sum[j];\n                sum[j] = temp;\n\
    \                temp2 = index[i];\n                index[i] = index[j];\n   \
    \             index[j] = temp2;\n            }\n        }\n    }\n    for(int\
    \ i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        long sum = 0;\n\
    \        long temp = num;\n        while (temp != 0) {\n            sum += temp\
    \ % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (auto num : it->second) {\n            result.push_back(num);\n        }\n \
    \   }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   for(int i=0;i<nums.size();i++){\n        long min=sum[i];\n        int index=i;\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n    \
    \            min=sum[j];\n                index=j;\n            }\n        }\n\
    \        long temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long sum_digit=0;\n        long temp=nums[i];\n        while(temp!=0){\n\
    \            sum_digit+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_digit);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            std::swap(sum[i],sum[j]);\n                std::swap(nums[i],nums[j]);\n\
    \                std::swap(index[i],index[j]);\n            }\n            else\
    \ if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n              \
    \      std::swap(sum[i],sum[j]);\n                    std::swap(nums[i],nums[j]);\n\
    \                    std::swap(index[i],index[j]);\n                }\n      \
    \      }\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::vector<long> sum;\n    std::vector<long> index;\n    int n = nums.size();\n\
    \    if(n == 0)\n        return result;\n    for(int i = 0; i < n; i++){\n   \
    \     int temp = nums[i];\n        int sum_temp = 0;\n        while(temp != 0){\n\
    \            sum_temp += temp % 10;\n            temp /= 10;\n        }\n    \
    \    sum.push_back(sum_temp);\n        index.push_back(i);\n    }\n    for(int\
    \ i = 0; i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            if(sum[i]\
    \ > sum[j]){\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n            else if(sum[i] == sum[j]){\n        \
    \        if(index[i] > index[j]){\n                    std::swap(sum[i], sum[j]);\n\
    \                    std::swap(index[i], index[j]);\n                }\n     \
    \       }\n        }\n    }\n    for(int i = 0; i < n; i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (auto num : nums) {\n        long sum = 0;\n       \
    \ while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n  \
    \      }\n        sum_of_digits.push_back(sum);\n    }\n    for (int i = 0; i\
    \ < nums.size(); i++) {\n        int min = i;\n        for (int j = i + 1; j <\
    \ nums.size(); j++) {\n            if (sum_of_digits[j] < sum_of_digits[min])\
    \ {\n                min = j;\n            }\n        }\n        if (min != i)\
    \ {\n            std::swap(sum_of_digits[i], sum_of_digits[min]);\n          \
    \  std::swap(nums[i], nums[min]);\n        }\n    }\n    return nums;", "  std::vector<long>\
    \ result;\n  std::vector<long> sums;\n  std::vector<long> indices;\n  for (int\
    \ i = 0; i < nums.size(); i++) {\n    long sum = 0;\n    long num = nums[i];\n\
    \    while (num != 0) {\n      sum += num % 10;\n      num /= 10;\n    }\n   \
    \ sums.push_back(sum);\n    indices.push_back(i);\n  }\n  for (int i = 0; i <\
    \ sums.size(); i++) {\n    for (int j = i + 1; j < sums.size(); j++) {\n     \
    \ if (sums[i] > sums[j]) {\n        long temp = sums[i];\n        sums[i] = sums[j];\n\
    \        sums[j] = temp;\n        temp = indices[i];\n        indices[i] = indices[j];\n\
    \        indices[j] = temp;\n      }\n    }\n  }\n  for (int i = 0; i < indices.size();\
    \ i++) {\n    result.push_back(nums[indices[i]]);\n  }\n  return result;", " \
    \   std::vector<long> result;\n    std::map<long, long> map;\n    for (int i =\
    \ 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        map[sum] = nums[i];\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        result.push_back(it->second);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    long sum = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int j = i\
    \ + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] > sum_of_digits[j])\
    \ {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n        \
    \        std::swap(index[i], index[j]);\n            }\n        }\n    }\n   \
    \ for (int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num > 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long temp = nums[i];\n        while (temp\
    \ != 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n\
    \        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n \
    \   for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int j = i +\
    \ 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] > sum_of_digits[j])\
    \ {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n        \
    \        std::swap(index[i], index[j]);\n            }\n        }\n    }\n   \
    \ for (int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum_of_digits += num % 10;\n            num /= 10;\n  \
    \      }\n        sum.push_back(sum_of_digits);\n        sum_of_digits = 0;\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum.size(); i++)\
    \ {\n        for (long j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                long temp = sum[i];\n                sum[i] = sum[j];\n\
    \                sum[j] = temp;\n                temp = index[i];\n          \
    \      index[i] = index[j];\n                index[j] = temp;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   for(int i=0;i<nums.size();i++){\n        long min=sum[i];\n        int min_index=i;\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n    \
    \            min=sum[j];\n                min_index=j;\n            }\n      \
    \  }\n        long temp=sum[i];\n        sum[i]=sum[min_index];\n        sum[min_index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[min_index];\n        nums[min_index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int i;\n    for(i=0;i<nums.size();i++)\n\
    \    {\n        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0)\n\
    \        {\n            sum_temp+=temp%10;\n            temp/=10;\n        }\n\
    \        sum.push_back(sum_temp);\n        index.push_back(i);\n    }\n    for(i=0;i<sum.size();i++)\n\
    \    {\n        for(int j=i+1;j<sum.size();j++)\n        {\n            if(sum[i]>sum[j])\n\
    \            {\n                long temp=sum[i];\n                sum[i]=sum[j];\n\
    \                sum[j]=temp;\n                temp=index[i];\n              \
    \  index[i]=index[j];\n                index[j]=temp;\n            }\n       \
    \ }\n    }\n    for(i=0;i<index.size();i++)\n    {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        int sum = 0;\n\
    \        if (num < 0) {\n            num = num * -1;\n        }\n        while\
    \ (num != 0) {\n            sum += num % 10;\n            num = num / 10;\n  \
    \      }\n        map[sum].push_back(num);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (auto num : it->second) {\n          \
    \  result.push_back(num);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int x = 0;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int temp = nums[i];\n        int sum_temp = 0;\n\
    \        while (temp != 0) {\n            sum_temp += temp % 10;\n           \
    \ temp /= 10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = 0; j\
    \ < sum.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n         \
    \       std::swap(sum[j], sum[j + 1]);\n                std::swap(index[j], index[j\
    \ + 1]);\n            }\n        }\n    }\n    for (int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     sum = 0;\n        while (nums[i] != 0) {\n            sum += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (int j = i + 1; j < sum_of_digits.size(); j++) {\n     \
    \       if (sum_of_digits[i] > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i],\
    \ sum_of_digits[j]);\n                std::swap(index[i], index[j]);\n       \
    \     }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n    \
    \    result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n\
    \    std::vector<long> index;\n    long sum = 0;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        sum = 0;\n        while (nums[i] != 0) {\n            sum +=\
    \ nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (int j = i + 1; j < sum_of_digits.size(); j++) {\n     \
    \       if (sum_of_digits[i] > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i],\
    \ sum_of_digits[j]);\n                std::swap(index[i], index[j]);\n       \
    \     }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n    \
    \    result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    long\
    \ temp;\n    long sum_temp;\n    long index_temp;\n    for(int i=0;i<nums.size();i++){\n\
    \        temp = nums[i];\n        sum_temp = 0;\n        while(temp!=0){\n   \
    \         sum_temp += temp%10;\n            temp = temp/10;\n        }\n     \
    \   sum.push_back(sum_temp);\n        index.push_back(i);\n    }\n    for(int\
    \ i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n         \
    \   if(sum[i]>sum[j]){\n                temp = sum[i];\n                sum[i]\
    \ = sum[j];\n                sum[j] = temp;\n                index_temp = index[i];\n\
    \                index[i] = index[j];\n                index[j] = index_temp;\n\
    \            }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n     \
    \   result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    for (long i = 0; i < sum_of_digits.size(); i++) {\n        for (long j =\
    \ i + 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] >\
    \ sum_of_digits[j]) {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n        }\n  \
    \  }\n    for (long i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long>::iterator it;\n  \
    \  long sum_of_digits = 0;\n    long i = 0;\n    for (it = nums.begin(); it !=\
    \ nums.end(); it++) {\n        sum_of_digits = 0;\n        while (*it != 0) {\n\
    \            sum_of_digits += *it % 10;\n            *it /= 10;\n        }\n \
    \       sum.push_back(sum_of_digits);\n        index.push_back(i);\n        i++;\n\
    \    }\n    for (long i = 0; i < nums.size(); i++) {\n        for (long j = 0;\
    \ j < nums.size() - i - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n  \
    \              long temp = sum[j];\n                sum[j] = sum[j + 1];\n   \
    \             sum[j + 1] = temp;\n                temp = index[j];\n         \
    \       index[j] = index[j + 1];\n                index[j + 1] = temp;\n     \
    \       }\n        }\n    }\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n   \
    \     index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        for (int j = i + 1; j < nums.size(); j++) {\n            if (sum_of_digits[i]\
    \ > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i], sum_of_digits[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n        }\n  \
    \  }\n    for (int i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int temp = nums[i];\n        while (temp != 0) {\n \
    \           sum += temp % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long temp = 0;\n    long temp2 = 0;\n\
    \    long temp3 = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        temp\
    \ = nums[i];\n        while (temp != 0) {\n            temp2 += temp % 10;\n \
    \           temp /= 10;\n        }\n        sum.push_back(temp2);\n        temp2\
    \ = 0;\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        temp = nums[i];\n\
    \        while (temp != 0) {\n            temp2 += temp % 10;\n            temp\
    \ /= 10;\n        }\n        for (int j = 0; j < nums.size(); j++) {\n       \
    \     temp3 = nums[j];\n            while (temp3 != 0) {\n                temp2\
    \ += temp3 % 10;\n                temp3 /= 10;\n            }\n            if\
    \ (temp2 == sum[i]) {\n                index.push_back(j);\n            }\n  \
    \          temp2 = 0;\n        }\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> points;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        points[sum] = i;\n    }\n    for (auto it : points)\
    \ {\n        result.push_back(nums[it.second]);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min]){\n              \
    \  min=j;\n            }\n        }\n        long temp=sum[i];\n        sum[i]=sum[min];\n\
    \        sum[min]=temp;\n        temp=nums[i];\n        nums[i]=nums[min];\n \
    \       nums[min]=temp;\n    }\n    return nums;", "    std::vector<long> v;\n\
    \    std::vector<long> v1;\n    std::vector<long> v2;\n    std::vector<long> v3;\n\
    \    std::vector<long> v4;\n    std::vector<long> v5;\n    std::vector<long> v6;\n\
    \    std::vector<long> v7;\n    std::vector<long> v8;\n    std::vector<long> v9;\n\
    \    std::vector<long> v10;\n    std::vector<long> v11;\n    std::vector<long>\
    \ v12;\n    std::vector<long> v13;\n    std::vector<long> v14;\n    std::vector<long>\
    \ v15;\n    std::vector<long> v16;\n    std::vector<long> v17;\n    std::vector<long>\
    \ v18;\n    std::vector<long> v19;\n    std::vector<long> v20;\n    std::vector<long>\
    \ v21;\n    std::vector<long> v22;\n    std::vector<long> v23;\n    std::vector<long>\
    \ v24;\n    std::vector<long> v25;\n    std::vector<long> v26;\n    std::vector<long>\
    \ v27;\n    std::vector<long> v28;\n    std::vector<long> v29;\n    std::vector<long>\
    \ v30;\n    std::vector<long> v31;\n    std::vector<long> v32;\n    std::vector<long>\
    \ v33;\n    std::vector<long> v34;\n    std::vector<long> v35;\n    std::vector<long>\
    \ v36;\n    std::vector<long> v37;\n    std::vector<long> v38;\n    std::vector<long>\
    \ v39;\n    std::vector<long> v40;\n    std::vector<long> v41;\n    std::vector<long>\
    \ v42;\n    std::vector<long> v43;\n    std::vector<long> v44;\n    std::vector<long>\
    \ v45;\n    std::vector<long", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n    \
    \        num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (long i = 0; i < temp.size(); i++) {\n     \
    \       result.push_back(temp[i]);\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        long min = sum_of_digits[i];\n        int min_index = i;\n      \
    \  for (int j = i + 1; j < nums.size(); j++) {\n            if (sum_of_digits[j]\
    \ < min) {\n                min = sum_of_digits[j];\n                min_index\
    \ = j;\n            }\n        }\n        std::swap(sum_of_digits[i], sum_of_digits[min_index]);\n\
    \        std::swap(index[i], index[min_index]);\n    }\n    for (int i = 0; i\
    \ < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n    }\n  \
    \  return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (long i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> map;\n    for (int i =\
    \ 0; i < nums.size(); i++) {\n        long sum = 0;\n        long temp = nums[i];\n\
    \        while (temp != 0) {\n            sum += temp % 10;\n            temp\
    \ /= 10;\n        }\n        map[sum] = nums[i];\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        result.push_back(it->second);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        long num=nums[i];\n\
    \        while(num>0){\n            temp+=num%10;\n            num/=10;\n    \
    \    }\n        sum.push_back(temp);\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        long min=sum[i];\n        int index=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<min){\n                min=sum[j];\n                index=j;\n\
    \            }\n        }\n        long temp=sum[i];\n        sum[i]=sum[index];\n\
    \        sum[index]=temp;\n        temp=nums[i];\n        nums[i]=nums[index];\n\
    \        nums[index]=temp;\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum = 0;\n \
    \       while (nums[i] != 0) {\n            sum += nums[i] % 10;\n           \
    \ nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n\
    \    }\n    for (long i = 0; i < sum_of_digits.size(); i++) {\n        for (long\
    \ j = 0; j < sum_of_digits.size() - i - 1; j++) {\n            if (sum_of_digits[j]\
    \ > sum_of_digits[j + 1]) {\n                long temp = sum_of_digits[j];\n \
    \               sum_of_digits[j] = sum_of_digits[j + 1];\n                sum_of_digits[j\
    \ + 1] = temp;\n                temp = index[j];\n                index[j] = index[j\
    \ + 1];\n                index[j + 1] = temp;\n            }\n        }\n    }\n\
    \    for (long i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<int> index;\n    int sum_of_digits = 0;\n    int temp\
    \ = 0;\n    int count = 0;\n    for (int i = 0; i < nums.size(); i++) {\n    \
    \    temp = nums[i];\n        while (temp != 0) {\n            sum_of_digits +=\
    \ temp % 10;\n            temp /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        sum_of_digits = 0;\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        for (int j = 0; j < nums.size(); j++) {\n            if (sum[i] <\
    \ sum[j]) {\n                count++;\n            }\n        }\n        index.push_back(count);\n\
    \        count = 0;\n    }\n    for (int i = 0; i < nums.size(); i++) {\n    \
    \    result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n  \
    \      while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        long num = nums[i];\n        while (num) {\n        \
    \    sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = 0; j\
    \ < sum.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n         \
    \       std::swap(sum[j], sum[j + 1]);\n                std::swap(nums[j], nums[j\
    \ + 1]);\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sums;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        long sum = 0;\n        long num = nums[i];\n        while (num !=\
    \ 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    \
    \    sums.push_back(sum);\n    }\n    std::vector<long> sorted_sums = sums;\n\
    \    std::sort(sorted_sums.begin(), sorted_sums.end());\n    for (int i = 0; i\
    \ < sorted_sums.size(); i++) {\n        for (int j = 0; j < sums.size(); j++)\
    \ {\n            if (sorted_sums[i] == sums[j]) {\n                result.push_back(nums[j]);\n\
    \                sums[j] = -1;\n                break;\n            }\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (auto num : nums) {\n        long sum = 0;\n       \
    \ while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n \
    \       }\n        sum_of_digits.push_back(sum);\n    }\n    for (int i = 0; i\
    \ < nums.size(); i++) {\n        int min_index = std::min_element(sum_of_digits.begin(),\
    \ sum_of_digits.end()) - sum_of_digits.begin();\n        result.push_back(nums[min_index]);\n\
    \        sum_of_digits[min_index] = INT_MAX;\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long sum_num=0;\n     \
    \   long num=nums[i];\n        while(num!=0){\n            sum_num+=num%10;\n\
    \            num/=10;\n        }\n        sum.push_back(sum_num);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (auto i : nums) {\n        int sum = 0;\n   \
    \     int temp = i;\n        while (temp != 0) {\n            sum += temp % 10;\n\
    \            temp /= 10;\n        }\n        m[sum].push_back(i);\n    }\n   \
    \ for (auto i : m) {\n        for (auto j : i.second) {\n            result.push_back(j);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=nums[i];\n     \
    \   int sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   for(int i=0;i<nums.size();i++){\n        int min=sum[i];\n        int index=i;\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n    \
    \            min=sum[j];\n                index=j;\n            }\n        }\n\
    \        int temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        long sum = 0;\n\
    \        long temp = num;\n        while (temp != 0) {\n            sum += temp\
    \ % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(num);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (auto num : it->second) {\n            result.push_back(num);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        int temp = nums[i];\n        while (temp\
    \ != 0) {\n            sum_of_digits += temp % 10;\n            temp /= 10;\n\
    \        }\n        sum.push_back(sum_of_digits);\n        sum_of_digits = 0;\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        int min = sum[i];\n        int min_index = i;\n        for (int j\
    \ = i + 1; j < nums.size(); j++) {\n            if (sum[j] < min) {\n        \
    \        min = sum[j];\n                min_index = j;\n            }\n      \
    \  }\n        std::swap(sum[i], sum[min_index]);\n        std::swap(index[i],\
    \ index[min_index]);\n    }\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n\
    \    std::vector<long>::iterator it;\n    long sum = 0;\n    long i = 0;\n   \
    \ for (it = nums.begin(); it != nums.end(); it++) {\n        sum = 0;\n      \
    \  while (*it) {\n            sum += *it % 10;\n            *it /= 10;\n     \
    \   }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n  \
    \      i++;\n    }\n    for (i = 0; i < nums.size(); i++) {\n        for (long\
    \ j = 0; j < nums.size() - i - 1; j++) {\n            if (sum_of_digits[j] > sum_of_digits[j\
    \ + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j + 1]);\n\
    \                std::swap(index[j], index[j + 1]);\n            }\n        }\n\
    \    }\n    for (i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (int i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size(); j++) {\n         \
    \   if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[j]);\n\
    \                sum_of_digits[j] = -1;\n                break;\n            }\n\
    \        }\n    }\n    return result;", "  std::vector<long> result;\n  std::map<long,\
    \ std::vector<long>> map;\n  for (int i = 0; i < nums.size(); i++) {\n    long\
    \ sum = 0;\n    long num = nums[i];\n    while (num != 0) {\n      sum += num\
    \ % 10;\n      num /= 10;\n    }\n    map[sum].push_back(nums[i]);\n  }\n  for\
    \ (auto i = map.begin(); i != map.end(); i++) {\n    for (int j = 0; j < i->second.size();\
    \ j++) {\n      result.push_back(i->second[j]);\n    }\n  }\n  return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::vector<long> temp;\n    std::vector<long> temp_index;\n  \
    \  std::vector<long> temp_index_result;\n    std::vector<long> temp_result;\n\
    \    long sum = 0;\n    long sum_temp = 0;\n    long index = 0;\n    long index_temp\
    \ = 0;\n    long index_result = 0;\n    long index_result_temp = 0;\n    long\
    \ result_temp = 0;\n    long result_temp_index = 0;\n    long result_temp_index_result\
    \ = 0;\n    long result_temp_result = 0;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        sum = 0;\n        index = i;\n        index_result = i;\n  \
    \      while (nums[i] != 0) {\n            sum += nums[i] % 10;\n            nums[i]\
    \ /= 10;\n        }\n        temp.push_back(sum);\n        temp_index.push_back(index);\n\
    \        temp_index_result.push_back(index_result);\n    }\n    for (int i = 0;\
    \ i < temp.size(); i++) {\n        sum_temp = temp[i];\n        index_temp = temp_index[i];\n\
    \        index_result_temp = temp_index_result[i];\n        for (int j = i; j\
    \ < temp.size(); j++) {\n            if (sum_temp > temp[j]) {\n             \
    \   sum_temp = temp[j];\n                index_temp = temp_index[j];\n       \
    \         index_result_temp = temp_index_result[j];\n            }\n        }\n\
    \        temp[i] = sum_temp;\n        temp_index[i] = index_temp;\n        temp_index_result[i]\
    \ = index_result_temp;\n    }\n    for (int i = 0; i < temp_index.size(); i++)\
    \ {\n        result_temp = nums[temp_index[i]];\n        result_temp_index = temp_index[i];\n\
    \        result_temp_index_result = temp_index_", "    std::vector<long> result;\n\
    \    std::vector<long> sum;\n    std::vector<long> index;\n    long sum_of_digits\
    \ = 0;\n    long temp = 0;\n    for (int i = 0; i < nums.size(); i++) {\n    \
    \    temp = nums[i];\n        while (temp != 0) {\n            sum_of_digits +=\
    \ temp % 10;\n            temp /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        sum_of_digits = 0;\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        index.push_back(i);\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        for (int j = 0; j < nums.size() - 1; j++) {\n            if\
    \ (sum[j] > sum[j + 1]) {\n                std::swap(sum[j], sum[j + 1]);\n  \
    \              std::swap(nums[j], nums[j + 1]);\n                std::swap(index[j],\
    \ index[j + 1]);\n            }\n        }\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        for (int j = 0; j < nums.size() - 1; j++) {\n            if\
    \ (sum[j] == sum[j + 1]) {\n                if (index[j] > index[j + 1]) {\n \
    \                   std::swap(sum[j], sum[j + 1]);\n                    std::swap(nums[j],\
    \ nums[j + 1]);\n                    std::swap(index[j], index[j + 1]);\n    \
    \            }\n            }\n        }\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sums;\n    std::vector<long> indices;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n     \
    \       num /= 10;\n        }\n        sums.push_back(sum);\n        indices.push_back(i);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        long min = INT_MAX;\n\
    \        int min_index = 0;\n        for (int j = 0; j < sums.size(); j++) {\n\
    \            if (sums[j] < min) {\n                min = sums[j];\n          \
    \      min_index = j;\n            }\n        }\n        result.push_back(nums[indices[min_index]]);\n\
    \        sums.erase(sums.begin() + min_index);\n        indices.erase(indices.begin()\
    \ + min_index);\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::map<long, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    std::vector<int> indices;\n    int sum = 0;\n    int index = 0;\n\
    \    for (long num : nums) {\n        sum = 0;\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        sums.push_back(sum);\n\
    \        indices.push_back(index);\n        index++;\n    }\n    for (int i =\
    \ 0; i < sums.size(); i++) {\n        for (int j = i + 1; j < sums.size(); j++)\
    \ {\n            if (sums[i] > sums[j]) {\n                int temp = sums[i];\n\
    \                sums[i] = sums[j];\n                sums[j] = temp;\n       \
    \         temp = indices[i];\n                indices[i] = indices[j];\n     \
    \           indices[j] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < indices.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=nums[i];\n     \
    \   int sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n    }\n \
    \   for(int i=0;i<nums.size();i++){\n        int min=sum[i];\n        int index=i;\n\
    \        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n    \
    \            min=sum[j];\n                index=j;\n            }\n        }\n\
    \        int temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (auto num : nums) {\n        int sum = 0;\n        int n = num;\n\
    \        while (n != 0) {\n            sum += n % 10;\n            n /= 10;\n\
    \        }\n        map[sum].push_back(num);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (auto num : it->second) {\n          \
    \  result.push_back(num);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    for(int\
    \ i=0;i<nums.size();i++){\n        long sum1=0;\n        long num=nums[i];\n \
    \       while(num!=0){\n            sum1+=num%10;\n            num=num/10;\n \
    \       }\n        sum.push_back(sum1);\n        index.push_back(i);\n    }\n\
    \    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp;\n    int temp2;\n    int temp3;\n\
    \    int temp4;\n    int temp5;\n    int temp6;\n    int temp7;\n    int temp8;\n\
    \    int temp9;\n    int temp10;\n    int temp11;\n    int temp12;\n    int temp13;\n\
    \    int temp14;\n    int temp15;\n    int temp16;\n    int temp17;\n    int temp18;\n\
    \    int temp19;\n    int temp20;\n    int temp21;\n    int temp22;\n    int temp23;\n\
    \    int temp24;\n    int temp25;\n    int temp26;\n    int temp27;\n    int temp28;\n\
    \    int temp29;\n    int temp30;\n    int temp31;\n    int temp32;\n    int temp33;\n\
    \    int temp34;\n    int temp35;\n    int temp36;\n    int temp37;\n    int temp38;\n\
    \    int temp39;\n    int temp40;\n    int temp41;\n    int temp42;\n    int temp43;\n\
    \    int temp44;\n    int temp45;\n    int temp46;\n    int temp47;\n    int temp48;\n\
    \    int temp49;\n    int temp50;\n    int temp51;\n    int temp52;\n    int temp53;\n\
    \    int temp54;\n    int temp55;\n    int temp56;\n    int temp57;\n    int temp58;\n\
    \    int temp59;\n    int temp60;\n    int temp61;\n    int temp62;\n    int temp63;\n\
    \    int temp64;\n    int temp65;\n    int temp66;\n    int temp67;\n    int temp68;\n\
    \    int temp69;\n    int temp70;\n    int temp71;\n    int temp72;\n    int temp73;\n\
    \    int temp74;\n    int temp75;\n    int temp76;\n    int temp77;\n    int temp78;\n\
    \    int temp79;\n    int temp80;\n    int", "    std::vector<long> result;\n\
    \    std::vector<long> sum;\n    std::vector<long> index;\n    int sum_of_digits\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n\
    \        while (nums[i] != 0) {\n            sum_of_digits += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum.size(); i++)\
    \ {\n        for (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    int sum_of_digits\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n\
    \        while (nums[i] != 0) {\n            sum_of_digits += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = 0; j\
    \ < sum.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n         \
    \       int temp = sum[j];\n                sum[j] = sum[j + 1];\n           \
    \     sum[j + 1] = temp;\n                temp = nums[j];\n                nums[j]\
    \ = nums[j + 1];\n                nums[j + 1] = temp;\n            }\n       \
    \ }\n    }\n    return nums;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long n = nums[i];\n        while (n != 0) {\n     \
    \       sum += n % 10;\n            n /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (int i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size(); j++) {\n         \
    \   if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[j]);\n\
    \                sum_of_digits[j] = -1;\n                break;\n            }\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      int temp=nums[i];\n        int sum_temp=0;\n        while(temp!=0){\n \
    \           sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            int temp=sum[i];\n                sum[i]=sum[j];\n              \
    \  sum[j]=temp;\n                temp=nums[i];\n                nums[i]=nums[j];\n\
    \                nums[j]=temp;\n                temp=index[i];\n             \
    \   index[i]=index[j];\n                index[j]=temp;\n            }\n      \
    \      else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n    \
    \                int temp=sum[i];\n                    sum[i]=sum[j];\n      \
    \              sum[j]=temp;\n                    temp=nums[i];\n             \
    \       nums[i]=nums[j];\n                    nums[j]=temp;\n                \
    \    temp=index[i];\n                    index[i]=index[j];\n                \
    \    index[j]=temp;\n                }\n            }\n        }\n    }\n    return\
    \ nums;", "    std::vector<long> result;\n    std::vector<long> sums;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n     \
    \       num /= 10;\n        }\n        sums.push_back(sum);\n    }\n    std::vector<long>\
    \ sorted_sums = sums;\n    std::sort(sorted_sums.begin(), sorted_sums.end());\n\
    \    for (int i = 0; i < sorted_sums.size(); i++) {\n        for (int j = 0; j\
    \ < sums.size(); j++) {\n            if (sorted_sums[i] == sums[j]) {\n      \
    \          result.push_back(nums[j]);\n                sums[j] = -1;\n       \
    \         break;\n            }\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n \
    \       int s=0;\n        long n=nums[i];\n        while(n){\n            s+=n%10;\n\
    \            n/=10;\n        }\n        sum.push_back(s);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        int min=sum[i];\n        int index=i;\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n       \
    \         min=sum[j];\n                index=j;\n            }\n        }\n  \
    \      std::swap(sum[i],sum[index]);\n        std::swap(nums[i],nums[index]);\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long temp = nums[i];\n        while (temp != 0) {\n          \
    \  sum += temp % 10;\n            temp /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        long min = sum_of_digits[i];\n\
    \        int index = i;\n        for (int j = i; j < nums.size(); j++) {\n   \
    \         if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                index = j;\n            }\n        }\n        std::swap(sum_of_digits[i],\
    \ sum_of_digits[index]);\n        std::swap(nums[i], nums[index]);\n    }\n  \
    \  return nums;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sums;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        sums.push_back(sum);\n    }\n    std::vector<long> sorted_sums\
    \ = sums;\n    std::sort(sorted_sums.begin(), sorted_sums.end());\n    for (int\
    \ i = 0; i < sorted_sums.size(); i++) {\n        for (int j = 0; j < sums.size();\
    \ j++) {\n            if (sorted_sums[i] == sums[j]) {\n                result.push_back(nums[j]);\n\
    \                sums[j] = -1;\n                break;\n            }\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum = 0;\n        while (nums[i] != 0) {\n            sum += nums[i]\
    \ % 10;\n            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j\
    \ < nums.size() - 1; j++) {\n            if (sum_of_digits[j] > sum_of_digits[j\
    \ + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j + 1]);\n\
    \                std::swap(nums[j], nums[j + 1]);\n            }\n        }\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>::iterator\
    \ it;\n    long sum = 0;\n    for (it = nums.begin(); it != nums.end(); it++)\
    \ {\n        sum = 0;\n        while (*it != 0) {\n            sum += *it % 10;\n\
    \            *it /= 10;\n        }\n        sum_of_digits.push_back(sum);\n  \
    \  }\n    std::vector<long>::iterator it1;\n    std::vector<long>::iterator it2;\n\
    \    for (it1 = sum_of_digits.begin(); it1 != sum_of_digits.end(); it1++) {\n\
    \        for (it2 = it1 + 1; it2 != sum_of_digits.end(); it2++) {\n          \
    \  if (*it1 > *it2) {\n                std::swap(*it1, *it2);\n              \
    \  std::swap(nums[it1 - sum_of_digits.begin()], nums[it2 - sum_of_digits.begin()]);\n\
    \            }\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    int i = 0;\n    for (auto n : nums) {\n        int s = 0;\n    \
    \    while (n != 0) {\n            s += n % 10;\n            n /= 10;\n      \
    \  }\n        sum.push_back(s);\n        index.push_back(i);\n        i++;\n \
    \   }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j\
    \ < nums.size() - i - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n    \
    \            std::swap(sum[j], sum[j + 1]);\n                std::swap(index[j],\
    \ index[j + 1]);\n            }\n        }\n    }\n    for (auto i : index) {\n\
    \        result.push_back(nums[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<int> sum_of_digits;\n    std::vector<int> index_of_nums;\n\
    \    int sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum =\
    \ 0;\n        while (nums[i] != 0) {\n            sum += nums[i] % 10;\n     \
    \       nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n   \
    \     index_of_nums.push_back(i);\n    }\n    for (int i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size() - 1; j++) {\n     \
    \       if (sum_of_digits[j] > sum_of_digits[j + 1]) {\n                std::swap(sum_of_digits[j],\
    \ sum_of_digits[j + 1]);\n                std::swap(index_of_nums[j], index_of_nums[j\
    \ + 1]);\n            }\n        }\n    }\n    for (int i = 0; i < index_of_nums.size();\
    \ i++) {\n        result.push_back(nums[index_of_nums[i]]);\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n\
    \    std::vector<long> indices;\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        long num = nums[i];\n        while (num != 0)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ sum_of_digits.push_back(sum);\n        indices.push_back(i);\n    }\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long min = sum_of_digits[i];\n\
    \        int min_index = i;\n        for (int j = i + 1; j < nums.size(); j++)\
    \ {\n            if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                min_index = j;\n            }\n        }\n        long temp =\
    \ sum_of_digits[i];\n        sum_of_digits[i] = sum_of_digits[min_index];\n  \
    \      sum_of_digits[min_index] = temp;\n        temp = indices[i];\n        indices[i]\
    \ = indices[min_index];\n        indices[min_index] = temp;\n    }\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        if (num < 0) {\n            num = -num;\n        }\n     \
    \   while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n  \
    \      long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> map;\n    for (auto i :\
    \ nums) {\n        long sum = 0;\n        long temp = i;\n        while (temp\
    \ != 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n\
    \        map[sum] = i;\n    }\n    for (auto i : map) {\n        result.push_back(i.second);\n\
    \    }\n    return result;", "    std::vector<long> sorted_nums;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> indices;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        for (long j = 0; j\
    \ < std::to_string(nums[i]).size(); j++) {\n            sum += std::to_string(nums[i])[j]\
    \ - '0';\n        }\n        sum_of_digits.push_back(sum);\n        indices.push_back(i);\n\
    \    }\n    for (long i = 0; i < nums.size(); i++) {\n        for (long j = 0;\
    \ j < nums.size() - 1; j++) {\n            if (sum_of_digits[j] > sum_of_digits[j\
    \ + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j + 1]);\n\
    \                std::swap(indices[j], indices[j + 1]);\n            }\n     \
    \   }\n    }\n    for (long i = 0; i < nums.size(); i++) {\n        sorted_nums.push_back(nums[indices[i]]);\n\
    \    }\n    return sorted_nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum\
    \ = 0;\n        long temp = nums[i];\n        while (temp != 0) {\n          \
    \  sum += temp % 10;\n            temp /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        int min = sum_of_digits[i];\n\
    \        int min_index = i;\n        for (int j = i; j < nums.size(); j++) {\n\
    \            if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                min_index = j;\n            }\n        }\n        std::swap(sum_of_digits[i],\
    \ sum_of_digits[min_index]);\n        std::swap(nums[i], nums[min_index]);\n \
    \   }\n    return nums;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    std::vector<int> indexes;\n    int sum = 0;\n    int index = 0;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        sum = 0;\n        index\
    \ = i;\n        while (nums[i] != 0) {\n            sum += nums[i] % 10;\n   \
    \         nums[i] /= 10;\n        }\n        sums.push_back(sum);\n        indexes.push_back(index);\n\
    \    }\n    for (int i = 0; i < sums.size(); i++) {\n        for (int j = i +\
    \ 1; j < sums.size(); j++) {\n            if (sums[i] > sums[j]) {\n         \
    \       std::swap(sums[i], sums[j]);\n                std::swap(indexes[i], indexes[j]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < indexes.size(); i++)\
    \ {\n        result.push_back(nums[indexes[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    for (auto i : nums) {\n \
    \       long sum = 0;\n        long temp = i;\n        while (temp != 0) {\n \
    \           sum += temp % 10;\n            temp /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (auto i : sorted_sum_of_digits) {\n  \
    \      for (int j = 0; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[j]\
    \ == i) {\n                result.push_back(nums[j]);\n                sum_of_digits[j]\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n      \
    \  }\n        while (num > 0) {\n            sum += num % 10;\n            num\
    \ = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> sum_of_digits;\n\
    \    std::vector<long> result;\n    std::vector<long>::iterator it;\n    long\
    \ sum = 0;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum\
    \ = 0;\n        while (*it != 0) {\n            sum += *it % 10;\n           \
    \ *it /= 10;\n        }\n        sum_of_digits.push_back(sum);\n    }\n    std::sort(sum_of_digits.begin(),\
    \ sum_of_digits.end());\n    for (it = sum_of_digits.begin(); it != sum_of_digits.end();\
    \ it++) {\n        for (int i = 0; i < nums.size(); i++) {\n            sum =\
    \ 0;\n            while (nums[i] != 0) {\n                sum += nums[i] % 10;\n\
    \                nums[i] /= 10;\n            }\n            if (sum == *it) {\n\
    \                result.push_back(nums[i]);\n            }\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n\
    \    std::vector<long> index;\n    long sum = 0;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        sum = 0;\n        while (nums[i] != 0) {\n            sum +=\
    \ nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum_of_digits.size();\
    \ i++) {\n        for (int j = i + 1; j < sum_of_digits.size(); j++) {\n     \
    \       if (sum_of_digits[i] > sum_of_digits[j]) {\n                std::swap(sum_of_digits[i],\
    \ sum_of_digits[j]);\n                std::swap(index[i], index[j]);\n       \
    \     }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n    \
    \    result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index_of_digits;\n\
    \    std::vector<long>::iterator it;\n    long sum = 0;\n    long index = 0;\n\
    \    for (it = nums.begin(); it != nums.end(); it++) {\n        sum = 0;\n   \
    \     index = 0;\n        while (*it != 0) {\n            sum += *it % 10;\n \
    \           *it /= 10;\n            index++;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index_of_digits.push_back(index);\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        for (int j = 0; j < nums.size() - 1; j++) {\n            if\
    \ (sum_of_digits[j] > sum_of_digits[j + 1]) {\n                long temp = sum_of_digits[j];\n\
    \                sum_of_digits[j] = sum_of_digits[j + 1];\n                sum_of_digits[j\
    \ + 1] = temp;\n                temp = nums[j];\n                nums[j] = nums[j\
    \ + 1];\n                nums[j + 1] = temp;\n                temp = index_of_digits[j];\n\
    \                index_of_digits[j] = index_of_digits[j + 1];\n              \
    \  index_of_digits[j + 1] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        for (int j = 0; j < nums.size() - 1;\
    \ j++) {\n            if (sum_of_digits[j] == sum_of_digits[j + 1]) {\n      \
    \          if (index_of_digits[j] > index_of_digits[j + 1]) {\n              \
    \      long temp = sum_of_digits[j];\n                    sum_of_digits[j] = sum_of_digits[j\
    \ + 1];", "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n  \
    \      long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=nums[i];\n\
    \                nums[i]=nums[j];\n                nums[j]=temp;\n           \
    \     temp=index[i];\n                index[i]=index[j];\n                index[j]=temp;\n\
    \            }\n            else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n\
    \                    long temp=sum[i];\n                    sum[i]=sum[j];\n \
    \                   sum[j]=temp;\n                    temp=nums[i];\n        \
    \            nums[i]=nums[j];\n                    nums[j]=temp;\n           \
    \         temp=index[i];\n                    index[i]=index[j];\n           \
    \         index[j]=temp;\n                }\n            }\n        }\n    }\n\
    \    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n   \
    \ }\n    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp = nums[i];\n  \
    \      long sum_temp = 0;\n        while(temp!=0){\n            sum_temp += temp%10;\n\
    \            temp /= 10;\n        }\n        sum.push_back(sum_temp);\n    }\n\
    \    for(int i=0;i<nums.size();i++){\n        int min_index = i;\n        for(int\
    \ j=i+1;j<nums.size();j++){\n            if(sum[j]<sum[min_index]){\n        \
    \        min_index = j;\n            }\n        }\n        long temp = sum[i];\n\
    \        sum[i] = sum[min_index];\n        sum[min_index] = temp;\n        temp\
    \ = nums[i];\n        nums[i] = nums[min_index];\n        nums[min_index] = temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n  \
    \  for (int i = 0; i < sum_of_digits.size(); i++) {\n        for (int j = i +\
    \ 1; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[i] > sum_of_digits[j])\
    \ {\n                long temp = sum_of_digits[i];\n                sum_of_digits[i]\
    \ = sum_of_digits[j];\n                sum_of_digits[j] = temp;\n            \
    \    temp = index[i];\n                index[i] = index[j];\n                index[j]\
    \ = temp;\n            }\n        }\n    }\n    for (int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        long temp=nums[i];\n        long sum_temp=0;\n        while(temp!=0){\n\
    \            sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        int min=sum[i];\n       \
    \ int index=i;\n        for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n\
    \                min=sum[j];\n                index=j;\n            }\n      \
    \  }\n        long temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \        temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    // your code here\n    std::vector<long>\
    \ res;\n    std::map<long, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin(); it !=\
    \ m.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n  \
    \          res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n  \
    \          num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (auto num : nums) {\n        long sum = 0;\n\
    \        long n = num;\n        while (n != 0) {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        map[sum].push_back(num);\n    }\n  \
    \  for (auto it = map.begin(); it != map.end(); it++) {\n        for (auto num\
    \ : it->second) {\n            result.push_back(num);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::vector<long> temp;\n    std::vector<long> temp2;\n    std::vector<long>\
    \ temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long>\
    \ temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    std::vector<long>\
    \ temp9;\n    std::vector<long> temp10;\n    std::vector<long> temp11;\n    std::vector<long>\
    \ temp12;\n    std::vector<long> temp13;\n    std::vector<long> temp14;\n    std::vector<long>\
    \ temp15;\n    std::vector<long> temp16;\n    std::vector<long> temp17;\n    std::vector<long>\
    \ temp18;\n    std::vector<long> temp19;\n    std::vector<long> temp20;\n    std::vector<long>\
    \ temp21;\n    std::vector<long> temp22;\n    std::vector<long> temp23;\n    std::vector<long>\
    \ temp24;\n    std::vector<long> temp25;\n    std::vector<long> temp26;\n    std::vector<long>\
    \ temp27;\n    std::vector<long> temp28;\n    std::vector<long> temp29;\n    std::vector<long>\
    \ temp30;\n    std::vector<long> temp31;\n    std::vector<long> temp32;\n    std::vector<long>\
    \ temp33;\n    std::vector<long> temp34;\n    std::vector<long> temp35;\n    std::vector<long>\
    \ temp36;\n    std::vector<long> temp37;\n    std::vector<long> temp38;\n    std::vector<long>\
    \ temp39;\n    std::vector<long> temp40;\n    std::vector<long> temp41;\n    std::vector<long>\
    \ temp42;\n    std::vector<long> temp43;\n    std::vector<long> temp44;\n    std::vector<long>\
    \ temp45;\n    std::vector<long>", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int temp = nums[i];\n        while (temp != 0) {\n \
    \           sum += temp % 10;\n            temp /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    int temp = 0;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        temp = 0;\n        while\
    \ (nums[i] != 0) {\n            temp += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(temp);\n    }\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int min = i;\n        for (int j = i + 1; j < nums.size();\
    \ j++) {\n            if (sum[j] < sum[min]) {\n                min = j;\n   \
    \         }\n        }\n        if (min != i) {\n            std::swap(sum[i],\
    \ sum[min]);\n            std::swap(nums[i], nums[min]);\n        }\n    }\n \
    \   return nums;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n        long\
    \ temp = nums[i];\n        long sum_temp = 0;\n        while(temp!=0){\n     \
    \       sum_temp += temp%10;\n            temp /= 10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp = sum[i];\n                sum[i] = sum[j];\n         \
    \       sum[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n                temp = index[i];\n\
    \                index[i] = index[j];\n                index[j] = temp;\n    \
    \        }\n            else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n\
    \                    long temp = sum[i];\n                    sum[i] = sum[j];\n\
    \                    sum[j] = temp;\n                    temp = nums[i];\n   \
    \                 nums[i] = nums[j];\n                    nums[j] = temp;\n  \
    \                  temp = index[i];\n                    index[i] = index[j];\n\
    \                    index[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    return nums;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    long sum_of_digits = 0;\n    long temp = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        temp = nums[i];\n        while (temp != 0)\
    \ {\n            sum_of_digits += temp % 10;\n            temp /= 10;\n      \
    \  }\n        sum.push_back(sum_of_digits);\n        sum_of_digits = 0;\n    }\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        index.push_back(i);\n  \
    \  }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j <\
    \ nums.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n          \
    \      std::swap(sum[j], sum[j + 1]);\n                std::swap(nums[j], nums[j\
    \ + 1]);\n                std::swap(index[j], index[j + 1]);\n            }\n\
    \        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int\
    \ j = 0; j < nums.size() - 1; j++) {\n            if (sum[j] == sum[j + 1]) {\n\
    \                if (index[j] > index[j + 1]) {\n                    std::swap(sum[j],\
    \ sum[j + 1]);\n                    std::swap(nums[j], nums[j + 1]);\n       \
    \             std::swap(index[j], index[j + 1]);\n                }\n        \
    \    }\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<long, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long temp = nums[i];\n        while (temp\
    \ != 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n\
    \        map[sum].push_back(nums[i]);\n    }\n    for (auto i = map.begin(); i\
    \ != map.end(); i++) {\n        for (int j = 0; j < i->second.size(); j++) {\n\
    \            result.push_back(i->second[j]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> map;\n    for (int i =\
    \ 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        map[sum] = nums[i];\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        result.push_back(it->second);\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;"]
stop_tokens:
- "\n}"

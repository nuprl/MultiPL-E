name: HumanEval_67_fruit_distribution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will be\
  \ given a string that represents a number of apples and oranges \n// that are distributed\
  \ in a basket of fruit this basket contains \n// apples, oranges, and mango fruits.\
  \ Given the string that represents the total number of \n// the oranges and apples\
  \ and an integer that represent the total number of the fruits \n// in the basket\
  \ return the number of the mango fruits in the basket.\n// for examble:\n// fruit_distribution(\"\
  5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8\n// fruit_distribution(\"0 apples\
  \ and 1 oranges\",3) -> 3 - 0 - 1 = 2\n// fruit_distribution(\"2 apples and 3 oranges\"\
  , 100) -> 100 - 2 - 3 = 95\n// fruit_distribution(\"100 apples and 1 oranges\",120)\
  \ -> 120 - 100 - 1 = 19\nlong fruit_distribution(std::string s, long n) {\n"
tests: "}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
  5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
  \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
  ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
  \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
  2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100\
  \ oranges\"), (120)) == (19));\n}\n"
completions: ["    std::stringstream ss(s);\n    std::string word;\n    int count\
    \ = 0;\n    while(ss >> word) {\n        if(word == \"apples\" || word == \"oranges\"\
    ) {\n            ss >> word;\n            count += std::stoi(word);\n        }\n\
    \    }\n    return n - count;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int i,j,k,l,m,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30,n31,n32,n33,n34,n35,n36,n37,n38,n39,n40,n41,n42,n43,n44,n45,n46,n47,n48,n49,n50,n51,n52,n53,n54,n55,n56,n57,n58,n59,n60,n61,n62,n63,n64,n65,n66,n67,n68,n69,n70,n71,n72,n73,n74,n75,n76,n77,n78,n79,n80,n81,n82,n83,n84,n85,n86,n87,n88,n89,n90,n91,n92,n93,n94,n95,n96,n97,n98,n99,n100,n101,n102,n103,n104,n105,n106,n107,n108,n109,n110,n111,n112,n113,n114,n115,n116,n117,n118,n119,n120,n121,n122,n123,n124,n125,n126,n127,n128,n129,n130,n131,n132,n133,n134,n135,n136,n137,n138,n139,n140,n141,n142,n143,n144,n145,n146,n147,n148,n149,n150,n151,n152,n153,n",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\" || word == \"oranges\") {\n            count++;\n\
    \        }\n    }\n    return n - count;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "    // your code here\n    int i = 0;\n    int j\
    \ = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int\
    \ p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n   \
    \ int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu =\
    \ 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n   \
    \ int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd =\
    \ 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n   \
    \ int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n   \
    \ int bbbb = 0;\n    int cccc = 0;\n   ", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    int mangoes = 0;\n    std::string temp = \"\";\n    while(s[i]\
    \ != ' '){\n        temp += s[i];\n        i++;\n    }\n    apples = std::stoi(temp);\n\
    \    temp = \"\";\n    i += 6;\n    while(s[i] != ' '){\n        temp += s[i];\n\
    \        i++;\n    }\n    oranges = std::stoi(temp);\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    ss >> temp;\n    apples = std::stoi(temp);\n\
    \    ss >> temp;\n    ss >> temp;\n    oranges = std::stoi(temp);\n    return\
    \ n - apples - oranges;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ count = 0;\n    while(ss >> word) {\n        if(word == \"apples\" || word ==\
    \ \"oranges\") {\n            count++;\n        }\n    }\n    return n - count;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "\t// Write your code here\n\t// To\
    \ print results to the standard output you can use std::cout\n\t// Example: std::cout\
    \ << \"Hello world!\";\n\tint apple = 0, orange = 0;\n\tstd::stringstream ss(s);\n\
    \tstd::string temp;\n\twhile (std::getline(ss, temp, ' ')) {\n\t\tif (temp ==\
    \ \"apples\") {\n\t\t\tstd::getline(ss, temp, ' ');\n\t\t\tapple = std::stoi(temp);\n\
    \t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tstd::getline(ss, temp, ' ');\n\
    \t\t\torange = std::stoi(temp);\n\t\t}\n\t}\n\treturn n - apple - orange;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i=0;\n\
    \    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n    int\
    \ p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n\
    \    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int\
    \ b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n\
    \    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n  \
    \  int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n   \
    \ int ss=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int\
    \ xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n\
    \    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n \
    \   int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n\
    \    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n\
    \    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int x", " \
    \   // your code here\n    long apples, oranges;\n    std::stringstream ss(s);\n\
    \    ss >> apples >> s >> oranges;\n    return n - apples - oranges;", "    //\
    \ your code here\n    std::stringstream ss(s);\n    std::string word;\n    long\
    \ apples = 0;\n    long oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            ss >> word;\n       \
    \     apples = std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    int apple = 0, orange = 0;\n    while(ss >> temp){\n\
    \        if(temp == \"apples\"){\n            ss >> temp;\n            apple =\
    \ std::stoi(temp);\n        }\n        else if(temp == \"oranges\"){\n       \
    \     ss >> temp;\n            orange = std::stoi(temp);\n        }\n    }\n \
    \   return n - apple - orange;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string\
    \ str = \"\";\n    std::string str1 = \"\";\n    std::string str2 = \"\";\n  \
    \  while(s[i] != ' ')\n    {\n        str += s[i];\n        i++;\n    }\n    i\
    \ += 6;\n    while(s[i] != ' ')\n    {\n        str1 += s[i];\n        i++;\n\
    \    }\n    i += 6;\n    while(s[i] != '\\0')\n    {\n        str2 += s[i];\n\
    \        i++;\n    }\n    int num1 = std::stoi(str);\n    int num2 = std::stoi(str1);\n\
    \    int num3 = std::stoi(str2);\n    int num4 = num1 + num2 + num3;\n    int\
    \ num5 = n - num4;\n    return num5;", "    // Write your code here\n    // To\
    \ print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    int apple = 0, orange = 0;\n    while(ss >> temp){\n        if(temp\
    \ == \"apples\"){\n            ss >> temp;\n            ss >> temp;\n        \
    \    apple = std::stoi(temp);\n        }\n        else if(temp == \"oranges\"\
    ){\n            ss >> temp;\n            ss >> temp;\n            orange = std::stoi(temp);\n\
    \        }\n    }\n    return n - apple - orange;", "\t// Write your code here\n\
    \t// To print results to the standard output you can use std::cout\n\t// Example:\
    \ std::cout << \"Hello world!\";\n\tint apple = 0, orange = 0;\n\tstd::stringstream\
    \ ss(s);\n\tstd::string temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"apples\"\
    ) {\n\t\t\tss >> apple;\n\t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss\
    \ >> orange;\n\t\t}\n\t}\n\treturn n - apple - orange;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int sum = 0;\n    while(ss\
    \ >> word){\n        if(word == \"apples\" || word == \"oranges\"){\n        \
    \    ss >> word;\n            sum += std::stoi(word);\n        }\n    }\n    return\
    \ n - sum;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    std::stringstream ss(s);\n    std::string word;\n    int count = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\" || word == \"oranges\"\
    ) {\n            ss >> word;\n            count += std::stoi(word);\n        }\n\
    \    }\n    return n - count;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // your code here\n    long apples = 0, oranges = 0;\n   \
    \ std::stringstream ss(s);\n    std::string temp;\n    ss >> temp;\n    apples\
    \ = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n    oranges = std::stol(temp);\n\
    \    return n - apples - oranges;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // your code here\n    int apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"\
    apples\") {\n            ss >> apples;\n        }\n        else if(temp == \"\
    oranges\") {\n            ss >> oranges;\n        }\n    }\n    return n - apples\
    \ - oranges;", "    std::stringstream ss(s);\n    std::string word;\n    int count\
    \ = 0;\n    while(ss >> word) {\n        if(word == \"apples\" || word == \"oranges\"\
    ) {\n            ss >> word;\n            count += std::stoi(word);\n        }\n\
    \    }\n    return n - count;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    std::vector<long> v;\n    while(ss >> word) {\n        if(word ==\
    \ \"apples\" || word == \"oranges\") {\n            v.push_back(std::stol(word));\n\
    \        }\n    }\n    return n - v[0] - v[1];", "    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    //std::cout << \"Hello world!\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    int\
    \ count1 = 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4 = 0;\n\
    \    int count5 = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int count8\
    \ = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n    int\
    \ count12 = 0;\n    int count13 = 0;\n    int count14 = 0;\n    int count15 =\
    \ 0;\n    int count16 = 0;\n    int count17 = 0;\n    int count18 = 0;\n    int\
    \ count19 = 0;\n    int count20 = 0;\n    int count21 = 0;\n    int count22 =\
    \ 0;\n    int count23 = 0;\n    int count24 = 0;\n    int count25 = 0;\n    int\
    \ count26 = 0;\n    int count27 = 0;\n    int count28 = 0;\n    int count29 =\
    \ 0;\n    int count30 = 0;\n    int count31 = 0;\n    int count32 = 0;\n    int\
    \ count33 = 0;\n    int count34 = 0;\n    int count35 = 0;\n    int count36 =\
    \ 0;\n    int count37 = 0;\n    int count38 = 0;\n    int count39 = 0;\n    int\
    \ count40 = 0;\n    int count41 = 0;\n    int count42 = 0;\n    int count43 =\
    \ 0;\n    int count44 = 0;\n    int count45 = 0;\n    int count46 = 0;\n    int\
    \ count47 = 0;\n    int count48 = 0;\n    int count49 = 0;\n    int count50 =\
    \ 0;\n    int count51 = 0;\n    int count52 = 0;\n    int count53 = 0;\n    int\
    \ count54 = 0;", "    int apples, oranges;\n    sscanf(s.c_str(), \"%d apples\
    \ and %d oranges\", &apples, &oranges);\n    return n - apples - oranges;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    long\
    \ apples, oranges;\n    sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apples,\
    \ &oranges);\n    return n - apples - oranges;", "    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    int apples = 0, oranges = 0;\n\
    \    std::stringstream ss(s);\n    std::string token;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        if(token == \"apples\") {\n            std::getline(ss,\
    \ token, ' ');\n            apples = std::stoi(token);\n        }\n        else\
    \ if(token == \"oranges\") {\n            std::getline(ss, token, ' ');\n    \
    \        oranges = std::stoi(token);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"apples\"\
    ) {\n            ss >> apples;\n        }\n        else if(temp == \"oranges\"\
    ) {\n            ss >> oranges;\n        }\n    }\n    return n - apples - oranges;",
  "    long apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"apples\") {\n       \
    \     ss >> word;\n            apples = std::stol(word);\n        } else if (word\
    \ == \"oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "\t// Write your code here\n\t// Hint: You can use\
    \ std::stringstream to split the string\n\t// Hint: You can use std::stol to convert\
    \ string to long\n\t// Hint: You can use std::stoi to convert string to int\n\t\
    // Hint: You can use std::to_string to convert long to string\n\t// Hint: You\
    \ can use std::to_string to convert int to string\n\t// Hint: You can use std::string::find\
    \ to find the position of the character in the string\n\t// Hint: You can use\
    \ std::string::substr to get the substring of the string\n\t// Hint: You can use\
    \ std::string::replace to replace the character in the string\n\t// Hint: You\
    \ can use std::string::erase to erase the character in the string\n\t// Hint:\
    \ You can use std::string::insert to insert the character in the string\n\t//\
    \ Hint: You can use std::string::size to get the size of the string\n\t// Hint:\
    \ You can use std::string::length to get the length of the string\n\t// Hint:\
    \ You can use std::string::empty to check if the string is empty or not\n\t//\
    \ Hint: You can use std::string::push_back to push the character to the string\n\
    \t// Hint: You can use std::string::pop_back to pop the character from the string\n\
    \t// Hint: You can use std::string::begin to get the iterator of the string\n\t\
    // Hint: You can use std::string::end to get the iterator of the string\n\t//\
    \ Hint: You can use std::string::rbegin to get the reverse iterator of the string\n\
    \t// Hint: You can use std::string::rend to get the reverse iterator of the string\n\
    \t// Hint: You can use std::string::c_str to get the c string of the string\n\t\
    // Hint: You can use std::string::data to get the data of the string\n\t// Hint:\
    \ You can use std::string::at to get the character of the string\n\t// Hint: You\
    \ can use std::string::front to get the first character of the string\n\t// Hint:\
    \ You can use std::string::back to get the", "    // Write your code here\n  \
    \  // To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word){\n        if(word == \"\
    apples\"){\n            ss >> word;\n            apples = std::stol(word);\n \
    \       }\n        else if(word == \"oranges\"){\n            ss >> word;\n  \
    \          oranges = std::stol(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n1 = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s1 = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n  \
    \  int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a1 = 0;\n\
    \    int b1 = 0;\n    int c1 = 0;\n    int d1 = 0;\n    int e1 = 0;\n    int f1\
    \ = 0;\n    int g1 = 0;\n    int h1 = 0;\n    int i1 = 0;\n    int j1 = 0;\n \
    \   int k1 = 0;\n    int l1 = 0;\n    int m1 = 0;\n    int n2 = 0;\n    int o1\
    \ = 0;\n    int p1 = 0;\n    int q1 = 0;\n    int r1 = 0;\n    int s2 = 0;\n \
    \   int t1 = 0;\n    int u1 = 0;\n    int v1 = 0;\n    int w1 = 0;\n    int x1\
    \ = 0;\n    int y1 = 0;\n    int z1 = 0;\n    int a2 = 0;\n    int b2 = 0;\n \
    \   int c2 = 0;\n    int d2 = 0;\n    int e2 = 0;\n    int f2 = 0;\n    int g2\
    \ = 0;\n    int h2 = 0;\n    int i2 = 0;\n    int j2 = 0;\n    int k2 = 0;\n \
    \   int l2 = 0;\n    int m2 = 0;\n    int n3 = 0;\n    int o2 = 0;\n    int p2\
    \ = 0;\n    int q2 = 0;\n", "    long apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        } else if (word == \"oranges\") {\n            ss >> word;\n        \
    \    oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    //std::cout\
    \ << s << std::endl;\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  long apple = 0;\n    long orange = 0;\n    while(ss >> word){\n        if(word\
    \ == \"apples\"){\n            ss >> word;\n            apple = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stol(word);\n        }\n    }\n    return n - apple\
    \ - orange;", "    int apples, oranges;\n    sscanf(s.c_str(), \"%d apples and\
    \ %d oranges\", &apples, &oranges);\n    return n - apples - oranges;", "    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", "    // Write\
    \ your code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int apple_count = 0;\n  \
    \  int orange_count = 0;\n    std::string word = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++){\n        if(s[i] == ' '){\n            if(word == \"apples\"\
    ){\n                apple_count = std::stoi(s.substr(0, i));\n            }\n\
    \            else if(word == \"oranges\"){\n                orange_count = std::stoi(s.substr(0,\
    \ i));\n            }\n            s = s.substr(i+1, s.length() - i);\n      \
    \      i = 0;\n            word = \"\";\n        }\n        else{\n          \
    \  word += s[i];\n        }\n    }\n    return n - apple_count - orange_count;",
  "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", "    // Write\
    \ your code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "    int apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        } else if (word == \"oranges\") {\n            ss >> word;\n        \
    \    oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "\tstd::stringstream ss(s);\n\tstd::string word;\n\tint apples = 0, oranges = 0;\n\
    \twhile (ss >> word) {\n\t\tif (word == \"apples\") {\n\t\t\tss >> word;\n\t\t\
    \tapples = std::stoi(word);\n\t\t}\n\t\telse if (word == \"oranges\") {\n\t\t\t\
    ss >> word;\n\t\t\toranges = std::stoi(word);\n\t\t}\n\t}\n\treturn n - apples\
    \ - oranges;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    ss >> temp;\n    apples = std::stoi(temp);\n    ss >> temp;\n   \
    \ ss >> temp;\n    oranges = std::stoi(temp);\n    return n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr =\
    \ 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n   \
    \ int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa =\
    \ 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n   \
    \ int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj\
    \ = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n\
    \    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int\
    \ sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int", "\t// your code here\n\
    \tstd::stringstream ss(s);\n\tstd::string word;\n\tint apples = 0, oranges = 0;\n\
    \twhile (ss >> word) {\n\t\tif (word == \"apples\") {\n\t\t\tss >> word;\n\t\t\
    \tapples = std::stoi(word);\n\t\t}\n\t\telse if (word == \"oranges\") {\n\t\t\t\
    ss >> word;\n\t\t\toranges = std::stoi(word);\n\t\t}\n\t}\n\treturn n - apples\
    \ - oranges;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    std::stringstream ss(s);\n    std::string word;\n    int apple = 0, orange\
    \ = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n          \
    \  ss >> word;\n            apple = std::stoi(word);\n        }\n        else\
    \ if(word == \"oranges\") {\n            ss >> word;\n            orange = std::stoi(word);\n\
    \        }\n    }\n    return n - apple - orange;", "    // write your code here\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(ss >> temp){\n        if(temp == \"apples\"){\n\
    \            ss >> apples;\n        }\n        else if(temp == \"oranges\"){\n\
    \            ss >> oranges;\n        }\n    }\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    std::string temp;\n    int apples = 0, oranges\
    \ = 0;\n    ss >> temp;\n    apples = std::stoi(temp);\n    ss >> temp;\n    ss\
    \ >> temp;\n    oranges = std::stoi(temp);\n    return n - apples - oranges;",
  "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int aa =\
    \ 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n   \
    \ int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ll = 0;\n    int mm =\
    \ 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n   \
    \ int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int aaa\
    \ = 0;\n    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n\
    \    int fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0;\n\
    \    int eeee = 0;\n    int ffff = 0;\n    int gggg = 0;\n   ", "    // Write\
    \ your code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    long apples = 0;\n    long\
    \ oranges = 0;\n    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n\
    \    return n - apples - oranges;", "    int i = 0;\n    int apples = 0;\n   \
    \ int oranges = 0;\n    while(s[i] != ' ') {\n        apples = apples * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    i += 5;\n    while(s[i] != ' ') {\n      \
    \  oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    return n -\
    \ apples - oranges;", "    long apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    long apples, oranges;\n    ss >> apples >> oranges;\n\
    \    return n - apples - oranges;", "\tint apples = 0, oranges = 0;\n\tstd::stringstream\
    \ ss(s);\n\tstd::string temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"apples\"\
    ) {\n\t\t\tss >> apples;\n\t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss\
    \ >> oranges;\n\t\t}\n\t}\n\treturn n - apples - oranges;", "    // your code\
    \ here\n    long apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    while(ss >> temp) {\n        if(temp == \"apples\") {\n         \
    \   ss >> apples;\n        }\n        else if(temp == \"oranges\") {\n       \
    \     ss >> oranges;\n        }\n    }\n    return n - apples - oranges;", " \
    \   // your code here\n    long num_apples = 0;\n    long num_oranges = 0;\n \
    \   long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            num_apples = std::stol(word);\n        }\n        else if(word ==\
    \ \"oranges\"){\n            ss >> word;\n            num_oranges = std::stol(word);\n\
    \        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n    return\
    \ num_mangoes;", "    // Write your code here\n    // To print results to the\
    \ standard output you can use std::cout\n    // Example: std::cout << \"Hello\
    \ world!\";\n    std::stringstream ss(s);\n    std::string word;\n    int apple\
    \ = 0, orange = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            apple = std::stoi(word);\n        }\n  \
    \      else if(word == \"oranges\") {\n            ss >> word;\n            orange\
    \ = std::stoi(word);\n        }\n    }\n    return n - apple - orange;", "   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    long\
    \ apples = 0;\n    long oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word){\n        if(word == \"apples\"){\n           \
    \ ss >> word;\n            apples = std::stol(word);\n        }\n        else\
    \ if(word == \"oranges\"){\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n   ", "    int apples = 0, oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apples = std::stoi(word);\n        } else if (word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "\t// Write your code here\n\t// To\
    \ print results to the standard output you can use std::cout\n\t// Example: std::cout\
    \ << \"Hello world!\";\n\tint apples = 0, oranges = 0;\n\tstd::stringstream ss(s);\n\
    \tstd::string temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"apples\") {\n\t\
    \t\tss >> apples;\n\t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss >> oranges;\n\
    \t\t}\n\t}\n\treturn n - apples - oranges;", "    // Write your code here\n  \
    \  // To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<std::string> v;\n    while(ss >> temp)\n        v.push_back(temp);\n\
    \    long sum = 0;\n    for(int i = 0; i < v.size(); i++)\n    {\n        if(v[i]\
    \ == \"apples\" || v[i] == \"oranges\")\n            continue;\n        else\n\
    \            sum += std::stol(v[i]);\n    }\n    return n - sum;", "    // Write\
    \ your code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        ss >> word;\n            apples = std::stoi(word);\n        }\n     \
    \   else if(word == \"oranges\") {\n            ss >> word;\n            ss >>\
    \ word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - apples - oranges;", "    int i = 0;\n    int j = 0;\n    int k = 0;\n  \
    \  int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n \
    \   int dddd = 0", "    long apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    ss >> apples >> s >> oranges;\n    return n - apples - oranges;", "    //\
    \ your code here\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apple = 0, orange = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apple = std::stoi(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ orange = std::stoi(word);\n        }\n    }\n    return n - apple - orange;",
  "    long apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"apples\") {\n       \
    \     ss >> word;\n            apples = std::stol(word);\n        } else if (word\
    \ == \"oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    int apples = 0, oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    ss >> temp;\n\
    \    apples = std::stoi(temp);\n    ss >> temp;\n    ss >> temp;\n    oranges\
    \ = std::stoi(temp);\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n    int apple\
    \ = 0;\n    int orange = 0;\n    while(s[i] != ' '){\n        apple = apple *\
    \ 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n\
    \        orange = orange * 10 + (s[i] - '0');\n        i++;\n    }\n    return\
    \ n - apple - orange;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    long apples = 0;\n    long oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    ss >> temp;\n\
    \    apples = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n    oranges\
    \ = std::stol(temp);\n    return n - apples - oranges;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       else if(word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    int count1 = 0;\n\
    \    int count2 = 0;\n    int count3 = 0;\n    int count4 = 0;\n    int count5\
    \ = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int\
    \ count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n    int count12 = 0;\n\
    \    int count13 = 0;\n    int count14 = 0;\n    int count15 = 0;\n    int count16\
    \ = 0;\n    int count17 = 0;\n    int count18 = 0;\n    int count19 = 0;\n   \
    \ int count20 = 0;\n    int count21 = 0;\n    int count22 = 0;\n    int count23\
    \ = 0;\n    int count24 = 0;\n    int count25 = 0;\n    int count26 = 0;\n   \
    \ int count27 = 0;\n    int count28 = 0;\n    int count29 = 0;\n    int count30\
    \ = 0;\n    int count31 = 0;\n    int count32 = 0;\n    int count33 = 0;\n   \
    \ int count34 = 0;\n    int count35 = 0;\n    int count36 = 0;\n    int count37\
    \ = 0;\n    int count38 = 0;\n    int count39 = 0;\n    int count40 = 0;\n   \
    \ int count41 = 0;\n    int count42 = 0;\n    int count43 = 0;\n    int count44\
    \ = 0;\n    int count45 = 0;\n    int count46 = 0;\n    int count47 = 0;\n   \
    \ int count48 = 0;\n    int count49 = 0;\n    int count50 = 0;\n    int count51\
    \ = 0;\n    int count52 = 0;\n    int count53 = 0;\n    int count54 = 0;\n   \
    \ int count55 = 0;\n    int count56", "\t// Write your code here\n\t// To print\
    \ results to the standard output you can use std::cout\n\t// Example: std::cout\
    \ << \"Hello world!\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\
    \tint m = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint t\
    \ = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\
    \tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e\
    \ = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\
    \tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint oo = 0;\n\tint pp = 0;\n\t\
    int qq = 0;\n\tint rr = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint\
    \ ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb\
    \ = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg =\
    \ 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll\
    \ = 0;\n\tint mmm = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint\
    \ rrr = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\t\
    int xxx = 0;\n\tint yyy = 0;\n\tint", "    // Write your code here\n    // To\
    \ print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    long apples = 0;\n    long oranges = 0;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            ss >> word;\n            apples = std::stol(word);\n    \
    \    }\n        else if(word == \"oranges\") {\n            ss >> word;\n    \
    \        ss >> word;\n            oranges = std::stol(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apples = 0;\n    long oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stol(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stol(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int", "    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        } else if(word == \"oranges\") {\n            ss >> word;\n         \
    \   oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "\t// Write your code here\n\t// To print results to the standard output you can\
    \ use std::cout\n\t// Example: std::cout << \"Hello world!\";\n\tlong apples =\
    \ 0, oranges = 0;\n\tstd::stringstream ss(s);\n\tstd::string temp;\n\tss >> temp;\n\
    \tapples = std::stol(temp);\n\tss >> temp;\n\tss >> temp;\n\toranges = std::stol(temp);\n\
    \treturn n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "\t// Write your code here\n\t// To print\
    \ results to the standard output you can use std::cout\n\t// Example: std::cout\
    \ << \"Hello world!\";\n\tlong apples = 0, oranges = 0;\n\tstd::stringstream ss(s);\n\
    \tstd::string temp;\n\tss >> temp;\n\tapples = std::stol(temp);\n\tss >> temp;\n\
    \tss >> temp;\n\toranges = std::stol(temp);\n\treturn n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apple = 0, orange = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apple = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            orange = std::stoi(word);\n        }\n\
    \    }\n    return n - apple - orange;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int count = 0;\n    int sum = 0;\n    while(ss >> word) {\n     \
    \   if(word == \"apples\" || word == \"oranges\") {\n            count++;\n  \
    \      } else {\n            sum += std::stoi(word);\n        }\n    }\n    return\
    \ n - sum;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int\
    \ t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n   \
    \ int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int", "    //\
    \ your code here\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l =\
    \ 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n   \
    \ int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n \
    \  ", "    // your code here\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    int count3\
    \ = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int\
    \ count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n\
    \    int count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n    int count14\
    \ = 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17 = 0;\n   \
    \ int count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n    int count21\
    \ = 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24 = 0;\n   \
    \ int count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n    int count28\
    \ = 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31 = 0;\n   \
    \ int count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n    int count35\
    \ = 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38 = 0;\n   \
    \ int count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n    int count42\
    \ = 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45 = 0;\n   \
    \ int count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n    int count49\
    \ = 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52 = 0;\n   \
    \ int count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n    int count56\
    \ = 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59 = 0;\n   \
    \ int count60 =", "    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stoi(word);\n        }\
    \ else if (word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;", " \
    \   std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n   \
    \ int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       else if(word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int count = 0;\n    int apple = 0;\n    int\
    \ orange = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n   \
    \         ss >> word;\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            orange = std::stoi(word);\n        }\n \
    \   }\n    return n - apple - orange;", "    // your code here\n    int i = 0;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(s[i] != ' '){\n        apples\
    \ = apples * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 5;\n    while(s[i]\
    \ != ' '){\n        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n   \
    \ }\n    return n - apples - oranges;", "    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n  \
    \  int cccc = 0;\n    int dddd = 0", "    // your code here\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae\
    \ = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n \
    \   int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an\
    \ = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n \
    \   int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax\
    \ = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\n \
    \   int bc = 0;\n    int bd = 0;\n    int be = 0;\n    int bf = 0;\n    int bg\
    \ = 0;\n    int bh = 0;\n    int bi = 0;\n    int bj = 0;\n    int bk = 0;\n \
    \   int bl = 0;\n    int bm = 0;\n    int bn = 0;\n    int bo = 0;\n    int bp\
    \ = 0;\n    int bq = 0;\n    int br = 0;\n    int bt = 0;\n    int bu = 0;\n \
    \   int bv = 0;\n    int bw = 0;\n    int bx = 0;\n    int by = 0;\n    int bz\
    \ = 0;\n    int ca = 0;\n    int cb = 0;\n    int cc = 0;", "    int apples =\
    \ 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        } else if (word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "\t// your code here\n\tstd::stringstream\
    \ ss(s);\n\tstd::string word;\n\tlong num_apples = 0;\n\tlong num_oranges = 0;\n\
    \twhile (ss >> word) {\n\t\tif (word == \"apples\") {\n\t\t\tss >> word;\n\t\t\
    \tss >> word;\n\t\t\tnum_apples = std::stol(word);\n\t\t}\n\t\telse if (word ==\
    \ \"oranges\") {\n\t\t\tss >> word;\n\t\t\tss >> word;\n\t\t\tnum_oranges = std::stol(word);\n\
    \t\t}\n\t}\n\treturn n - num_apples - num_oranges;", "    std::stringstream ss(s);\n\
    \    std::string temp;\n    int apples = 0, oranges = 0;\n    while(ss >> temp)\
    \ {\n        if(temp == \"apples\") {\n            ss >> apples;\n        } else\
    \ if(temp == \"oranges\") {\n            ss >> oranges;\n        }\n    }\n  \
    \  return n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        } else if(word == \"oranges\") {\n            ss\
    \ >> word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - apples - oranges;", "    // write your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int a,o;\n    ss>>a>>word>>word>>o>>word;\n\
    \    return n-a-o;", "    long apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string temp;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while(getline(ss, temp, ' ')){\n\
    \        if(temp == \"apples\"){\n            getline(ss, temp, ' ');\n      \
    \      apples = std::stoi(temp);\n        }\n        else if(temp == \"oranges\"\
    ){\n            getline(ss, temp, ' ');\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - apples - oranges;", "    int num_of_apples =\
    \ 0;\n    int num_of_oranges = 0;\n    int num_of_mangoes = 0;\n    int i = 0;\n\
    \    while(s[i] != ' '){\n        num_of_apples = num_of_apples * 10 + s[i] -\
    \ '0';\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        num_of_oranges\
    \ = num_of_oranges * 10 + s[i] - '0';\n        i++;\n    }\n    num_of_mangoes\
    \ = n - num_of_apples - num_of_oranges;\n    return num_of_mangoes;", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int count = 0;\n    int count1 = 0;\n   \
    \ int count2 = 0;\n    int count3 = 0;\n    int count4 = 0;\n    int count5 =\
    \ 0;\n    int count6 = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9\
    \ = 0;\n    int count10 = 0;\n    int count11 = 0;\n    int count12 = 0;\n   \
    \ int count13 = 0;\n    int count14 = 0;\n    int count15 = 0;\n    int count16\
    \ = 0;\n    int count17 = 0;\n    int count18 = 0;\n    int count19 = 0;\n   \
    \ int count20 = 0;\n    int count21 = 0;\n    int count22 = 0;\n    int count23\
    \ = 0;\n    int count24 = 0;\n    int count25 = 0;\n    int count26 = 0;\n   \
    \ int count27 = 0;\n    int count28 = 0;\n    int count29 = 0;\n    int count30\
    \ = 0;\n    int count31 = 0;\n    int count32 = 0;\n    int count33 = 0;\n   \
    \ int count34 = 0;\n    int count35 = 0;\n    int count36 = 0;\n    int count37\
    \ = 0;\n    int count38 = 0;\n    int count39 = 0;\n    int count40 = 0;\n   \
    \ int count41 = 0;\n    int count42 = 0;\n    int count43 = 0;\n    int count44\
    \ = 0;\n    int count45 = 0;\n    int count46 = 0;\n    int count47 = 0;\n   \
    \ int count48 = 0;\n    int count49 = 0;\n    int count50 = 0;\n    int count51\
    \ = 0;\n    int count52 = 0;\n    int count53 = 0;\n    int count54 = 0;\n   \
    \ int count55 = 0;\n    int count56", "\t// your code here\n\tstd::stringstream\
    \ ss(s);\n\tstd::string word;\n\tint apples = 0, oranges = 0;\n\twhile (ss >>\
    \ word) {\n\t\tif (word == \"apples\") {\n\t\t\tss >> word;\n\t\t\tapples = std::stoi(word);\n\
    \t\t}\n\t\telse if (word == \"oranges\") {\n\t\t\tss >> word;\n\t\t\toranges =\
    \ std::stoi(word);\n\t\t}\n\t}\n\treturn n - apples - oranges;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "  // Write your code here\n\
    \  // To print results to the standard output you can use std::cout\n  // Example:\
    \ std::cout << \"Hello world!\";\n  std::stringstream ss(s);\n  std::string temp;\n\
    \  std::vector<std::string> tokens;\n  while(std::getline(ss, temp, ' ')){\n \
    \   tokens.push_back(temp);\n  }\n  long a = std::stol(tokens[0]);\n  long o =\
    \ std::stol(tokens[3]);\n  return n - a - o;", "    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    long count = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n   \
    \     if(temp == \"apples\"){\n            std::getline(ss, temp, ' ');\n    \
    \        count += std::stol(temp);\n        }\n        else if(temp == \"oranges\"\
    ){\n            std::getline(ss, temp, ' ');\n            count += std::stol(temp);\n\
    \        }\n    }\n    return n - count;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int", "    //\
    \ your code here\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "\t// your code here\n\tstd::stringstream ss(s);\n\tstd::string\
    \ temp;\n\tint apple = 0, orange = 0;\n\twhile (ss >> temp) {\n\t\tif (temp ==\
    \ \"apples\") {\n\t\t\tss >> temp;\n\t\t\tss >> temp;\n\t\t\tapple = std::stoi(temp);\n\
    \t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss >> temp;\n\t\t\tss >> temp;\n\
    \t\t\torange = std::stoi(temp);\n\t\t}\n\t}\n\treturn n - apple - orange;", " \
    \   long apples, oranges;\n    sscanf(s.c_str(), \"%ld apples and %ld oranges\"\
    , &apples, &oranges);\n    return n - apples - oranges;", "    long num_apples\
    \ = 0;\n    long num_oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    ss >> temp;\n    num_apples = std::stol(temp);\n    ss >> temp;\n\
    \    ss >> temp;\n    num_oranges = std::stol(temp);\n    return n - num_apples\
    \ - num_oranges;", "\t// your code here\n\tstd::stringstream ss(s);\n\tstd::string\
    \ word;\n\tint apple = 0, orange = 0;\n\twhile (ss >> word) {\n\t\tif (word ==\
    \ \"apples\") {\n\t\t\tss >> word;\n\t\t\tss >> word;\n\t\t\tapple = std::stoi(word);\n\
    \t\t}\n\t\telse if (word == \"oranges\") {\n\t\t\tss >> word;\n\t\t\tss >> word;\n\
    \t\t\torange = std::stoi(word);\n\t\t}\n\t}\n\treturn n - apple - orange;", " \
    \   // your code here\n    std::stringstream ss(s);\n    std::string word;\n \
    \   int apple = 0, orange = 0;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            apple = std::stoi(word);\n \
    \       }\n        else if(word == \"oranges\") {\n            ss >> word;\n \
    \           orange = std::stoi(word);\n        }\n    }\n    return n - apple\
    \ - orange;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int count = 0;\n    int apple = 0;\n    int orange = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apple = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            orange = std::stoi(word);\n        }\n\
    \    }\n    return n - apple - orange;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n       \
    \ oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    return n -\
    \ apples - oranges;", "    //your code here\n    std::stringstream ss(s);\n  \
    \  std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "\t// Write your code here\n\t\
    // To print results to the standard output you can use std::cout\n\t// Example:\
    \ std::cout << \"Hello world!\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\
    int a = 0;\n\tint b = 0;\n\tint c = 0;\n\twhile (s[i] != ' ') {\n\t\ta = a * 10\
    \ + (s[i] - '0');\n\t\ti++;\n\t}\n\twhile (s[i] == ' ') {\n\t\ti++;\n\t}\n\twhile\
    \ (s[i] != ' ') {\n\t\ti++;\n\t}\n\twhile (s[i] == ' ') {\n\t\ti++;\n\t}\n\twhile\
    \ (s[i] != ' ') {\n\t\tb = b * 10 + (s[i] - '0');\n\t\ti++;\n\t}\n\twhile (s[i]\
    \ == ' ') {\n\t\ti++;\n\t}\n\twhile (s[i] != ' ') {\n\t\ti++;\n\t}\n\twhile (s[i]\
    \ == ' ') {\n\t\ti++;\n\t}\n\twhile (s[i] != ' ') {\n\t\tc = c * 10 + (s[i] -\
    \ '0');\n\t\ti++;\n\t}\n\treturn n - a - b - c;", "    // your code here\n   \
    \ int apples = 0, oranges = 0;\n    int i = 0;\n    while(s[i] != ' ') {\n   \
    \     apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 5;\n\
    \    while(s[i] != ' ') {\n        oranges = oranges * 10 + (s[i] - '0');\n  \
    \      i++;\n    }\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int", "\t// your code here\n\tstd::stringstream ss(s);\n\
    \tstd::string temp;\n\tint sum = 0;\n\twhile (ss >> temp) {\n\t\tif (temp == \"\
    apples\") {\n\t\t\tss >> temp;\n\t\t\tsum += std::stoi(temp);\n\t\t}\n\t\telse\
    \ if (temp == \"oranges\") {\n\t\t\tss >> temp;\n\t\t\tsum += std::stoi(temp);\n\
    \t\t}\n\t}\n\treturn n - sum;", "\t// your code here\n\tint apples, oranges;\n\
    \tstd::stringstream ss(s);\n\tss >> apples >> oranges;\n\treturn n - apples -\
    \ oranges;", "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count =\
    \ 0;\n    while(s[i] != ' '){\n        count++;\n        i++;\n    }\n    std::string\
    \ str1 = s.substr(0,count);\n    std::string str2 = s.substr(count+1,s.length());\n\
    \    while(str2[j] != ' '){\n        j++;\n    }\n    std::string str3 = str2.substr(0,j);\n\
    \    std::string str4 = str2.substr(j+1,str2.length());\n    while(str4[k] !=\
    \ ' '){\n        k++;\n    }\n    std::string str5 = str4.substr(0,k);\n    std::string\
    \ str6 = str4.substr(k+1,str4.length());\n    int num1 = std::stoi(str1);\n  \
    \  int num2 = std::stoi(str3);\n    int num3 = std::stoi(str5);\n    int num4\
    \ = std::stoi(str6);\n    int sum = num1 + num2 + num3 + num4;\n    return n -\
    \ sum;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            apples = std::stoi(word);\n        }\n        else\
    \ if(word == \"oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apple = 0, orange = 0;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            apple\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            orange = std::stoi(word);\n        }\n    }\n\
    \    return n - apple - orange;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        } else if(word == \"oranges\") {\n            ss >> word;\n         \
    \   oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int apple\
    \ = 0, orange = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss\
    \ >> temp) {\n        if(temp == \"apples\") {\n            ss >> apple;\n   \
    \     } else if(temp == \"oranges\") {\n            ss >> orange;\n        }\n\
    \    }\n    return n - apple - orange;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    long apples = 0, oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apples = std::stol(word);\n        } else if (word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stol(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    std::stringstream ss(s);\n   \
    \ std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >>\
    \ word) {\n        if(word == \"apples\") {\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - apples - oranges;", "\t// Write your code here\n\t\
    // To print results to the standard output you can use std::cout\n\t// Example:\
    \ std::cout << \"Hello world!\";\n\tint apple = 0, orange = 0;\n\tstd::stringstream\
    \ ss(s);\n\tstd::string temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"apples\"\
    ) {\n\t\t\tss >> apple;\n\t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss\
    \ >> orange;\n\t\t}\n\t}\n\treturn n - apple - orange;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int apples, oranges;\n  \
    \  sscanf(s.c_str(), \"%d apples and %d oranges\", &apples, &oranges);\n    return\
    \ n - apples - oranges;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apple = 0, orange = 0;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            apple\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            orange = std::stoi(word);\n        }\n    }\n\
    \    return n - apple - orange;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "\t// Write your code here\n\t// Hint: You\
    \ can use std::stringstream to split the string\n\tstd::stringstream ss(s);\n\t\
    std::string word;\n\tstd::vector<std::string> words;\n\twhile (ss >> word)\n\t\
    \twords.push_back(word);\n\tint apples = std::stoi(words[0]);\n\tint oranges =\
    \ std::stoi(words[3]);\n\treturn n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string token;\n    int apple = 0, orange = 0;\n    while(getline(ss,\
    \ token, ' ')) {\n        if(token == \"apples\") {\n            getline(ss, token,\
    \ ' ');\n            apple = std::stoi(token);\n        }\n        else if(token\
    \ == \"oranges\") {\n            getline(ss, token, ' ');\n            orange\
    \ = std::stoi(token);\n        }\n    }\n    return n - apple - orange;", "  \
    \  // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    long apples = 0, oranges = 0;\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    ss >> temp;\n    apples\
    \ = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n    oranges = std::stol(temp);\n\
    \    return n - apples - oranges;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ temp, ' ')) {\n        tokens.push_back(temp);\n    }\n    apples = std::stol(tokens[0]);\n\
    \    oranges = std::stol(tokens[3]);\n    return n - apples - oranges;", "   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int apples = 0;\n    int oranges = 0;\n    while(s[i] != ' '){\n \
    \       apples = apples * 10 + s[i] - '0';\n        i++;\n    }\n    i += 6;\n\
    \    while(s[i] != ' '){\n        oranges = oranges * 10 + s[i] - '0';\n     \
    \   i++;\n    }\n    return n - apples - oranges;", "    // Write your code here\n\
    \    // To print results to the standard output you can use std::cout\n    //\
    \ Example: std::cout << \"Hello world!\";\n    long num_apples = 0;\n    long\
    \ num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string word;\n    while(ss >> word){\n        if(word == \"apples\"\
    ){\n            ss >> word;\n            ss >> word;\n            num_apples =\
    \ std::stol(word);\n        }\n        else if(word == \"oranges\"){\n       \
    \     ss >> word;\n            ss >> word;\n            num_oranges = std::stol(word);\n\
    \        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n    return\
    \ num_mangoes;", "    // Write your code here\n    // To print results to the\
    \ standard output you can use std::cout\n    // Example: std::cout << \"Hello\
    \ world!\";\n    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stoi(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aaa = 0;\n    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int\
    \ eee = 0;\n    int fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii\
    \ = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n\
    \    int nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int\
    \ rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n    int", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    long apples, oranges;\n \
    \   std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return n\
    \ - apples - oranges;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ count = 0;\n    int sum = 0;\n    while(ss >> word) {\n        if(word == \"\
    apples\" || word == \"oranges\") {\n            count++;\n        }\n        if(count\
    \ == 2) {\n            sum = n - std::stoi(word);\n            break;\n      \
    \  }\n    }\n    return sum;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count\
    \ = 0;\n    int count1 = 0;\n    int count2 = 0;\n    while(s[i] != ' '){\n  \
    \      count++;\n        i++;\n    }\n    while(s[j] != 'a'){\n        count1++;\n\
    \        j++;\n    }\n    while(s[k] != 'o'){\n        count2++;\n        k++;\n\
    \    }\n    int num1 = stoi(s.substr(0,count));\n    int num2 = stoi(s.substr(count1+1,count2-count1-1));\n\
    \    return n - num1 - num2;", "    // your code here\n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n   \
    \ int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss =\
    \ 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n   \
    \ int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb =\
    \ 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n   \
    \ int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk\
    \ = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n\
    \    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int\
    \ ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx\
    \ = 0;\n    int yyy = 0;\n    int zzz", "    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n  \
    \  int cccc = 0;\n    int dddd = 0", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int n1 = 0;\n    int o = 0;\n    int p = 0;\n  \
    \  int q = 0;\n    int r = 0;\n    int s1 = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a1 = 0;\n    int b1 = 0;\n    int c1 = 0;\n    int d1 = 0;\n    int e1\
    \ = 0;\n    int f1 = 0;\n    int g1 = 0;\n    int h1 = 0;\n    int i1 = 0;\n \
    \   int j1 = 0;\n    int k1 = 0;\n    int l1 = 0;\n    int m1 = 0;\n    int n2\
    \ = 0;\n    int o1 = 0;\n    int p1 = 0;\n    int q1 = 0;\n    int r1 = 0;\n \
    \   int s2 = 0;\n    int t1 = 0;\n    int u1 = 0;\n    int v1 = 0;\n    int w1\
    \ = 0;\n    int x1 = 0;\n    int y1 = 0;\n    int z1 = 0;\n    int a2 = 0;\n \
    \   int b2 = 0;\n    int c2 = 0;\n    int d2 = 0;\n    int e2 = 0;\n    int f2\
    \ = 0;\n    int g2 = 0;\n    int h2 = 0;\n    int i2 = 0;\n    int j2 = 0;\n \
    \   int k2 = 0;\n    int l2 = 0;\n    int m2 = 0;\n    int n3 = 0;\n    int o2\
    \ = 0;\n    int p2 = 0;\n    int q2 = 0;\n", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int count = 0;\n    int sum = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\" || word == \"oranges\") {\n      \
    \      count++;\n        }\n        if(count == 2) {\n            sum += std::stoi(word);\n\
    \        }\n    }\n    return n - sum;", "    int apples = 0, oranges = 0;\n \
    \   std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        } else if (word == \"oranges\") {\n            ss\
    \ >> word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - apples - oranges;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int", "\t//\
    \ your code here\n\tstd::stringstream ss(s);\n\tstd::string word;\n\tint num_apples\
    \ = 0;\n\tint num_oranges = 0;\n\twhile (ss >> word) {\n\t\tif (word == \"apples\"\
    ) {\n\t\t\tss >> word;\n\t\t\tnum_apples = std::stoi(word);\n\t\t}\n\t\telse if\
    \ (word == \"oranges\") {\n\t\t\tss >> word;\n\t\t\tnum_oranges = std::stoi(word);\n\
    \t\t}\n\t}\n\treturn n - num_apples - num_oranges;", "\t// Write your code here\n\
    \t// To print results to the standard output you can use std::cout\n\t// Example:\
    \ std::cout << \"Hello world!\";\n\tstd::stringstream ss(s);\n\tstd::string word;\n\
    \tstd::vector<std::string> v;\n\twhile (ss >> word) {\n\t\tv.push_back(word);\n\
    \t}\n\tlong sum = 0;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (v[i] ==\
    \ \"apples\") {\n\t\t\tsum += std::stol(v[i - 1]);\n\t\t}\n\t\telse if (v[i] ==\
    \ \"oranges\") {\n\t\t\tsum += std::stol(v[i - 1]);\n\t\t}\n\t}\n\treturn n -\
    \ sum;", "\t// Write your code here\n\t// To print results to the standard output\
    \ you can use std::cout\n\t// Example: std::cout << \"Hello world!\";\n\tint i\
    \ = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint o = 0;\n\
    \tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v\
    \ = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\
    \tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g\
    \ = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll =\
    \ 0;\n\tint mm = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\
    \tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\t\
    int yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint\
    \ dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii\
    \ = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint\
    \ ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint ttt = 0;\n\t\
    int uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint xxx = 0;\n\tint yyy = 0;\n\
    \tint", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int\
    \ t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n   \
    \ int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n \
    \   int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg\
    \ = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n\
    \    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int\
    \ qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv\
    \ = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use std::cout\n    // Example: std::cout << \"Hello world!\";\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "\t// your code here\n\t\
    int a, o;\n\tstd::stringstream ss(s);\n\tstd::string temp;\n\tss >> temp;\n\t\
    a = std::stoi(temp);\n\tss >> temp;\n\tss >> temp;\n\to = std::stoi(temp);\n\t\
    return n - a - o;", "    // your code here\n    std::stringstream ss(s);\n   \
    \ std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >>\
    \ word) {\n        if(word == \"apples\") {\n            ss >> word;\n       \
    \     ss >> word;\n            apples = std::stoi(word);\n        }\n        else\
    \ if(word == \"oranges\") {\n            ss >> word;\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    std::stringstream ss(s);\n    std::string word;\n    long\
    \ apples = 0;\n    long oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        } else if(word == \"oranges\") {\n            ss >> word;\n         \
    \   oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll\
    \ = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu\
    \ = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n\
    \    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n \
    \  ", "    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n\
    \    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stoi(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ oranges = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n  \
    \          ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - apples - oranges;", "    std::stringstream ss(s);\n   \
    \ std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >>\
    \ word) {\n        if(word == \"apples\") {\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        } else if(word == \"oranges\") {\n  \
    \          ss >> word;\n            oranges = std::stoi(word);\n        }\n  \
    \  }\n    return n - apples - oranges;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<int> v;\n    while(getline(ss, temp, ' ')){\n       \
    \ if(temp.find_first_not_of(\"0123456789\") == std::string::npos){\n         \
    \   v.push_back(std::stoi(temp));\n        }\n    }\n    return n - v[0] - v[2];",
  "    // your code here\n    long apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    ss >> temp;\n    apples = std::stol(temp);\n\
    \    ss >> temp;\n    ss >> temp;\n    oranges = std::stol(temp);\n    return\
    \ n - apples - oranges;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    long apples, oranges;\n    sscanf(s.c_str(), \"%ld apples\
    \ and %ld oranges\", &apples, &oranges);\n    return n - apples - oranges;", " \
    \   // your code here\n    std::stringstream ss(s);\n    std::string word;\n \
    \   int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    int apple = 0, orange = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    ss >> temp;\n    apple = std::stoi(temp);\n    ss >> temp;\n    ss\
    \ >> temp;\n    orange = std::stoi(temp);\n    return n - apple - orange;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"\
    apples\") {\n            ss >> apples;\n        } else if(temp == \"oranges\"\
    ) {\n            ss >> oranges;\n        }\n    }\n    mangoes = n - apples -\
    \ oranges;\n    return mangoes;", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    int apples = 0, oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n    int\
    \ oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n  \
    \          ss >> word;\n            apples = std::stoi(word);\n        } else\
    \ if(word == \"oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int count = 0;\n   \
    \ while(ss >> word) {\n        if(word == \"apples\" || word == \"oranges\") {\n\
    \            count++;\n        }\n    }\n    return n - count;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    int sum = 0;\n    while(ss >> word) {\n \
    \       if(word == \"apples\" || word == \"oranges\") {\n            ss >> word;\n\
    \            sum += std::stoi(word);\n        }\n    }\n    return n - sum;",
  "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while(ss >> word)\n        words.push_back(word);\n    int apples\
    \ = std::stoi(words[0]);\n    int oranges = std::stoi(words[2]);\n    return n\
    \ - apples - oranges;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use std::cout\n    // Example: std::cout << \"\
    Hello world!\";\n    int apples = 0, oranges = 0;\n    int i = 0;\n    while(s[i]\
    \ != ' ') {\n        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n\
    \    i += 6;\n    while(s[i] != ' ') {\n        oranges = oranges * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    return n - apples - oranges;", "    // your\
    \ code here\n    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    ss >> apples >> oranges;\n    return n - apples - oranges;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            apples = std::stoi(word);\n        }\n        else if(word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i = 0;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while(s[i] != ' '){\n        apples = apples\
    \ * 10 + s[i] - '0';\n        i++;\n    }\n    i += 5;\n    while(s[i] != ' '){\n\
    \        oranges = oranges * 10 + s[i] - '0';\n        i++;\n    }\n    return\
    \ n - apples - oranges;", "\t// Write your code here\n\t// To print results to\
    \ the standard output you can use cout\n\t// Example: cout << \"Hello world!\"\
    ;\n\t//long n = 0;\n\tlong a = 0;\n\tlong o = 0;\n\tlong m = 0;\n\tstd::stringstream\
    \ ss(s);\n\tstd::string temp;\n\twhile (ss >> temp) {\n\t\tif (temp == \"apples\"\
    ) {\n\t\t\tss >> temp;\n\t\t\tss >> temp;\n\t\t\tss >> temp;\n\t\t\ta = std::stol(temp);\n\
    \t\t}\n\t\telse if (temp == \"oranges\") {\n\t\t\tss >> temp;\n\t\t\tss >> temp;\n\
    \t\t\tss >> temp;\n\t\t\to = std::stol(temp);\n\t\t}\n\t}\n\tm = n - a - o;\n\t\
    return m;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n\
    \    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            apples = std::stoi(word);\n        }\
    \ else if(word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;", " \
    \   long apples = 0, oranges = 0;\n    std::stringstream ss(s);\n    ss >> apples\
    \ >> s >> oranges;\n    return n - apples - oranges;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int count = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\" || word == \"oranges\") {\n            count++;\n        }\n \
    \   }\n    return n - count;", "    // your code here\n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n   \
    \ int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss =\
    \ 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n   \
    \ int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb =\
    \ 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n   \
    \ int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk\
    \ = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n\
    \    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int\
    \ ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx\
    \ = 0;\n    int yyy = 0;\n    int zzz", "    // Write your code here\n    // To\
    \ print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "    // your code here\n    int i = 0;\n    int j\
    \ = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int\
    \ p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n   \
    \ int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu =\
    \ 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n   \
    \ int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd =\
    \ 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n   \
    \ int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n   \
    \ int bbbb = 0;\n    int cccc = 0;\n   ", "    long num_apples = 0;\n    long\
    \ num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    ss >> temp;\n    num_apples = std::stol(temp);\n \
    \   ss >> temp;\n    ss >> temp;\n    num_oranges = std::stol(temp);\n    num_mangoes\
    \ = n - num_apples - num_oranges;\n    return num_mangoes;"]
stop_tokens:
- "\n}"

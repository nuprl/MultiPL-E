name: HumanEval_91_is_bored
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
  \ of words, and your task is to count the number\n// of boredoms. A boredom is a\
  \ sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
  \ '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"\
  The sky is blue. The sun is shining. I love this weather\")\n// 1\nlong is_bored(std::string\
  \ S) {\n"
tests: "}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
  Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
  \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
  )) == (0));\n    assert(candidate((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2));\n    assert(candidate((\"You and I are going for a walk\"\
  )) == (0));\n}\n"
completions: ["    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long boredoms = 0;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    for (int i = 0; i < S.length(); i++) {\n        if (S[i] == 'I') {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long boredoms = 0;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n \
    \   std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n \
    \   while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    // your code here\n    long count=0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss>>word){\n        if(word==\"I\"\
    ){\n            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count=0;\n\
    \    std::stringstream ss(S);\n    std::string word;\n    while(ss>>word){\n \
    \       if(word==\"I\"){\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n   \
    \ std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long boredoms = 0;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    // Your code here\n    long count = 0;\n\
    \    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    int boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (std::getline(ss, word, '.')) {\n        std::stringstream\
    \ ss2(word);\n        std::string word2;\n        std::getline(ss2, word2, ' ');\n\
    \        if (word2 == \"I\") {\n            boredoms++;\n        }\n    }\n  \
    \  return boredoms;", "    std::stringstream ss(S);\n    std::string word;\n \
    \   long count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ boredoms = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n    \
    \        boredoms++;\n        }\n    }\n    return boredoms;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            count++;\n        }\n   \
    \ }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "  std::stringstream ss(S);\n  std::string word;\n  long count = 0;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    std::stringstream ss(S);\n    std::string word;\n    long count = 0;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  long boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long boredoms = 0;\n    while (ss >> word) {\n        if (word == \"I\")\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "  // Your code here\n  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while(ss >> word) {\n    if(word == \"I\") {\n\
    \      count++;\n    }\n  }\n  return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long count=0;\n    std::stringstream\
    \ ss(S);\n    std::string temp;\n    while(getline(ss,temp,'.')){\n        if(temp[0]=='I'){\n\
    \            count++;\n        }\n    }\n    return count;", "    // Your code\
    \ here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n\
    \    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "  //\
    \ your code here\n  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while(ss >> word) {\n    if(word == \"I\") {\n      count++;\n    }\n\
    \  }\n  return count;", "    long count = 0;\n    std::stringstream ss(S);\n \
    \   std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "  std::istringstream iss(S);\n\
    \  std::string word;\n  long count = 0;\n  while (iss >> word) {\n    if (word\
    \ == \"I\") {\n      count++;\n    }\n  }\n  return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count=0;\n\
    \    std::stringstream ss(S);\n    std::string word;\n    while(ss>>word){\n \
    \       if(word==\"I\"){\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    for (int i = 0; i < S.length();\
    \ i++) {\n        if (S[i] == 'I') {\n            count++;\n        }\n    }\n\
    \    return count;", "    std::stringstream ss(S);\n    std::string word;\n  \
    \  long count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n \
    \           count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    std::transform(S.begin(), S.end(), S.begin(), ::tolower);\n    std::istringstream\
    \ iss(S);\n    std::string word;\n    long count = 0;\n    while (iss >> word)\
    \ {\n        if (word == \"i\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n       \
    \     count++;\n        }\n    }\n    return count;", "    long count = 0;\n \
    \   std::stringstream ss(S);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n   \
    \ std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    // Your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n \
    \   while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::string\
    \ delimiter = \"!?.\";\n    size_t pos = 0;\n    std::string token;\n    while\
    \ ((pos = S.find(delimiter)) != std::string::npos) {\n        token = S.substr(0,\
    \ pos);\n        if(token.find(\"I\") == 0)\n            count++;\n        S.erase(0,\
    \ pos + delimiter.length());\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::istringstream iss(S);\n    std::string\
    \ word;\n    while (iss >> word) {\n        if (word == \"I\") {\n           \
    \ count++;\n        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while (ss >> word) {\n        if (word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "  long boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "  long count\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", " \
    \   long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long boredoms = 0;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    long boredoms = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            count++;\n        }\n   \
    \ }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word) {\n   \
    \ if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word) {\n   \
    \ if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long boredoms = 0;\n    while (ss >> word) {\n        if (word == \"I\")\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;", "    //\
    \ Your code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word) {\n   \
    \ if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while (ss >> word) {\n        if (word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long boredoms = 0;\n    while (ss >> word) {\n        if (word == \"I\")\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;", "    //\
    \ Your code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ temp;\n    while(std::getline(ss, temp, '.')) {\n        if(temp[0] == 'I')\
    \ {\n            count++;\n        }\n    }\n    return count;", "  long boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    // Your code\
    \ here\n    long count = 0;\n    std::string delimiter = \"?!.\";\n    std::string\
    \ token;\n    size_t pos = 0;\n    while ((pos = S.find(delimiter)) != std::string::npos)\
    \ {\n        token = S.substr(0, pos);\n        if (token.find(\"I\") == 0) {\n\
    \            count++;\n        }\n        S.erase(0, pos + delimiter.length());\n\
    \    }\n    return count;", "  long boredoms = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while (ss >> word) {\n    if (word == \"I\") {\n     \
    \ boredoms++;\n    }\n  }\n  return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "  long boredoms = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while (ss >> word) {\n    if (word == \"I\") {\n     \
    \ boredoms++;\n    }\n  }\n  return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss\
    \ >> word) {\n        if (word == \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "  // your code here\n  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while(ss >> word) {\n    if(word == \"I\") {\n\
    \      count++;\n    }\n  }\n  return count;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "    std::stringstream ss(S);\n\
    \    std::string word;\n    long count = 0;\n    while (ss >> word) {\n      \
    \  if (word == \"I\") {\n            count++;\n        }\n    }\n    return count;",
  "    std::istringstream iss(S);\n    std::string word;\n    long count = 0;\n  \
    \  while (iss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while (ss >> word) {\n        if (word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::string word = \"\";\n    for (int i = 0; i < S.length();\
    \ i++) {\n        if (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n         \
    \   if (word == \"I\") {\n                count++;\n            }\n          \
    \  word = \"\";\n        } else if (S[i] == ' ') {\n            if (word == \"\
    I\") {\n                count++;\n            }\n            word = \"\";\n  \
    \      } else {\n            word += S[i];\n        }\n    }\n    return count;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    int boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n   \
    \ std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "\tlong boredoms = 0;\n\tstd::string delimiters\
    \ = \"!?.\";\n\tstd::string word = \"I\";\n\tstd::string::size_type start = 0;\n\
    \tstd::string::size_type end = 0;\n\twhile ((end = S.find_first_of(delimiters,\
    \ start)) != std::string::npos) {\n\t\tstd::string sentence = S.substr(start,\
    \ end - start);\n\t\tif (sentence.find(word) == 0) {\n\t\t\tboredoms++;\n\t\t\
    }\n\t\tstart = end + 1;\n\t}\n\treturn boredoms;", "    long boredoms = 0;\n \
    \   std::stringstream ss(S);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            boredoms++;\n        }\n    }\n   \
    \ return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "  //\
    \ Your code here\n  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while(ss >> word) {\n    if(word == \"I\") {\n      count++;\n    }\n\
    \  }\n  return count;", "    // your code here\n    std::stringstream ss(S);\n\
    \    std::string word;\n    long count = 0;\n    while(ss >> word) {\n       \
    \ if(word == \"I\") {\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            count++;\n       \
    \ }\n    }\n    return count;", "    long count = 0;\n    std::string delimiter\
    \ = \"!?.\";\n    size_t pos = 0;\n    std::string token;\n    while ((pos = S.find(delimiter))\
    \ != std::string::npos) {\n        token = S.substr(0, pos);\n        if (token.substr(0,2)\
    \ == \"I \") {\n            count++;\n        }\n        S.erase(0, pos + delimiter.length());\n\
    \    }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"I\") {\n            count++;\n        }\n    }\n  \
    \  return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ count = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n       \
    \     count++;\n        }\n    }\n    return count;", "    // Your code here\n\
    \    long count=0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss>>word){\n\
    \        if(word==\"I\"){\n            count++;\n        }\n    }\n    return\
    \ count;", "    std::stringstream ss(S);\n    std::string word;\n    long count\
    \ = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            count++;\n        }\n    }\n    return count;", "  long\
    \ count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >>\
    \ word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;"]
stop_tokens:
- "\n}"

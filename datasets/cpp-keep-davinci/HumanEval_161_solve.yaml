name: HumanEval_161_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string s.\n\
  // if s[i] is a letter, reverse its case from lower to upper or vise versa, \n//\
  \ otherwise keep it as it is.\n// If the string contains no letters, reverse the\
  \ string.\n// The function should return the resulted string.\n// Examples\n// solve(\"\
  1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nstd::string\
  \ solve(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"\
  )) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
  ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
  #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
  ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
  #ccc\")) == (\"#CCC\"));\n}\n"
completions: ["    std::string res = \"\";\n    if(s.size() == 0) return res;\n  \
    \  for(int i = 0; i < s.size(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n\
    \            res += (char)(s[i] - 'a' + 'A');\n        }else if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            res += (char)(s[i] - 'A' + 'a');\n        }else{\n\
    \            res += s[i];\n        }\n    }\n    if(res.size() == s.size()){\n\
    \        std::reverse(res.begin(), res.end());\n    }\n    return res;", "   \
    \ std::string result;\n    if(s.empty()) return result;\n    for(int i = 0; i\
    \ < s.size(); i++){\n        if(isalpha(s[i])){\n            if(isupper(s[i])){\n\
    \                result += tolower(s[i]);\n            }else{\n              \
    \  result += toupper(s[i]);\n            }\n        }else{\n            result\
    \ += s[i];\n        }\n    }\n    if(result == s){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    int len = s.length();\n   \
    \ if(len == 0) return s;\n    for(int i = 0; i < len; i++) {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 'a' + 'A';\n        } else\
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 'A' + 'a';\n   \
    \     }\n    }\n    return s;", "    std::string result;\n    if(s.size() == 0)\
    \ return result;\n    for(int i = 0; i < s.size(); i++){\n        if(s[i] >= 'a'\
    \ && s[i] <= 'z'){\n            result += toupper(s[i]);\n        }\n        else\
    \ if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += tolower(s[i]);\n    \
    \    }\n        else{\n            result += s[i];\n        }\n    }\n    if(result.size()\
    \ == s.size()){\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.size() == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string result;\n\
    \    for (char c : s) {\n        if (isalpha(c)) {\n            result += isupper(c)\
    \ ? tolower(c) : toupper(c);\n        } else {\n            result += c;\n   \
    \     }\n    }\n    return result;", "    std::string result;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.size() == 0) {\n       \
    \ std::reverse(s.begin(), s.end());\n        return s;\n    }\n    return result;",
  "    std::string res = \"\";\n    if(s.size() == 0) return res;\n    for(int i =\
    \ 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n            if(islower(s[i])){\n\
    \                res += toupper(s[i]);\n            }else{\n                res\
    \ += tolower(s[i]);\n            }\n        }else{\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string result;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n     \
    \       result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            result += tolower(s[i]);\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.size() == s.size()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string res;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string result;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i])) {\n                result += toupper(s[i]);\n       \
    \     } else {\n                result += tolower(s[i]);\n            }\n    \
    \    } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    std::string result;\n    if (s.empty()) {\n       \
    \ return result;\n    }\n    for (auto c : s) {\n        if (isalpha(c)) {\n \
    \           result += isupper(c) ? tolower(c) : toupper(c);\n        } else {\n\
    \            result += c;\n        }\n    }\n    if (result.empty()) {\n     \
    \   std::reverse(s.begin(), s.end());\n        return s;\n    }\n    return result;",
  "    std::string result;\n    if(s.size() == 0)\n        return s;\n    for(int\
    \ i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n            if(islower(s[i]))\n\
    \                result += toupper(s[i]);\n            else\n                result\
    \ += tolower(s[i]);\n        }\n        else\n            result += s[i];\n  \
    \  }\n    if(result.size() == 0)\n        return s;\n    return result;", "  \
    \  std::string res;\n    if (s.size() == 0) {\n        return res;\n    }\n  \
    \  for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            res += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            res += tolower(s[i]);\n        } else {\n           \
    \ res += s[i];\n        }\n    }\n    if (res.size() == s.size()) {\n        std::reverse(res.begin(),\
    \ res.end());\n    }\n    return res;", "    std::string result = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result == s) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    int len = s.length();\n   \
    \ if(len == 0)\n        return s;\n    for(int i = 0; i < len; i++) {\n      \
    \  if(s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 'a' + 'A';\n  \
    \      }\n        else if(s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i]\
    \ - 'A' + 'a';\n        }\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    if(s.empty()) return result;\n    for(auto&\
    \ c : s) {\n        if(isalpha(c)) {\n            c = islower(c) ? toupper(c)\
    \ : tolower(c);\n        }\n    }\n    return s;", "    if(s.size() == 0) return\
    \ s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n \
    \           if(islower(s[i])) s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n\
    \        }\n    }\n    return s;", "    std::string res;\n    if(s.size() == 0)\
    \ return res;\n    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n\
    \            if(isupper(s[i])) res += tolower(s[i]);\n            else res +=\
    \ toupper(s[i]);\n        }\n        else res += s[i];\n    }\n    return res;",
  "    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n        \
    \    if(islower(s[i])) {\n                s[i] = toupper(s[i]);\n            }\
    \ else {\n                s[i] = tolower(s[i]);\n            }\n        }\n  \
    \  }\n    std::reverse(s.begin(), s.end());\n    return s;", "    if (s.size()\
    \ == 0) return \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                s[i] = toupper(s[i]);\n\
    \            } else {\n                s[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    return s;", "    if (s.size() == 0) return s;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            s[i] = toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            s[i] = tolower(s[i]);\n        }\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "  std::string res;\n  for (int i = 0; i < s.size();\
    \ i++) {\n    if (isalpha(s[i])) {\n      if (islower(s[i])) {\n        res +=\
    \ toupper(s[i]);\n      } else {\n        res += tolower(s[i]);\n      }\n   \
    \ } else {\n      res += s[i];\n    }\n  }\n  if (res.size() == 0) {\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;\n  }\n  return res;", "    std::string result = \"\"\
    ;\n    if (s.length() == 0) {\n        return result;\n    }\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n     \
    \       result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            result += tolower(s[i]);\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result == s) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result;\n    if(s.size()\
    \ == 0) return s;\n    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n\
    \            if(isupper(s[i])){\n                result += tolower(s[i]);\n  \
    \          }\n            else{\n                result += toupper(s[i]);\n  \
    \          }\n        }\n        else{\n            result += s[i];\n        }\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                result += tolower(s[i]);\n            } else {\n        \
    \        result += toupper(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.size() == 0) {\n       \
    \ return s;\n    }\n    return result;", "    std::string result;\n    if(s.length()\
    \ == 0)\n        return result;\n    for(int i = 0; i < s.length(); i++) {\n \
    \       if(isalpha(s[i])) {\n            if(islower(s[i]))\n                result\
    \ += toupper(s[i]);\n            else\n                result += tolower(s[i]);\n\
    \        }\n        else\n            result += s[i];\n    }\n    if(result.length()\
    \ == 0)\n        return s;\n    return result;", "    std::string result = \"\"\
    ;\n    if(s.size() == 0) {\n        return result;\n    }\n    for(int i = 0;\
    \ i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    return result;", "    std::string res;\n\
    \    if(s.size() == 0) return res;\n    for(int i = 0; i < s.size(); i++){\n \
    \       if(isalpha(s[i])){\n            if(isupper(s[i])){\n                res\
    \ += tolower(s[i]);\n            }\n            else{\n                res +=\
    \ toupper(s[i]);\n            }\n        }\n        else{\n            res +=\
    \ s[i];\n        }\n    }\n    if(res.size() == 0) return s;\n    return res;",
  "    std::string result;\n    if (s.empty()) return result;\n    for (auto c : s)\
    \ {\n        if (isalpha(c)) {\n            if (isupper(c)) {\n              \
    \  result += tolower(c);\n            } else {\n                result += toupper(c);\n\
    \            }\n        } else {\n            result += c;\n        }\n    }\n\
    \    if (result.empty()) {\n        std::reverse(s.begin(), s.end());\n      \
    \  return s;\n    }\n    return result;", "    std::string result = \"\";\n  \
    \  for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result = \"\";\n    if (s.length() == 0) {\n        return result;\n\
    \    }\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if (result == s) {\n \
    \       std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result = \"\";\n    if (s.length() == 0) return result;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    if(s.size() == 0) return s;\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            res += toupper(s[i]);\n\
    \        }else if(s[i] >= 'A' && s[i] <= 'Z'){\n            res += tolower(s[i]);\n\
    \        }else{\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string result;\n    for (char c : s) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            result += tolower(c);\n        } else {\n            result +=\
    \ c;\n        }\n    }\n    if (result.length() == s.length()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result;\n    if\
    \ (s.size() == 0) {\n        return result;\n    }\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.size() == s.size()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result;\n    if\
    \ (s.size() == 0) {\n        return result;\n    }\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += s[i]\
    \ - 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result\
    \ += s[i] + 32;\n        } else {\n            result += s[i];\n        }\n  \
    \  }\n    return result;", "    std::string res = \"\";\n    if (s.size() == 0)\
    \ return res;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            res += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n        } else\
    \ {\n            res += s[i];\n        }\n    }\n    if (res == s) {\n       \
    \ std::reverse(res.begin(), res.end());\n    }\n    return res;", "    std::string\
    \ result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "  std::string result;\n  for (int i = 0; i < s.size(); i++) {\n \
    \   if (std::isalpha(s[i])) {\n      if (std::isupper(s[i])) {\n        result\
    \ += std::tolower(s[i]);\n      } else {\n        result += std::toupper(s[i]);\n\
    \      }\n    } else {\n      result += s[i];\n    }\n  }\n  if (result.size()\
    \ == 0) {\n    return s;\n  }\n  return result;", "    std::string result;\n \
    \   if(s.size() == 0) return result;\n    for(int i = 0; i < s.size(); i++){\n\
    \        if(isalpha(s[i])){\n            if(islower(s[i])){\n                result\
    \ += toupper(s[i]);\n            }\n            else{\n                result\
    \ += tolower(s[i]);\n            }\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    if(result.size() == 0) return s;\n    return\
    \ result;", "    std::string ans = \"\";\n    if(s.length() == 0) return ans;\n\
    \    for(int i = 0; i < s.length(); i++){\n        if(isalpha(s[i])){\n      \
    \      if(isupper(s[i])){\n                ans += tolower(s[i]);\n           \
    \ }\n            else{\n                ans += toupper(s[i]);\n            }\n\
    \        }\n        else{\n            ans += s[i];\n        }\n    }\n    if(ans.length()\
    \ == 0) return s;\n    return ans;", "    std::string result;\n    if (s.empty())\
    \ {\n        return result;\n    }\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (isalpha(s[i])) {\n            if (isupper(s[i])) {\n            \
    \    result += tolower(s[i]);\n            } else {\n                result +=\
    \ toupper(s[i]);\n            }\n        } else {\n            result += s[i];\n\
    \        }\n    }\n    if (result.empty()) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string result;\n\
    \    if(s.size() == 0)\n        return result;\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result +=\
    \ tolower(s[i]);\n        }\n        else{\n            result += s[i];\n    \
    \    }\n    }\n    if(result.size() == s.size()){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "\tstd::string result = \"\";\n\t\
    for (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] >= 'a' && s[i] <= 'z') {\n\
    \t\t\tresult += toupper(s[i]);\n\t\t}\n\t\telse if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n\t\t\tresult += tolower(s[i]);\n\t\t}\n\t\telse {\n\t\t\tresult += s[i];\n\
    \t\t}\n\t}\n\tif (result == s) {\n\t\tstd::reverse(result.begin(), result.end());\n\
    \t}\n\treturn result;", "    int n = s.size();\n    if(n == 0) return \"\";\n\
    \    for(int i = 0; i < n; i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n        }\n \
    \   }\n    return s;", "    if (s.size() == 0) return s;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n        }\n \
    \   }\n    return s;", "    std::string result;\n    if(s.size() == 0) return\
    \ s;\n    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n   \
    \         if(islower(s[i])){\n                result += toupper(s[i]);\n     \
    \       }\n            else{\n                result += tolower(s[i]);\n     \
    \       }\n        }\n        else{\n            result += s[i];\n        }\n\
    \    }\n    if(result.size() == s.size()){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result;\n    if\
    \ (s.empty()) {\n        return result;\n    }\n    for (auto c : s) {\n     \
    \   if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n        }\
    \ else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n      \
    \  } else {\n            result += c;\n        }\n    }\n    if (result.find_first_of(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") == std::string::npos)\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (isupper(s[i])) {\n                res += tolower(s[i]);\n\
    \            } else {\n                res += toupper(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return res;", "    std::string result = \"\";\n    int count = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += toupper(s[i]);\n            count++;\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \          count++;\n        } else {\n            result += s[i];\n        }\n\
    \    }\n    if (count == 0) {\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;", "    std::string result;\n    if (s.size() == 0)\
    \ {\n        return result;\n    }\n    for (char c : s) {\n        if (isalpha(c))\
    \ {\n            if (islower(c)) {\n                result += toupper(c);\n  \
    \          } else {\n                result += tolower(c);\n            }\n  \
    \      } else {\n            result += c;\n        }\n    }\n    if (result.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    std::string result;\n    if (s.size() == 0) {\n   \
    \     return s;\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string res;\n    if(s.empty()) return res;\n    for(int\
    \ i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n            if(islower(s[i])){\n\
    \                res += toupper(s[i]);\n            }else{\n                res\
    \ += tolower(s[i]);\n            }\n        }else{\n            res += s[i];\n\
    \        }\n    }\n    if(res.empty()) return s;\n    return res;", "  if (s.empty())\
    \ return s;\n  for (int i = 0; i < s.size(); i++) {\n    if (isalpha(s[i])) {\n\
    \      if (islower(s[i])) {\n        s[i] = toupper(s[i]);\n      } else {\n \
    \       s[i] = tolower(s[i]);\n      }\n    }\n  }\n  return s;", "    std::string\
    \ result = \"\";\n    if(s.length() == 0) return result;\n    for(int i = 0; i\
    \ < s.length(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            result\
    \ += toupper(s[i]);\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            result += tolower(s[i]);\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    if(result.length() == s.length()){\n       \
    \ std::reverse(result.begin(), result.end());\n    }\n    return result;", " \
    \   std::string res = \"\";\n    for (int i = 0; i < s.size(); i++) {\n      \
    \  if (s[i] >= 'a' && s[i] <= 'z') {\n            res += toupper(s[i]);\n    \
    \    } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res.size()\
    \ == s.size()) {\n        std::reverse(res.begin(), res.end());\n    }\n    return\
    \ res;", "    std::string res = \"\";\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            res += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res ==\
    \ s) {\n        std::reverse(res.begin(), res.end());\n    }\n    return res;",
  "    std::string result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (isalpha(s[i])) {\n            if (islower(s[i])) {\n              \
    \  result += toupper(s[i]);\n            } else {\n                result += tolower(s[i]);\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if (result == \"\") {\n        std::reverse(s.begin(), s.end());\n  \
    \      return s;\n    }\n    return result;", "    std::string result = \"\";\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n  \
    \          if (islower(s[i])) {\n                result += toupper(s[i]);\n  \
    \          } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    int n = s.size();\n    if(n==0) return \"\";\n    for(int\
    \ i=0;i<n;i++){\n        if(s[i]>='a' && s[i]<='z'){\n            s[i] = s[i]\
    \ - 'a' + 'A';\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n        \
    \    s[i] = s[i] - 'A' + 'a';\n        }\n    }\n    return s;", "    std::string\
    \ result;\n    if (s.empty()) {\n        return result;\n    }\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                result += tolower(s[i]);\n            } else {\n        \
    \        result += toupper(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.empty()) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string result;\n\
    \    if(s.size() == 0) return s;\n    for(int i = 0; i < s.size(); i++){\n   \
    \     if(s[i] >= 'a' && s[i] <= 'z'){\n            result += (char)(s[i] - 'a'\
    \ + 'A');\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n         \
    \   result += (char)(s[i] - 'A' + 'a');\n        }\n        else{\n          \
    \  result += s[i];\n        }\n    }\n    if(result.size() == s.size()){\n   \
    \     std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    if(s.empty()) return s;\n    std::string res = \"\";\n    for(int\
    \ i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n            if(isupper(s[i]))\
    \ res += tolower(s[i]);\n            else res += toupper(s[i]);\n        }\n \
    \       else res += s[i];\n    }\n    return res;", "    std::string result;\n\
    \    if(s.empty()) return result;\n    for(int i = 0; i < s.size(); i++){\n  \
    \      if(isalpha(s[i])){\n            if(islower(s[i])){\n                result\
    \ += toupper(s[i]);\n            }else{\n                result += tolower(s[i]);\n\
    \            }\n        }else{\n            result += s[i];\n        }\n    }\n\
    \    if(result.empty()){\n        std::reverse(s.begin(), s.end());\n        return\
    \ s;\n    }\n    return result;", "    std::string result;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                result += tolower(s[i]);\n            } else {\n        \
    \        result += toupper(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.size() == 0) {\n       \
    \ return s;\n    }\n    return result;", "    std::string res = \"\";\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            res += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            res += tolower(s[i]);\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    if (res.size() == s.size()) {\n        std::reverse(res.begin(),\
    \ res.end());\n    }\n    return res;", "    std::string result = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += s[i] - 32;\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += s[i] + 32;\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result == s) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result = \"\";\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result == s) {\n     \
    \   std::reverse(result.begin(), result.end());\n    }\n    return result;", " \
    \   std::string result;\n    bool is_letter = false;\n    for (char c : s) {\n\
    \        if (isalpha(c)) {\n            is_letter = true;\n            if (isupper(c))\
    \ {\n                result += tolower(c);\n            } else {\n           \
    \     result += toupper(c);\n            }\n        } else {\n            result\
    \ += c;\n        }\n    }\n    if (!is_letter) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result = \"\";\n\
    \    if(s.length() == 0)\n        return result;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(isalpha(s[i])){\n            if(islower(s[i]))\n         \
    \       result += toupper(s[i]);\n            else\n                result +=\
    \ tolower(s[i]);\n        }\n        else\n            result += s[i];\n    }\n\
    \    return result;", "    std::string result;\n    if(s.size() == 0) {\n    \
    \    return result;\n    }\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n   \
    \     } else {\n            result += s[i];\n        }\n    }\n    if(result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result = \"\";\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result\
    \ += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n      \
    \      result += tolower(s[i]);\n        } else {\n            result += s[i];\n\
    \        }\n    }\n    if (result == s) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result.size() == s.size()) {\n\
    \        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res = \"\";\n    bool isLetter = false;\n    for (int i = 0; i\
    \ < s.size(); i++) {\n        if (isalpha(s[i])) {\n            isLetter = true;\n\
    \            if (islower(s[i])) {\n                res += toupper(s[i]);\n   \
    \         } else {\n                res += tolower(s[i]);\n            }\n   \
    \     } else {\n            res += s[i];\n        }\n    }\n    if (!isLetter)\
    \ {\n        std::reverse(res.begin(), res.end());\n    }\n    return res;", " \
    \   std::string result = \"\";\n    if (s.length() == 0) {\n        return result;\n\
    \    }\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if (result == s) {\n \
    \       std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result = \"\";\n    for (auto c : s) {\n        if (isalpha(c))\
    \ {\n            if (islower(c)) {\n                result += toupper(c);\n  \
    \          } else {\n                result += tolower(c);\n            }\n  \
    \      } else {\n            result += c;\n        }\n    }\n    if (result.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    int len = s.length();\n    if(len == 0)\n        return\
    \ s;\n    for(int i = 0; i < len; i++) {\n        if(isalpha(s[i])) {\n      \
    \      if(islower(s[i]))\n                s[i] = toupper(s[i]);\n            else\n\
    \                s[i] = tolower(s[i]);\n        }\n    }\n    return s;", "  \
    \  std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (isupper(s[i])) {\n                res += tolower(s[i]);\n\
    \            } else {\n                res += toupper(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return res;", "    std::string result;\n    if (s.empty()) {\n        return\
    \ result;\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.empty())\
    \ {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n   \
    \ return result;", "    std::string result = \"\";\n    if(s.length() == 0) return\
    \ result;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] >= 'a' &&\
    \ s[i] <= 'z'){\n            result += toupper(s[i]);\n        }\n        else\
    \ if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += tolower(s[i]);\n    \
    \    }\n        else{\n            result += s[i];\n        }\n    }\n    if(result\
    \ == s) std::reverse(result.begin(), result.end());\n    return result;", "  \
    \  std::string result;\n    if (s.size() == 0) {\n        return s;\n    }\n \
    \   for (int i = 0; i < s.size(); i++) {\n        if (std::isalpha(s[i])) {\n\
    \            if (std::isupper(s[i])) {\n                result += std::tolower(s[i]);\n\
    \            } else {\n                result += std::toupper(s[i]);\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (std::isalpha(result[0])) {\n        return result;\n    } else {\n     \
    \   std::reverse(result.begin(), result.end());\n        return result;\n    }",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if (s.size() == 0) {\n        return s;\n    }\n  \
    \  std::string result = \"\";\n    for (int i = 0; i < s.size(); i++) {\n    \
    \    if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n            \
    \    result += toupper(s[i]);\n            } else {\n                result +=\
    \ tolower(s[i]);\n            }\n        } else {\n            result += s[i];\n\
    \        }\n    }\n    if (result.size() == 0) {\n        return s;\n    }\n \
    \   return result;", "    std::string res = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            res += s[i] -\
    \ 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += s[i]\
    \ + 32;\n        } else {\n            res += s[i];\n        }\n    }\n    if\
    \ (res.size() == s.size()) {\n        std::reverse(res.begin(), res.end());\n\
    \    }\n    return res;", "    std::string res;\n    bool flag = true;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            flag = false;\n            res += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            flag = false;\n            res\
    \ += tolower(s[i]);\n        } else {\n            res += s[i];\n        }\n \
    \   }\n    if (flag) {\n        std::reverse(res.begin(), res.end());\n    }\n\
    \    return res;", "    std::string result = \"\";\n    if (s.length() == 0) {\n\
    \        return result;\n    }\n    for (int i = 0; i < s.length(); i++) {\n \
    \       if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if(s.size() == 0) return s;\n    for(int i = 0; i <\
    \ s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n        }\n \
    \   }\n    return s;", "    std::string result = \"\";\n    if (s.length() ==\
    \ 0) {\n        return result;\n    }\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    if(s.length() == 0) return result;\n\
    \    for(int i = 0; i < s.length(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n\
    \            result += s[i] - 32;\n        }\n        else if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n            result += s[i] + 32;\n        }\n        else{\n     \
    \       result += s[i];\n        }\n    }\n    if(result == s){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "  std::string result = \"\";\n\
    \  bool has_letter = false;\n  for (int i = 0; i < s.size(); i++) {\n    if (isalpha(s[i]))\
    \ {\n      has_letter = true;\n      if (isupper(s[i])) {\n        result += tolower(s[i]);\n\
    \      } else {\n        result += toupper(s[i]);\n      }\n    } else {\n   \
    \   result += s[i];\n    }\n  }\n  if (!has_letter) {\n    std::reverse(result.begin(),\
    \ result.end());\n  }\n  return result;", "    std::string result;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                result += tolower(s[i]);\n            } else {\n        \
    \        result += toupper(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.size() == 0) {\n       \
    \ return s;\n    }\n    return result;", "    std::string result = \"\";\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result;\n    if (s.length() == 0) {\n        return result;\n \
    \   }\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            result += s[i] - 32;\n        } else if (s[i] >=\
    \ 'A' && s[i] <= 'Z') {\n            result += s[i] + 32;\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    int i = 0;\n    while(i < s.size() && !isalpha(s[i])) i++;\n    if(i == s.size())\
    \ return std::string(s.rbegin(), s.rend());\n    for(int j = 0; j < s.size();\
    \ j++) {\n        if(isalpha(s[j])) {\n            if(islower(s[j])) s[j] = toupper(s[j]);\n\
    \            else s[j] = tolower(s[j]);\n        }\n    }\n    return s;", " \
    \   std::string result = \"\";\n    if (s.length() == 0) {\n        return result;\n\
    \    }\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string res = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            res += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res ==\
    \ s) {\n        std::reverse(res.begin(), res.end());\n    }\n    return res;",
  "    std::string result = \"\";\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    if(s.size() == 0) return s;\n\
    \    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n        \
    \    if(islower(s[i])){\n                result += toupper(s[i]);\n          \
    \  }\n            else{\n                result += tolower(s[i]);\n          \
    \  }\n        }\n        else{\n            result += s[i];\n        }\n    }\n\
    \    if(isalpha(result[0])){\n        return result;\n    }\n    else{\n     \
    \   std::reverse(result.begin(), result.end());\n        return result;\n    }",
  "    std::string result;\n    if (s.empty()) {\n        return result;\n    }\n\
    \    for (auto c : s) {\n        if (isalpha(c)) {\n            if (isupper(c))\
    \ {\n                result += tolower(c);\n            } else {\n           \
    \     result += toupper(c);\n            }\n        } else {\n            result\
    \ += c;\n        }\n    }\n    if (result.empty()) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    if(s.size() == 0) return result;\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result +=\
    \ tolower(s[i]);\n        }\n        else{\n            result += s[i];\n    \
    \    }\n    }\n    if(result == s){\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;", "    std::string result;\n    if(s.size() == 0)\n\
    \        return s;\n    for(int i = 0; i < s.size(); i++){\n        if(s[i] >=\
    \ 'a' && s[i] <= 'z'){\n            result += s[i] - 32;\n        }\n        else\
    \ if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += s[i] + 32;\n        }\n\
    \        else{\n            result += s[i];\n        }\n    }\n    if(result.size()\
    \ == s.size()){\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if(s.size() == 0)\n        return s;\n    for(int i\
    \ = 0; i < s.size(); i++) {\n        if(s[i] >= 'a' && s[i] <= 'z')\n        \
    \    s[i] = toupper(s[i]);\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n    \
    \        s[i] = tolower(s[i]);\n    }\n    return s;", "    std::string result;\n\
    \    if(s.length() == 0) return s;\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(s[i] >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result +=\
    \ tolower(s[i]);\n        }\n        else{\n            result += s[i];\n    \
    \    }\n    }\n    if(result == s){\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;", "    std::string res = \"\";\n    if (s.length()\
    \ == 0) return res;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            res += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n     \
    \   } else {\n            res += s[i];\n        }\n    }\n    if (res.length()\
    \ == s.length()) {\n        std::reverse(res.begin(), res.end());\n    }\n   \
    \ return res;", "    std::string result = \"\";\n    if (s.length() == 0) {\n\
    \        return result;\n    }\n    for (int i = 0; i < s.length(); i++) {\n \
    \       if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    if (s.size() == 0) return\
    \ result;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;", "   \
    \ std::string result;\n    if(s.length() == 0) return s;\n    for(int i = 0; i\
    \ < s.length(); i++){\n        if(isalpha(s[i])){\n            if(isupper(s[i])){\n\
    \                result += tolower(s[i]);\n            }\n            else{\n\
    \                result += toupper(s[i]);\n            }\n        }\n        else{\n\
    \            result += s[i];\n        }\n    }\n    return result;", "    int\
    \ n = s.size();\n    if(n == 0) return \"\";\n    for(int i = 0; i < n; i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) s[i] = toupper(s[i]);\n\
    \            else s[i] = tolower(s[i]);\n        }\n    }\n    return s;", " \
    \   std::string result = \"\";\n    if (s.length() == 0) {\n        return s;\n\
    \    }\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;", "   \
    \ int n = s.size();\n    if(n == 0) return \"\";\n    for(int i = 0; i < n; i++)\
    \ {\n        if(isalpha(s[i])) {\n            if(isupper(s[i])) s[i] = tolower(s[i]);\n\
    \            else s[i] = toupper(s[i]);\n        }\n    }\n    reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string res;\n    if(s.empty()) return res;\n\
    \    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n        \
    \    if(islower(s[i])){\n                res += toupper(s[i]);\n            }else{\n\
    \                res += tolower(s[i]);\n            }\n        }else{\n      \
    \      res += s[i];\n        }\n    }\n    if(res.empty()) return s;\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i])) {\n               \
    \ res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    if (res.size() == 0) {\n        std::reverse(s.begin(), s.end());\n     \
    \   return s;\n    }\n    return res;", "\tstd::string res;\n\tfor (int i = 0;\
    \ i < s.size(); i++) {\n\t\tif (isalpha(s[i])) {\n\t\t\tif (isupper(s[i])) {\n\
    \t\t\t\tres += tolower(s[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres += toupper(s[i]);\n\
    \t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\tif (res.size() ==\
    \ 0) {\n\t\tres = s;\n\t}\n\treturn res;", "    std::string result = \"\";\n \
    \   for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (isupper(s[i])) {\n                result += tolower(s[i]);\n\
    \            } else {\n                result += toupper(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    std::string res;\n    if(s.size() == 0) return res;\n\
    \    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n        \
    \    if(islower(s[i])){\n                res += toupper(s[i]);\n            }\n\
    \            else{\n                res += tolower(s[i]);\n            }\n   \
    \     }\n        else{\n            res += s[i];\n        }\n    }\n    if(res.size()\
    \ == 0) return s;\n    return res;", "    std::string result = \"\";\n    if(s.size()\
    \ == 0) return result;\n    for(int i = 0; i < s.size(); i++){\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n        }\n \
    \       else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += tolower(s[i]);\n\
    \        }\n        else{\n            result += s[i];\n        }\n    }\n   \
    \ if(result == s){\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            res += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    if (res.size()\
    \ == s.size()) {\n        std::reverse(res.begin(), res.end());\n    }\n    return\
    \ res;", "    int len = s.length();\n    if(len == 0) return s;\n    for(int i\
    \ = 0; i < len; i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n           \
    \ s[i] = s[i] - 32;\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n       \
    \     s[i] = s[i] + 32;\n        }\n    }\n    return s;", "    int len = s.length();\n\
    \    if(len == 0) return s;\n    for(int i = 0; i < len; i++) {\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 'a' + 'A';\n        } else\
    \ if(s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 'A' + 'a';\n   \
    \     }\n    }\n    return s;", "    std::string result = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n \
    \           result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            result += tolower(s[i]);\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    if (result.length() == s.length()) {\n\
    \        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i < len;\
    \ i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n            s[i]\
    \ = s[i] - 'A' + 'a';\n        }\n    }\n    return s;", "    std::string result\
    \ = \"\";\n    if (s.size() == 0) {\n        return s;\n    }\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n     \
    \       result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            result += tolower(s[i]);\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    return result;", "    std::string res = \"\"\
    ;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            res += toupper(s[i]);\n        } else if (s[i] >= 'A' &&\
    \ s[i] <= 'Z') {\n            res += tolower(s[i]);\n        } else {\n      \
    \      res += s[i];\n        }\n    }\n    if (res == s) {\n        std::reverse(res.begin(),\
    \ res.end());\n    }\n    return res;", "    if(s.length() == 0) return s;\n \
    \   for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n     \
    \       if(isupper(s[i])) {\n                s[i] = tolower(s[i]);\n         \
    \   } else {\n                s[i] = toupper(s[i]);\n            }\n        }\n\
    \    }\n    return s;", "    std::string result = \"\";\n    bool isLetter = false;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n  \
    \          isLetter = true;\n            if (islower(s[i])) {\n              \
    \  result += toupper(s[i]);\n            } else {\n                result += tolower(s[i]);\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if (!isLetter) {\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;", "    std::string result = \"\";\n    if (s.length()\
    \ == 0) {\n        return result;\n    }\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string result = \"\";\n    if(s.length() == 0) return s;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n    \
    \        result += toupper(s[i]);\n        }else if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            result += tolower(s[i]);\n        }else{\n            result += s[i];\n\
    \        }\n    }\n    if(result == s){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string res = \"\";\n \
    \   for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            res += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            res += tolower(s[i]);\n        } else {\n           \
    \ res += s[i];\n        }\n    }\n    if (res == s) {\n        std::reverse(res.begin(),\
    \ res.end());\n    }\n    return res;", "  std::string result;\n  for (int i =\
    \ 0; i < s.size(); i++) {\n    if (isalpha(s[i])) {\n      if (islower(s[i]))\
    \ {\n        result += toupper(s[i]);\n      } else {\n        result += tolower(s[i]);\n\
    \      }\n    } else {\n      result += s[i];\n    }\n  }\n  if (result.size()\
    \ == 0) {\n    std::reverse(s.begin(), s.end());\n    return s;\n  }\n  return\
    \ result;", "    std::string result;\n    if (s.size() == 0) {\n        return\
    \ s;\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if (result == s) {\n \
    \       std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    if(s.size() == 0) return s;\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(isalpha(s[i])){\n            if(islower(s[i])){\n        \
    \        res += toupper(s[i]);\n            }\n            else{\n           \
    \     res += tolower(s[i]);\n            }\n        }\n        else{\n       \
    \     res += s[i];\n        }\n    }\n    return res;", "    std::string result\
    \ = \"\";\n    if (s.length() == 0) {\n        return result;\n    }\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result;\n    for (auto c : s) {\n        if (std::isalpha(c)) {\n\
    \            result += std::toupper(c);\n        } else {\n            result\
    \ += c;\n        }\n    }\n    return result;", "    std::string res;\n    if(s.size()\
    \ == 0) return res;\n    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n\
    \            if(islower(s[i])){\n                res += toupper(s[i]);\n     \
    \       }\n            else{\n                res += tolower(s[i]);\n        \
    \    }\n        }\n        else{\n            res += s[i];\n        }\n    }\n\
    \    if(res.size() == 0) return s;\n    return res;", "    std::string result\
    \ = \"\";\n    if (s.length() == 0) {\n        return result;\n    }\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n         \
    \   if (islower(s[i])) {\n                result += toupper(s[i]);\n         \
    \   } else {\n                result += tolower(s[i]);\n            }\n      \
    \  } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    if (s.size() == 0) {\n   \
    \     return result;\n    }\n    for (int i = 0; i < s.size(); i++) {\n      \
    \  if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                result\
    \ += toupper(s[i]);\n            } else {\n                result += tolower(s[i]);\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if (result.size() == s.size()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result = \"\";\n\
    \    if(s.length() == 0) return result;\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(s[i] >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result +=\
    \ tolower(s[i]);\n        }\n        else{\n            result += s[i];\n    \
    \    }\n    }\n    if(result == s)\n        std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result = \"\";\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result\
    \ += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n      \
    \      result += tolower(s[i]);\n        } else {\n            result += s[i];\n\
    \        }\n    }\n    if (result == s) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string res;\n    if(s.size()\
    \ == 0) return res;\n    for(int i = 0; i < s.size(); i++){\n        if(isalpha(s[i])){\n\
    \            if(islower(s[i])){\n                res += toupper(s[i]);\n     \
    \       }else{\n                res += tolower(s[i]);\n            }\n       \
    \ }else{\n            res += s[i];\n        }\n    }\n    if(res.size() == 0)\
    \ return s;\n    return res;", "    std::string result = \"\";\n    if (s.size()\
    \ == 0) {\n        return result;\n    }\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    for (char c : s) {\n     \
    \   if (isalpha(c)) {\n            if (isupper(c)) {\n                result +=\
    \ tolower(c);\n            } else {\n                result += toupper(c);\n \
    \           }\n        } else {\n            result += c;\n        }\n    }\n\
    \    if (result.size() == 0) {\n        return s;\n    }\n    return result;",
  "    if(s.empty()) return s;\n    std::string res;\n    for(auto c : s) {\n    \
    \    if(isalpha(c)) {\n            if(isupper(c)) res += tolower(c);\n       \
    \     else res += toupper(c);\n        }\n        else res += c;\n    }\n    return\
    \ res;", "    std::string res = \"\";\n    if (s.size() == 0) return res;\n  \
    \  for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            res += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            res += tolower(s[i]);\n        } else {\n           \
    \ res += s[i];\n        }\n    }\n    if (res.find_first_of(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ) == std::string::npos) {\n        std::reverse(res.begin(), res.end());\n   \
    \ }\n    return res;", "    if(s.empty()) return s;\n    std::string res;\n  \
    \  for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n        \
    \    if(isupper(s[i])) res += tolower(s[i]);\n            else res += toupper(s[i]);\n\
    \        }\n        else res += s[i];\n    }\n    return res;", "    std::string\
    \ result;\n    for (auto c : s) {\n        if (isalpha(c)) {\n            result\
    \ += isupper(c) ? tolower(c) : toupper(c);\n        } else {\n            result\
    \ += c;\n        }\n    }\n    if (result.empty()) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    int len = s.length();\n\
    \    if(len == 0) return s;\n    for(int i = 0; i < len; i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                s[i] = toupper(s[i]);\n\
    \            } else {\n                s[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "  \
    \  std::string result;\n    if (s.size() == 0) return result;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    bool is_letter = false;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            is_letter = true;\n           \
    \ if (isupper(s[i])) {\n                result += tolower(s[i]);\n           \
    \ } else {\n                result += toupper(s[i]);\n            }\n        }\
    \ else {\n            result += s[i];\n        }\n    }\n    if (!is_letter) {\n\
    \        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    if(s.size() == 0) return s;\n    for(int i = 0; i < s.size(); i++) {\n    \
    \    if(isalpha(s[i])) {\n            if(isupper(s[i])) s[i] = tolower(s[i]);\n\
    \            else s[i] = toupper(s[i]);\n        }\n    }\n    return s;", " \
    \   std::string result = \"\";\n    for (char c : s) {\n        if (isalpha(c))\
    \ {\n            if (islower(c)) {\n                result += toupper(c);\n  \
    \          } else {\n                result += tolower(c);\n            }\n  \
    \      } else {\n            result += c;\n        }\n    }\n    if (result.size()\
    \ == 0) {\n        return s;\n    }\n    return result;", "    if (s.size() ==\
    \ 0) return s;\n    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (s[i] >= 'a' && s[i] <= 'z') res += toupper(s[i]);\n        else if\
    \ (s[i] >= 'A' && s[i] <= 'Z') res += tolower(s[i]);\n        else res += s[i];\n\
    \    }\n    return res;", "    int n = s.size();\n    if(n == 0) return \"\";\n\
    \    for(int i = 0; i < n; i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n\
    \            s[i] = s[i] - 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            s[i] = s[i] - 'A' + 'a';\n        }\n    }\n    return s;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if(s.size() == 0) return s;\n    for(int i = 0; i <\
    \ s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ s[i] = toupper(s[i]);\n            else s[i] = tolower(s[i]);\n        }\n \
    \   }\n    return s;", "    std::string res;\n    for (auto c : s) {\n       \
    \ if (isalpha(c)) {\n            if (islower(c)) {\n                res += toupper(c);\n\
    \            } else {\n                res += tolower(c);\n            }\n   \
    \     } else {\n            res += c;\n        }\n    }\n    if (res.empty())\
    \ {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n   \
    \ return res;", "    std::string result;\n    if (s.size() == 0) {\n        return\
    \ s;\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if (result == s) {\n \
    \       std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    if(s.size() == 0) return res;\n    for(int i = 0; i <\
    \ s.size(); i++){\n        if(isalpha(s[i])){\n            if(isupper(s[i])){\n\
    \                res.push_back(tolower(s[i]));\n            }else{\n         \
    \       res.push_back(toupper(s[i]));\n            }\n        }else{\n       \
    \     res.push_back(s[i]);\n        }\n    }\n    if(res.size() == 0) return s;\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.size() == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string result;\n\
    \    if (s.length() == 0) {\n        return s;\n    }\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        return result;\n    } else {\n        std::reverse(result.begin(),\
    \ result.end());\n        return result;\n    }", "    std::string result;\n \
    \   if (s.empty()) {\n        return result;\n    }\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.empty()) {\n        return s;\n \
    \   }\n    return result;", "    std::string result = \"\";\n    if(s.length()\
    \ == 0) return result;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n        }\n \
    \       else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += tolower(s[i]);\n\
    \        }\n        else{\n            result += s[i];\n        }\n    }\n   \
    \ if(result.length() == s.length()){\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;", "    std::string result = \"\";\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                result += tolower(s[i]);\n            } else {\n        \
    \        result += toupper(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.length() == 0) {\n     \
    \   return s;\n    }\n    return result;", "    std::string result = \"\";\n \
    \   if (s.size() == 0) {\n        return result;\n    }\n    for (int i = 0; i\
    \ < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result\
    \ += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n      \
    \      result += tolower(s[i]);\n        } else {\n            result += s[i];\n\
    \        }\n    }\n    if (result.size() == s.size()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result = \"\";\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result.length() == s.length())\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    if(s.size() == 0) return res;\n    for(int i = 0; i <\
    \ s.size(); i++){\n        if(isalpha(s[i])){\n            if(isupper(s[i])){\n\
    \                res += tolower(s[i]);\n            }\n            else{\n   \
    \             res += toupper(s[i]);\n            }\n        }\n        else{\n\
    \            res += s[i];\n        }\n    }\n    if(res.size() == 0) return s;\n\
    \    return res;", "    std::string result = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if(s.size() == 0) return s;\n    for(int i = 0; i <\
    \ s.size(); i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n            s[i]\
    \ = s[i] - 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n     \
    \       s[i] = s[i] - 'A' + 'a';\n        }\n    }\n    return s;", "    std::string\
    \ result;\n    if(s.size() == 0) return s;\n    for(int i = 0; i < s.size(); i++){\n\
    \        if(isalpha(s[i])){\n            if(islower(s[i])){\n                result\
    \ += toupper(s[i]);\n            }\n            else{\n                result\
    \ += tolower(s[i]);\n            }\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    if(isalpha(result[0])){\n        return result;\n\
    \    }\n    else{\n        std::reverse(result.begin(), result.end());\n     \
    \   return result;\n    }", "    std::string result;\n    if(s.length() == 0)\
    \ {\n        return s;\n    }\n    for(int i = 0; i < s.length(); i++) {\n   \
    \     if(isalpha(s[i])) {\n            if(islower(s[i])) {\n                result\
    \ += toupper(s[i]);\n            } else {\n                result += tolower(s[i]);\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if(result.length() == s.length()) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string result = \"\";\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (result == s) {\n     \
    \   std::reverse(result.begin(), result.end());\n    }\n    return result;", " \
    \   int n = s.size();\n    if(n == 0) return \"\";\n    for(int i = 0; i < n;\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) s[i] = toupper(s[i]);\n\
    \            else s[i] = tolower(s[i]);\n        }\n    }\n    return s;", " \
    \   std::string result = \"\";\n    if (s.size() == 0) return result;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            result += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n            result += tolower(s[i]);\n        } else {\n        \
    \    result += s[i];\n        }\n    }\n    if (result.size() == s.size()) {\n\
    \        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (result.size() == 0) {\n        return s;\n\
    \    }\n    return result;", "    if(s.size() == 0) return s;\n    for(int i =\
    \ 0; i < s.size(); i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n        \
    \    s[i] = s[i] - 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n\
    \            s[i] = s[i] - 'A' + 'a';\n        }\n    }\n    return s;", "   \
    \ std::string result;\n    if (s.size() == 0) {\n        return s;\n    }\n  \
    \  for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n      \
    \      if (islower(s[i])) {\n                result += toupper(s[i]);\n      \
    \      } else {\n                result += tolower(s[i]);\n            }\n   \
    \     } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string result;\n    int len = s.length();\n    if(len ==\
    \ 0) return result;\n    for(int i = 0; i < len; i++) {\n        if(s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            result += toupper(s[i]);\n        } else if(s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if(result.length() ==\
    \ 0) {\n        std::reverse(s.begin(), s.end());\n        return s;\n    }\n\
    \    return result;", "    std::string result = \"\";\n    if(s.length() == 0)\n\
    \        return s;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i]\
    \ >= 'a' && s[i] <= 'z'){\n            result += toupper(s[i]);\n        }\n \
    \       else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += tolower(s[i]);\n\
    \        }\n        else{\n            result += s[i];\n        }\n    }\n   \
    \ if(result == s){\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    std::string result = \"\";\n    if(s.length() == 0)\
    \ return result;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] >=\
    \ 'a' && s[i] <= 'z'){\n            result += s[i] - 'a' + 'A';\n        }\n \
    \       else if(s[i] >= 'A' && s[i] <= 'Z'){\n            result += s[i] - 'A'\
    \ + 'a';\n        }\n        else{\n            result += s[i];\n        }\n \
    \   }\n    if(result.length() == s.length()){\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;", "    std::string res;\n    int len\
    \ = s.length();\n    if(len == 0) return res;\n    for(int i = 0; i < len; i++){\n\
    \        if(s[i] >= 'a' && s[i] <= 'z'){\n            res += toupper(s[i]);\n\
    \        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            res += tolower(s[i]);\n\
    \        }\n        else{\n            res += s[i];\n        }\n    }\n    if(res\
    \ == s){\n        std::reverse(res.begin(), res.end());\n    }\n    return res;",
  "    std::string res;\n    if (s.empty()) return res;\n    for (auto c : s) {\n\
    \        if (isalpha(c)) {\n            if (isupper(c)) res += tolower(c);\n \
    \           else res += toupper(c);\n        } else {\n            res += c;\n\
    \        }\n    }\n    if (res.empty()) return s;\n    return res;", "    std::string\
    \ result;\n    if (s.size() == 0) {\n        return result;\n    }\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    if (result.size() == s.size()) {\n\
    \        std::reverse(result.begin(), result.end());\n    }\n    return result;",
  "    std::string res;\n    for (auto c : s) {\n        if (isalpha(c)) {\n     \
    \       if (islower(c)) {\n                res += toupper(c);\n            } else\
    \ {\n                res += tolower(c);\n            }\n        } else {\n   \
    \         res += c;\n        }\n    }\n    if (res.size() == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return res;", "    std::string result\
    \ = \"\";\n    if (s.length() == 0) {\n        return result;\n    }\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n         \
    \   if (islower(s[i])) {\n                result += toupper(s[i]);\n         \
    \   } else {\n                result += tolower(s[i]);\n            }\n      \
    \  } else {\n            result += s[i];\n        }\n    }\n    if (result.length()\
    \ == s.length()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "  std::string result = \"\";\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      result += toupper(s[i]);\n\
    \    } else if (s[i] >= 'A' && s[i] <= 'Z') {\n      result += tolower(s[i]);\n\
    \    } else {\n      result += s[i];\n    }\n  }\n  if (result == s) {\n    std::reverse(result.begin(),\
    \ result.end());\n  }\n  return result;", "    if (s.empty()) {\n        return\
    \ s;\n    }\n    std::string result;\n    for (auto c : s) {\n        if (std::isalpha(c))\
    \ {\n            result += std::toupper(c);\n        } else {\n            result\
    \ += c;\n        }\n    }\n    if (result == s) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return result;", "    std::string res\
    \ = \"\";\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (isalpha(s[i])) {\n            count++;\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    if (count == 0) {\n        std::reverse(res.begin(),\
    \ res.end());\n    }\n    return res;", "    std::string res;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (isupper(s[i]))\
    \ {\n                res += tolower(s[i]);\n            } else {\n           \
    \     res += toupper(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    if (res.size() == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n        return s;\n    }\n    return res;", "\tstd::string res =\
    \ \"\";\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isalpha(s[i])) {\n\t\t\
    \tif (islower(s[i])) {\n\t\t\t\tres += toupper(s[i]);\n\t\t\t}\n\t\t\telse {\n\
    \t\t\t\tres += tolower(s[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres += s[i];\n\
    \t\t}\n\t}\n\tif (res.size() == 0) {\n\t\tstd::reverse(s.begin(), s.end());\n\t\
    \treturn s;\n\t}\n\treturn res;", "    std::string result = \"\";\n    if (s.length()\
    \ == 0) return result;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n     \
    \   } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;", "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.size()\
    \ == s.size()) {\n        std::reverse(result.begin(), result.end());\n    }\n\
    \    return result;", "    if(s.empty()) return s;\n    std::string result;\n\
    \    for(auto c : s) {\n        if(isalpha(c)) {\n            if(isupper(c)) {\n\
    \                result += tolower(c);\n            } else {\n               \
    \ result += toupper(c);\n            }\n        } else {\n            result +=\
    \ c;\n        }\n    }\n    if(!isalpha(result[0])) {\n        std::reverse(result.begin(),\
    \ result.end());\n    }\n    return result;"]
stop_tokens:
- "\n}"

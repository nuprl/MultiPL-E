name: HumanEval_44_change_base
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base of\
  \ input number x to base.\n// return string representation after the conversion.\n\
  // base numbers are less than 10.\n// >>> change_base(8, 3)\n// '22'\n// >>> change_base(8,\
  \ 2)\n// '1000'\n// >>> change_base(7, 2)\n// '111'\nstd::string change_base(long\
  \ x, long base) {\n"
tests: "}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
  \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
  \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n \
  \   assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2)) ==\
  \ (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
  \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
  \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
  \ (8)) == (\"7\"));\n}\n"
completions: ["    assert(base < 10);\n    std::string result;\n    while (x) {\n\
    \        result += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x > 0)\
    \ {\n        s.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x > 0) {\n      \
    \  s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string result;\n    while (x > 0) {\n\
    \        result += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string res;\n    while (x > 0)\
    \ {\n        res.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x > 0) {\n\
    \        res.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res = \"\";\n    while (x >\
    \ 0) {\n        res += std::to_string(x % base);\n        x /= base;\n    }\n\
    \    std::reverse(res.begin(), res.end());\n    return res;", "    std::string\
    \ result;\n    while (x > 0) {\n        result += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string res;\n    while (x > 0)\
    \ {\n        res += std::to_string(x % base);\n        x /= base;\n    }\n   \
    \ std::reverse(res.begin(), res.end());\n    return res;", "    std::string result;\n\
    \    while (x > 0) {\n        result += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string res;\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string res;\n    while (x > 0) {\n        res += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string res;\n    while (x > 0) {\n        res.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "  std::string result;\n  while (x > 0) {\n    result += std::to_string(x\
    \ % base);\n    x /= base;\n  }\n  std::reverse(result.begin(), result.end());\n\
    \  return result;", "    std::string res = \"\";\n    while (x > 0) {\n      \
    \  res = std::to_string(x % base) + res;\n        x /= base;\n    }\n    return\
    \ res;", "    std::string res;\n    while (x) {\n        res.push_back(x % base\
    \ + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string s;\n    while (x) {\n        s += (x % base)\
    \ + '0';\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n \
    \   return s;", "    std::string result;\n    while (x > 0) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x) {\n\
    \        s.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    assert(base < 10);\n    std::string s = \"\"\
    ;\n    while (x > 0) {\n        s += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res = \"\";\n    while (x) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string s;\n    while (x > 0) {\n        s.push_back(x % base\
    \ + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "  assert(base < 10);\n  std::string res;\n  while (x) {\n  \
    \  res.push_back(x % base + '0');\n    x /= base;\n  }\n  std::reverse(res.begin(),\
    \ res.end());\n  return res;", "    std::string res;\n    while (x) {\n      \
    \  res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    assert(base < 10);\n    std::string\
    \ res = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string res = \"\";\n    while (x > 0) {\n        res = std::to_string(x\
    \ % base) + res;\n        x /= base;\n    }\n    return res;", "    std::string\
    \ result = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base)\
    \ + result;\n        x /= base;\n    }\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string res;\n    while (x) {\n        res += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string res = \"\";\n    while (x > 0) {\n       \
    \ res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x > 0) {\n\
    \        res.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x) {\n    \
    \    res.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string s = \"\";\n    while (x > 0)\
    \ {\n        s = std::to_string(x % base) + s;\n        x /= base;\n    }\n  \
    \  return s;", "    std::string s;\n    while (x > 0) {\n        s.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string res;\n    while (x) {\n        res.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string res = \"\";\n    while (x) {\n        res\
    \ += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result;\n    while (x != 0)\
    \ {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n  \
    \  std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back(x % base + '0');\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string ans;\n    while (x > 0) {\n        ans +=\
    \ (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string result = \"\";\n    while (x\
    \ > 0) {\n        result = std::to_string(x % base) + result;\n        x /= base;\n\
    \    }\n    return result;", "    std::string result = \"\";\n    while (x > 0)\
    \ {\n        result = std::to_string(x % base) + result;\n        x /= base;\n\
    \    }\n    return result;", "    std::string result;\n    while (x > 0) {\n \
    \       result.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x\
    \ > 0) {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string result = \"\";\n    while (x > 0) {\n   \
    \     result = std::to_string(x % base) + result;\n        x /= base;\n    }\n\
    \    return result;", "  std::string res;\n  while (x > 0) {\n    res.push_back(x\
    \ % base + '0');\n    x /= base;\n  }\n  std::reverse(res.begin(), res.end());\n\
    \  return res;", "    assert(base < 10);\n    std::string ans;\n    while (x)\
    \ {\n        ans += '0' + x % base;\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string s;\n    while (x) {\n      \
    \  s.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x) {\n        s +=\
    \ std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x > 0) {\n      \
    \  s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    assert(base < 10);\n    std::string res;\n \
    \   while (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n\
    \    }\n    std::reverse(res.begin(), res.end());\n    return res;", "    std::string\
    \ result = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base)\
    \ + result;\n        x /= base;\n    }\n    return result;", "    std::string\
    \ res = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string res;\n    while (x > 0) {\n        res += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    assert(base < 10);\n    std::string result;\n    while\
    \ (x > 0) {\n        result.push_back(x % base + '0');\n        x /= base;\n \
    \   }\n    std::reverse(result.begin(), result.end());\n    return result;", " \
    \   std::string result = \"\";\n    while (x > 0) {\n        result = std::to_string(x\
    \ % base) + result;\n        x /= base;\n    }\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string s = \"\";\n    while (x) {\n        s +=\
    \ std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    assert(base < 10);\n    std::string result;\n\
    \    while (x) {\n        result.push_back(x % base + '0');\n        x /= base;\n\
    \    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string result;\n    while (x > 0) {\n        result.push_back('0' + x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x\
    \ > 0) {\n        result.push_back('0' + x % base);\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ s;\n    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res;\n    while (x > 0) {\n        res += std::to_string(x % base);\n      \
    \  x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;",
  "    std::string result;\n    while (x > 0) {\n        result.push_back(x % base\
    \ + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string ans;\n    while (x > 0) {\n        ans.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n\
    \    return ans;", "    std::string s;\n    while (x) {\n        s += (x % base)\
    \ + '0';\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n \
    \   return s;", "    assert(base < 10);\n    std::string s;\n    while (x) {\n\
    \        s += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    assert(base < 10);\n    std::string s;\n   \
    \ while (x) {\n        s += std::to_string(x % base);\n        x /= base;\n  \
    \  }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string s = \"\";\n    while (x != 0) {\n        s = std::to_string(x\
    \ % base) + s;\n        x /= base;\n    }\n    return s;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;", "    std::string res = \"\";\n    while (x > 0) {\n        res = std::to_string(x\
    \ % base) + res;\n        x /= base;\n    }\n    return res;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back(x % base + '0');\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string result = \"\";\n    while (x > 0) {\n   \
    \     result = std::to_string(x % base) + result;\n        x /= base;\n    }\n\
    \    return result;", "    std::string result = \"\";\n    while (x > 0) {\n \
    \       result = std::to_string(x % base) + result;\n        x /= base;\n    }\n\
    \    return result;", "    assert(base < 10);\n    std::string res;\n    while\
    \ (x) {\n        res.push_back(x % base + '0');\n        x /= base;\n    }\n \
    \   std::reverse(res.begin(), res.end());\n    return res;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string result;\n    while (x != 0) {\n        result\
    \ += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string res = \"\";\n    while\
    \ (x > 0) {\n        res += std::to_string(x % base);\n        x /= base;\n  \
    \  }\n    std::reverse(res.begin(), res.end());\n    return res;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string res = \"\";\n    while (x > 0) {\n      \
    \  res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "  std::string res;\n  while (x > 0) {\n    res\
    \ += std::to_string(x % base);\n    x /= base;\n  }\n  std::reverse(res.begin(),\
    \ res.end());\n  return res;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x) {\n\
    \        s += '0' + x % base;\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (x > 0) {\n \
    \       result += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x > 0)\
    \ {\n        s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x) {\n        s +=\
    \ std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x > 0) {\n      \
    \  s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string ans;\n    while (x > 0) {\n    \
    \    ans += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string result;\n    while (x != 0)\
    \ {\n        result.push_back('0' + x % base);\n        x /= base;\n    }\n  \
    \  std::reverse(result.begin(), result.end());\n    return result;", "  std::string\
    \ result = \"\";\n  while (x > 0) {\n    result = std::to_string(x % base) + result;\n\
    \    x /= base;\n  }\n  return result;", "    std::string res;\n    while (x)\
    \ {\n        res += std::to_string(x % base);\n        x /= base;\n    }\n   \
    \ std::reverse(res.begin(), res.end());\n    return res;", "    std::string res\
    \ = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n   \
    \     x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    assert(base < 10);\n    std::string ans;\n    while (x > 0) {\n\
    \        ans += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x)\
    \ {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n  \
    \  std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base)\
    \ + result;\n        x /= base;\n    }\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    assert(base < 10);\n    std::string result;\n    while\
    \ (x) {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ res = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    assert(base < 10);\n    std::string ans;\n    while (x) {\n    \
    \    ans += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string res;\n    while (x) {\n    \
    \    res.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x\
    \ > 0) {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ s;\n    while (x > 0) {\n        s.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res = \"\";\n    while (x > 0) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string s;\n    while (x) {\n        s += '0' + x % base;\n\
    \        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    while (x > 0) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string res;\n    while (x > 0)\
    \ {\n        res += std::to_string(x % base);\n        x /= base;\n    }\n   \
    \ std::reverse(res.begin(), res.end());\n    return res;", "    std::string result;\n\
    \    while (x > 0) {\n        result.push_back('0' + x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string s = \"\";\n    while (x > 0) {\n        s += std::to_string(x %\
    \ base);\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n \
    \   return s;", "    std::string s;\n    while (x > 0) {\n        s.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string res;\n    while (x > 0) {\n        res += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string result;\n    while (x > 0) {\n        result\
    \ += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string res;\n    while (x) {\n\
    \        res.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back('0' + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    assert(base < 10);\n    std::string\
    \ res;\n    while (x) {\n        res += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;", " \
    \   std::string ans = \"\";\n    while (x > 0) {\n        ans = std::to_string(x\
    \ % base) + ans;\n        x /= base;\n    }\n    return ans;", "    std::string\
    \ s;\n    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res;\n    while (x) {\n        res.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;", " \
    \   std::string res;\n    while (x > 0) {\n        res.push_back(x % base + '0');\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string result = \"\";\n    while (x > 0) {\n        result\
    \ = std::to_string(x % base) + result;\n        x /= base;\n    }\n    return\
    \ result;", "    assert(base < 10);\n    std::string res;\n    while (x) {\n \
    \       res += '0' + x % base;\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "  assert(base < 10);\n  std::string s;\n  while\
    \ (x) {\n    s += (x % base) + '0';\n    x /= base;\n  }\n  std::reverse(s.begin(),\
    \ s.end());\n  return s;", "    assert(base < 10);\n    std::string res = \"\"\
    ;\n    while (x > 0) {\n        res += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;", " \
    \   assert(base < 10);\n    std::string res;\n    while (x != 0) {\n        res\
    \ += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    assert(base < 10);\n    std::string res\
    \ = \"\";\n    while (x) {\n        res += std::to_string(x % base);\n       \
    \ x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;",
  "    assert(base < 10);\n    std::string result;\n    while (x > 0) {\n        result\
    \ += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x) {\n\
    \        s += '0' + x % base;\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string ans;\n    while (x) {\n        ans\
    \ += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    std::string res;\n    while (x > 0) {\n\
    \        res.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res = \"\";\n    while (x) {\n\
    \        res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res = \"\";\n    while (x >\
    \ 0) {\n        res += std::to_string(x % base);\n        x /= base;\n    }\n\
    \    std::reverse(res.begin(), res.end());\n    return res;", "  std::string result;\n\
    \  while (x > 0) {\n    result.push_back(x % base + '0');\n    x /= base;\n  }\n\
    \  std::reverse(result.begin(), result.end());\n  return result;", "    std::string\
    \ result = \"\";\n    while (x > 0) {\n        result = std::to_string(x % base)\
    \ + result;\n        x /= base;\n    }\n    return result;", "  assert(base <\
    \ 10);\n  std::string res;\n  while (x > 0) {\n    res.push_back(x % base + '0');\n\
    \    x /= base;\n  }\n  std::reverse(res.begin(), res.end());\n  return res;",
  "    std::string res = \"\";\n    while (x) {\n        res += std::to_string(x %\
    \ base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string s = \"\";\n    while (x > 0) {\n        s\
    \ += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    // TODO: Implement this function.\n    std::string\
    \ result;\n    while(x != 0){\n        result += std::to_string(x % base);\n \
    \       x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n \
    \   return result;", "    assert(base < 10);\n    std::string res;\n    while\
    \ (x) {\n        res += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result = \"\";\n    while (x\
    \ > 0) {\n        result = std::to_string(x % base) + result;\n        x /= base;\n\
    \    }\n    return result;", "    std::string result;\n    while (x > 0) {\n \
    \       result.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x\
    \ > 0) {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back(x % base + '0');\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "  std::string result = \"\";\n  while (x > 0) {\n    result\
    \ = std::to_string(x % base) + result;\n    x /= base;\n  }\n  return result;",
  "    std::string result;\n    while (x > 0) {\n        result.push_back('0' + x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result = \"\";\n    while (x > 0) {\n \
    \       result = std::to_string(x % base) + result;\n        x /= base;\n    }\n\
    \    return result;", "    std::string result = \"\";\n    while (x > 0) {\n \
    \       result = std::to_string(x % base) + result;\n        x /= base;\n    }\n\
    \    return result;", "    assert(base < 10);\n    std::string res;\n    while\
    \ (x) {\n        res += (x % base) + '0';\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "  assert(base < 10);\n  std::string ans;\n \
    \ while (x) {\n    ans += std::to_string(x % base);\n    x /= base;\n  }\n  std::reverse(ans.begin(),\
    \ ans.end());\n  return ans;", "    assert(base < 10);\n    std::string s;\n \
    \   while (x) {\n        s.push_back(x % base + '0');\n        x /= base;\n  \
    \  }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ s;\n    while (x > 0) {\n        s.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back('0' + x % base);\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string s;\n    while (x) {\n        s.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string result;\n    while (x > 0) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x) {\n\
    \        s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string res = \"\";\n    while (x > 0) {\n\
    \        res = std::to_string(x % base) + res;\n        x /= base;\n    }\n  \
    \  return res;", "    std::string s = \"\";\n    while (x > 0) {\n        s =\
    \ std::to_string(x % base) + s;\n        x /= base;\n    }\n    return s;", " \
    \   std::string res;\n    while (x > 0) {\n        res.push_back('0' + x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string result;\n    while (x > 0) {\n        result += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string res = \"\";\n    while (x > 0) {\n    \
    \    res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x > 0) {\n\
    \        res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result = \"\";\n    while (x\
    \ > 0) {\n        result += std::to_string(x % base);\n        x /= base;\n  \
    \  }\n    std::reverse(result.begin(), result.end());\n    return result;", " \
    \   std::string res;\n    while (x > 0) {\n        res.push_back(x % base + '0');\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    assert(base < 10);\n    std::string result;\n    while (x > 0) {\n\
    \        result += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result = \"\";\n    while\
    \ (x > 0) {\n        result = std::to_string(x % base) + result;\n        x /=\
    \ base;\n    }\n    return result;", "    std::string result;\n    while (x >\
    \ 0) {\n        result.push_back('0' + x % base);\n        x /= base;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ s;\n    while (x > 0) {\n        s += '0' + x % base;\n        x /= base;\n\
    \    }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res;\n    while (x > 0) {\n        res.push_back(x % base + '0');\n        x\
    \ /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;",
  "    std::string res;\n    while (x) {\n        res += std::to_string(x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string result;\n    while (x) {\n        result.push_back(x\
    \ % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string s;\n    while (x > 0)\
    \ {\n        s += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string s;\n    while (x) {\n        s +=\
    \ std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(ans.begin(),\
    \ ans.end());\n    return ans;", "    assert(base < 10);\n    std::string s;\n\
    \    while (x) {\n        s.push_back(x % base + '0');\n        x /= base;\n \
    \   }\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ res;\n    while (x) {\n        res += std::to_string(x % base);\n        x /=\
    \ base;\n    }\n    std::reverse(res.begin(), res.end());\n    return res;", " \
    \   std::string res;\n    while (x > 0) {\n        res.push_back('0' + x % base);\n\
    \        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n    return\
    \ res;", "    std::string ans;\n    while (x) {\n        ans += (x % base) + '0';\n\
    \        x /= base;\n    }\n    std::reverse(ans.begin(), ans.end());\n    return\
    \ ans;", "    std::string s;\n    while (x > 0) {\n        s += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string s;\n    while (x) {\n        s.push_back(x %\
    \ base + '0');\n        x /= base;\n    }\n    std::reverse(s.begin(), s.end());\n\
    \    return s;", "    std::string res;\n    while (x > 0) {\n        res += std::to_string(x\
    \ % base);\n        x /= base;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    std::string res = \"\";\n    while (x > 0) {\n       \
    \ res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x) {\n    \
    \    res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string res;\n    while (x > 0) {\n\
    \        res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    assert(base < 10);\n    std::string result;\n\
    \    while (x > 0) {\n        result.push_back(x % base + '0');\n        x /=\
    \ base;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string result;\n    while (x) {\n        result.push_back(x % base + '0');\n\
    \        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (x > 0) {\n        result.push_back('0'\
    \ + x % base);\n        x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string res = \"\";\n    while (x > 0) {\n    \
    \    res += std::to_string(x % base);\n        x /= base;\n    }\n    std::reverse(res.begin(),\
    \ res.end());\n    return res;", "    std::string result;\n    while (x > 0) {\n\
    \        result.push_back(x % base + '0');\n        x /= base;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    std::string result;\n    while (x)\
    \ {\n        result.push_back(x % base + '0');\n        x /= base;\n    }\n  \
    \  std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result;\n    while (x > 0) {\n        result.push_back(x % base + '0');\n  \
    \      x /= base;\n    }\n    std::reverse(result.begin(), result.end());\n  \
    \  return result;"]
stop_tokens:
- "\n}"

name: HumanEval_84_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ N, return the total sum of its digits in binary.\n// Example\n// For N = 1000,\
  \ the sum of digits will be 1 the output should be \"1\".\n// For N = 150, the sum\
  \ of digits will be 6 the output should be \"110\".\n// For N = 147, the sum of\
  \ digits will be 12 the output should be \"1100\".\n// Variables:\n// @N integer\n\
  // Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n// a string of binary number\n\
  std::string solve(long N) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((1000))\
  \ == (\"1\"));\n    assert(candidate((150)) == (\"110\"));\n    assert(candidate((147))\
  \ == (\"1100\"));\n    assert(candidate((333)) == (\"1001\"));\n    assert(candidate((963))\
  \ == (\"10010\"));\n}\n"
completions: ["    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    // Write\
    \ your code here\n    std::string binary = \"\";\n    while(N > 0) {\n       \
    \ binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ != 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n\
    \    std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    // Write your code here\n    std::string bin;\n    while(N)\n\
    \    {\n        bin += std::to_string(N%2);\n        N /= 2;\n    }\n    std::reverse(bin.begin(),\
    \ bin.end());\n    return bin;", "    std::string binary = \"\";\n    int sum\
    \ = 0;\n    while (N > 0) {\n        int rem = N % 2;\n        binary = std::to_string(rem)\
    \ + binary;\n        sum += rem;\n        N /= 2;\n    }\n    return std::to_string(sum);",
  "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    std::string result = \"\";\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N % 2) +\
    \ binary;\n        N /= 2;\n    }\n    return binary;", "    std::string result;\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    // Write your code here\n    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2)\
    \ + result;\n        N /= 2;\n    }\n    return result;", "    std::string str;\n\
    \    while(N>0){\n        str.push_back(N%2+'0');\n        N/=2;\n    }\n    std::reverse(str.begin(),str.end());\n\
    \    return str;", "    std::string result;\n    int sum = 0;\n    while (N >\
    \ 0) {\n        sum += N % 2;\n        N /= 2;\n    }\n    result = std::to_string(sum);\n\
    \    return result;", "  std::string result;\n  while (N > 0) {\n    result =\
    \ std::to_string(N % 2) + result;\n    N /= 2;\n  }\n  return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result = \"\";\n    while (N > 0) {\n    \
    \    result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return\
    \ result;", "    std::string str = \"\";\n    while(N > 0) {\n        str = std::to_string(N\
    \ % 2) + str;\n        N /= 2;\n    }\n    return str;", "    std::string result;\n\
    \    int sum = 0;\n    while (N > 0) {\n        sum += N % 2;\n        N /= 2;\n\
    \    }\n    result = std::to_string(sum);\n    return result;", "    std::string\
    \ result = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2)\
    \ + result;\n        N /= 2;\n    }\n    return result;", "    std::string binary\
    \ = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return binary;",
  "    std::string result = \"\";\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N % 2) +\
    \ binary;\n        N /= 2;\n    }\n    return binary;", "    std::string result\
    \ = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N = N / 2;\n    }\n    return result;", "    std::string result;\n  \
    \  while (N > 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n  \
    \      N /= 2;\n    }\n    return result;", "    std::string result;\n    while\
    \ (N > 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n        N\
    \ /= 2;\n    }\n    return result;", "    std::string result;\n    while (N >\
    \ 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n        N /= 2;\n\
    \    }\n    return result;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n\
    \    return result;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string s = \"\";\n    while(N > 0) {\n        s +=\
    \ std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result = std::to_string(N % 2) + result;\n        N = N / 2;\n  \
    \  }\n    return result;", "    std::string result;\n    while (N > 0) {\n   \
    \     result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return\
    \ result;", "    std::string binary;\n    int sum = 0;\n    while (N > 0) {\n\
    \        int rem = N % 2;\n        sum += rem;\n        binary.push_back(rem +\
    \ '0');\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return std::to_string(sum);", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::string\
    \ bin = \"\";\n    int sum = 0;\n    while (N > 0) {\n        bin = std::to_string(N\
    \ % 2) + bin;\n        sum += N % 2;\n        N /= 2;\n    }\n    return std::to_string(sum);",
  "    // Write your code here\n    std::string result;\n    while(N) {\n        result\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    // Write your code here\n    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string binary = \"\";\n    while(N > 0) {\n     \
    \   binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::string\
    \ binary = \"\";\n    int sum = 0;\n    while (N > 0) {\n        int rem = N %\
    \ 2;\n        sum += rem;\n        binary = std::to_string(rem) + binary;\n  \
    \      N /= 2;\n    }\n    return std::to_string(sum);", "    std::string binary\
    \ = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    // Write your code here\n    std::string\
    \ binary = \"\";\n    int sum = 0;\n    while(N > 0){\n        int rem = N % 2;\n\
    \        sum += rem;\n        binary = std::to_string(rem) + binary;\n       \
    \ N /= 2;\n    }\n    return std::to_string(sum);", "    int sum = 0;\n    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        sum += N % 2;\n        binary +=\
    \ std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return std::to_string(sum);", "    std::string result;\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    std::string binary = \"\";\n   \
    \ int sum = 0;\n    while (N > 0) {\n        int remainder = N % 2;\n        sum\
    \ += remainder;\n        binary = std::to_string(remainder) + binary;\n      \
    \  N /= 2;\n    }\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::string binary = \"\";\n    while(N > 0)\
    \ {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string s;\n    while(N) {\n \
    \       s += std::to_string(N%2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string result;\n    while\
    \ (N > 0) {\n        result = (N % 2 == 0 ? \"0\" : \"1\") + result;\n       \
    \ N /= 2;\n    }\n    return result;", "    std::string result;\n    while (N\
    \ > 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n        N /=\
    \ 2;\n    }\n    return result;", "    std::string result;\n    while (N > 0)\
    \ {\n        result.insert(result.begin(), '0' + (N & 1));\n        N >>= 1;\n\
    \    }\n    return result;", "    std::string result = \"\";\n    while (N > 0)\
    \ {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n\
    \    return result;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string binary = \"\";\n\
    \    while(N > 0) {\n        binary = std::to_string(N % 2) + binary;\n      \
    \  N /= 2;\n    }\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n\
    \    }\n    return binary;", "    // Write your code here\n    std::string str\
    \ = \"\";\n    while(N > 0) {\n        str += std::to_string(N % 2);\n       \
    \ N /= 2;\n    }\n    std::reverse(str.begin(), str.end());\n    return str;",
  "    // Write your code here\n    std::string binary = \"\";\n    while(N > 0) {\n\
    \        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n\
    \    }\n    return binary;", "    // Write your code here\n    int sum = 0;\n\
    \    std::string result = \"\";\n    while(N > 0) {\n        sum += N % 2;\n \
    \       N /= 2;\n    }\n    result = std::to_string(sum);\n    return result;",
  "    // Write your code here\n    std::string binary = \"\";\n    while(N > 0) {\n\
    \        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n  \
    \  return binary;", "    std::string binary = \"\";\n    while(N > 0) {\n    \
    \    binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n        N /=\
    \ 2;\n    }\n    return result;", "    std::string result;\n    while (N > 0)\
    \ {\n        result.insert(result.begin(), '0' + (N & 1));\n        N >>= 1;\n\
    \    }\n    return result;", "    std::string binary = \"\";\n    while(N > 0)\
    \ {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result.insert(result.begin(), (N % 2) + '0');\n        N /=\
    \ 2;\n    }\n    return result;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::string\
    \ result = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2)\
    \ + result;\n        N /= 2;\n    }\n    return result;", "    std::string binary;\n\
    \    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    std::string result = \"\";\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ s = \"\";\n    while(N > 0) {\n        s += std::to_string(N % 2);\n       \
    \ N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;", "  std::string\
    \ result;\n  while (N > 0) {\n    result.push_back(N % 2 + '0');\n    N /= 2;\n\
    \  }\n  std::reverse(result.begin(), result.end());\n  return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result.insert(result.begin(), (N % 2)\
    \ + '0');\n        N /= 2;\n    }\n    return result;", "    std::stringstream\
    \ ss;\n    while(N > 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n    std::string\
    \ s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return s;", "    std::string\
    \ result;\n    while (N > 0) {\n        result.insert(result.begin(), '0' + (N\
    \ % 2));\n        N /= 2;\n    }\n    return result;", "    std::string binary\
    \ = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string result;\n    while (N) {\n        result.push_back(N\
    \ % 2 + '0');\n        N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result = \"\";\n    while (N > 0) {\n \
    \       result += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    // Write your code here\n    std::string\
    \ result;\n    while(N > 0) {\n        result += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return\
    \ result;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string binary = \"\";\n    int sum = 0;\n    while\
    \ (N > 0) {\n        int rem = N % 2;\n        sum += rem;\n        binary = std::to_string(rem)\
    \ + binary;\n        N /= 2;\n    }\n    return std::to_string(sum);", "    std::string\
    \ result;\n    int sum = 0;\n    while (N > 0) {\n        sum += N % 2;\n    \
    \    N /= 2;\n    }\n    result = std::to_string(sum);\n    return result;", " \
    \   std::string result;\n    int sum = 0;\n    while (N > 0) {\n        sum +=\
    \ N % 2;\n        N /= 2;\n    }\n    result = std::to_string(sum);\n    return\
    \ result;", "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    // Write your\
    \ code here\n    std::string str;\n    while(N>0){\n        if(N%2==0){\n    \
    \        str.push_back('0');\n        }\n        else{\n            str.push_back('1');\n\
    \        }\n        N/=2;\n    }\n    std::reverse(str.begin(),str.end());\n \
    \   return str;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    std::string result = \"\";\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    std::string binary = \"\";\n    int sum = 0;\n    while\
    \ (N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n\
    \    for (int i = 0; i < binary.length(); i++) {\n        sum += binary[i] - '0';\n\
    \    }\n    result = std::to_string(sum);\n    return result;", "    // Write\
    \ your code here\n    int sum = 0;\n    std::string binary = \"\";\n    while(N\
    \ != 0){\n        int rem = N % 2;\n        sum += rem;\n        binary = std::to_string(rem)\
    \ + binary;\n        N /= 2;\n    }\n    return std::to_string(sum);", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result = \"\";\n    while (N > 0) {\n    \
    \    result = std::to_string(N % 2) + result;\n        N = N / 2;\n    }\n   \
    \ return result;", "    std::string binary = \"\";\n    while(N > 0) {\n     \
    \   binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return\
    \ binary;", "    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string s;\n    while(N) {\n        s += (N%2) + '0';\n\
    \        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return s;",
  "    std::string s = \"\";\n    while(N > 0) {\n        s += std::to_string(N %\
    \ 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "  std::string\
    \ binary;\n  while (N > 0) {\n    binary += std::to_string(N % 2);\n    N /= 2;\n\
    \  }\n  return binary;", "    std::string binary = \"\";\n    while(N > 0) {\n\
    \        binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n  \
    \  return binary;", "  std::string result;\n  while (N > 0) {\n    result = std::to_string(N\
    \ % 2) + result;\n    N /= 2;\n  }\n  return result;", "    std::string binary;\n\
    \    while(N>0){\n        binary.push_back(N%2+'0');\n        N/=2;\n    }\n \
    \   std::reverse(binary.begin(),binary.end());\n    return binary;", "    std::string\
    \ binary;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string result = \"\";\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N & 1));\n        N >>= 1;\n    }\n    return result;", "    std::string\
    \ s = \"\";\n    while(N>0){\n        s = std::to_string(N%2) + s;\n        N\
    \ /= 2;\n    }\n    return s;", "    std::string binary;\n    int sum = 0;\n \
    \   while (N > 0) {\n        int remainder = N % 2;\n        sum += remainder;\n\
    \        binary = std::to_string(remainder) + binary;\n        N /= 2;\n    }\n\
    \    return std::to_string(sum);", "    std::string binary;\n    while(N > 0)\
    \ {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::string result = \"\";\n    while (N > 0) {\n    \
    \    result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return\
    \ result;", "    std::string binary;\n    while(N>0){\n        binary.push_back(N%2+'0');\n\
    \        N/=2;\n    }\n    std::reverse(binary.begin(),binary.end());\n    return\
    \ binary;", "    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result = \"\";\n    while\
    \ (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    // Write your code here\n    std::string result;\n\
    \    while(N>0){\n        result.push_back(N%2+'0');\n        N/=2;\n    }\n \
    \   std::reverse(result.begin(),result.end());\n    return result;", "    // Write\
    \ your code here\n    std::string result;\n    while(N>0){\n        result.push_back(N%2+'0');\n\
    \        N/=2;\n    }\n    std::reverse(result.begin(),result.end());\n    return\
    \ result;", "    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result = \"\";\n    while\
    \ (N > 0) {\n        result += std::to_string(N % 2);\n        N /= 2;\n    }\n\
    \    std::reverse(result.begin(), result.end());\n    return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result.insert(result.begin(), (N % 2)\
    \ + '0');\n        N /= 2;\n    }\n    return result;", "    std::string binary\
    \ = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N != 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    while (N > 0) {\n        result = std::to_string(N % 2)\
    \ + result;\n        N /= 2;\n    }\n    return result;", "  std::string binary\
    \ = \"\";\n  while (N > 0) {\n    binary += std::to_string(N % 2);\n    N /= 2;\n\
    \  }\n  std::reverse(binary.begin(), binary.end());\n  return binary;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N % 2) +\
    \ binary;\n        N = N / 2;\n    }\n    return binary;", "    std::string binary\
    \ = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n    \
    \    N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    std::string binary = \"\";\n    int sum = 0;\n    while (N >\
    \ 0) {\n        int rem = N % 2;\n        sum += rem;\n        binary = std::to_string(rem)\
    \ + binary;\n        N /= 2;\n    }\n    return std::to_string(sum);", "    //\
    \ Write your code here\n    std::string binary = \"\";\n    int sum = 0;\n   \
    \ while(N > 0){\n        int rem = N % 2;\n        sum += rem;\n        binary\
    \ = std::to_string(rem) + binary;\n        N /= 2;\n    }\n    return std::to_string(sum);",
  "    std::string binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    std::string binary = \"\";\n    while(N > 0) {\n  \
    \      binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result.insert(result.begin(), '0' + (N & 1));\n        N >>=\
    \ 1;\n    }\n    return result;", "    std::string result;\n    while (N > 0)\
    \ {\n        result.insert(result.begin(), (N % 2) + '0');\n        N /= 2;\n\
    \    }\n    return result;", "    std::string s = \"\";\n    while(N > 0) {\n\
    \        s += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::stringstream ss;\n    while(N) {\n        ss << N\
    \ % 2;\n        N /= 2;\n    }\n    std::string s = ss.str();\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    // Write your code here\n    std::string binary\
    \ = \"\";\n    int sum = 0;\n    while(N > 0){\n        int rem = N % 2;\n   \
    \     sum += rem;\n        binary = std::to_string(rem) + binary;\n        N /=\
    \ 2;\n    }\n    return std::to_string(sum);", "    std::string result;\n    std::string\
    \ binary = \"\";\n    int sum = 0;\n    while (N > 0) {\n        binary += std::to_string(N\
    \ % 2);\n        N /= 2;\n    }\n    for (int i = 0; i < binary.length(); i++)\
    \ {\n        sum += binary[i] - '0';\n    }\n    result = std::to_string(sum);\n\
    \    return result;", "    std::string binary = \"\";\n    int sum = 0;\n    while\
    \ (N > 0) {\n        int remainder = N % 2;\n        sum += remainder;\n     \
    \   binary = std::to_string(remainder) + binary;\n        N /= 2;\n    }\n   \
    \ return binary;", "    // Write your code here\n    std::string binary = \"\"\
    ;\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "    // Write\
    \ your code here\n    std::string s = \"\";\n    while(N > 0) {\n        s +=\
    \ std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(s.begin(),\
    \ s.end());\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result = (N % 2 == 0 ? \"0\" : \"1\") + result;\n        N /= 2;\n   \
    \ }\n    return result;", "    std::string result = \"\";\n    while (N > 0) {\n\
    \        result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n  \
    \  return result;", "    std::string result = \"\";\n    while (N > 0) {\n   \
    \     result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return\
    \ result;", "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ (N % 2) + '0');\n        N /= 2;\n    }\n    return result;", "    std::stringstream\
    \ ss;\n    while(N != 0) {\n        ss << N % 2;\n        N /= 2;\n    }\n   \
    \ std::string s = ss.str();\n    std::reverse(s.begin(), s.end());\n    return\
    \ s;", "    // Write your code here\n    std::string s;\n    while(N)\n    {\n\
    \        s.push_back(N%2+'0');\n        N/=2;\n    }\n    std::reverse(s.begin(),s.end());\n\
    \    return s;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ result;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string result = \"\";\n\
    \    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n     \
    \   N /= 2;\n    }\n    return result;", "    std::string binary = \"\";\n   \
    \ while(N > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string result;\n    int sum = 0;\n    while (N >\
    \ 0) {\n        sum += N % 2;\n        N /= 2;\n    }\n    result = std::to_string(sum);\n\
    \    return result;", "    std::string result;\n    while (N) {\n        result\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(result.begin(),\
    \ result.end());\n    return result;", "    // Write your code here\n    std::string\
    \ result;\n    while(N>0){\n        result.insert(result.begin(),(N%2)+'0');\n\
    \        N/=2;\n    }\n    return result;", "    // Write your code here\n   \
    \ std::string binary = \"\";\n    while(N > 0) {\n        binary = std::to_string(N\
    \ % 2) + binary;\n        N /= 2;\n    }\n    return binary;", "    string s =\
    \ \"\";\n    while(N > 0) {\n        s += to_string(N % 2);\n        N /= 2;\n\
    \    }\n    reverse(s.begin(), s.end());\n    return s;", "    std::string s =\
    \ \"\";\n    while(N) {\n        s = std::to_string(N % 2) + s;\n        N /=\
    \ 2;\n    }\n    return s;", "    std::string result;\n    while (N > 0) {\n \
    \       result.insert(result.begin(), '0' + (N % 2));\n        N /= 2;\n    }\n\
    \    return result;", "    std::string result = \"\";\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::string binary;\n    int sum = 0;\n    while (N >\
    \ 0) {\n        int rem = N % 2;\n        sum += rem;\n        binary += std::to_string(rem);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return std::to_string(sum);", "    // Write your code here\n    std::string\
    \ s = \"\";\n    while(N){\n        s = std::to_string(N%2) + s;\n        N /=\
    \ 2;\n    }\n    return s;", "    // Write your code here\n    std::string result\
    \ = \"\";\n    while(N>0){\n        result = std::to_string(N%2) + result;\n \
    \       N = N/2;\n    }\n    return result;", "    std::string result;\n    while\
    \ (N > 0) {\n        result.insert(result.begin(), '0' + (N % 2));\n        N\
    \ /= 2;\n    }\n    return result;", "    std::string binary_number;\n    while(N\
    \ > 0) {\n        binary_number.push_back((N % 2) + '0');\n        N /= 2;\n \
    \   }\n    std::reverse(binary_number.begin(), binary_number.end());\n    return\
    \ binary_number;", "    std::string binary = \"\";\n    while(N > 0) {\n     \
    \   binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return\
    \ binary;", "    std::string binary_number;\n    while(N > 0) {\n        if(N\
    \ % 2 == 0) {\n            binary_number += \"0\";\n        } else {\n       \
    \     binary_number += \"1\";\n        }\n        N /= 2;\n    }\n    std::reverse(binary_number.begin(),\
    \ binary_number.end());\n    return binary_number;", "    std::string result;\n\
    \    int sum = 0;\n    while (N > 0) {\n        int remainder = N % 2;\n     \
    \   sum += remainder;\n        result.push_back(remainder + '0');\n        N /=\
    \ 2;\n    }\n    std::reverse(result.begin(), result.end());\n    return result;",
  "    std::string result;\n    while (N > 0) {\n        result = std::to_string(N\
    \ % 2) + result;\n        N /= 2;\n    }\n    return result;", "    // Write your\
    \ code here\n    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string result;\n    while (N\
    \ > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::string result;\n    while (N > 0) {\n \
    \       result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n   \
    \ return result;", "    std::string result = \"\";\n    while (N > 0) {\n    \
    \    result = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return\
    \ result;", "    std::string binary = \"\";\n    while(N > 0) {\n        binary\
    \ += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;", "    std::string\
    \ result;\n    while (N > 0) {\n        result = std::to_string(N % 2) + result;\n\
    \        N /= 2;\n    }\n    return result;", "    std::string result;\n    while\
    \ (N > 0) {\n        result = std::to_string(N % 2) + result;\n        N /= 2;\n\
    \    }\n    return result;", "    std::string result;\n    while (N > 0) {\n \
    \       result.insert(result.begin(), '0' + (N % 2));\n        N /= 2;\n    }\n\
    \    return result;", "    std::string binary = \"\";\n    while(N > 0) {\n  \
    \      binary = std::to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return\
    \ binary;", "    std::string result;\n    while (N) {\n        result += (N %\
    \ 2) + '0';\n        N /= 2;\n    }\n    std::reverse(result.begin(), result.end());\n\
    \    return result;", "    std::string result;\n    while (N > 0) {\n        result\
    \ = std::to_string(N % 2) + result;\n        N /= 2;\n    }\n    return result;",
  "    // Write your code here\n    std::string binary = \"\";\n    int sum = 0;\n\
    \    while(N > 0){\n        int rem = N % 2;\n        sum += rem;\n        binary\
    \ = std::to_string(rem) + binary;\n        N /= 2;\n    }\n    return std::to_string(sum);",
  "    std::string result;\n    while (N > 0) {\n        result.insert(result.begin(),\
    \ '0' + (N % 2));\n        N /= 2;\n    }\n    return result;", "    std::string\
    \ binary = \"\";\n    while(N > 0) {\n        binary += std::to_string(N % 2);\n\
    \        N /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n   \
    \ return binary;", "    std::string binary = \"\";\n    while(N > 0) {\n     \
    \   binary += std::to_string(N % 2);\n        N /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    std::string binary = \"\";\n    while(N\
    \ > 0) {\n        binary += std::to_string(N % 2);\n        N /= 2;\n    }\n \
    \   std::reverse(binary.begin(), binary.end());\n    return binary;"]
stop_tokens:
- "\n}"

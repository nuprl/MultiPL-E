name: HumanEval_103_rounded_avg
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
  \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0)\
  \ {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
  \ {}\n    bool operator==(Union_std_string_long u2) {\n        return f0 == u2.f0\
  \ || f1 == u2.f1 ;\n    }\n};\n// You are given two positive integers n and m, and\
  \ your task is to compute the\n// average of the integers from n through m (including\
  \ n and m). \n// Round the answer to the nearest integer and convert that to binary.\n\
  // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"0b11\"\
  \n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
  \ 33) => \"0b11010\"\nUnion_std_string_long rounded_avg(long n, long m) {\n"
tests: "}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
  \ (5)) == (Union_std_string_long(\"0b11\")));\n    assert(candidate((7), (13)) ==\
  \ (Union_std_string_long(\"0b1010\")));\n    assert(candidate((964), (977)) == (Union_std_string_long(\"\
  0b1111001010\")));\n    assert(candidate((996), (997)) == (Union_std_string_long(\"\
  0b1111100100\")));\n    assert(candidate((560), (851)) == (Union_std_string_long(\"\
  0b1011000010\")));\n    assert(candidate((185), (546)) == (Union_std_string_long(\"\
  0b101101110\")));\n    assert(candidate((362), (496)) == (Union_std_string_long(\"\
  0b110101101\")));\n    assert(candidate((350), (902)) == (Union_std_string_long(\"\
  0b1001110010\")));\n    assert(candidate((197), (233)) == (Union_std_string_long(\"\
  0b11010111\")));\n    assert(candidate((7), (5)) == (Union_std_string_long(-1)));\n\
  \    assert(candidate((5), (1)) == (Union_std_string_long(-1)));\n    assert(candidate((5),\
  \ (5)) == (Union_std_string_long(\"0b101\")));\n}\n"
completions: ["    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n  \
    \  for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum\
    \ / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n    \
    \    binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n  \
    \  return \"0b\" + binary;", "    if (n > m) return -1;\n    long sum = 0;\n \
    \   for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"0b\";\n    while (avg > 0) {\n\
    \        binary += std::to_string(avg % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long avg = (n + m) / 2;\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    return std::bitset<32>(avg).to_string();", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    binary = binary.substr(binary.find(\"\
    1\"));\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<32>(avg).to_string();\n    return \"0b\" + binary.substr(binary.find('1'));",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    long sum = 0;\n    for (int i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find(\"1\"));", "    if (n > m) {\n\
    \        return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return \"0b\" + binary.substr(binary.find('1'));",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    binary = binary.substr(binary.find(\"\
    1\"));\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary += std::to_string(avg % 2);\n       \
    \ avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) return -1;\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"0b\";\n    while (avg >\
    \ 0) {\n        binary += std::to_string(avg % 2);\n        avg /= 2;\n    }\n\
    \    std::reverse(binary.begin(), binary.end());\n    return binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::stringstream ss;\n  \
    \  ss << std::bitset<8>(avg);\n    return \"0b\" + ss.str();", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return \"0b\" + binary;", "    if (n > m) return -1;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) sum += i;\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) return\
    \ -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"0b\"\
    ;\n    while (avg > 0) {\n        binary = binary + std::to_string(avg % 2);\n\
    \        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n \
    \   return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string binary\
    \ = std::bitset<32>(avg).to_string();\n    return \"0b\" + binary.substr(binary.find('1'));",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string bin = \"0b\";\n    while\
    \ (avg > 0) {\n        bin = std::to_string(avg % 2) + bin;\n        avg /= 2;\n\
    \    }\n    return bin;", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg\
    \ > 0) {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n\
    \    }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return binary;", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return Union_std_string_long(-1);\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::stringstream ss;\n  \
    \  ss << std::bitset<32>(avg);\n    return Union_std_string_long(ss.str());",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary +=\
    \ std::to_string(avg % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(),\
    \ binary.end());\n    return \"0b\" + binary;", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    return\
    \ \"0b\" + ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) return\
    \ -1;\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    int avg = sum / (m - n + 1);\n    std::string binary = \"0b\";\n \
    \   while (avg > 0) {\n        binary += std::to_string(avg % 2);\n        avg\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        if (avg % 2 == 0) {\n            binary = \"0\" + binary;\n        }\
    \ else {\n            binary = \"1\" + binary;\n        }\n        avg /= 2;\n\
    \    }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(avg);\n    return \"0b\" + ss.str();", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = (avg % 2 == 0 ? \"0\" : \"1\") + binary;\n        avg /= 2;\n\
    \    }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) return -1;\n    int sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    std::string binary\
    \ = ss.str();\n    return binary;", "    if (n > m) {\n        return -1;\n  \
    \  }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n  \
    \  while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n   \
    \     avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n    \
    \    return Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ Union_std_string_long(\"0b\" + binary);", "    if (n > m) {\n        return\
    \ -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum\
    \ += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n \
    \       sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"0b\";\n    while (avg > 0) {\n        binary = binary + std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n\
    \ + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary\
    \ = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"\
    0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum =\
    \ 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    std::string binary = ss.str();\n    std::string res = \"0b\";\n    for (int\
    \ i = binary.size() - 1; i >= 0; i--) {\n        if (binary[i] == '1') {\n   \
    \         res += binary.substr(i);\n            break;\n        }\n    }\n   \
    \ return res;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary += std::to_string(avg % 2);\n        avg /=\
    \ 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ (sum + (m - n + 1) / 2) / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n\
    \    for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum\
    \ / (m - n + 1);\n    std::string binary = std::bitset<8>(avg).to_string();\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg !=\
    \ 0) {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n\
    \    }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = (long)round((double)sum / (m - n + 1));\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return \"0b\" + binary.substr(binary.find('1'));",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    return\
    \ ss.str();", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ (long)std::round((double)sum / (m - n + 1));\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n  \
    \  }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"0b\";\n  \
    \  while (avg > 0) {\n        binary += std::to_string(avg % 2);\n        avg\
    \ /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    std::string\
    \ binary = ss.str();\n    std::string result = \"0b\" + binary;\n    return result;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string bin = \"0b\";\n    while (avg > 0) {\n \
    \       bin += std::to_string(avg % 2);\n        avg /= 2;\n    }\n    std::reverse(bin.begin(),\
    \ bin.end());\n    return bin;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string s\
    \ = \"0b\";\n    while (avg > 0) {\n        if (avg % 2 == 0) {\n            s\
    \ = \"0\" + s;\n        } else {\n            s = \"1\" + s;\n        }\n    \
    \    avg /= 2;\n    }\n    return s;", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        if (avg % 2 == 0) {\n       \
    \     binary = \"0\" + binary;\n        } else {\n            binary = \"1\" +\
    \ binary;\n        }\n        avg /= 2;\n    }\n    return \"0b\" + binary;",
  "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find(\"1\"));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    int sum\
    \ = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int\
    \ avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string bin = \"0b\";\n    while (avg > 0) {\n \
    \       bin += std::to_string(avg % 2);\n        avg /= 2;\n    }\n    std::reverse(bin.begin(),\
    \ bin.end());\n    return bin;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) return -1;\n\
    \    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    int avg = sum / (m - n + 1);\n    std::string binary = \"0b\";\n    while\
    \ (avg > 0) {\n        binary += std::to_string(avg % 2);\n        avg /= 2;\n\
    \    }\n    std::reverse(binary.begin(), binary.end());\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) return -1;\n    int sum = 0;\n    for (int i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::stringstream\
    \ ss;\n    ss << std::bitset<32>(avg);\n    std::string s = ss.str();\n    int\
    \ i = 0;\n    while (s[i] == '0') {\n        i++;\n    }\n    s = s.substr(i);\n\
    \    return \"0b\" + s;", "    if (n > m) return -1;\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = (sum +\
    \ (m - n + 1) / 2) / (m - n + 1);\n    std::string binary = \"0b\";\n    while\
    \ (avg > 0) {\n        binary += std::to_string(avg % 2);\n        avg /= 2;\n\
    \    }\n    std::reverse(binary.begin() + 2, binary.end());\n    return binary;",
  "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    return \"0b\"\
    \ + binary.substr(binary.find('1'));", "    if (n > m) {\n        return -1;\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    return std::bitset<32>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for (int i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n\
    \    std::string bin = \"0b\";\n    while (avg > 0) {\n        bin += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(bin.begin(), bin.end());\n\
    \    return bin;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<32>(avg).to_string();\n    return \"0b\" + binary.substr(binary.find(\"\
    1\"));", "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n    for\
    \ (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m\
    \ - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n    return\
    \ \"0b\" + binary.substr(binary.find(\"1\"));", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) return\
    \ -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"0b\"\
    ;\n    while (avg > 0) {\n        binary += std::to_string(avg % 2);\n       \
    \ avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = (long) std::round((double) sum / (m - n + 1));\n    return std::bitset<64>(avg).to_string();",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) return -1;\n    long sum = 0;\n    for (long i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    int sum\
    \ = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int\
    \ avg = sum / (m - n + 1);\n    std::string result = \"0b\";\n    while (avg >\
    \ 0) {\n        result = std::to_string(avg % 2) + result;\n        avg /= 2;\n\
    \    }\n    return result;", "    if (n > m) {\n        return -1;\n    }\n  \
    \  long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while\
    \ (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n        avg\
    \ /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n        return\
    \ -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n       \
    \ sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary\
    \ = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        if (avg % 2 == 0) {\n            binary = \"\
    0\" + binary;\n        } else {\n            binary = \"1\" + binary;\n      \
    \  }\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    int avg = sum / (m - n + 1);\n    std::string\
    \ binary = std::bitset<8>(avg).to_string();\n    return \"0b\" + binary;", " \
    \   if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n\
    \ + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary\
    \ = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"\
    0b\" + binary;", "    if (n > m) return -1;\n    int sum = 0;\n    for (int i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum / (m - n +\
    \ 1);\n    std::string res = \"0b\";\n    while (avg > 0) {\n        res += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(res.begin(), res.end());\n\
    \    return res;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = (long)round((double)sum / (m - n + 1));\n    std::string binary = std::bitset<64>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) return\
    \ -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"0b\"\
    ;\n    while (avg > 0) {\n        binary = binary + std::to_string(avg % 2);\n\
    \        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n \
    \   return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) return\
    \ -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"0b\"\
    ;\n    while (avg > 0) {\n        binary += std::to_string(avg % 2);\n       \
    \ avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n    return\
    \ binary;", "    if (n > m) {\n        return -1;\n    }\n    int sum = 0;\n \
    \   for (int i = n; i <= m; i++) {\n        sum += i;\n    }\n    int avg = sum\
    \ / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find('1'));", "    if (n > m) {\n  \
    \      return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = (sum + (m - n + 1) / 2) / (m - n\
    \ + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n    std::string\
    \ s = ss.str();\n    return \"0b\" + s.substr(s.find(\"1\"));", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    long count = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n        count++;\n    }\n  \
    \  long avg = sum / count;\n    std::string binary = \"0b\";\n    while (avg >\
    \ 0) {\n        binary += std::to_string(avg % 2);\n        avg /= 2;\n    }\n\
    \    std::reverse(binary.begin(), binary.end());\n    return binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = (sum + (m - n\
    \ + 1) / 2) / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\"\
    ;\n    while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n\
    \        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n \
    \       return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = (sum + (m - n + 1) / 2) / (m - n + 1);\n    std::stringstream ss;\n  \
    \  ss << std::bitset<32>(avg);\n    return \"0b\" + ss.str();", "    if (n > m)\
    \ {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) return -1;\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0)\
    \ {\n        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n \
    \   }\n    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n \
    \   }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    int avg = sum / (m - n + 1);\n    std::string bin = \"0b\";\n    while\
    \ (avg > 0) {\n        bin += std::to_string(avg % 2);\n        avg /= 2;\n  \
    \  }\n    std::reverse(bin.begin(), bin.end());\n    return bin;", "    if (n\
    \ > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg\
    \ % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "  \
    \  if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    int sum = 0;\n    for (int i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    int avg = sum / (m - n + 1);\n    std::string binary = std::bitset<32>(avg).to_string();\n\
    \    return \"0b\" + binary.substr(binary.find(\"1\"));", "    if (n > m) {\n\
    \        return -1;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n    std::string\
    \ binary = \"\";\n    while (avg > 0) {\n        binary = std::to_string(avg %\
    \ 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;", "    if\
    \ (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n + 1);\n\
    \    std::string binary = \"0b\";\n    while (avg > 0) {\n        binary += std::to_string(avg\
    \ % 2);\n        avg /= 2;\n    }\n    std::reverse(binary.begin(), binary.end());\n\
    \    return binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum\
    \ = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long\
    \ avg = sum / (m - n + 1);\n    std::stringstream ss;\n    ss << std::bitset<32>(avg);\n\
    \    std::string s = ss.str();\n    return \"0b\" + s.substr(s.find(\"1\"));",
  "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n    for (long i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg = sum / (m - n +\
    \ 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n        binary =\
    \ std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n    return \"0b\"\
    \ + binary;", "    if (n > m) {\n        return -1;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    long avg =\
    \ sum / (m - n + 1);\n    std::string binary = \"\";\n    while (avg > 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    return \"0b\" + binary;", "    if (n > m) {\n        return -1;\n    }\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    long avg = sum / (m - n + 1);\n    std::string binary = \"\";\n   \
    \ while (avg > 0) {\n        binary = std::to_string(avg % 2) + binary;\n    \
    \    avg /= 2;\n    }\n    return \"0b\" + binary;", "    if (n > m) {\n     \
    \   return -1;\n    }\n    int sum = 0;\n    for (int i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    int avg = (int)round((double)sum / (m - n + 1));\n\
    \    std::string binary = std::bitset<32>(avg).to_string();\n    binary = binary.substr(binary.find(\"\
    1\"));\n    return \"0b\" + binary;"]
stop_tokens:
- "\n}"

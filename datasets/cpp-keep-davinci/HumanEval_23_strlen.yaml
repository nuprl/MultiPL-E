name: HumanEval_23_strlen
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return length of given string\n\
  // >>> strlen('')\n// 0\n// >>> strlen('abc')\n// 3\nlong strlen(std::string string)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = strlen;\n    assert(candidate((\"\"\
  )) == (0));\n    assert(candidate((\"x\")) == (1));\n    assert(candidate((\"asdasnakj\"\
  )) == (9));\n}\n"
completions: ["    long length = 0;\n    for (char c : string) {\n        length++;\n\
    \    }\n    return length;", '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', "    long length =\
    \ 0;\n    for (char c : string) {\n        length++;\n    }\n    return length;",
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '  return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '  return string.length();', '    return string.length();', '    return string.length();',
  "    long length = 0;\n    for (char c : string) {\n        length++;\n    }\n \
    \   return length;", "    long length = 0;\n    for (int i = 0; string[i] != '\\\
    0'; i++) {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (char c : string)\
    \ {\n        length++;\n    }\n    return length;", '    return string.length();',
  "    long length = 0;\n    for (int i = 0; string[i] != '\\0'; i++) {\n        length++;\n\
    \    }\n    return length;", '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "\tlong length = 0;\n\tfor (char c : string) {\n\t\
    \tlength++;\n\t}\n\treturn length;", '    return string.length();', '    return
    string.length();', '    return string.length();', '    return string.length();',
  "    long length = 0;\n    while (string[length] != '\\0') {\n        length++;\n\
    \    }\n    return length;", '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  "    long length = 0;\n    while (string[length] != '\\0') {\n        length++;\n\
    \    }\n    return length;", "    long length = 0;\n    for (char c : string)\
    \ {\n        length++;\n    }\n    return length;", "    long length = 0;\n  \
    \  for (int i = 0; string[i] != '\\0'; i++) {\n        length++;\n    }\n    return\
    \ length;", '    return string.length();', '    return string.length();', "  \
    \  long length = 0;\n    for (char c : string) {\n        length++;\n    }\n \
    \   return length;", '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (int i = 0; string[i]\
    \ != '\\0'; i++) {\n        length++;\n    }\n    return length;", '    return
    string.length();', "    long len = 0;\n    while (string[len] != '\\0') {\n  \
    \      len++;\n    }\n    return len;", '  return string.length();', '    return
    string.length();', "    long length = 0;\n    for (char c : string) {\n      \
    \  length++;\n    }\n    return length;", '    return string.length();', '    return
    string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  "    long length = 0;\n    for (int i = 0; string[i] != '\\0'; i++) {\n        length++;\n\
    \    }\n    return length;", '  return string.length();', '    return string.length();',
  '    return string.length();', '  return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '  return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (int i = 0; string[i]\
    \ != '\\0'; i++) {\n        length++;\n    }\n    return length;", "    long length\
    \ = 0;\n    while (string[length] != '\\0') {\n        length++;\n    }\n    return\
    \ length;", "    long length = 0;\n    for (int i = 0; string[i] != '\\0'; i++)\
    \ {\n        length++;\n    }\n    return length;", "    long length = 0;\n  \
    \  for (long i = 0; i < string.length(); i++) {\n        length++;\n    }\n  \
    \  return length;", "    long length = 0;\n    while (string[length] != '\\0')\
    \ {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (int i = 0; string[i]\
    \ != '\\0'; i++) {\n        length++;\n    }\n    return length;", '    return
    string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', "    long length =\
    \ 0;\n    for (char c : string) {\n        length++;\n    }\n    return length;",
  '  return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '  return string.length();', "    long length = 0;\n    for (long i = 0; i < string.length();\
    \ i++) {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  "\treturn string.length();", '    return string.length();', '    return string.length();',
  "    long length = 0;\n    for (char c : string) {\n        length++;\n    }\n \
    \   return length;", "    long length = 0;\n    for (char c : string) {\n    \
    \    length++;\n    }\n    return length;", '    return string.length();', '    return
    string.length();', "    long length = 0;\n    for (long i = 0; i < string.length();\
    \ i++) {\n        length++;\n    }\n    return length;", "    long length = 0;\n\
    \    while (string[length] != '\\0') {\n        length++;\n    }\n    return length;",
  '    return string.length();', "    long length = 0;\n    for (int i = 0; string[i]\
    \ != '\\0'; i++) {\n        length++;\n    }\n    return length;", "    long length\
    \ = 0;\n    for (char c : string) {\n        length++;\n    }\n    return length;",
  '    return string.length();', "    long length = 0;\n    for (auto c : string)\
    \ {\n        length++;\n    }\n    return length;", "    long length = 0;\n  \
    \  while (string[length] != '\\0') {\n        length++;\n    }\n    return length;",
  "    long length = 0;\n    for (int i = 0; string[i] != '\\0'; i++) {\n        length++;\n\
    \    }\n    return length;", "  long length = 0;\n  while (string[length] != '\\\
    0') {\n    length++;\n  }\n  return length;", '    return string.length();', '    return
    string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (int i = 0; string[i]\
    \ != '\\0'; i++)\n        length++;\n    return length;", '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  "    long length = 0;\n    for (long i = 0; i < string.length(); i++) {\n      \
    \  length++;\n    }\n    return length;", '    return string.length();', '    return
    string.length();', '  return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (auto c : string)\
    \ {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', '  return string.length();', '    return string.length();',
  '    return string.length();', '  return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', "    long length =\
    \ 0;\n    while (string[length] != '\\0') {\n        length++;\n    }\n    return\
    \ length;", "    long length = 0;\n    while (string[length] != '\\0') {\n   \
    \     length++;\n    }\n    return length;", '    return string.length();', " \
    \   // TODO: Implement\n    return string.length();", '    return string.length();',
  "    long length = 0;\n    for (char c : string) {\n        length++;\n    }\n \
    \   return length;", "    long length = 0;\n    for (int i = 0; string[i] != '\\\
    0'; i++) {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long len = 0;\n    for (char c : string) {\n\
    \        len++;\n    }\n    return len;", '  return string.length();', '    return
    string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    for (char c : string)\
    \ {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();', '    return string.length();', '    return string.length();',
  '    return string.length();', "    long length = 0;\n    while (string[length]\
    \ != '\\0') {\n        length++;\n    }\n    return length;", '    return string.length();',
  '    return string.length();']
stop_tokens:
- "\n}"

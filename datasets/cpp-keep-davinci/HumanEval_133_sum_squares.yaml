name: HumanEval_133_sum_squares
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of numbers.\n\
  // You need to return the sum of squared numbers in the given list,\n// round each\
  \ element in the list to the upper int(Ceiling) first.\n// Examples:\n// For lst\
  \ = [1,2,3] the output should be 14\n// For lst = [1,4,9] the output should be 98\n\
  // For lst = [1,3,5,7] the output should be 84\n// For lst = [1.4,4.2,0] the output\
  \ should be 29\n// For lst = [-2.4,1,1] the output should be 6\nlong sum_squares(std::vector<float>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = sum_squares;\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0}))) == (14));\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0}))) == (14));\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)3.0, (float)5.0, (float)7.0}))) == (84));\n    assert(candidate((std::vector<float>({(float)1.4,\
  \ (float)4.2, (float)0.0}))) == (29));\n    assert(candidate((std::vector<float>({(float)-2.4,\
  \ (float)1.0, (float)1.0}))) == (6));\n    assert(candidate((std::vector<float>({(float)100.0,\
  \ (float)1.0, (float)15.0, (float)2.0}))) == (10230));\n    assert(candidate((std::vector<float>({(float)10000.0,\
  \ (float)10000.0}))) == (200000000));\n    assert(candidate((std::vector<float>({(float)-1.4,\
  \ (float)4.6, (float)6.3}))) == (75));\n    assert(candidate((std::vector<float>({(float)-1.4,\
  \ (float)17.9, (float)18.9, (float)19.9}))) == (1086));\n    assert(candidate((std::vector<float>({(float)0.0})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-1.0}))) == (1));\n\
  \    assert(candidate((std::vector<float>({(float)-1.0, (float)1.0, (float)0.0})))\
  \ == (2));\n}\n"
completions: []
stop_tokens:
- "\n}"

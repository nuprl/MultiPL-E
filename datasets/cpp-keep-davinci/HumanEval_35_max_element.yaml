name: HumanEval_35_max_element
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element in\
  \ the list.\n// >>> max_element([1, 2, 3])\n// 3\n// >>> max_element([5, 3, -5,\
  \ 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nlong max_element(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,\
  \ (long)-10}))) == (124));\n}\n"
completions: ["    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n   \
    \     if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(long i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\n            max\
    \ = l[i];\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "\tlong max = l[0];\n\tfor (int i = 1; i < l.size(); i++) {\n\t\
    \tif (l[i] > max) {\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "\tlong max = l[0];\n\
    \tfor (int i = 1; i < l.size(); i++) {\n\t\tif (l[i] > max) {\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "\tlong max = l[0];\n\tfor (int i = 1; i <\
    \ l.size(); i++) {\n\t\tif (l[i] > max) {\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", '    return
    *std::max_element(l.begin(), l.end());', "  long max = l[0];\n  for (int i = 1;\
    \ i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n\
    \  return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(long i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "\tlong max = l[0];\n\tfor (int i = 1; i <\
    \ l.size(); i++) {\n\t\tif (l[i] > max) {\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn\
    \ max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "  long\
    \ max = l[0];\n  for (int i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n\
    \      max = l[i];\n    }\n  }\n  return max;", "    long max = l[0];\n    for(int\
    \ i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max)\n            max = l[i];\n    }\n \
    \   return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 0; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n\
    \        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++) {\n    \
    \    if(l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;", "    long\
    \ max = l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(long i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i] > max) {\n \
    \           max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n \
    \   for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n          \
    \  max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n  \
    \  for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n           \
    \ max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n   \
    \ for(int i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n    for(int\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1;\
    \ i < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n  \
    \      }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 0; i\
    \ < l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n    \
    \    }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i <\
    \ l.size(); i++) {\n        if(l[i] > max) {\n            max = l[i];\n      \
    \  }\n    }\n    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size();\
    \ i++) {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for(int i = 1; i < l.size(); i++)\
    \ {\n        if(l[i] > max) {\n            max = l[i];\n        }\n    }\n   \
    \ return max;"]
stop_tokens:
- "\n}"

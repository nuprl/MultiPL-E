name: HumanEval_120_maximum
language: ruby
prompt: "# Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n# Input:\
  \ arr = [-3, -4, 5], k = 3\n# Output: [-4, -3, 5]\n# Example 2:\n# Input: arr =\
  \ [4, -4, 4], k = 2\n# Output: [4, 4]\n# Example 3:\n# Input: arr = [-3, 2, 1, 2,\
  \ -1, -2, 1], k = 1\n# Output: [2]\n# Note:\n# 1. The length of the array will be\
  \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
  \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\ndef maximum(arr, k)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_maximum\n\
  \    candidate = method(:maximum)\n    assert_equal([-4, -3, 5], candidate.call([-3,\
  \ -4, 5], 3))\n    assert_equal([4, 4], candidate.call([4, -4, 4], 2))\n    assert_equal([2],\
  \ candidate.call([-3, 2, 1, 2, -1, -2, 1], 1))\n    assert_equal([2, 20, 123], candidate.call([123,\
  \ -123, 20, 0, 1, 2, -3], 3))\n    assert_equal([0, 1, 2, 20], candidate.call([-123,\
  \ 20, 0, 1, 2, -3], 4))\n    assert_equal([-13, -8, 0, 0, 3, 5, 15], candidate.call([5,\
  \ 15, 0, 3, -13, -8, 0], 7))\n    assert_equal([3, 5], candidate.call([-1, 0, 2,\
  \ 5, 3, -10], 2))\n    assert_equal([5], candidate.call([1, 0, 5, -7], 1))\n   \
  \ assert_equal([-4, 4], candidate.call([4, -4], 2))\n    assert_equal([-10, 10],\
  \ candidate.call([-10, 10], 2))\n    assert_equal([], candidate.call([1, 2, 3, -23,\
  \ 243, -400, 0], 0))\n  end\nend\n"
completions: ["  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n\
    \  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n\
    \  result = []\n  for i in 0..k-1\n    result << arr[i]\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i\
    \ += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n    return\
    \ arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result <<\
    \ arr[i]\n    i += 1\n  end\n  result\nend", "    \n    max = arr[0]\n    \n \
    \   for i in arr\n        if i > max\n            max = i\n            \n    arr.delete(max)\n\
    \    \n    arr.sort!\n    \n    arr.insert(0, max)\n    \n    arr.slice!(0, k)\n\
    \    \n    return arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i <\
    \ k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\n\
    end", "  max_arr = []\n  max_arr << arr[0]\n  max_arr.sort!\n  max_arr.each_with_index\
    \ do |x, i|\n    if i > k\n      break\n    end\n    max_arr << x\n  end\n  max_arr\n\
    end", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result =\
    \ []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n\
    \  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  for\
    \ i in 0...k\n    result.push(arr[i])\n  end\n  result\nend", "  max_arr = []\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  for i in 1..k\n    if arr[i]\
    \ > max_arr[1]\n      max_arr[1] = arr[i]\n    elsif arr[i] < max_arr[0]\n   \
    \   max_arr[0] = arr[i]\n    end\n  end\n  max_arr\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n \
    \ result\nend", "  arr.sort!\n  arr.slice!(k..-1)\n  arr\nend", "    arr.sort!\n\
    \    arr.slice!(0, k)\n    return arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "    arr.sort!\n\
    \    arr.slice!(0, k)\n    return arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "    arr.sort!\n    arr.slice!(0, k)\n    return arr\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\n\
    end", "  \n  max_arr = []\n  \n  for i in 0...k\n    max_arr.push(arr[i])\n  end\n\
    \  \n  max_arr.sort!\n  \n  return max_arr\nend", "  arr.sort!\n  arr.slice!(0,\
    \ k)\n  arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  for i in 0..k-1\n\
    \    result << arr[i]\n  end\n  result << arr[k]\n  result\nend", "  arr.sort!\n\
    \  arr.slice!(k..-1)\n  arr\nend", "    arr.sort!\n    arr.slice!(k..-1)\n   \
    \ arr\nend", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n\
    \  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  return arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  max_arr = []\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  return\
    \ arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  return arr\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  return arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  max_arr = []\n  max_arr << arr[0]\n  max_arr.sort!\n\
    \  max_arr.each_with_index do |x, i|\n    if i < k\n      max_arr << x\n    end\n\
    \  end\n  max_arr\nend", "    arr.sort!\n    arr[0..k-1]\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  \n  # Write your code here\n  \n  maximum = arr.sort\n\
    \  \n  maximum.slice!(0, k)\n  \n  return maximum\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  max_arr\
    \ = []\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  for i in 1..k\n    if arr[i] > max_arr[-1]\n      max_arr.push(arr[i])\n  \
    \  end\n  end\n  max_arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "    arr.sort!\n    arr.slice!(0, k)\n    arr\n\
    end", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  arr.slice!(0,\
    \ k)\n  arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n\
    \  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n   \
    \ arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result <<\
    \ arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "    arr.sort!\n    arr.slice!(0, k)\n    return arr\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n\
    \    i += 1\n  end\n  result\nend", "  \n  # write your code here\n  \nend", " \
    \ arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  for i in 0...k\n    result.push(arr[i])\n  end\n  result\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i\
    \ += 1\n  end\n  result\nend", "  \n  arr.sort!\n  \n  result = []\n  \n  for\
    \ i in 0..k-1\n    result.push(arr[i])\n  end\n  \n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n\
    \    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result\
    \ = []\n  for i in 0...k\n    result << arr[i]\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result\
    \ << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n   \
    \ return arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result\
    \ << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend",
  "    arr.sort!\n    arr.slice!(0, k)\n    arr\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "    arr.sort!\n    arr[0..k-1]\nend", "  \nend", "    arr.sort!\n    arr.slice!(0,\
    \ k)\n    return arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i <\
    \ k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n\
    \    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result\
    \ = []\n  for i in 0..k-1\n    result.push(arr[i])\n  end\n  result\nend", " \
    \ \n  # write your code here\n  \nend", "  arr.sort!\n  result = []\n  i = 0\n\
    \  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", " \
    \ arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n    return arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n  result\nend",
  "  \n  # Write your code here\n  \n  max_arr = []\n  \n  for i in 0...k\n    max_arr\
    \ << arr[i]\n  end\n  \n  max_arr.sort!\n  \n  return max_arr\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  \n  # Write your code here\n  \nend", " \
    \ arr.sort!\n  result = []\n  for i in 0...k\n    result.push(arr[i])\n  end\n\
    \  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result\
    \ << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(k..-1)\n  arr\n\
    end", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n\
    \  result\nend", "  max_arr = []\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  for i in 1..k\n    if arr[i] > max_arr[1]\n      max_arr[1] = arr[i]\n    elsif\
    \ arr[i] > max_arr[2]\n      max_arr[2] = arr[i]\n    elsif arr[i] > max_arr[3]\n\
    \      max_arr[3] = arr[i]\n    end\n  end\n  return max_arr\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  arr.slice!(k..-1)\n  arr\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend",
  "  \n  # Write your code here\n  \nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "    arr.sort!\n\
    \    arr.slice!(0, k)\n    arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\n\
    end", "    arr.sort!\n    arr.slice!(0, k)\n    arr\nend", "  \n  # Write your\
    \ code here\n  \nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  max_arr\
    \ = []\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  for i in 1..k\n    if\
    \ arr[i] > max_arr[1]\n      max_arr[1] = arr[i]\n    elsif arr[i] > max_arr[2]\n\
    \      max_arr[2] = arr[i]\n    end\n  end\n  max_arr\nend", "    arr.sort!\n\
    \    max = arr[0..k-1]\n    arr.delete_at(k)\n    arr.sort!\n    return max\n\
    end", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n\
    \    i += 1\n  end\n  result\nend", "  max_arr = []\n  max_arr.push(arr[0])\n\
    \  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n  for i in 1..k\n    if arr[i]\
    \ > max_arr[1]\n      max_arr[1] = arr[i]\n    elsif arr[i] > max_arr[2]\n   \
    \   max_arr[2] = arr[i]\n    end\n  end\n  max_arr\nend", "  arr.sort!\n  result\
    \ = []\n  for i in 0...k\n    result << arr[i]\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  \n  # write your code here\n  \nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  for i in 0...k\n\
    \    result.push(arr[i])\n  end\n  result\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i\
    \ += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n \
    \   i += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n    return\
    \ arr\nend", "    arr.sort!\n    arr.slice!(0, k)\n    arr\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  return arr\nend", "  arr.sort!\n  result = []\n  i = 0\n\
    \  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  result = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n\
    \  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n\
    \    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  arr.slice!(k..-1)\n\
    \  arr\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result\
    \ << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result = []\n\
    \  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n  end\n\
    \  result\nend", "  \n  # sort arr\n  arr.sort!\n  \n  # create result array\n\
    \  result = []\n  \n  # find max number in arr\n  max_number = arr[0]\n  \n  #\
    \ find max number in arr\n  for i in 1..k\n    max_number = arr[i] if arr[i] >\
    \ max_number else max_number\n  end\n  \n  # add max_number to result\n  result\
    \ << max_number\n  \n  # return result\n  result\nend", "  arr.sort!\n  arr.slice!(0,\
    \ k)\n  arr\nend", "  arr.sort!\n  result = []\n  for i in 0...k\n    result <<\
    \ arr[i]\n  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while\
    \ i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend", "  arr.sort!\n\
    \  arr.slice!(0, k)\n  arr\nend", "  max_arr = []\n  max_arr.push(arr[0])\n  max_arr.push(arr[0])\n\
    \  for i in 1..k\n    if arr[i] > max_arr[1]\n      max_arr[1] = arr[i]\n    elsif\
    \ arr[i] > max_arr[2]\n      max_arr[2] = arr[i]\n    end\n  end\n  max_arr\n\
    end", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result =\
    \ []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\n\
    end", "    arr.sort!\n    arr.slice!(0, k)\n    arr\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n \
    \ result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result\
    \ << arr[i]\n    i += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0,\
    \ k)\n    arr\nend", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "    arr.sort!\n\
    \    arr.slice!(0, k)\n    return arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend", "  arr.sort!\n  result = []\n  i\
    \ = 0\n  while i < k\n    result.push(arr[i])\n    i += 1\n  end\n  result\nend",
  "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i\
    \ += 1\n  end\n  result\nend", "    arr.sort!\n    arr.slice!(0, k)\n    return\
    \ arr\nend", "  arr.sort!\n  result = []\n  for i in 0...k\n    result << arr[i]\n\
    \  end\n  result\nend", "  arr.sort!\n  result = []\n  i = 0\n  while i < k\n\
    \    result << arr[i]\n    i += 1\n  end\n  result\nend", "  arr.sort!\n  result\
    \ = []\n  i = 0\n  while i < k\n    result << arr[i]\n    i += 1\n  end\n  result\n\
    end", "  arr.sort!\n  arr.slice!(0, k)\n  arr\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_14_all_prefixes
language: ruby
results:
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptvcrt4xe\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptvcrt4xe.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.011679 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.62 tests/s, 171.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpql6dk7qf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpql6dk7qf.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006107 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    163.75 tests/s, 327.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_939xhz3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_939xhz3.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.021959 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    45.54 tests/s, 91.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c == 'a'\n      prefix\
    \ = c\n      break\n    elsif c == 'z'\n      prefix = nil\n      break\n    elsif\
    \ prefix\n      result << prefix\n      prefix = nil\n    end\n  end\n  result\
    \ << string if prefix\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3yg37amd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3yg37amd.rb:27:in\
    \ `test_all_prefixes'\n     24:   def test_all_prefixes\n     25:     candidate\
    \ = method(:all_prefixes)\n     26:     assert_equal([], candidate.call(\"\"))\n\
    \  => 27:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     28:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     29:   end\n     30: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\"]>\n\n\
    diff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.004449 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    224.77 tests/s, 449.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n    prefixes << char if prefixes.empty? || char ==\
    \ prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8tqrioj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8tqrioj.rb:17:in\
    \ `test_all_prefixes'\n     14:   def test_all_prefixes\n     15:     candidate\
    \ = method(:all_prefixes)\n     16:     assert_equal([], candidate.call(\"\"))\n\
    \  => 17:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     18:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     19:   end\n     20: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"a\"]>\n\n\
    diff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.035118 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    28.48 tests/s, 56.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |i|\n    prefixes << i unless i.empty?\n  end\n\
    \  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplye5l2n3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplye5l2n3.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.017643 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    56.68 tests/s, 113.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c == 'a'\n      prefix\
    \ = 'a'\n    elsif c == 'b'\n      prefix = 'ab'\n    elsif c == 'c'\n      prefix\
    \ = 'abc'\n    else\n      prefixes = [prefix] + prefixes\n      prefix = nil\n\
    \    end\n  end\n  prefixes = [prefix] + prefixes\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzvjh33\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzvjh33.rb:26:in\
    \ `test_all_prefixes'\n     23: class TestHumanEval < Test::Unit::TestCase\n \
    \    24:   def test_all_prefixes\n     25:     candidate = method(:all_prefixes)\n\
    \  => 26:     assert_equal([], candidate.call(\"\"))\n     27:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     28:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     29:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.028201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    35.46 tests/s, 35.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8d2k0gin\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8d2k0gin.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005993 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.86 tests/s, 333.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      next\n    end\n    if prefix != nil && prefix != c\n      result << prefix\n\
    \      prefix = nil\n    end\n    prefix = c\n  end\n  result << prefix\n  result\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbpv1_cfn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbpv1_cfn.rb:24:in\
    \ `test_all_prefixes'\n     21: class TestHumanEval < Test::Unit::TestCase\n \
    \    22:   def test_all_prefixes\n     23:     candidate = method(:all_prefixes)\n\
    \  => 24:     assert_equal([], candidate.call(\"\"))\n     25:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     26:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     27:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.031552 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    31.69 tests/s, 31.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[0..i]\n   \
    \ i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2rbd998j\n\
    Started\n.\nFinished in 0.000199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5025.13 tests/s, 15075.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.split(//).each do |char|\n    prefix = char if\
    \ char != prefix\n    result << prefix if prefix\n  end\n  result\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6nxce9rt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6nxce9rt.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.16 tests/s, 162.32 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gcyu2ze\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gcyu2ze.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.006351 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.46 tests/s, 314.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwu82bk0p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwu82bk0p.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.046921 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    21.31 tests/s, 42.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjaa12sz1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjaa12sz1.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00605 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.29 tests/s, 330.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplhnovzgp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplhnovzgp.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006154 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.50 tests/s, 324.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      prefixes = []\n      prefix = nil\n    else\n      prefix = c\n      prefixes\
    \ << prefix\n    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt_emp6fw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt_emp6fw.rb:23:in\
    \ `test_all_prefixes'\n     20:   def test_all_prefixes\n     21:     candidate\
    \ = method(:all_prefixes)\n     22:     assert_equal([], candidate.call(\"\"))\n\
    \  => 23:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     25:   end\n     26: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.007402 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.10 tests/s, 270.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehuqa2su\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehuqa2su.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.014188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    70.48 tests/s, 140.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph93vfbjy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph93vfbjy.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006058 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.07 tests/s, 330.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbqaqs17e\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbqaqs17e.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.033171 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    30.15 tests/s, 60.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = -1\n  while i < string.length\n    i += 1\n    prefixes << string[0..i]\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3f_nhsmz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3f_nhsmz.rb:17:in\
    \ `test_all_prefixes'\n     14: class TestHumanEval < Test::Unit::TestCase\n \
    \    15:   def test_all_prefixes\n     16:     candidate = method(:all_prefixes)\n\
    \  => 17:     assert_equal([], candidate.call(\"\"))\n     18:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     20:   end\n<[]> expected but was\n<[\"\"]>\n\ndiff:\n? [\"\"]\n===============================================================================\n\
    \nFinished in 0.0033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.03 tests/s, 303.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n    prefixes << char if prefixes.empty? || char ==\
    \ prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbh_cr__c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbh_cr__c.rb:17:in\
    \ `test_all_prefixes'\n     14:   def test_all_prefixes\n     15:     candidate\
    \ = method(:all_prefixes)\n     16:     assert_equal([], candidate.call(\"\"))\n\
    \  => 17:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     18:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     19:   end\n     20: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"a\"]>\n\n\
    diff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.007659 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    130.57 tests/s, 261.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes.last != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmcsu4bd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmcsu4bd.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.019414 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    51.51 tests/s, 103.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3xe68tt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3xe68tt.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006095 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.07 tests/s, 328.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4t0y_x1b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4t0y_x1b.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006158 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.39 tests/s, 324.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9ghwj28\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9ghwj28.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.63 tests/s, 323.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmx1rkns6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmx1rkns6.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006293 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.91 tests/s, 317.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplp2swqw6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplp2swqw6.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012692 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    78.79 tests/s, 157.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnfls9n8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnfls9n8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.030762 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    32.51 tests/s, 65.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r2cdyzw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r2cdyzw.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.007704 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    129.80 tests/s, 259.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |character|\n    prefixes << character unless\
    \ prefixes.include?(character)\n  end\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbj1_pv4n\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbj1_pv4n.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006001 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.64 tests/s, 333.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp70huzp_q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp70huzp_q.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.026769 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    37.36 tests/s, 74.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes << prefix\n      prefix = nil\n    end\n\
    \  end\n  prefixes << string if prefix\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppee2huh9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppee2huh9.rb:23:in\
    \ `test_all_prefixes'\n     20:   def test_all_prefixes\n     21:     candidate\
    \ = method(:all_prefixes)\n     22:     assert_equal([], candidate.call(\"\"))\n\
    \  => 23:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     25:   end\n     26: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"d\", \"\
    g\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n\
    ===============================================================================\n\
    \nFinished in 0.008972 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.46 tests/s, 222.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6atenoic\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6atenoic.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.044475 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    22.48 tests/s, 44.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzc8ax74g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzc8ax74g.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005926 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.75 tests/s, 337.50 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1njvvg4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1njvvg4.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005922 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.86 tests/s, 337.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqtzwf04g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqtzwf04g.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.011763 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.01 tests/s, 170.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp91u65rl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp91u65rl.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006243 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    160.18 tests/s, 320.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3rlizv54\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3rlizv54.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    202.27 tests/s, 404.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4b60_4y7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4b60_4y7.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006297 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.81 tests/s, 317.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      next\n    end\n    if prefix != nil\n      result << prefix\n    end\n\
    \    prefix = c\n  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9qfextei\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9qfextei.rb:23:in\
    \ `test_all_prefixes'\n     20:   def test_all_prefixes\n     21:     candidate\
    \ = method(:all_prefixes)\n     22:     assert_equal([], candidate.call(\"\"))\n\
    \  => 23:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     25:   end\n     26: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\",\
    \ \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005377 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    185.98 tests/s, 371.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv5fi15bw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv5fi15bw.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005963 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    167.70 tests/s, 335.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbvvet9r5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbvvet9r5.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004977 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    200.92 tests/s, 401.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9uszppc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9uszppc.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.003719 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.89 tests/s, 537.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjzmuaw8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjzmuaw8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006081 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.45 tests/s, 328.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmv3s8hty\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmv3s8hty.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.015592 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    64.14 tests/s, 128.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r3xdiex\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r3xdiex.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006086 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.31 tests/s, 328.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[0..i]\n   \
    \ i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfltwcdf1\n\
    Started\n.\nFinished in 0.000207 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4830.92 tests/s, 14492.75 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes = [prefix, c]\n      prefix = nil\n  \
    \  end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp79ryclmu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp79ryclmu.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"g\", \"h\"]>\n\n\
    diff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.024626 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    40.61 tests/s, 81.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s4rym_m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s4rym_m.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.028989 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    34.50 tests/s, 68.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx7kj9fsd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx7kj9fsd.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.014321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    69.83 tests/s, 139.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptn4ucuc8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptn4ucuc8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006252 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    159.95 tests/s, 319.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj5w33dtz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj5w33dtz.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00738 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.50 tests/s, 271.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kl_dy4h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kl_dy4h.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006022 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.06 tests/s, 332.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7zq4339\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7zq4339.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006099 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    163.96 tests/s, 327.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes << prefix\n      prefix = nil\n    end\n\
    \  end\n  prefixes << prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprb3l1o0y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprb3l1o0y.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.004014 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    249.13 tests/s, 249.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptikvrkf1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptikvrkf1.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005025 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    199.00 tests/s, 398.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = -1\n  while i < string.length\n    i += 1\n    prefixes << string[0..i]\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1b_reaec\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1b_reaec.rb:17:in\
    \ `test_all_prefixes'\n     14: class TestHumanEval < Test::Unit::TestCase\n \
    \    15:   def test_all_prefixes\n     16:     candidate = method(:all_prefixes)\n\
    \  => 17:     assert_equal([], candidate.call(\"\"))\n     18:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     20:   end\n<[]> expected but was\n<[\"\"]>\n\ndiff:\n? [\"\"]\n===============================================================================\n\
    \nFinished in 0.005008 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    199.68 tests/s, 199.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fraukzn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fraukzn.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006145 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.73 tests/s, 325.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7f2a5bqj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7f2a5bqj.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.041737 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.96 tests/s, 47.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiqzvee23\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiqzvee23.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.003453 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    289.60 tests/s, 579.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c if prefixes.empty? || prefixes[-1]\
    \ != c\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsp1ss3ah\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsp1ss3ah.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.018816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    53.15 tests/s, 106.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc81xfxnr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc81xfxnr.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006961 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    143.66 tests/s, 287.32 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp589ubt5e\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp589ubt5e.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.007142 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    140.02 tests/s, 280.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsff9r9hr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsff9r9hr.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.011517 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    86.83 tests/s, 173.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ <= string.size\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpynlstl1z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpynlstl1z.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.21 tests/s, 162.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ <= string.size\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdoi02_ol\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdoi02_ol.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.60 tests/s, 323.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.downcase == c\n  \
    \    prefixes << prefix\n      prefix = nil\n    else\n      prefix = prefix ?\
    \ prefix + c : c\n    end\n  end\n  prefixes << prefix\n  prefixes\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppz84f5pm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppz84f5pm.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.052897 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    18.90 tests/s, 18.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c unless prefixes.include?(c)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_pwiqkyg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_pwiqkyg.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.008647 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    115.65 tests/s, 231.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuck8qylv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuck8qylv.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006147 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.68 tests/s, 325.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxksakzr_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxksakzr_.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00587 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    170.36 tests/s, 340.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |character|\n    prefixes << character if prefixes.empty?\
    \ || prefixes[-1] != character\n  end\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp23hi7vtf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp23hi7vtf.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.018766 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    53.29 tests/s, 106.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.start_with?(prefixes.last)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval): TypeError: no implicit conversion of\
    \ nil into String\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:7:in\
    \ `start_with?'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:7:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:6:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:6:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i6fse1v.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n===============================================================================\n\
    \nFinished in 0.00089 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    1123.60 tests/s, 1123.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxoxa2vx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxoxa2vx.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006079 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.50 tests/s, 329.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiz1hpru1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiz1hpru1.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005989 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.97 tests/s, 333.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvm97zep3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvm97zep3.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005348 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    186.99 tests/s, 373.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c == 'a'\n      prefix\
    \ = 'a'\n      prefixes << prefix\n    elsif c == 'b'\n      prefix = 'ab'\n \
    \     prefixes << prefix\n    elsif c == 'c'\n      prefix = 'abc'\n      prefixes\
    \ << prefix\n    else\n      prefix = nil\n    end\n  end\n  prefixes\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxvqxidn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxvqxidn.rb:28:in\
    \ `test_all_prefixes'\n     25:   def test_all_prefixes\n     26:     candidate\
    \ = method(:all_prefixes)\n     27:     assert_equal([], candidate.call(\"\"))\n\
    \  => 28:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     29:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     30:   end\n     31: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.003559 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    280.98 tests/s, 561.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c unless prefixes.include?(c)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2rk1isg4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2rk1isg4.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006269 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    159.52 tests/s, 319.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhcouqb9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhcouqb9.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.011411 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    87.63 tests/s, 175.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5m96yi_p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5m96yi_p.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00884 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    113.12 tests/s, 226.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj9l9df4v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj9l9df4v.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005921 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.89 tests/s, 337.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywlzqsz5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywlzqsz5.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005992 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.89 tests/s, 333.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = -1\n  while i < string.length\n    i += 1\n    prefixes << string[0..i]\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxj8q5xc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxj8q5xc.rb:17:in\
    \ `test_all_prefixes'\n     14: class TestHumanEval < Test::Unit::TestCase\n \
    \    15:   def test_all_prefixes\n     16:     candidate = method(:all_prefixes)\n\
    \  => 17:     assert_equal([], candidate.call(\"\"))\n     18:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     20:   end\n<[]> expected but was\n<[\"\"]>\n\ndiff:\n? [\"\"]\n===============================================================================\n\
    \nFinished in 0.003218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.75 tests/s, 310.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9srbo995\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9srbo995.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006091 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.18 tests/s, 328.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpecyrb6ca\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpecyrb6ca.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.014563 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    68.67 tests/s, 137.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk29ynvy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk29ynvy.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.003588 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    278.71 tests/s, 557.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c == prefix\n\
    \      prefixes = []\n      prefix = nil\n    elsif c.nil? || c.empty?\n     \
    \ prefixes = []\n      prefix = nil\n    elsif prefix\n      prefixes << prefix\n\
    \      prefix = nil\n    else\n      prefix = c\n    end\n  end\n  prefixes <<\
    \ prefix if prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ali204q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ali204q.rb:29:in\
    \ `test_all_prefixes'\n     26:   def test_all_prefixes\n     27:     candidate\
    \ = method(:all_prefixes)\n     28:     assert_equal([], candidate.call(\"\"))\n\
    \  => 29:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     30:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     31:   end\n     32: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"d\", \"\
    g\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n\
    ===============================================================================\n\
    \nFinished in 0.004966 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    201.37 tests/s, 402.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzdwwm2y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzdwwm2y.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006074 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.64 tests/s, 329.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxzk5_ssa\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxzk5_ssa.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.01154 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    86.66 tests/s, 173.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes.last != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_k82qk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_k82qk.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.008766 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    114.08 tests/s, 228.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if char.start_with?(prefixes.last)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval): TypeError: no implicit conversion of\
    \ nil into String\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:7:in\
    \ `start_with?'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:7:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:6:in\
    \ `each_char'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:6:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatkr45cw.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n===============================================================================\n\
    \nFinished in 0.000709 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    1410.44 tests/s, 1410.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprvlbza7v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprvlbza7v.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004911 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    203.62 tests/s, 407.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = -1\n  while i < string.length\n    i += 1\n    prefix = string[0..i]\n\
    \    if prefixes.include? prefix\n      next\n    end\n    prefixes << prefix\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyshy4us9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyshy4us9.rb:21:in\
    \ `test_all_prefixes'\n     18: class TestHumanEval < Test::Unit::TestCase\n \
    \    19:   def test_all_prefixes\n     20:     candidate = method(:all_prefixes)\n\
    \  => 21:     assert_equal([], candidate.call(\"\"))\n     22:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     24:   end\n<[]> expected but was\n<[\"\"]>\n\ndiff:\n? [\"\"]\n===============================================================================\n\
    \nFinished in 0.003134 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.08 tests/s, 319.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw63hyd18\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw63hyd18.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00605 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.29 tests/s, 330.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9xdelrt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9xdelrt.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.008188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    122.13 tests/s, 244.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0o0tljv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0o0tljv.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.005058 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    197.71 tests/s, 395.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix != nil\n    \
    \  prefixes << prefix\n      prefix = nil\n    end\n    prefix = c\n  end\n  prefixes\
    \ << prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubfzrudm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubfzrudm.rb:21:in\
    \ `test_all_prefixes'\n     18: class TestHumanEval < Test::Unit::TestCase\n \
    \    19:   def test_all_prefixes\n     20:     candidate = method(:all_prefixes)\n\
    \  => 21:     assert_equal([], candidate.call(\"\"))\n     22:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     24:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003269 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    305.90 tests/s, 305.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      prefixes = []\n      prefix = nil\n      next\n    end\n    if prefix\n\
    \      prefix << c\n    else\n      prefix = c\n    end\n  end\n  prefixes\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzeyv7_fx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzeyv7_fx.rb:26:in\
    \ `test_all_prefixes'\n     23:   def test_all_prefixes\n     24:     candidate\
    \ = method(:all_prefixes)\n     25:     assert_equal([], candidate.call(\"\"))\n\
    \  => 26:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     27:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     28:   end\n     29: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[]>\n\ndiff:\n? [\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.004118 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    242.84 tests/s, 485.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n      prefix = nil\n    else\n      prefix = char\n\
    \      prefixes << prefix\n    end\n  end\n  prefixes << prefix\n  prefixes\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1a39r020\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1a39r020.rb:23:in\
    \ `test_all_prefixes'\n     20: class TestHumanEval < Test::Unit::TestCase\n \
    \    21:   def test_all_prefixes\n     22:     candidate = method(:all_prefixes)\n\
    \  => 23:     assert_equal([], candidate.call(\"\"))\n     24:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     25:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     26:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003331 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.21 tests/s, 300.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.split(//).each do |char|\n    prefix = char if\
    \ prefix == nil\n    result << prefix if char == string[-1]\n    prefix = nil\n\
    \  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpst0esirg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpst0esirg.rb:19:in\
    \ `test_all_prefixes'\n     16:   def test_all_prefixes\n     17:     candidate\
    \ = method(:all_prefixes)\n     18:     assert_equal([], candidate.call(\"\"))\n\
    \  => 19:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     20:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     21:   end\n     22: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"h\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00436 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    229.36 tests/s, 458.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  i = 0\n  while i < string.length\n    prefix = string[0...i]\n    i\
    \ += 1\n    if i == string.length\n      result << prefix\n    else\n      result\
    \ << prefix << string[0...i]\n    end\n  end\n  result\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2dwo9r5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2dwo9r5.rb:23:in\
    \ `test_all_prefixes'\n     20:   def test_all_prefixes\n     21:     candidate\
    \ = method(:all_prefixes)\n     22:     assert_equal([], candidate.call(\"\"))\n\
    \  => 23:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     25:   end\n     26: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"\", \"a\", \"a\"\
    , \"as\", \"as\", \"asd\", \"asd\", \"asdf\", \"asdf\", \"asdfg\", \"asdfg\"]>\n\
    \ndiff:\n? [\"\", \"a\", \"a\", \"as\", \"as\", \"asd\", \"asd\", \"asdf\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.007882 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    126.87 tests/s, 253.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ycxe_8z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ycxe_8z.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006157 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.42 tests/s, 324.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppmka1k35\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppmka1k35.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006793 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.21 tests/s, 294.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk6d91x3v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk6d91x3v.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006001 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.64 tests/s, 333.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.split(//).each do |c|\n    if c.empty?\n    \
    \  prefixes << prefix\n      prefix = nil\n    else\n      prefix = c\n    end\n\
    \  end\n  prefixes << prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbli6e_zi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbli6e_zi.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003384 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.51 tests/s, 295.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn93mlz4t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn93mlz4t.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005853 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    170.85 tests/s, 341.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ij66lx4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ij66lx4.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00707 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    141.44 tests/s, 282.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  string.split(//).each do |char|\n    result << char\n    result << char.downcase\n\
    \  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf5nttwml\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf5nttwml.rb:17:in\
    \ `test_all_prefixes'\n     14:   def test_all_prefixes\n     15:     candidate\
    \ = method(:all_prefixes)\n     16:     assert_equal([], candidate.call(\"\"))\n\
    \  => 17:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     18:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     19:   end\n     20: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"a\", \"\
    s\", \"s\", \"d\", \"d\", \"f\", \"f\", \"g\", \"g\", \"h\", \"h\"]>\n\ndiff:\n\
    ? [\"a\", \"a\", \"s\", \"as\", \"d\", \"asd\", \"f\", \"asdf\", \"g\", \"asdfg\"\
    , \"h\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.015578 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    64.19 tests/s, 128.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.downcase == c\n  \
    \    prefix ||= c\n    else\n      prefix ||= c\n      result << prefix\n    \
    \  prefix = nil\n    end\n  end\n  result << prefix if prefix\n  result\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp657a6fub\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp657a6fub.rb:24:in\
    \ `test_all_prefixes'\n     21:   def test_all_prefixes\n     22:     candidate\
    \ = method(:all_prefixes)\n     23:     assert_equal([], candidate.call(\"\"))\n\
    \  => 24:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     25:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     26:   end\n     27: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005118 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    195.39 tests/s, 390.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ <= string.size\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr__23_ck\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr__23_ck.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006587 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    151.81 tests/s, 303.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char.with_index do |char, index|\n    if\
    \ index == 0\n      prefix = char\n    else\n      result[-1] << char\n    end\n\
    \  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval):\n  NoMethodError: undefined method `<<'\
    \ for nil:NilClass\n  \n        result[-1] << char\n                   ^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:11:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:7:in\
    \ `each_char'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:7:in\
    \ `with_index'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:7:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:21:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh8aicmc.rb:21:in\
    \ `test_all_prefixes'\n     18:   def test_all_prefixes\n     19:     candidate\
    \ = method(:all_prefixes)\n     20:     assert_equal([], candidate.call(\"\"))\n\
    \  => 21:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     22:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     23:   end\n     24: end\n===============================================================================\n\
    \nFinished in 0.001194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    837.52 tests/s, 837.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpigppmkn2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpigppmkn2.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.78 tests/s, 331.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefix = prefix << c\n    end\n    prefixes <<\
    \ prefix\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpclm462u6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpclm462u6.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"asdfgh\"\
    , \"asdfgh\", \"asdfgh\", \"asdfgh\", \"asdfgh\"]>\n\ndiff:\n? [\"a\", \"as\"\
    , \"asd\", \"asdf\", \"asdfgh\", \"asdfgh\", \"asdfgh\", \"asdfgh\", \"asdfgh\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.018053 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    55.39 tests/s, 110.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5zwxyxmy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5zwxyxmy.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006982 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    143.23 tests/s, 286.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphn0efuur\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphn0efuur.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.005357 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    186.67 tests/s, 373.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalrwwoqk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalrwwoqk.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.009378 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    106.63 tests/s, 213.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl67imyc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl67imyc.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004903 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    203.96 tests/s, 407.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3s5i6by\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3s5i6by.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006049 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.32 tests/s, 330.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp955_6i2m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp955_6i2m.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006048 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.34 tests/s, 330.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c if prefixes.empty? || prefixes[-1]\
    \ != c\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcsn77y9g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcsn77y9g.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.008966 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.53 tests/s, 223.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yomumzh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yomumzh.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004964 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    201.45 tests/s, 402.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0mj24bt3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0mj24bt3.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.019237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    51.98 tests/s, 103.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ifufuok\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ifufuok.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00601 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.39 tests/s, 332.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c unless prefixes.include?(c)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpza20e7zl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpza20e7zl.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006096 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.04 tests/s, 328.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmoi5myv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmoi5myv.rb:11:in\
    \ `test_all_prefixes'\n      8: class TestHumanEval < Test::Unit::TestCase\n \
    \     9:   def test_all_prefixes\n     10:     candidate = method(:all_prefixes)\n\
    \  => 11:     assert_equal([], candidate.call(\"\"))\n     12:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     14:   end\n<[]> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.004631 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.94 tests/s, 215.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char == prefixes.last\n    prefixes << char if prefixes.empty? || char ==\
    \ prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp42l7tdas\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp42l7tdas.rb:17:in\
    \ `test_all_prefixes'\n     14:   def test_all_prefixes\n     15:     candidate\
    \ = method(:all_prefixes)\n     16:     assert_equal([], candidate.call(\"\"))\n\
    \  => 17:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     18:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     19:   end\n     20: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"a\"]>\n\n\
    diff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.004774 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    209.47 tests/s, 418.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n702a7a\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n702a7a.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006173 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.00 tests/s, 323.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2_fpemo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2_fpemo.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006017 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.20 tests/s, 332.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni0bm2bj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni0bm2bj.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.010748 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    93.04 tests/s, 186.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpua1k2rmv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpua1k2rmv.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005184 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    192.90 tests/s, 385.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char.with_index do |char, index|\n    prefixes << char if\
    \ index == 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwvavy5ca\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwvavy5ca.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012275 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.47 tests/s, 162.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5mssa0xh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5mssa0xh.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.004923 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    203.13 tests/s, 406.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3s29fe1u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3s29fe1u.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006122 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    163.35 tests/s, 326.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjfaohhb9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjfaohhb9.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.24 tests/s, 336.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyxma10kq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyxma10kq.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.023741 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    42.12 tests/s, 84.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnp0mlda\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnp0mlda.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.007939 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    125.96 tests/s, 251.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2i3_0mr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2i3_0mr.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.038071 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    26.27 tests/s, 52.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0tg73z2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0tg73z2.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006007 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.47 tests/s, 332.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8mvkh6v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8mvkh6v.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.026122 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    38.28 tests/s, 76.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvtjl1nm7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvtjl1nm7.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.026516 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    37.71 tests/s, 75.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char.with_index do |char, index|\n    prefixes << char if\
    \ index == 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp842oyqrm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp842oyqrm.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.022309 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    44.82 tests/s, 89.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ <= string.size\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplra_gigr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplra_gigr.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.035525 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    28.15 tests/s, 56.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7ook88k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7ook88k.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.028597 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    34.97 tests/s, 69.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.min_by(&:last).reverse\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp54cgg9b5\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval):\n  NoMethodError: undefined method `reverse'\
    \ for nil:NilClass\n  \n    string.split(//).map { |s| s.size }.min_by(&:last).reverse\n\
    \                                                      ^^^^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp54cgg9b5.rb:5:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp54cgg9b5.rb:11:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp54cgg9b5.rb:11:in\
    \ `test_all_prefixes'\n      8: class TestHumanEval < Test::Unit::TestCase\n \
    \     9:   def test_all_prefixes\n     10:     candidate = method(:all_prefixes)\n\
    \  => 11:     assert_equal([], candidate.call(\"\"))\n     12:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     14:   end\n===============================================================================\n\
    \nFinished in 0.00187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    534.76 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes = [prefix, c] + prefixes\n      prefix\
    \ = nil\n    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwdiafme3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwdiafme3.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"g\", \"h\", \"\
    d\", \"f\", \"a\", \"s\"]>\n\ndiff:\n? [\"g\", \"h\", \"d\", \"f\", \"a\", \"\
    as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    187.93 tests/s, 375.87 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix\n      result\
    \ << prefix\n      prefix = nil\n    end\n    prefix ||= c\n  end\n  result <<\
    \ prefix\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsv2ep_xy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsv2ep_xy.rb:21:in\
    \ `test_all_prefixes'\n     18: class TestHumanEval < Test::Unit::TestCase\n \
    \    19:   def test_all_prefixes\n     20:     candidate = method(:all_prefixes)\n\
    \  => 21:     assert_equal([], candidate.call(\"\"))\n     22:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     24:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003278 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    305.06 tests/s, 305.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[0..i]\n   \
    \ i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd49n98pf\n\
    Started\n.\nFinished in 0.000222 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4504.50 tests/s, 13513.51 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg2_5ccec\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg2_5ccec.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.040719 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    24.56 tests/s, 49.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  string.each_char do |char|\n    result << char\n    result << char +\
    \ char\n  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6v24mvd0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6v24mvd0.rb:17:in\
    \ `test_all_prefixes'\n     14:   def test_all_prefixes\n     15:     candidate\
    \ = method(:all_prefixes)\n     16:     assert_equal([], candidate.call(\"\"))\n\
    \  => 17:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     18:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     19:   end\n     20: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"aa\", \"\
    s\", \"ss\", \"d\", \"dd\", \"f\", \"ff\", \"g\", \"gg\", \"h\", \"hh\"]>\n\n\
    diff:\n? [\"a\", \"aa\", \"s\", \"ass\", \"d\", \"asdd\", \"f\", \"asdff\", \"\
    g\", \"asdfgg\", \"h\", \"hh\"]\n===============================================================================\n\
    \nFinished in 0.01711 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    58.45 tests/s, 116.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlbs7m1j\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlbs7m1j.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.011858 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    84.33 tests/s, 168.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if char == string.first\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval):\n  NoMethodError: undefined method `first'\
    \ for \"asdfgh\":String\n  \n      prefixes << char if char == string.first\n\
    \                                        ^^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw.rb:7:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw.rb:6:in\
    \ `each_char'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw.rb:6:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwydm1nw.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n===============================================================================\n\
    \nFinished in 0.017652 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    56.65 tests/s, 56.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      prefixes = []\n      prefix = nil\n    elsif prefix\n      prefix = prefix\
    \ + c\n    else\n      prefix = c\n    end\n    prefixes << prefix\n  end\n  prefixes\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkdpxk9wq\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 14423.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqtm00dk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqtm00dk.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.009504 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    105.22 tests/s, 210.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1mm8u_z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1mm8u_z.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.009771 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    102.34 tests/s, 204.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_1btmxw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_1btmxw.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006047 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.37 tests/s, 330.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.split(//).each do |c|\n    if c.length < prefix.length\
    \ || prefix.nil?\n      prefix = c\n      result = [prefix]\n    elsif c.length\
    \ == prefix.length\n      result << prefix\n    end\n  end\n  result\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval):\n  NoMethodError: undefined method `length'\
    \ for nil:NilClass\n  \n      if c.length < prefix.length || prefix.nil?\n   \
    \                       ^^^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk.rb:8:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk.rb:7:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk.rb:22:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawm6bbtk.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n===============================================================================\n\
    \nFinished in 0.001724 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    580.05 tests/s, 580.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9di_7t22\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9di_7t22.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006168 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.13 tests/s, 324.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxwrvqmgy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxwrvqmgy.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005254 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    190.33 tests/s, 380.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = -1\n  while i < string.length\n    prefixes << string[i..-1]\n \
    \   i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprj2zl01w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprj2zl01w.rb:17:in\
    \ `test_all_prefixes'\n     14: class TestHumanEval < Test::Unit::TestCase\n \
    \    15:   def test_all_prefixes\n     16:     candidate = method(:all_prefixes)\n\
    \  => 17:     assert_equal([], candidate.call(\"\"))\n     18:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     20:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.011428 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    87.50 tests/s, 87.50 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4nz6ajdc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4nz6ajdc.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006045 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.43 tests/s, 330.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_99y_o8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_99y_o8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.007928 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    126.14 tests/s, 252.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9q4yt64\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9q4yt64.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.012649 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    79.06 tests/s, 158.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3786_36\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3786_36.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00619 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.55 tests/s, 323.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplcfx3gb_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplcfx3gb_.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005212 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    191.86 tests/s, 383.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bln735c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bln735c.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006207 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.11 tests/s, 322.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus4fccv8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus4fccv8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.027411 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    36.48 tests/s, 72.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oesdi4h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oesdi4h.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005942 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.29 tests/s, 336.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpypgzp54r\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpypgzp54r.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.106524 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    9.39 tests/s, 18.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgmv_pdks\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgmv_pdks.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.032123 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    31.13 tests/s, 62.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4emijffz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4emijffz.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.011804 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    84.72 tests/s, 169.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_myem2ol\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_myem2ol.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.78 tests/s, 331.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.is_a?(String) && c.length\
    \ == 1\n      prefix = c\n    else\n      result << prefix\n      prefix = nil\n\
    \    end\n  end\n  result << prefix\n  result\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjf3ryki\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjf3ryki.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.010821 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    92.41 tests/s, 92.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcaoq645g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcaoq645g.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006394 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.40 tests/s, 312.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || prefixes[-1] != char\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphv_enfav\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphv_enfav.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006134 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    163.03 tests/s, 326.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl5lsqw3h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl5lsqw3h.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.56 tests/s, 331.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix\n      prefixes\
    \ << prefix\n      prefix = nil\n    end\n    prefix = c if c\n  end\n  prefixes\
    \ << prefix if prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagryri06\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagryri06.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006076 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    164.58 tests/s, 329.16 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s5ppj0i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s5ppj0i.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00641 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.01 tests/s, 312.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c if prefixes.empty? || prefixes.last\
    \ != c\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphcuxzs6z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphcuxzs6z.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005928 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    168.69 tests/s, 337.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |character|\n    prefixes << character unless\
    \ prefixes.include?(character)\n  end\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzebns24n\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzebns24n.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012437 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    80.41 tests/s, 160.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      result << prefix\n    else\n      prefix = char\n      result << prefix\n\
    \    end\n  end\n  result\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4vheb2m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4vheb2m.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.038974 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    25.66 tests/s, 51.32 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpika53xse\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpika53xse.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.022263 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    44.92 tests/s, 89.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char != ''\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpqj57gd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpqj57gd.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006475 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.44 tests/s, 308.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[i..-1]\n  \
    \  i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprn0x90hc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprn0x90hc.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"sdfgh\"\
    , \"dfgh\", \"fgh\", \"gh\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\", \"sdfgh\", \"dfgh\", \"fgh\", \"gh\", \"h\"]\n===============================================================================\n\
    \nFinished in 0.005757 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    173.70 tests/s, 347.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char.with_index do |char, index|\n    prefixes << char if\
    \ index == 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5jhnnss_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5jhnnss_.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\"]>\n\ndiff:\n\
    ? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.00457 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    218.82 tests/s, 437.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n    else\n      prefix = char\n      prefixes << prefix\n\
    \    end\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg34ye7dp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg34ye7dp.rb:22:in\
    \ `test_all_prefixes'\n     19:   def test_all_prefixes\n     20:     candidate\
    \ = method(:all_prefixes)\n     21:     assert_equal([], candidate.call(\"\"))\n\
    \  => 22:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     23:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     24:   end\n     25: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.78 tests/s, 331.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c if prefixes.empty? || prefixes[-1]\
    \ != c\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbt4rngn8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbt4rngn8.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012335 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.07 tests/s, 162.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes << prefix\n      prefix = nil\n    end\n\
    \  end\n  prefixes << prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate = method(:all_prefixes)\n\
    \    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"a\", \"as\",\
    \ \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n   \
    \ assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9vd9996\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9vd9996.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003261 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.65 tests/s, 306.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if prefix == nil\n    \
    \  prefix = c\n    else\n      prefixes << prefix\n      prefix = nil\n    end\n\
    \  end\n  prefixes << prefix if prefix\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppb9o2wkl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppb9o2wkl.rb:23:in\
    \ `test_all_prefixes'\n     20:   def test_all_prefixes\n     21:     candidate\
    \ = method(:all_prefixes)\n     22:     assert_equal([], candidate.call(\"\"))\n\
    \  => 23:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     25:   end\n     26: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"d\", \"\
    g\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n\
    ===============================================================================\n\
    \nFinished in 0.004681 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    213.63 tests/s, 427.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0imqwf4b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0imqwf4b.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.012688 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    78.81 tests/s, 157.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |char|\n    if char == prefix\n\
    \      prefixes << prefix\n      prefix = nil\n    else\n      prefix = char\n\
    \    end\n  end\n  prefixes << prefix\n  prefixes\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa9_k3ehw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa9_k3ehw.rb:22:in\
    \ `test_all_prefixes'\n     19: class TestHumanEval < Test::Unit::TestCase\n \
    \    20:   def test_all_prefixes\n     21:     candidate = method(:all_prefixes)\n\
    \  => 22:     assert_equal([], candidate.call(\"\"))\n     23:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     24:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     25:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003172 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.26 tests/s, 315.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c unless prefixes.include?(c)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4vkwteoo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4vkwteoo.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.014795 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    67.59 tests/s, 135.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  string.split(//).map\
    \ { |s| s.size }.sort.reverse.map { |s| s[0...s] }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpifbfwq9i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpifbfwq9i.rb:12:in\
    \ `test_all_prefixes'\n      9:   def test_all_prefixes\n     10:     candidate\
    \ = method(:all_prefixes)\n     11:     assert_equal([], candidate.call(\"\"))\n\
    \  => 12:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     13:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     14:   end\n     15: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[1, 1, 1, 1, 1, 1]>\n\
    \ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]\n?  1   \
    \ 1     1      1       1        1        \n?  ???    ????     ?????      ??????\
    \       ???????        ????????        \n===============================================================================\n\
    \nFinished in 0.012038 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    83.07 tests/s, 166.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if prefixes.empty?\
    \ || char != prefixes.last\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n    candidate\
    \ = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\"))\n    assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjuv97aed\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjuv97aed.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.018393 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    54.37 tests/s, 108.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = string.size\n  while i > 0\n    prefixes << string[0..i-1]\n   \
    \ i -= 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdu6z__fy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdu6z__fy.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"asdfgh\", \"asdfg\"\
    , \"asdf\", \"asd\", \"as\", \"a\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\
    \  \", \"asdfg\", \"asdfgh                \"]\n?                         gh  \
    \               \", \"asd\", \"as\", \"a  \n?  ------------------     ++     \
    \            ??  \n===============================================================================\n\
    \nFinished in 0.005194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    192.53 tests/s, 385.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  prefix = nil\n  string.each_char do |c|\n    if c.nil? || c.empty?\n\
    \      prefixes = []\n      prefix = nil\n    elsif prefix != nil\n      prefixes\
    \ << prefix\n      prefix = nil\n    elsif prefixes.empty?\n      prefixes <<\
    \ c\n      prefix = c\n    else\n      prefix = c\n    end\n  end\n  prefixes\
    \ << prefix\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0iedm7e1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0iedm7e1.rb:28:in\
    \ `test_all_prefixes'\n     25: class TestHumanEval < Test::Unit::TestCase\n \
    \    26:   def test_all_prefixes\n     27:     candidate = method(:all_prefixes)\n\
    \  => 28:     assert_equal([], candidate.call(\"\"))\n     29:     assert_equal([\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"\
    ))\n     30:     assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"WWW\"\
    ))\n     31:   end\n<[]> expected but was\n<[nil]>\n\ndiff:\n? [nil]\n===============================================================================\n\
    \nFinished in 0.003272 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    305.62 tests/s, 305.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  i = 0\n  while i < string.length\n    prefixes << string[0..i]\n   \
    \ i += 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc33jolyo\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  result\
    \ = []\n  prefix = nil\n  string.each_char.with_index do |char, index|\n    prefix\
    \ = char if index == 0\n    result << prefix if prefix\n  end\n  result\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_prefixes\n\
    \    candidate = method(:all_prefixes)\n    assert_equal([], candidate.call(\"\
    \"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"WW\", \"WWW\"], candidate.call(\"\
    WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gy321od\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gy321od.rb:18:in\
    \ `test_all_prefixes'\n     15:   def test_all_prefixes\n     16:     candidate\
    \ = method(:all_prefixes)\n     17:     assert_equal([], candidate.call(\"\"))\n\
    \  => 18:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     19:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     20:   end\n     21: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"a\", \"\
    a\", \"a\", \"a\", \"a\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006471 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.54 tests/s, 309.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.length\
    \ == 1\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqnba_fs3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqnba_fs3.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006007 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.47 tests/s, 332.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.split(//).each do |char|\n    prefixes << char if char.size >\
    \ 0\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9h9lua6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9h9lua6.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.005845 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    171.09 tests/s, 342.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |c|\n    prefixes << c if prefixes.empty? || prefixes[-1]\
    \ != c\n  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3pzi0e67\n\
    Started\nF\n===============================================================================\n\
    Failure: test_all_prefixes(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3pzi0e67.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n<[\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\"]> expected but was\n<[\"a\", \"s\", \"\
    d\", \"f\", \"g\", \"h\"]>\n\ndiff:\n? [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\"]\n===============================================================================\n\
    \nFinished in 0.006017 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.20 tests/s, 332.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return list of all prefixes from shortest to longest of the input string\n\
    # >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\ndef all_prefixes(string)\n  prefixes\
    \ = []\n  string.each_char do |char|\n    prefixes << char if char.start_with?(prefixes.last)\n\
    \  end\n  prefixes\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_all_prefixes\n    candidate = method(:all_prefixes)\n    assert_equal([],\
    \ candidate.call(\"\"))\n    assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"], candidate.call(\"asdfgh\"))\n    assert_equal([\"W\", \"\
    WW\", \"WWW\"], candidate.call(\"WWW\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym\n\
    Started\nE\n===============================================================================\n\
    Error: test_all_prefixes(TestHumanEval): TypeError: no implicit conversion of\
    \ nil into String\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:7:in\
    \ `start_with?'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:7:in\
    \ `block in all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:6:in\
    \ `each_char'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:6:in\
    \ `all_prefixes'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla63s3ym.rb:16:in\
    \ `test_all_prefixes'\n     13:   def test_all_prefixes\n     14:     candidate\
    \ = method(:all_prefixes)\n     15:     assert_equal([], candidate.call(\"\"))\n\
    \  => 16:     assert_equal([\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"\
    ], candidate.call(\"asdfgh\"))\n     17:     assert_equal([\"W\", \"WW\", \"WWW\"\
    ], candidate.call(\"WWW\"))\n     18:   end\n     19: end\n===============================================================================\n\
    \nFinished in 0.000655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    1526.72 tests/s, 1526.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception

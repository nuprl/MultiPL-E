name: HumanEval_112_reverse_delete
language: ruby
prompt: "# Task\n# We are given two strings s and c, you have to deleted all the characters\
  \ in s that are equal to any character in c\n# then check if the result string is\
  \ palindrome.\n# A string is called palindrome if it reads the same backward as\
  \ forward.\n# You should return a tuple containing the result string and True/False\
  \ for the check.\n# Example\n# For s = \"abcde\", c = \"ae\", the result should\
  \ be ('bcd',False)\n# For s = \"abcdef\", c = \"b\"  the result should be ('acdef',False)\n\
  # For s = \"abcdedcba\", c = \"ab\", the result should be ('cdedc',True)\ndef reverse_delete(s,\
  \ c)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_reverse_delete\n\
  \    candidate = method(:reverse_delete)\n    assert_equal([\"bcd\", false], candidate.call(\"\
  abcde\", \"ae\"))\n    assert_equal([\"acdef\", false], candidate.call(\"abcdef\"\
  , \"b\"))\n    assert_equal([\"cdedc\", true], candidate.call(\"abcdedcba\", \"\
  ab\"))\n    assert_equal([\"dik\", false], candidate.call(\"dwik\", \"w\"))\n  \
  \  assert_equal([\"\", true], candidate.call(\"a\", \"a\"))\n    assert_equal([\"\
  abcdedcba\", true], candidate.call(\"abcdedcba\", \"\"))\n    assert_equal([\"abcdedcba\"\
  , true], candidate.call(\"abcdedcba\", \"v\"))\n    assert_equal([\"abba\", true],\
  \ candidate.call(\"vabba\", \"v\"))\n    assert_equal([\"\", true], candidate.call(\"\
  mamma\", \"mia\"))\n  end\nend\n"
completions: ["  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n  \
    \    result = result + s[i]\n      i += 1\n    else\n      result = result + s[i]\n\
    \      i += 1\n    end\n  end\n  if result == s\n    return result, true\n  else\n\
    \    return result, false\n  end\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + s[i] + c\n  end\n  return result,(result == s)\nend", "  result = ''\n  for\
    \ i in 0..s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  result << c\n  result = result.gsub(/./,'') # remove\
    \ all characters\n  result = result.gsub(/./,'')\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'')\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,'')\
    \ # remove all characters\n  result = result.gsub(/./,'') # remove all characters\n\
    \  result = result.gsub(/./,'') # remove all characters\n  result = result.gsub(/./,",
  "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result = result\
    \ + s[i]\n      s.delete(i)\n      break\n    end\n  end\n  result = result +\
    \ s\n  result = result.to_s\n  result = result.gsub(c,'')\n  result = result.gsub(s,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result\
    \ = result.gsub(/./,'') \n  result = result.gsub(/./,'') \n  result = result.gsub(/./,'')\
    \ \n  result = result.gsub(/./,''", "  result = \"\"\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n    else\n      result = result\
    \ + s[i] + c\n  end\n  return (result,true)\nend", "  s.chars.each do |i|\n  \
    \  if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|",
  "  s.reverse!\n  s.delete(c)\n  s.reverse!\n  return s,s.eql?(s)\nend", "  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")", "  s.reverse!\n  s.delete_if {|x| x ==\
    \ c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if {|x|\
    \ x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.reverse!\n  s.delete_if\
    \ {|x| x == c}\n  s.reverse!\n  s.delete_if {|x| x == c}\n  s.", "  result = ''\n\
    \  for i in 0...s.length\n    if s[i] == c\n      result += s[i]\n    else\n \
    \     result += c\n  end\n  return (result,true)\nend", "  result = \"\"\n  i\
    \ = 0\n  while i < s.length\n    if s[i] == c\n      result = result + s[i]\n\
    \      i += 1\n      while i < s.length\n        if s[i] == c\n          result\
    \ = result + s[i]\n          i += 1\n        else\n          break\n      i +=\
    \ 1\n    else\n      break\n  return (result,(result == s[s.length..-1]))\nend",
  "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n    else\n   \
    \   result << i\n      break\n  result << c\n  return (result,s.chars.all? {|c|\
    \ c == result})\nend", "  s = s.chars.to_a\n  c = c.chars.to_a\n  s.each do |i|\n\
    \    i = c.find { |j| i == j }\n    s << i if i\n  end\n  s.reverse!\n  s.join\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) if s.chars.size\
    \ == 0\n    end\n  end\n  s.chars.size == 0\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      return (s,false)\n    end\n\
    \  end\n  return (s,true)\nend", "  result = \"\"\n  for i in 0...s.length\n \
    \   if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result << s[0...s.length]\n  return (result,true)\nend", "  result =\
    \ ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n\
    \      i += 1\n      while i < s.length\n        if s[i] != c\n          result\
    \ << s[i]\n          i += 1\n        end\n      end\n      result << c\n     \
    \ i += 1\n    else\n      result << s[i]\n      i += 1\n    end\n  end\n  return\
    \ [result,true]\nend", "  s.chars.each do |char|\n    char == c.chars.first ?\
    \ s.delete(char) : nil\n  end\n  s.chars.size == 0 ? true : false\nend", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  if s == s.chars.join\n    return s,true\n  else\n    return s,false\n \
    \ end\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ if s.chars.size == 0\n    end\n  end\n  s.chars.size == 0 ? true : false\nend",
  "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  return (result,true)\nend",
  "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result <<\
    \ s[i]\n      i += 1\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ << s[s.length]\n  return (result,true)\nend", "  s.chars.each do |char|\n  \
    \  if char == c\n      s.delete(char) # delete char\n      break # stop looping\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.join\nend", "  s.chars.each do\
    \ |char|\n    next if char == c\n    next if char == s[0...-1]\n    next if char\
    \ == s[-1...-1]\n    next if char == s[0...-1]\n    next if char == s[-1...-1]\n\
    \    next if char == s[0...-1]\n    next if char == s[-1...-1]\n    next if char\
    \ == s[0...-1]\n    next if char == s[-1...-1]\n    next if char == s[0...-1]\n\
    \    next if char == s[-1...-1]\n    next if char == s[0...-1]\n    next if char\
    \ == s[-1...-1]\n    next if char == s[0...-1]\n    next if char == s[-1...-1]\n\
    \    next if char == s[0...-1]\n    next if char == s[-1...-1]\n    next if char\
    \ == s[0...-1]\n    next if char == s[-1...-1]\n    next if char == s[0...-1]\n\
    \    next if char == s[-1...-1]\n    next if char == s[0...-1]\n    next if char\
    \ == s[-1...-1]\n    next if char == s[0...-1]\n    next if char == s[-1...-1]\n\
    \    next if char == s[0...-1]\n    next if char == s[-1...-1]\n    next if char\
    \ == s[0...-1]\n    next if char == s[-1...-1]\n    next if char == s[0...-1]\n\
    \    next if char == s[-1...-1]\n    next if char == s[0...-1]\n    next if char\
    \ == s[-1...-1]\n    next if char == s[0...-1]\n    next if char == s[-1...-1]\n\
    \    next if char == s[0...-1]\n    next if char == s[-1...-1]\n    next if char\
    \ == s[0...-1]\n    next if char == s[-1...-1]\n    next if char == s[0...-1]\n\
    \    next if char == s[-1...-1]\n    next if char == s[0...-1]\n    next if char\
    \ == s[-1...-1]\n    next if char == s[0...-1]\n    next if char == s[-1...-1]\n\
    \    next if char == s[0...-1]\n    next if char == s[-1...-1]\n    next if char\
    \ == s[0...-1]\n    next if char == s[-1...-1]\n    next if char == s[0...-1]\n\
    \    next if char == s[", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  if s == s.reverse\n    return s, true\n  else\n    return\
    \ s, false\n  end\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  if s == s.reverse\n    return s,true\n  else\n    return\
    \ s,false\n  end\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return\
    \ (result,true)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char\
    \ == c\n      return (s,false)\n    end\n  end\n  return (s,true)\nend", "  s.chars.each\
    \ do |char|\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c\n    next if char ==\
    \ c\n    next if char == c\n    next if char == c\n    next if char == c\n   \
    \ next if char == c\n    next if char == c\n    next if char == c\n    next if\
    \ char == c\n    next if char == c\n    next if char == c", "  result = ''\n \
    \ i = 0\n  while i < s.length\n    char = s[i]\n    if char == c\n      i += 1\n\
    \      continue\n    result << char\n    i += 1\n  end\n  result << s[i]\n  return\
    \ (result,true)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n      break # stop looping\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.join\nend", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i]\
    \ == c\n      result += s[i]\n      i += 1\n    else\n      result += s[i]\n \
    \     i += 1\n      while i < s.length\n        if s[i] == c\n          result\
    \ += s[i]\n          i += 1\n        else\n          result += s[i]\n        \
    \  i += 1\n      end\n    end\n  end\n  return (result,true)\nend", "  result\
    \ = ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n\
    \      result << s[i]\n    end\n  end\n  result << c\n  return (result,true)\n\
    end", "  result = ''\n  s.each_char do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n  s.reverse!\n  s.gsub!(c)\n\
    \  s.reverse!\n  s.gsub!(c)\n  ", "  s = s.chars.to_a\n  c = c.chars.to_a\n  s.delete_if\
    \ { |x| c.include?(x) }\n  s.reverse!\n  s.join\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  s.chars.each do |char|\n    if char == c\n      return (char,true)\n  \
    \  end\n  end\n  \n  return ('',false)\nend", "  s.chars.each do |char|\n    if\
    \ char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.", "  s.chars.each do |char|\n    next if char == c\n    next if char == s[0...-1]\n\
    \    next if char == s[0...-2]\n    next if char == s[0...-3]\n    next if char\
    \ == s[0...-4]\n    next if char == s[0...-5]\n    next if char == s[0...-6]\n\
    \    next if char == s[0...-7]\n    next if char == s[0...-8]\n    next if char\
    \ == s[0...-9]\n    next if char == s[0...-10]\n    next if char == s[0...-11]\n\
    \    next if char == s[0...-12]\n    next if char == s[0...-13]\n    next if char\
    \ == s[0...-14]\n    next if char == s[0...-15]\n    next if char == s[0...-16]\n\
    \    next if char == s[0...-17]\n    next if char == s[0...-18]\n    next if char\
    \ == s[0...-19]\n    next if char == s[0...-20]\n    next if char == s[0...-21]\n\
    \    next if char == s[0...-22]\n    next if char == s[0...-23]\n    next if char\
    \ == s[0...-24]\n    next if char == s[0...-25]\n    next if char == s[0...-26]\n\
    \    next if char == s[0...-27]\n    next if char == s[0...-28]\n    next if char\
    \ == s[0...-29]\n    next if char == s[0...-30]\n    next if char == s[0...-31]\n\
    \    next if char == s[0...-32]\n    next if char == s[0...-33]\n    next if char\
    \ == s[0...-34]\n    next if char == s[0...-35]\n    next if char == s[0...-36]\n\
    \    next if char == s[0...-37]\n    next if char == s[0...-38]\n    next if char\
    \ == s[0...-39]\n    next if char == s[0...-40]\n    next if char == s[0...-41]\n\
    \    next if char == s[0...-42]\n    next if char == s[0...-43]\n    next if char\
    \ == s[0...", "  s = s.chars.reverse\n  s.delete_if { |x| c.include? x }\n  s.join\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n   \
    \ end\n  end\n  \n  if s == c\n    return s, true\n  else\n    return s, false\n\
    \  end\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n    \
    \  result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result <<\
    \ c\n  return result\nend", "  s.chars.each do |i|\n    if i != c\n      s.delete(i)\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.join\nend", "  s.chars.each do\
    \ |char|\n    char == c.chars.first ? s.chars.delete(char) : nil\n  end\n  s.chars.size\
    \ == 0 ? true : false\nend", "  s.chars.each do |char|\n    next if char == c\n\
    \    next if char == s[0...char.length]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    next if char == s[char.length..-1]\n\
    \    next if char == s[0...char.length-1]\n    ", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n    end\n  end\n  \n  if s == s.reverse\n\
    \    return s, true\n  else\n    return s, false\n  end\nend", "  result = ''\n\
    \  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n \
    \     result << s[i]\n    end\n  end\n  result << c\n  return result,true\nend",
  "  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  return s,s.eql?(s.reverse)\n\
    end", "  result = ''\n  for i in s\n    if i == c\n      result << i\n    else\n\
    \      result << i\n      result << c\n  end\n  result << c\n  return (result,true)\n\
    end", "  result = ''\n  s.each_char do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  result = ''\n  for i in s\n    if i == c\n      result <<\
    \ i\n    else\n      result << i\n      result << c\n  result << c\n  return (result,s.chars\
    \ == result.chars)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s.chars.each do |char|\n    if char != c\n      return\
    \ (char,false)\n    end\n  end\n  \n  return (char,true)\nend", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      return (char,true)\n    end\n  end\n  \n\
    \  return (char,false)\nend", "  s.chars.each do |char|\n    if char == c\n  \
    \    s.delete(char) \n    end\n  end\n  \n  if s == s.reverse\n    return s,true\n\
    \  else\n    return s,false\n  end\nend", "  result = ''\n  for i in s\n    if\
    \ i == c\n      result << i\n    else\n      result << i\n      result << c\n\
    \  end\n  result << c\n  return [result,s.chars.reverse.all? {|i| i == c}]\nend",
  "  s = s.chars.reverse\n  s.delete_if { |x| c.include?(x) }\n  s.join\nend", " \
    \ s = s.chars.reverse\n  c = c.chars.reverse\n  s.each_char do |char|\n    if\
    \ c.include?(char) == false\n      s.delete(char) if s.include?(char) == false\n\
    \    end\n  end\n  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char)\
    \ == false\n      s.delete(char) if s.include?(char) == false\n    end\n  end\n\
    \  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char) == false\n\
    \      s.delete(char) if s.include?(char) == false\n    end\n  end\n  s.chars.reverse\n\
    \  s.each_char do |char|\n    if c.include?(char) == false\n      s.delete(char)\
    \ if s.include?(char) == false\n    end\n  end\n  s.chars.reverse\n  s.each_char\
    \ do |char|\n    if c.include?(char) == false\n      s.delete(char) if s.include?(char)\
    \ == false\n    end\n  end\n  s.chars.reverse\n  s.each_char do |char|\n    if\
    \ c.include?(char) == false\n      s.delete(char) if s.include?(char) == false\n\
    \    end\n  end\n  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char)\
    \ == false\n      s.delete(char) if s.include?(char) == false\n    end\n  end\n\
    \  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char) == false\n\
    \      s.delete(char) if s.include?(char) == false\n    end\n  end\n  s.chars.reverse\n\
    \  s.each_char do |char|\n    if c.include?(char) == false\n      s.delete(char)\
    \ if s.include?(char) == false\n    end\n  end\n  s.chars.reverse\n  s.each_char\
    \ do |char|\n    if c.include?(char) == false\n      s.delete(char) if s.include?(char)\
    \ == false\n    end\n  end\n  s.chars.reverse\n  s.each_char do |char|\n    if\
    \ c.include?(char) == false\n      s.delete(char) if s.include?(char) == false\n\
    \    end\n  end\n  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char)\
    \ == false\n      s.delete(char) if s.include?(char) == false\n    end\n  end\n\
    \  s.chars.reverse\n  s.each_char do |char|\n    if c.include?(char) == false\n\
    \      s.delete(char) if s.include?(char) == false\n    end\n  end\n  s.chars.reverse\n\
    \  s.each_char do |", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ if char == c\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  return s,s.chars == c\nend", "  result = ''\n  for i in s\n    if i == c\n\
    \      result << i\n    else\n      result << i\n      result << c\n      result\
    \ << i\n    end\n  end\n  result << c\n  result << s\n  result << c\n  result\
    \ << s\n  result << c\n  result << s\n  result << c\n  result << s\n  result <<\
    \ c\n  result << s\n  result << c\n  result << s\n  result << c\n  result << s\n\
    \  result << c\n  result << s\n  result << c\n  result << s\n  result << c\n \
    \ result << s\n  result << c\n  result << s\n  result << c\n  result << s\n  result\
    \ << c\n  result << s\n  result << c\n  result << s\n  result << c\n  result <<\
    \ s\n  result << c\n  result << s\n  result << c\n  result << s\n  result << c\n\
    \  result << s\n  result << c\n  result << s\n  result << c\n  result << s\n \
    \ result << c\n  result << s\n  result << c\n  result << s\n  result << c\n  result\
    \ << s\n  result << c\n  result << s\n  result << c\n  result << s\n  result <<\
    \ c\n  result << s\n  result << c\n  result << s\n  result << c\n  result << s\n\
    \  result << c\n  result << s\n  result << c\n  result << s\n  result << c\n \
    \ result << s\n  result << c\n  result << s\n  result << c\n  result << s\n  result\
    \ << c\n  result << s\n  result << c\n  result << s\n  result << c\n  result <<\
    \ s\n  result << c\n  result << s\n  result << c\n  result << s\n  result << c\n\
    \  result << s\n  result << c\n  result << s\n  result << c\n  result << s\n \
    \ result << c\n  result << s\n  result << c\n  result << s\n  result << c\n  result\
    \ << s\n  result << c\n  result << s\n  result << c\n  result << s\n  result <<\
    \ c\n  result << s\n  result << c", "  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) \n    end\n  end\n  \n  if s == s.reverse\n    return\
    \ s, true\n  else\n    return s, false\n  end\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      return (s,true)\n    end\n\
    \  end\n  return (s,false)\nend", "  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |char|\n    if char == c\n      return (s,false)\n    end\n  end\n  return\
    \ (s,true)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if\
    \ char == c\n      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s\
    \ = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if\
    \ char == c\n      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s\
    \ = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if\
    \ char == c\n      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s\
    \ = s.reverse\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s = s.reverse\n  \n", "  s.chars.each do |char|\n  \
    \  if char == c\n      s.delete(char) if s.chars.size == 0\n    end\n  end\n \
    \ s.chars.size == 0 ? true : false\nend", "  s.chars.each do |char|\n    if char\
    \ == c\n      s.delete(char) \n    end\n  end\n  \n  if s == s.reverse\n    return\
    \ s,true\n  else\n    return s,false\n  end\nend", "  s.chars.each do |i|\n  \
    \  if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|\n\
    \    if s.include?(i)\n      s.delete(i)\n    end\n  end\n  s.chars.each do |i|",
  "  result = ''\n  i = 0\n  while i < s.length\n    char = s[i]\n    if char == c\n\
    \      result << char\n      i += 1\n      while i < s.length\n        char =\
    \ s[i]\n        if char != c\n          result << char\n          i += 1\n   \
    \     end\n      end\n    end\n  end\n  return (result,true)\nend", "  s.chars.each\
    \ do |char|\n    next if char == c\n    next if s.chars.include?(char) == false\n\
    \    chars.delete(char)\n  end\n  s.chars.size == 0 ? true : false\nend", "  s\
    \ = s.chars.reverse\n  s.delete_if { |x| x != c }\n  s.reverse!\n  s.chars.each\
    \ { |x| puts x }\n  puts s\n  puts s.chars.reverse.chars.all? { |x| x == c }\n\
    \  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.all? { |x| x == c }\n  puts s.chars.reverse.chars.all?\
    \ { |x| x == c }\n  puts s.chars.reverse.chars.", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if s.chars.size == 0\n    else\n     \
    \ s.delete(char) if s.chars.size > 0\n    end\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |char|\n    if char == c\n      return (char,true)\n    end\n  end\n  return\
    \ (char,false)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n      break # stop looping\n    end\n  end\n  \n  s = s.chars.join\n\
    \  \n  if s == s[0...s.length-1]\n    return s, true\n  else\n    return s, false\n\
    \  end\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n \
    \     s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each do |char|\n\
    \    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|", "  s.chars.each do |char|\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c\n    next if char == c\n    next if char == c\n    next if char == c\n\
    \    next if char == c\n    next if char == c\n    next if char == c\n    next\
    \ if char == c\n    next if char == c\n    next if char == c\n    next if char\
    \ == c", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result << s[0...s.length]\n\
    \  result.reverse!\n  result\nend", "  result = ''\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n      i += 1\n      while i <\
    \ s.length\n        if s[i] == c\n          result = result + s[i]\n         \
    \ i += 1\n        else\n          break\n      i += 1\n    else\n      break\n\
    \  end\n  return (result,true)\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result.reverse!\n  result\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  return (result,true)\nend", "  result = ''\n  for i in s\n    if i ==\
    \ c\n      result << i\n    else\n      result << i\n      result << c\n     \
    \ result << i\n  end\n  return (result,s.chars.all? {|i| i == c})\nend", "  result\
    \ = \"\"\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n  \
    \  else\n      result << s[i]\n    end\n  end\n  result << s[s.length..-1]\n \
    \ return (result,true)\nend", "  result = ''\n  for i in s\n    if i == c\n  \
    \    result << i\n    else\n      result << i\n      result << c\n  result <<\
    \ c\n  return result,s.chars.sort.reverse == result\nend", "  result = ''\n  s.each_char\
    \ do |char|\n    if char == c\n      result << char\n    else\n      result <<\
    \ char\n    end\n  end\n  result = result.reverse\n  result = result.each_char.map\
    \ { |char| char == c ? char : char }.join\n  result = result.reverse\n  result\
    \ = result.each_char.map { |char| char == c ? char : char }.join\n  return (result,true)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete\
    \ char\n      break # stop looping\n    end\n  end\n  s.chars.reverse!\n  s.chars.join\n\
    end", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ << s[i]\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n\
    \  result << s[s.length]\n  result == s[0...s.length]\nend", "  s.chars.each do\
    \ |char|\n    next if char == c\n    next if char == c[-1,1]\n    next if char\
    \ == c[-2,2]\n    next if char == c[-3,3]\n    next if char == c[-4,4]\n    next\
    \ if char == c[-5,5]\n    next if char == c[-6,6]\n    next if char == c[-7,7]\n\
    \    next if char == c[-8,8]\n    next if char == c[-9,9]\n    next if char ==\
    \ c[-10,10]\n    next if char == c[-11,11]\n    next if char == c[-12,12]\n  \
    \  next if char == c[-13,13]\n    next if char == c[-14,14]\n    next if char\
    \ == c[-15,15]\n    next if char == c[-16,16]\n    next if char == c[-17,17]\n\
    \    next if char == c[-18,18]\n    next if char == c[-19,19]\n    next if char\
    \ == c[-20,20]\n    next if char == c[-21,21]\n    next if char == c[-22,22]\n\
    \    next if char == c[-23,23]\n    next if char == c[-24,24]\n    next if char\
    \ == c[-25,25]\n    next if char == c[-26,26]\n    next if char == c[-27,27]\n\
    \    next if char == c[-28,28]\n    next if char == c[-29,29]\n    next if char\
    \ == c[-30,30]\n    next if char == c[-31,31]\n    next if char == c[-32,32]\n\
    \    next if char == c[-33,33]\n    next if char == c[-34,34]\n    next if char\
    \ == c[-35,35]\n    next if char == c[-36,36]\n    next if char == c[-37,37]\n\
    \    next if char == c[-38,38]\n    next if char == c[-39,39]\n    next if char\
    \ == c[-40,40]\n    next if char == c[-41,41]\n    next if char == c[-42,42]\n\
    \    next if char == c[-43,43]\n    next if char == c[-44,44]\n    next if char\
    \ == c[-45,45]\n    next if char", "  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) if char == c\n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ if char == c\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.", "  result = ''\n  i = 0\n  while i\
    \ < s.length\n    if s[i] == c\n      result << s[i]\n      i += 1\n      while\
    \ i < s.length\n        if s[i] == c\n          result << s[i]\n          i +=\
    \ 1\n          break\n        end\n      end\n      result << c\n      i += 1\n\
    \    else\n      result << s[i]\n      i += 1\n    end\n  end\n  return (result,true)\n\
    end", "  s.reverse!\n  s.delete(c)\n  s.reverse!\n  return s,s.eql?(s.reverse)\n\
    end\n</cell>\n<code language=julia-1.0>", "  s = s.chars.to_a\n  c = c.chars.to_a\n\
    \  result = []\n  i = 0\n  while i < s.length\n    if s[i] == c[i]\n      i +=\
    \ 1\n      continue\n    result << s[i]\n    i += 1\n  end\n  result.reverse!\n\
    \  result\nend", "  result = ''\n  s.each_char do |char|\n    if char == c\n \
    \     result << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i] == c\n\
    \      result += s[i]\n    else\n      result += s[i]\n      break\n  result ==\
    \ s[0...s.length]\nend", "  result = \"\"\n  for i in 0...s.length\n    if s[i]\
    \ == c\n      result = result + s[i]\n    else\n      result = result + s[i]\n\
    \  end\n  return (result,true)\nend", "  result = ''\n  for i in s\n    if i ==\
    \ c\n      result << i\n    else\n      result << i\n      result << c\n  result\
    \ << c\n  return result\nend", "  result = ''\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result << s[i]\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  return (result,true)\nend", "  result = ''\n  for\
    \ i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  return (result,true)\nend", "  s.chars.each do |char|\n\
    \    next if char == c\n    s.delete(char) if char == c\n  end\n  s.chars.reverse.join\
    \ == s\nend", "  result = ''\n  for i in s\n    if i == c\n      result << i\n\
    \    else\n      result << i\n      break\n  result << s\n  result << s\n  result\
    \ << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result <<\
    \ s\n  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n\
    \  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n \
    \ result << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result\
    \ << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result <<\
    \ s\n  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n\
    \  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n \
    \ result << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result\
    \ << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result <<\
    \ s\n  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n\
    \  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n \
    \ result << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result\
    \ << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result <<\
    \ s\n  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n\
    \  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n \
    \ result << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result\
    \ << s\n  result << s\n  result << s\n  result << s\n  result << s\n  result <<\
    \ s\n  result << s\n  result << s\n  result << s\n  result << s\n  result << s\n",
  "  s.reverse!\n  s.delete(c)\n  s.reverse!\n  return s,s.eql?(s)\nend", "  result\
    \ = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n\
    \      i += 1\n      while i < s.length\n        if s[i] != c\n          result\
    \ << s[i]\n          i += 1\n        end\n      end\n      result << c\n     \
    \ i += 1\n    end\n  end\n  return (result,(result == result.reverse))\nend",
  "  result = ''\n  s.each_char do |char|\n    if char == c\n      result << char\n\
    \    else\n      result << char\n    end\n  end\n  result == s ? \"palindrome\"\
    \ : \"not palindrome\"\nend", "  s.chars.each do |char|\n    next if char == c\n\
    \    s.delete(char) if char == c\n  end\n  s.chars.reverse!\n  s.chars.join\n\
    end", "  s = s.chars.reverse\n  c = c.chars.reverse\n  s.each_char do |char|\n\
    \    next if char == c.first\n    break if char == c.last\n    char == c.first\
    \ ? s.delete(char) : s.delete(char)\n  end\n  s.size == 0 ? true : false\nend",
  "  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n\
    \  \n  s.chars.each do |char|\n    if char != c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s.chars.reverse!\n  \n  s.chars.each do |char|\n    if char != c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n  \n  s.chars.each\
    \ do |char|\n    if char != c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  s.chars.each do |char|\n    if char != c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s.chars.reverse!\n  \n  s.chars.each do |char|\n    if char != c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n  \n  s.chars.each\
    \ do |char|\n    if char != c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  s.chars.each do |char|\n    if char != c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s.chars.reverse!\n  \n  s.chars.each do |char|\n    if char != c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n  \n  s.chars.each\
    \ do |char|\n    if char != c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  s.chars.each do |char|\n    if char != c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s.chars.reverse!\n  \n  s.chars.each do |char|\n    if char != c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n  \n  s.chars.each\
    \ do |char|\n    if char != c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  s.chars.each do |char|\n    if char != c\n      s.delete(char) \n    end\n\
    \  end\n  \n  s.chars.reverse!\n  \n  s.chars.each do |char|\n    if char != c\n\
    \      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n      break\
    \ # stop looping\n    end\n  end\n  \n  if s == c\n    return s, true\n  else\n\
    \    return s, false\n  end\nend", "  result = ''\n  for i in 0...s.length\n \
    \   if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result << s[s.length..-1]\n  return result,(result == s)\nend", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) if s.chars.size == 0\n   \
    \ end\n  end\n  s.chars.size == 0 ? true : false\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.", "  s.chars.each do |char|\n    char == c ? s.delete(char) : nil\n  end\n\
    \  s.chars.reverse.each_char.each_with_index do |char,i|\n    char == c ? s.delete(i)\
    \ : nil\n  end\n  s.chars.reverse.each_char.each_with_index do |char,i|\n    char\
    \ == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_with_index\
    \ do |char,i|\n    char == c ? s.delete(i) : nil\n  end\n  s.chars.reverse.each_char.each_",
  "  s.chars.each do |char|\n    next if char == c\n    s.slice!(0...char.length)\n\
    \  end\n  s.reverse!\n  s == c ? [s, true] : [s, false]\nend", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s.chars.reverse!\n\
    \  \n  if s == s.reverse\n    return s,true\n  else\n    return s,false\n  end\n\
    end", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ = result + s[i]\n      s.delete(i)\n    end\n  end\n  return (result,s.size\
    \ == 0)\nend", "  result = ''\n  for i in 0..s.length-1\n    if s[i] == c\n  \
    \    result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ << s[s.length-1]\n  return (result,true)\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n      result.delete(i)\n    end\n\
    \  end\n  return (result,true)\nend", "  result = ''\n  for i in s\n    if i ==\
    \ c\n      result << i\n    else\n      result << i\n      result << c\n  return\
    \ result,s.chars.reverse == result\nend", "  result = ''\n  for i in 0...s.length\n\
    \    if s[i] == c\n      result << s[i]\n    else\n      result << s[i]\n    end\n\
    \  end\n  result == s\nend", "  s = s.chars.to_a\n  c = c.chars.to_a\n  s.delete_if\
    \ { |x| c.include?(x) }\n  s.reverse!\n  s.join\nend", "  result = ''\n  for i\
    \ in 0...s.length\n    if s[i] == c\n      result << s[i]\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  result << c\n  return result,true\n\
    end", "  result = ''\n  for i in 0..s.length-1\n    if s[i] == c\n      result\
    \ << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result << s[s.length-1]\n\
    \  return (result,true)\nend", "  result = ''\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result += s[i]\n      i += 1\n    else\n      result\
    \ += s[i]\n      i += 1\n    end\n  end\n  result.reverse!\n  return (result,true)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n   \
    \ end\n  end\n  \n  s.chars.each do |char|\n    if char != c\n      return (s,false)\n\
    \    end\n  end\n  \n  return (s,true)\nend", "  s.chars.each do |char|\n    char\
    \ == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.size == 0 ? true :\
    \ false\nend", "  s.reverse!\n  s.delete(c)\n  s.reverse!\n  return s,s.eq?(c)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete\
    \ char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n\
    \      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n \
    \ end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if\
    \ char == c\n      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n \
    \ end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if\
    \ char == c\n      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n \
    \ end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if\
    \ char == c\n      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n \
    \ end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if\
    \ char == c\n      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.reverse.each\
    \ do |char|\n    if char == c\n      s.delete(char) # delete char\n    end\n \
    \ end\n  \n  s.chars.reverse.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n    end\n  end\n  \n  s.chars.reverse.each do |char|\n    if\
    \ char == c\n      s.delete(char) # delete char\n    end\n  end\n  \n  s.chars.",
  "  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      return\
    \ (char,true)\n    end\n  end\n  return (char,false)\nend", "  result = ''\n \
    \ i = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n      i\
    \ += 1\n      while i < s.length\n        if s[i] == c\n          result << s[i]\n\
    \          i += 1\n        end\n      end\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  s = s.chars.to_a\n  c.chars.to_a.each do |char|\n    s[s.index\
    \ {|x| x == char}] = char\n  end\n  s.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.chars.to_a == s.join.chars.to_a.reverse!\n\
    \  s.join.chars.to_a == s.join.chars.to_a.reverse!\n  s.join.char", "  result\
    \ = ''\n  i = 0\n  while i < s.length\n    result += s[i]\n    i += 1\n  end\n\
    \  i = 0\n  while i < s.length\n    if s[i] == c\n      result << c\n      i +=\
    \ 1\n    else\n      result << s[i]\n      i += 1\n    end\n  end\n  result.reverse!\n\
    \  return (result,true)\nend", "  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n  s.reverse!\n  s.delete(c)\n\
    \  s.reverse!\n  s.delete(c)\n  s.", "  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) if char == c\n    end\n  end\n  s.chars.reverse!\n \
    \ s.chars.each do |char|\n    if char == c\n      s.delete(char) if char == c\n\
    \    end\n  end\n  s.chars.reverse!\n  return s, s.chars == c\nend", "  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) if s.chars.size == 0\n   \
    \ end\n  end\n  s.chars.size == 0 ? true : false\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) # delete char\n      break # exit loop\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) # delete char\n      break # exit loop\n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n      break # exit loop\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete char\n\
    \      break # exit loop\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do\
    \ |char|\n    if char == c\n      s.delete(char) # delete char\n      break #\
    \ exit loop\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n  \
    \  if char == c\n      s.delete(char) # delete char\n      break # exit loop\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) # delete char\n      break # exit loop\n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n      break # exit loop\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |char|\n    if char == c\n      s.delete(char) # delete char\n\
    \      break # exit loop\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do\
    \ |char|\n    if char == c\n      s.delete(char) # delete char\n      break #\
    \ exit loop\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n  \
    \  if char == c\n      s.delete(char) # delete char\n      break # exit loop\n\
    \    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) # delete char\n      break # exit loop\n    end\n  end\n\
    \  s.chars.reverse!\n  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ # delete char\n      break # exit loop\n    end\n  end\n  s.chars.reverse!\n\
    \  s.chars.each ", "  result = ''\n  for i in s\n    if i == c\n      result <<\
    \ i\n    else\n      result << i\n      result << c\n  result << c\n  return result\n\
    end", "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result\
    \ << s[i]\n      i += 1\n      while i < s.length\n        if s[i] != c\n    \
    \      result << s[i]\n          i += 1\n        else\n          break\n     \
    \ end\n    else\n      result << s[i]\n      i += 1\n    end\n  end\n  return\
    \ [result,true]\nend", "  result = ''\n  for i in 0..s.length-1\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return\
    \ result,s.eql?(result)\nend", "  result = ''\n  for i in s\n    if i == c\n \
    \     result << i\n    else\n      result << i\n      result << c\n  result <<\
    \ c\n  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n\
    \  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n \
    \ result << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result\
    \ << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result <<\
    \ c\n  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n\
    \  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n \
    \ result << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result\
    \ << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result <<\
    \ c\n  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n\
    \  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n \
    \ result << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result\
    \ << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result <<\
    \ c\n  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n\
    \  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n \
    \ result << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result\
    \ << c\n  result << c\n  result << c\n  result << c\n  result << c\n  result <<\
    \ c\n  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n\
    \  result << c\n  result << c\n  result << c\n  result << c\n  result << c\n \
    \ result << c\n  result << ", "  result = ''\n  for i in 0...s.length\n    if\
    \ s[i] == c\n      result = result + s[i]\n    else\n      result = result + s[i]\n\
    \    end\n  end\n  result = result.reverse\n  if result == s\n    return result,\
    \ true\n  else\n    return result, false\n  end\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) if s.chars.size == 0\n    end\n  end\n\
    \  s.chars.size == 0 ? true : false\nend", "  result = ''\n  i = 0\n  while i\
    \ < s.length\n    if s[i] == c\n      result = result + s[i]\n      i += 1\n \
    \   else\n      result = result + s[i]\n      i += 1\n    end\n  end\n  if result\
    \ == s\n    return (result, true)\n  else\n    return (result, false)\n  end\n\
    end", "  s.chars.each do |char|\n    char == c.chars.first ? s.chars.delete(char)\
    \ : nil\n  end\n  s.chars.size == 0 ? true : false\nend", "  result = \"\"\n \
    \ for i in 0...s.length\n    if s[i] == c\n      result = result + s[i]\n    else\n\
    \      result = result + s[i]\n      break\n  end\n  if result == s\n    return\
    \ (\"True\",True)\n  else\n    return (\"False\",False)\n  end\nend", "  s.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.size\
    \ == 0 ? true : false\nend", "  result = \"\"\n  i = 0\n  while i < s.length\n\
    \    if s[i] == c\n      result = result + s[i]\n      i += 1\n    else\n    \
    \  i += 1\n  end\n  return (result,(result == s[0...i-1]))\nend", "  result =\
    \ ''\n  for i in 0..s.length-1\n    if s[i] == c\n      result += s[i]\n    else\n\
    \      result += c\n  end\n  return (result,true)\nend", "  result = ''\n  i =\
    \ 0\n  while i < s.length\n    char = s[i]\n    if char == c\n      result = result\
    \ + char\n      i += 1\n      while i < s.length\n        char = s[i]\n      \
    \  if char != c\n          result = result + char\n          i += 1\n        end\n\
    \      end\n    end\n  end\n  return (result,true)\nend", "  s.chars.each do |x|\n\
    \    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n\
    \  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n\
    \    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n\
    \  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n\
    \    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n\
    \  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n\
    \    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n\
    \  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n\
    \  s.chars.each do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |x|\n    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n\
    \    x.delete(c)\n  end\n  s.chars.reverse!\n  s.chars.each do |x|\n    x.delete(c)\n\
    \  end\n  s.chars.reverse!\n  s.chars.each do |", "  s.chars.each do |char|\n\
    \    next if char == c\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n\
    \    next if s.chars.include?(char)\n    next if s.chars.include?(char)\n    next\
    \ if s.chars.include?(char)\n    ", "  s.reverse!\n  s.delete(c)\n  s.reverse!\n\
    \  return s,s.empty?\nend", "  s.chars.each do |char|\n    next if char == c\n\
    \    next if char == s[0...-1]\n    next if char == s[0...-2]\n    next if char\
    \ == s[0...-3]\n    next if char == s[0...-4]\n    next if char == s[0...-5]\n\
    \    next if char == s[0...-6]\n    next if char == s[0...-7]\n    next if char\
    \ == s[0...-8]\n    next if char == s[0...-9]\n    next if char == s[0...-10]\n\
    \    next if char == s[0...-11]\n    next if char == s[0...-12]\n    next if char\
    \ == s[0...-13]\n    next if char == s[0...-14]\n    next if char == s[0...-15]\n\
    \    next if char == s[0...-16]\n    next if char == s[0...-17]\n    next if char\
    \ == s[0...-18]\n    next if char == s[0...-19]\n    next if char == s[0...-20]\n\
    \    next if char == s[0...-21]\n    next if char == s[0...-22]\n    next if char\
    \ == s[0...-23]\n    next if char == s[0...-24]\n    next if char == s[0...-25]\n\
    \    next if char == s[0...-26]\n    next if char == s[0...-27]\n    next if char\
    \ == s[0...-28]\n    next if char == s[0...-29]\n    next if char == s[0...-30]\n\
    \    next if char == s[0...-31]\n    next if char == s[0...-32]\n    next if char\
    \ == s[0...-33]\n    next if char == s[0...-34]\n    next if char == s[0...-35]\n\
    \    next if char == s[0...-36]\n    next if char == s[0...-37]\n    next if char\
    \ == s[0...-38]\n    next if char == s[0...-39]\n    next if char == s[0...-40]\n\
    \    next if char == s[0...-41]\n    next if char == s[0...-42]\n    next if char\
    \ == s[0...-43]\n    next if char == s[0...", "  s.chars.each do |char|\n    if\
    \ char == c\n      s.delete(char) if s.chars.size == 0\n    end\n  end\n  s.chars.size\
    \ == 0\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n    \
    \  result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n \
    \     result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return\
    \ (result,true)\nend", "  result = ''\n  for i in 0...s.length\n    if s[i] ==\
    \ c\n      result << s[i]\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ == s\nend", "  s.chars.each do |char|\n    s.delete(char) if s.include?(char)\
    \ == c\n  end\n  s.chars.reverse.each do |char|\n    s.delete(char) if s.include?(char)\
    \ == c\n  end\n  return s,s.chars.reverse.empty?\nend", "  result = ''\n  i =\
    \ 0\n  while i < s.length\n    if s[i] == c\n      result += s[i]\n      i +=\
    \ 1\n      while i < s.length\n        if s[i] == c\n          result += s[i]\n\
    \          i += 1\n          break\n        end\n      end\n    end\n  end\n \
    \ return (result,true)\nend", "  s.chars.each do |char|\n    char == c ? s.delete(char)\
    \ : nil\n  end\n  s.chars.reverse.chars.each do |char|\n    char == c ? s.delete(char)\
    \ : nil\n  end\n  s.chars.reverse.chars.reverse.chars.each do |char|\n    char\
    \ == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |", "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result\
    \ << s[i]\n    else\n      result << s[i]\n    end\n  end\n  return (result,true)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) if char\
    \ == c\n    end\n  end\n  s.chars.reverse!\n  s.chars.join\n  s.chars == s.reverse\n\
    end", "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n    else\n\
    \      result << i\n      result << c\n  end\n  return (result,true)\nend", " \
    \ s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  return s==s.reverse\n\
    end", "  s = s.chars.to_a\n  c.chars.to_a\n  s.each_with_index do |x, i|\n   \
    \ x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index\
    \ do |x, i|\n    x.delete\n  end\n  s.each_with_index do |x, i|\n    x.delete\n\
    \  end\n  s.each_with_index do |x, i|\n    x.delete\n  end\n  s.each_with_index",
  "  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\
    \")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")\n  s.reverse!\n\
    \  s.gsub!(c,\"\")\n  s.reverse!\n  s.gsub!(c,\"\")", "  result = ''\n  for i\
    \ in 0...s.length\n    if s[i] == c\n      result += s[i]\n    else\n      result\
    \ += s[i]\n      break\n  result == s[0...s.length]\nend", "  result = ''\n  i\
    \ = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n      i +=\
    \ 1\n      while i < s.length\n        if s[i] == c\n          result << s[i]\n\
    \          i += 1\n        else\n          break\n      end\n    else\n      break\n\
    \    end\n  end\n  result << s[s.length..-1]\n  return result,s[i] == c\nend",
  "  s.chars.each do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n\
    \  s.chars.reverse.chars.each do |char|\n    char == c.chars.first ? s.delete(char)\
    \ : nil\n  end\n  s.chars.reverse.chars.size == 0 ? true : false\nend", "  result\
    \ = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result << s[i]\n\
    \      i += 1\n      while i < s.length\n        if s[i] == c\n          result\
    \ << s[i]\n          i += 1\n        else\n          break\n      end\n    else\n\
    \      break\n    end\n  end\n  return [result, true]\nend", "  s.chars.each do\
    \ |char|\n    if char == c\n      s.delete(char) \n    end\n  end\n  \n  s = s.reverse\n\
    \  \n  if s == s.chars.join\n    return s,true\n  else\n    return s,false\n \
    \ end\nend", "  s.chars.each do |char|\n    next if char == c\n    next if char\
    \ == s[s.length-1]\n    next if char == s[s.length-2]\n    next if char == s[s.length-3]\n\
    \    next if char == s[s.length-4]\n    next if char == s[s.length-5]\n    next\
    \ if char == s[s.length-6]\n    next if char == s[s.length-7]\n    next if char\
    \ == s[s.length-8]\n    next if char == s[s.length-9]\n    next if char == s[s.length-10]\n\
    \    next if char == s[s.length-11]\n    next if char == s[s.length-12]\n    next\
    \ if char == s[s.length-13]\n    next if char == s[s.length-14]\n    next if char\
    \ == s[s.length-15]\n    next if char == s[s.length-16]\n    next if char == s[s.length-17]\n\
    \    next if char == s[s.length-18]\n    next if char == s[s.length-19]\n    next\
    \ if char == s[s.length-20]\n    next if char == s[s.length-21]\n    next if char\
    \ == s[s.length-22]\n    next if char == s[s.length-23]\n    next if char == s[s.length-24]\n\
    \    next if char == s[s.length-25]\n    next if char == s[s.length-26]\n    next\
    \ if char == s[s.length-27]\n    next if char == s[s.length-28]\n    next if char\
    \ == s[s.length-29]\n    next if char == s[s.length-30]\n    next if char == s[s.length-31]\n\
    \    next if char == s[s.length-32]\n    next if char == s[s.length-33]\n    next\
    \ if char == s[s.length-34]\n    next if char == s[s.length-35]\n    next if char\
    \ == s[s.length-36]\n    next if char == s[s.length-37]\n    next if char == s[s.length-38]\n\
    \    next if char == s[s.length-39]\n    next if char == s[s.length-40]\n    next\
    \ if char == s[s.length-41]\n    next if char == s[s.length-42]\n    next if char\
    \ == s[s.length-43]\n    next if char == s[s.length-44]\n    next if char == s[s.length-45]\n\
    \    next if char == s[s.length-46]\n    next if char == s[s.length-47]\n    next\
    \ if char == s[s.length", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n      break\n    end\n  end\n  \n  s.chars.each do |char|\n    if char ==\
    \ c\n      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each do\
    \ |char|\n    if char == c\n      s.delete(char) \n      break\n    end\n  end\n\
    \  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n     \
    \ break\n    end\n  end\n  \n  s.chars.each do |char|\n    if char == c\n    \
    \  s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n      break\n    end\n \
    \ end\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n\
    \      break\n    end\n  end\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n      break\n    end\n \
    \ end\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n\
    \      break\n    end\n  end\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each\
    \ do |char|\n    if char == c\n      s.delete(char) \n      break\n    end\n \
    \ end\n  \n  s.chars.each do |char|\n    if char == c\n      s.delete(char) \n\
    \      break\n    end\n  end\n  \n  s.chars.each do |char|\n    if char == c\n\
    \      s.delete(char) \n      break\n    end\n  end\n  \n  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) ", "  result = ''\n  i = 0\n  while i\
    \ < s.length\n    if s[i] == c\n      result += s[i]\n      i += 1\n      while\
    \ i < s.length\n        if s[i] == c\n          result += s[i]\n          i +=\
    \ 1\n        else\n          break\n      i += 1\n    else\n      break\n  return\
    \ (result,(result == s[0..length]))\nend", "  s = s.chars.to_a\n  c = c.chars.to_a\n\
    \  s.each do |i|\n    i = i.to_s\n    i = i.chars.to_a\n    i = i.select { |j|\
    \ j != i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j !=\
    \ i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n\
    \    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i\
    \ = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n\
    \    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n    i\
    \ = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n\
    \    i = i.select { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n    i\
    \ = i.select { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select\
    \ { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j|\
    \ j != i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j !=\
    \ i }\n    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n\
    \    i = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i\
    \ = i.join\n    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n\
    \    i = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n    i\
    \ = i.chars.to_a\n    i = i.select { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n\
    \    i = i.select { |j| j != i }\n    i = i.join\n    i = i.chars.to_a\n    i\
    \ = i.select { |j| ", "  s.reverse!\n  s.delete_if { |x| x == c }\n  s.reverse!\n\
    \  s.size == s.length ? [s,true] : [s,false]\nend", "  result = ''\n  for i in\
    \ 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n      result\
    \ << s[i]\n    end\n  end\n  return (result,true)\nend", "  s.chars.each do |char|\n\
    \    if char == c\n      s.delete(char) \n    end\n  end\n  \n  if s == c\n  \
    \  return s, true\n  else\n    return s, false\n  end\nend", "  s = s.chars.to_a\n\
    \  c.chars.to_a\n  s.each do |i|\n    index = s.index(i, 0)\n    s[index] = nil\n\
    \  end\n  s.join\n  s.chars.to_a == s.reverse\nend", "  result = \"\"\n  for i\
    \ in s\n    if i == c\n      result << i\n    else\n      result << i\n      result\
    \ << c\n  end\n  result << c\n  return (result,true)\nend", "  s.chars.each do\
    \ |char|\n    next if char == c\n    chars.delete(char)\n  end\n  s.chars.size\
    \ == 0\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  s.chars.reverse!\n  \n  if s == s.reverse\n    return\
    \ s,true\n  else\n    return s,false\n  end\nend", "  s.chars.each do |char|\n\
    \    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.size == 0\
    \ ? true : false\nend", "  result = ''\n  i = 0\n  while i < s.length\n    if\
    \ s[i] == c\n      result << s[i]\n      i += 1\n      while i < s.length\n  \
    \      if s[i] != s[i]\n          result << s[i]\n          i += 1\n        end\n\
    \      end\n    end\n    i += 1\n  end\n  return (result,true)\nend", "  s = s.chars.to_a\n\
    \  c = c.chars.to_a\n  s.each_with_index do |char,i|\n    if c.include?(char)\
    \ == false\n      s.delete_at(i)\n    end\n  end\n  s.reverse!\n  s.join\nend",
  "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result <<\
    \ s[i]\n      i += 1\n    else\n      result << s[i]\n    end\n  end\n  result\
    \ << s[i]\n  return (result,(result == s[0...i-1]))\nend", "  s.chars.each do\
    \ |char|\n    next if char == c\n    next if char == s[0...-1]\n    next if char\
    \ == s[0...-2]\n    next if char == s[0...-3]\n    next if char == s[0...-4]\n\
    \    next if char == s[0...-5]\n    next if char == s[0...-6]\n    next if char\
    \ == s[0...-7]\n    next if char == s[0...-8]\n    next if char == s[0...-9]\n\
    \    next if char == s[0...-10]\n    next if char == s[0...-11]\n    next if char\
    \ == s[0...-12]\n    next if char == s[0...-13]\n    next if char == s[0...-14]\n\
    \    next if char == s[0...-15]\n    next if char == s[0...-16]\n    next if char\
    \ == s[0...-17]\n    next if char == s[0...-18]\n    next if char == s[0...-19]\n\
    \    next if char == s[0...-20]\n    next if char == s[0...-21]\n    next if char\
    \ == s[0...-22]\n    next if char == s[0...-23]\n    next if char == s[0...-24]\n\
    \    next if char == s[0...-25]\n    next if char == s[0...-26]\n    next if char\
    \ == s[0...-27]\n    next if char == s[0...-28]\n    next if char == s[0...-29]\n\
    \    next if char == s[0...-30]\n    next if char == s[0...-31]\n    next if char\
    \ == s[0...-32]\n    next if char == s[0...-33]\n    next if char == s[0...-34]\n\
    \    next if char == s[0...-35]\n    next if char == s[0...-36]\n    next if char\
    \ == s[0...-37]\n    next if char == s[0...-38]\n    next if char == s[0...-39]\n\
    \    next if char == s[0...-40]\n    next if char == s[0...-41]\n    next if char\
    \ == s[0...-42]\n    next if char == s[0...-43]\n    next if char == s[0...",
  "  result = ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n\
    \    else\n      result << s[i]\n    end\n  end\n  result << c\n  return (result,true)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) # Delete\
    \ the char\n      break # Break out of the loop\n    end\n  end\n  \n  if s ==\
    \ c\n    return s, true\n  else\n    return s, false\n  end\nend", "  result =\
    \ ''\n  for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n\
    \      result << s[i]\n    end\n  end\n  result == s\nend", "  result = ''\n \
    \ for i in 0...s.length\n    if s[i] == c\n      result << s[i]\n    else\n  \
    \    result << s[i]\n    end\n  end\n  result << s[0...s.length]\n  return (result,true)\n\
    end", "  s.chars.each do |char|\n    if char == c\n      s.delete(char) if s.chars.size\
    \ == 0\n    end\n  end\n  s.chars.reverse!\n  s.chars.each do |char|\n    if char\
    \ == c\n      return (char,true)\n    end\n  end\n  return (char,false)\nend",
  "  s.chars.each do |char|\n    next if char == c\n    chars.delete(char)\n  end\n\
    \  s.chars.size == 0 and s == s.reverse\nend", "  result = \"\"\n  i = 0\n  while\
    \ i < s.length\n    if s[i] == c\n      result << s[i]\n      i += 1\n      while\
    \ i < s.length\n        if s[i] == c\n          result << s[i]\n          i +=\
    \ 1\n        end\n      end\n    end\n  end\n  result << s[s.length..-1]\n  return\
    \ [result,true]\nend", "  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.reverse!\n  s.delete_if{|x| x == c}\n  s.reverse!\n\
    \  s.delete_if{|x| x == c}\n  s.", "  s.chars.each do |char|\n    char == c.chars.first\
    \ ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.each do |char|\n    char\
    \ == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.reverse.chars.each\
    \ do |char|\n    char == c.chars.first ? s.delete(char) : nil\n  end\n  s.chars.reverse.chars.reverse.chars.reverse.chars.reverse",
  "  result = ''\n  i = 0\n  while i < s.length\n    if s[i] == c\n      result =\
    \ result + s[i]\n      i += 1\n      while i < s.length\n        if s[i] == c\n\
    \          result = result + s[i]\n          i += 1\n        else\n          break\n\
    \      i += 1\n    else\n      break\n  return (result,(result == s[s.length..-1]))\n\
    end", "  s = s.chars.to_a\n  c = c.chars.to_a\n  s.each do |i|\n    i = i.to_s\n\
    \    i = i.chars.to_a\n    i.each do |j|\n      j = j.to_s\n      j = j.chars.to_a\n\
    \      j.each do |k|\n        k = k.to_s\n        k = k.chars.to_a\n        k\
    \ = k.join\n        k = k.chars.to_a\n        k = k.join\n        if s == k\n\
    \          return (s,false)\n        end\n      end\n    end\n  end\n  return\
    \ (s,true)\nend", "  s.chars.each do |char|\n    if char == c\n      s.delete(char)\
    \ \n    end\n  end\n  \n  if s == s.reverse\n    return s,true\n  else\n    return\
    \ s,false\n  end\nend", "  s = s.chars.to_a\n  c.chars.to_a\n  s.delete_if { |x|\
    \ c.include? x }\n  s.reverse!\n  s.join\nend", "  s.chars.each do |i|\n    next\
    \ if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each do |i|\n\
    \    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|\n    next if i == c\n    s.delete(i)\n  end\n  s.chars.reverse!\n  s.chars.each\
    \ do |i|", "  result = \"\"\n  for i in s\n    if i == c\n      result << i\n\
    \    else\n      result << i\n      result << c\n      result << i\n  return result\n\
    end", "  s = s.chars.to_a\n  c = c.chars.to_a\n  s.each_with_index do |char,i|\n\
    \    if c.include?(char)\n      s.delete_at(i)\n      break\n    end\n  end\n\
    \  s.reverse!\n  s.join\nend", "  s.chars.each do |char|\n    if char == c\n \
    \     s.delete(char) if s.chars.size == 0\n    end\n  end\n  s.chars.size == 0\n\
    end", "  result = ''\n  s.each_char do |char|\n    if char == c\n      result\
    \ << char\n    else\n      result << char\n    end\n  end\n  result.reverse!\n\
    \  result\nend", "  s = s.chars.to_a\n  c = c.chars.to_a\n  result = []\n  s.each\
    \ do |i|\n    result << i if c.include?(i)\n  end\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!\n  result.reverse!\n  result.reverse!\n  result.reverse!\n\
    \  result.reverse!"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

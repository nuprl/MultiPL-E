name: HumanEval_65_circular_shift
language: ruby
prompt: "# Circular shift the digits of the integer x, shift the digits right by shift\n\
  # and return the result as a string.\n# If shift > number of digits, return digits\
  \ reversed.\n# >>> circular_shift(12, 1)\n# \"21\"\n# >>> circular_shift(12, 2)\n\
  # \"12\"\ndef circular_shift(x, shift)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_circular_shift\n\
  \    candidate = method(:circular_shift)\n    assert_equal(\"001\", candidate.call(100,\
  \ 2))\n    assert_equal(\"12\", candidate.call(12, 2))\n    assert_equal(\"79\"\
  , candidate.call(97, 8))\n    assert_equal(\"21\", candidate.call(12, 1))\n    assert_equal(\"\
  11\", candidate.call(11, 101))\n  end\nend\n"
completions: ["  digits = x.to_s.reverse\n  digits = digits.slice(shift, digits.length)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse", "  x = x.to_s\n  shift\
    \ = shift % x.length\n  x.slice!(0, shift)\n  x.slice!(-shift)\n  x\nend", " \
    \ digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[0...(digits.length\
    \ - 1)]\n  digits = digits.reverse\n  x.to_s = digits\n  return x\nend", "  digits\
    \ = x.to_s.reverse\n  digits = digits.chars.drop(shift).join\n  digits = digits.reverse\n\
    \  digits = digits.chars.reverse.join\n  return digits\nend", "  digits = x.to_s.reverse\n\
    \  digits[0...shift] = digits[shift...-1]\n  digits.reverse!\n  digits.to_s\n\
    end", "  digits = x.to_s.reverse\n  digits[0, shift] = digits[shift, 0]\n  digits.reverse!\n\
    \  digits.to_s\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n\
    \  digits.each_with_index do |digit, i|\n    digits[i] = digits[i - shift]\n \
    \ end\n  digits.join\nend", "  x = x.to_i\n  shift = shift.to_i\n  return x.to_s(10).reverse.chars.take(shift).join\
    \ + x.to_s(10).reverse.chars.drop(shift)\nend", "  x = x.to_s\n  shift = shift\
    \ % x.length\n  digits = x.reverse.chars.take(shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_i\n\
    \  shift = shift.to_i\n  digits = x.digits.reverse\n  digits[shift..-1] = digits[0..shift]\n\
    \  digits.reverse!\n  x.digits = digits\n  x\nend", "  digits = x.to_s.reverse\n\
    \  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  ", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n  digits.each_with_index\
    \ do |digit, index|\n    digits[index] = digit.chr\n  end\n  digits.join(\"\"\
    )\nend", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit < shift\n    s << digit.modulo(10)\n  end\nend", "  x\
    \ = x.to_s\n  shift = shift.to_s\n  x.reverse!\n  x.slice!(0, shift)\n  x.reverse!\n\
    \  x.to_s\nend", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n  \
    \  s << digit if digit > 0 && digit < shift\n    s << digit.chr\n  end\nend",
  "  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse\n  digits = digits[shift..-1]\n\
    \  digits = digits.reverse\n  digits = digits.digits.reverse\n  digits = digits.reverse.to_s\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!", "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  x.slice!(0, shift)\n\
    \  x.slice!(-shift, shift)\n  x\nend", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit < shift\n    s << digit.modulo(10)\n\
    \  end\nend", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s\
    \ << digit if digit > x.to_s[-shift]\n    s << digit if digit < x.to_s[shift]\n\
    \    s\n  end\nend", "  digits = x.to_s.reverse.to_i\n  digits = digits[0...shift]\n\
    \  digits = digits[1...(digits.length - 1)]\n  return digits.to_s\nend", "  digits\
    \ = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  ", "  x.to_s.split(\"\").reverse.inject(\"\") do |result,\
    \ digit|\n    result << digit if digit > 0 && digit < shift\n    result << digit\
    \ % 10\n    digit /= 10\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n\
    <| a dscore=2 |>\n<code>", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n\
    \    s << digit if digit > 0 && digit <= shift.to_i\n    s << digit % 10\n  end\n\
    end", "  digits = x.to_s.reverse\n  digits = digits.slice(shift, digits.length)\n\
    \  digits.reverse!\n  digits.reverse!\n  return digits\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).join(\"\")\n  digits = digits.chars.reverse\n\
    \  digits.to_s\nend", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n\
    \    s << digit if digit > 0 && digit <= shift.to_i\n    s << digit if digit >\
    \ shift && digit <= (shift.to_i + 1)\n    s << digit if digit > (shift.to_i +\
    \ 1)\n    s\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\n\
    This doesn't work if you pass in negative numbers. For example, `circular_shift(-12,\
    \ 1)` returns `\"-12\"`.\n<|/ c |>\n<| c |>\nI didn't notice that requirement.\
    \ I've updated the answer to account for negative numbers.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).concat(digits.chars.take(shift))\n\
    \  digits.reverse!\n  digits.to_s\nend", "  digits = x.to_s.reverse\n  digits[0...shift]\
    \ = digits[shift]\n  digits.reverse!\n  digits.to_s\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).join(\"\")\n  if shift > digits.length\n\
    \    digits = digits.reverse\n  end\n  return digits\nend", "  x.to_s.split(\"\
    \").reverse.each_with_index.map do |digit, i|\n    digit = digit.to_i(10)\n  \
    \  digit = digit >> shift if shift > 0 && digit > 0\n    digit = digit << shift\
    \ if shift < 0 && digit < 0\n    digit.to_s(10)\n  end.join\nend", "  x.slice!(0,\
    \ shift)\n  x.slice!(-shift, -1)\n  x\nend", "  digits = x.to_s.reverse\n  digits.slice!(0,\
    \ shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  x = x.to_s\n\
    \  shift = shift % x.size\n  x.slice!(0, shift)\n  x.slice!(-shift, x.size)\n\
    \  x\nend", "  digits = x.to_s.reverse\n  digits.reverse!\n  digits.slice!(0,\
    \ shift)\n  digits.reverse!\n  digits.to_s\nend\n</code>\n<|/ a dscore=4 |>\n\
    <| c |>\nI like this solution, but I wonder if it can be made more efficient by\
    \ not reversing the string twice. Maybe by using a stack?\n<|/ c |>\n<| c |>\n\
    I added a version that doesn't reverse the string twice\n<|/ c |>\n<| c |>\nI\
    \ added a version that doesn't reverse the string twice\n<|/ c |>\n<| c |>\nI\
    \ added a version that doesn't reverse the string twice\n<|/ c |>\n<| a dscore=3\
    \ |>\nHere's a solution using recursion:\n<code>", "  x = x.to_s\n  shift = shift\
    \ % x.length\n  digits = x.to_s.reverse\n  digits[0...shift] = digits[shift]\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n",
  "  x.slice!(0, shift)\n  x.reverse!\n  x.slice!(0, shift)\n  x\nend", "  digits\
    \ = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[0...(digits.length\
    \ - 1)]\n  digits.reverse!\n  digits.to_s\nend", "  x = x.to_s\n  shift = shift\
    \ % x.length\n  x.slice!(0, shift)\n  x.slice!(-shift)\n  x\nend", "  x.to_s.split(\"\
    \").reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit <\
    \ shift\n    s << digit\n  end\nend", "  digits = x.to_s.reverse\n  digits[0...shift]\
    \ = digits[shift]\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_s\n\
    \  shift = shift || 0\n  digits = x.reverse.split(//)\n  digits.reverse!\n  digits[shift]\
    \ = digits[shift].join\n  digits.reverse!\n  digits.join\nend", "  x.to_s.split(\"\
    \").reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit <\
    \ shift\n    s << digit\n  end\nend", "  digits = x.to_s.reverse\n  digits.slice!(0,\
    \ shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.to_a.reverse\n  digits = digits.shift(shift)\n  digits.join\n\
    end", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[0...digits.length]\n\
    \  digits.reverse!\n  digits.reverse!\n  return digits\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).reverse\n  digits = digits.chars.reverse\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.reverse.take(shift)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x = x.to_i\n  shift = shift.to_i\n  digits\
    \ = x.to_s(10)\n  digits = digits.reverse\n  digits = digits.chars.reverse\n \
    \ digits = digits.insert(shift, \"\")\n  digits = digits.reverse\n  return digits.to_s\n\
    end", "  digits = x.to_s.reverse\n  digits = digits.slice!(0, shift)\n  digits\
    \ = digits.reverse\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse", "  digits = x.to_s.reverse\n\
    \  digits[0...shift] = digits[shift]\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.", "  digits = x.to_s.reverse\n  digits[0...shift].concat(digits[shift+1..-1].reverse)\n\
    end", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit < shift\n    s << digit\n  end\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).join\n  digits = digits.reverse\n  digits.to_s\n\
    end", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[1...(digits.length\
    \ - 1)]\n  digits = digits.reverse\n  x.to_s = digits\nend", "  digits = x.to_s.reverse.to_i\n\
    \  digits = digits.digits.reverse\n  digits = digits.shift(shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.reverse.chars.take(shift)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s.split(\"\").reverse.each_slice(shift).map(&:join).join(\"\
    \")\nend", "  digits = x.to_s.reverse\n  digits[0..(shift.to_i - shift.to_s)]\
    \ = digits[0..(shift.to_i - shift.to_s)].to_a.reverse\n  digits.join\nend\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit <= shift.to_i\n    s <<\
    \ digit if digit > shift && digit <= (shift.to_i + 1)\n    s << digit if digit\
    \ > (shift.to_i + 1)\n    s\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<| a |>\n<code>", "  x = x.to_s\n  shift = shift.to_i\n  len = x.length\n\
    \  digits = x.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).join\n  digits = digits.reverse\n  digits\
    \ = digits.chars.reverse.join\n  digits\nend", "  digits = x.to_s.reverse\n  digits\
    \ = digits.chars.drop(shift).concat(digits.chars.take(shift))\n  digits.reverse!\n\
    \  digits.to_s\nend", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.reverse\n\
    \  digits[0...shift].concat(digits[shift+1..-1]).reverse\nend", "  x = x.to_s\n\
    \  shift = shift % x.length\n  digits = x.chars.reverse.take(shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s.reverse.chars.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).reverse\n  digits = digits.join\n  digits.reverse!\n\
    \  digits\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).join\n\
    \  digits = digits.reverse\n  digits = digits.chars.reverse.join\n  return digits\n\
    end", "  digits = x.to_s.reverse\n  digits = digits.slice(shift, digits.length)\n\
    \  digits = digits.reverse\n  x.to_s = digits\n  x\nend", "  x.to_s.split(\"\"\
    ).reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit < shift\n\
    \    s << digit\n  end\nend", "  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse\n\
    \  digits = digits.shift(shift)\n  digits = digits.reverse.to_s\n  return digits\n\
    end", "  digits = x.to_s.reverse\n  digits[0...shift].concat(digits[shift+1..-1].reverse)\n\
    end", "  x.to_s.split(\"\").reverse.inject(\"\") do |result, digit|\n    result\
    \ << digit if digit > x.to_s[shift..-1]\n    result << digit if digit < x.to_s[0..shift]\n\
    \    result\n  end\nend", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n\
    \  digits = digits[0...(digits.length - 1)]\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit <= shift && digit % 2\
    \ == 1\n    s << digit if digit > shift && digit <= (2 * shift) && digit % 2 ==\
    \ 0\n  end\nend", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.reverse.take(shift)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s.split(\"\").reverse.inject(\"\") do\
    \ |s, digit|\n    s << digit if digit > 0 && digit < shift\n    s << digit.modulo(10)\n\
    \  end\nend", "  digits = x.to_s.reverse\n  digits[0...shift] = digits[shift]\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x.slice!(0, shift)\n  x.slice!(-shift,\
    \ shift)\n  x\nend", "  x = x.to_i\n  shift = shift.to_i\n  return x.to_s.reverse.chars.take(shift).join\n\
    end", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit <= shift.to_i\n    s << digit if digit > shift && digit\
    \ <= (shift.to_i + 1)\n    s << digit if digit > (shift.to_i + 1)\n    s\n  end\n\
    end", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n  digits\
    \ = digits.take(shift)\n  digits.reverse!\n  digits.join\nend", "  x.to_s.reverse.chars.take(shift).join\n\
    end", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit <= shift.to_i\n    s << digit\n  end\nend", "  digits\
    \ = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n  digits.reverse!\n\
    \  digits.to_s\nend", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.reverse.chars.take(shift).join\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  ", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n\
    \  digits = digits.chars.reverse\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!", "  digits = x.to_s.reverse\n  digits =\
    \ digits[0...shift]\n  digits = digits[1...(digits.length - 1)]\n  digits.reverse!\n\
    \  digits.reverse!\n  return digits\nend", "  digits = x.to_s.reverse\n  digits\
    \ = digits.chars.drop(shift).reverse\n  digits = digits.join\n  digits = digits.reverse\n\
    \  digits\nend", "  x.slice!(0, shift)\n  x.reverse!\n  x.slice!(0, shift)\n \
    \ x\nend", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits\
    \ = digits[1...(digits.length - 1)]\n  digits = digits.reverse\n  x.to_s = digits\n\
    \  return x\nend", "  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse\n\
    \  digits = digits.shift(shift)\n  digits = digits.reverse.to_s\n  return digits\n\
    end", "  x.to_s.reverse.chars.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits[0...shift] = digits[shift]\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.to_a\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  x = x.to_i\n  shift = shift.to_i\n\
    \  return x.to_s.reverse.chars.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits[0...shift] = digits[shift]\n  digits.reverse!\n  digits.to_s\nend",
  "  x = x.to_i\n  shift = shift % x.digits\n  digits = x.digits\n  digits_count =\
    \ x.digits_count\n  digits_count = digits_count - shift if shift > digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if shift < digits_count\
    \ else digits_count\n  digits_count = digits_count + shift if ", "  x.slice!(0,\
    \ shift)\n  x.reverse!\n  x\nend", "  digits = x.to_s.reverse\n  digits[0, shift]\n\
    end", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit <= shift.to_i\n    s << digit if digit > shift && digit\
    \ <= (shift.to_i + 1)\n    s << digit if digit > (shift.to_i + 1)\n    s\n  end\n\
    end\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| a tags=ruby,ruby-on-rails |>\n\
    <code>", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit\
    \ if digit > 0 && digit <= shift.to_i\n    s << digit if digit > shift && digit\
    \ <= (shift.to_i + 1)\n    s << digit if digit > (shift.to_i + 1)\n    s << digit\
    \ if digit > (shift.to_i + 2)\n    s << digit if digit > (shift.to_i + 3)\n  \
    \  s << digit if digit > (shift.to_i + 4)\n    s << digit if digit > (shift.to_i\
    \ + 5)\n    s << digit if digit > (shift.to_i + 6)\n    s << digit if digit >\
    \ (shift.to_i + 7)\n    s << digit if digit > (shift.to_i + 8)\n    s << digit\
    \ if digit > (shift.to_i + 9)\n    s << digit if digit > (shift.to_i + 10)\n \
    \   s << digit if digit > (shift.to_i + 11)\n    s << digit if digit > (shift.to_i\
    \ + 12)\n    s << digit if digit > (shift.to_i + 13)\n    s << digit if digit\
    \ > (shift.to_i + 14)\n    s << digit if digit > (shift.to_i + 15)\n    s << digit\
    \ if digit > (shift.to_i + 16)\n    s << digit if digit > (shift.to_i + 17)\n\
    \    s << digit if digit > (shift.to_i + 18)\n    s << digit if digit > (shift.to_i\
    \ + 19)\n    s << digit if digit > (shift.to_i + 20)\n    s << digit if digit\
    \ > (shift.to_i + 21)\n    s << digit if digit > (shift.to_i + 22)\n    s << digit\
    \ if digit > (shift.to_i + 23)\n    s << digit if digit > (shift.to_i + 24)\n\
    \    s << digit if digit > (shift.to_i + 25)\n    s << digit if digit > (shift.to_i\
    \ + 26)\n    s << digit if digit > (shift.to_i + 27)\n    s << digit if digit\
    \ > (shift.to_i + 28)\n    s << digit if digit > (shift.to_i + 29)\n    s << digit\
    \ if digit > (shift.to_i + 30)\n    s << digit if digit > (shift.to_i + 31)\n\
    \    s << digit if digit > (shift.to_i + 32)\n    s << digit if digit > (shift.to_i\
    \ + 33)\n    s << digit if digit > (shift.to_i + 34)\n    s << digit if digit\
    \ > (shift.to_", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n  \
    \  s << digit if digit > 0 && digit <= shift.to_i\n    s << digit if digit > shift\
    \ && digit <= (shift.to_i + 1)\n    s << digit if digit > (shift.to_i + 1)\n \
    \ end\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n\
    \  digits = digits.chars.reverse\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!", "  digits = x.to_s.reverse\n  digits =\
    \ digits[0...shift]\n  digits = digits[0...(digits.length - 1)]\n  digits = digits.reverse\n\
    \  x.to_s = digits\n  x\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).join(\"\
    \")\n  digits = digits.chars.reverse\n  digits.to_s\nend", "  digits = x.to_s.reverse\n\
    \  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  ", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n  digits\
    \ = digits[0...shift]\n  digits.reverse!\n  digits.join\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!",
  "  digits = x.to_s.reverse\n  digits = digits.slice(shift, digits.length)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse", "  digits = x.to_s.reverse\n  digits =\
    \ digits.chars.to_a.reverse\n  digits = digits.slice!(0, shift)\n  digits.reverse!\n\
    \  digits.join\nend", "  x.to_s.split(\"\").reverse.inject(\"\") do |result, digit|\n\
    \    digit = digit.to_i(10)\n    result + (digit << shift)\n  end\nend\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution, since it avoids having to reverse\
    \ the string. However, the `to_i` call will fail if the string contains non-numeric\
    \ characters. You could use `to_i` with a `rescue` block to handle this case.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, since it avoids having to reverse\
    \ the string. However, the `to_i` call will fail if the string contains non-numeric\
    \ characters. You could use `to_i` with a `rescue` block to handle this case.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, since it avoids having to reverse\
    \ the string. However, the `to_i` call will fail if the string contains non-numeric\
    \ characters. You could use `to_i` with a `rescue` block to handle this case.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, since it avoids having to reverse\
    \ the string. However, the `to_i` call will fail if the string contains non-numeric\
    \ characters. You could use `to_i` with a `rescue` block to handle this case.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, since it avoids having to reverse\
    \ the string. However, the `to_i` call will fail if the string contains non-numeric\
    \ characters. You could use `to_i` with a `rescue` block to handle this case.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>", "  x = x.to_s\n  shift = shift % x.size\n\
    \  x.reverse!\n  x.slice!(0, shift)\n  x.reverse!\n  x\nend", "  x.to_s.split(\"\
    \").reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit <=\
    \ shift.to_i\n    s << digit % 10\n  end\nend", "  digits = x.to_s.reverse\n \
    \ digits = digits[0...shift]\n  digits = digits[1...(digits.length - 1)]\n  digits\
    \ = digits.reverse\n  x.to_s = digits\nend", "  x.to_s.reverse.chars.take(shift).join\n\
    end", "  x.slice!(0, shift)\n  x.reverse!\n  x\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).reverse\n  digits = digits.chars.reverse\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.to_a\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  x = x.to_s\n  shift = shift % x.length\n\
    \  digits = x.chars.to_a\n  digits.reverse!\n  digits.unshift(digits.shift)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n\
    \  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)\n  digits.unshift(0)",
  "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  ", "  x.slice!(0, shift)\n  x.reverse! if shift > x.length\
    \ else true\n  x\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n\
    \  digits = digits.join\n  digits.reverse!\n  digits\nend", "  x = x.to_s\n  shift\
    \ = shift % x.length\n  digits = x.reverse.chars.take(shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x = x.to_s\n  shift = shift.to_i\n  digits = x.split(//)\n  digits.reverse!\n\
    \  digits.reverse! if shift > digits.length\n  digits.reverse! if shift < 0\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.reverse! if shift > digits.length\n\
    \  digits.reverse! if shift < 0\n  digits.", "  digits = x.to_s.reverse.to_i\n\
    \  digits = digits.digits.reverse\n  digits = digits.shift(shift)\n  digits =\
    \ digits.reverse.to_s\n  return digits\nend", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit <= shift.to_i\n    s <<\
    \ digit if digit > shift && digit <= (shift.to_i + 1)\n    s << digit if digit\
    \ > (shift.to_i + 1)\n    s\n  end\nend", "  digits = x.to_s.reverse\n  digits[0...shift]\
    \ = digits[shift...-1]\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n", "  x = x.to_s\n \
    \ shift = shift.to_i\n  x.slice!(0, shift)\n  x.reverse!\n  x\nend", "  digits\
    \ = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  ", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n\
    \  digits = digits[0...digits.length]\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse", "  x.slice!(0, shift)\n\
    \  x.reverse!\n  x.slice!(0, shift)\n  x\nend", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit <= shift && digit % 2\
    \ == 1\n    s << digit\n  end\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=ruby,string\
    \ |>\n<code>", "  x.to_s.reverse.chars.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.slice(shift, digits.length)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  digits = x.to_s.reverse\n  digits.slice!(0,\
    \ shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  x.slice!(0,\
    \ shift)\n  x.slice!(-shift, shift)\n  x\nend", "  digits = x.to_s.reverse\n \
    \ digits = digits[0...shift]\n  digits = digits[0...(digits.length - 1)]\n  digits.reverse!\n\
    \  digits.reverse!\n  digits\nend", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n\
    \  digits = digits[1...(digits.length - 1)]\n  digits.reverse!\n  digits.to_s\n\
    end", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[1...(digits.length\
    \ - 1)]\n  return digits\nend", "  x = x.to_s\n  shift = shift.to_i\n  digits\
    \ = x.to_s.length\n  digits_reversed = x.to_s.reverse\n  digits_reversed.slice!(0,\
    \ shift)\n  digits_reversed.slice!(-shift, digits)\n  digits_reversed\nend", " \
    \ digits = x.to_s.reverse\n  digits[0...shift] = digits[shift]\n  digits.reverse!\n\
    \  digits.reverse!\n  return digits.to_s\nend", "  digits = x.to_s.reverse\n \
    \ digits = digits.chars.drop(shift).concat(digits.chars.take(shift))\n  digits.reverse!\n\
    \  digits.to_s\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_s\n  shift = shift.to_i\n\
    \  digits = x.chars.to_a\n  digits.reverse!\n  digits[shift..-1].each_index do\
    \ |i|\n    digits[i] = digits[i].to_s\n  end\n  digits.join\nend", "  x = x.to_s\n\
    \  shift = shift % x.size\n  x.slice!(0, shift)\n  x.reverse!\n  x\nend", "  digits\
    \ = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n  digits = digits.join\n\
    \  digits.reverse!\n  digits\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n\
    \  digits[shift] = digits[shift].to_s.chars.to_a[0]\n  digits.reverse!\n  digits.join\n\
    end", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n  digits.each_with_index\
    \ do |digit, i|\n    digits[i] = digits[i - shift]\n  end\n  digits.join\nend\n\
    </code>\n<|/ a |>\n<| c |>\nI like this solution, but I wonder if there is a way\
    \ to do this without having to reverse the string. I'm thinking there might be\
    \ a way to do this by iterating through the string backwards and swapping each\
    \ character with the character before it, but I'm not sure how to do that.\n<|/\
    \ c |>\n<| c |>\nI added a solution that doesn't require reversing the string.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require reversing the string.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require reversing the string.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require reversing the string.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "  x = x.to_s\n  shift = shift % x.length\n\
    \  digits = x.chars.to_a\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.to_a.reverse\n  digits = digits[0...shift]\n  digits.reverse!\n\
    \  digits.join\nend", "  x.to_s.reverse.chars.take(shift).join\nend", "  digits\
    \ = x.to_s.reverse\n  digits[0, shift]\nend", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |result, digit|\n    result << digit if digit > 0 && digit < shift\n  \
    \  result << digit.modulo(10).to_s.rjust(shift, \"0\")\n  end\nend", "  digits\
    \ = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  ", "  x = x.to_s\n  shift = shift % x.length\n  digits =\
    \ x.chars.to_a\n  digits.reverse!\n  digits.rotate(shift)\n  digits.join\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThis doesn't work if x is\
    \ negative.\n<|/ c |>\n<| c |>\nI added a version that works with negative numbers.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| a |>\n<code>", "  x.to_s.split(\"\
    \").reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit <=\
    \ shift.to_i\n    s << digit if digit > shift && digit <= (shift.to_i + 1)\n \
    \   s << digit if digit > (shift.to_i + 1)\n    s\n  end\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits[0...shift]\n  digits = digits[0...(digits.length - 1)]\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits\nend", "  x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, digit|\n    s << digit if digit > 0 && digit <= shift.to_i\n    s <<\
    \ digit if digit > shift && digit <= (shift.to_i + 1)\n    s << digit if digit\
    \ > (shift.to_i + 1)\n    s << digit if digit > (shift.to_i + 2)\n    s << digit\
    \ if digit > (shift.to_i + 3)\n    s << digit if digit > (shift.to_i + 4)\n  \
    \  s << digit if digit > (shift.to_i + 5)\n    s << digit if digit > (shift.to_i\
    \ + 6)\n    s << digit if digit > (shift.to_i + 7)\n    s << digit if digit >\
    \ (shift.to_i + 8)\n    s << digit if digit > (shift.to_i + 9)\n    s << digit\
    \ if digit > (shift.to_i + 10)\n    s << digit if digit > (shift.to_i + 11)\n\
    \    s << digit if digit > (shift.to_i + 12)\n    s << digit if digit > (shift.to_i\
    \ + 13)\n    s << digit if digit > (shift.to_i + 14)\n    s << digit if digit\
    \ > (shift.to_i + 15)\n    s << digit if digit > (shift.to_i + 16)\n    s << digit\
    \ if digit > (shift.to_i + 17)\n    s << digit if digit > (shift.to_i + 18)\n\
    \    s << digit if digit > (shift.to_i + 19)\n    s << digit if digit > (shift.to_i\
    \ + 20)\n    s << digit if digit > (shift.to_i + 21)\n    s << digit if digit\
    \ > (shift.to_i + 22)\n    s << digit if digit > (shift.to_i + 23)\n    s << digit\
    \ if digit > (shift.to_i + 24)\n    s << digit if digit > (shift.to_i + 25)\n\
    \    s << digit if digit > (shift.to_i + 26)\n    s << digit if digit > (shift.to_i\
    \ + 27)\n    s << digit if digit > (shift.to_i + 28)\n    s << digit if digit\
    \ > (shift.to_i + 29)\n    s << digit if digit > (shift.to_i + 30)\n    s << digit\
    \ if digit > (shift.to_i + 31)\n    s << digit if digit > (shift.to_i + 32)\n\
    \    s << digit if digit > (shift.to_i + 33)\n    s << digit if digit > (shift.to_i\
    \ + 34)\n    s << digit if digit > (shift.to_", "  digits = x.to_s.reverse\n \
    \ digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  ", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[1...-1]\n\
    \  digits.reverse!\n  digits.reverse!\n  return digits\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).concat(digits.chars.take(shift))\n  digits.reverse!\n\
    \  return digits.to_s\nend", "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).join\n  digits = digits.reverse\n  digits\
    \ = digits.chars.reverse.join\n  digits\nend", "  x = x.to_s\n  shift = shift\
    \ % x.length\n  digits = x.chars.reverse.take(shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.reverse\n  digits = digits.chars.drop(shift).join\n  digits = digits.reverse\n\
    \  digits.to_s\nend", "  x = x.to_s\n  shift = shift % x.length\n  digits = x.chars.to_a\n\
    \  digits.reverse!\n  digits.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits[0...shift] = digits[shift]\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n \
    \ digits.", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n    s <<\
    \ digit if digit > 0 && digit <= shift && digit % 2 == 1\n    s << digit\n  end\n\
    end", "  x.to_s.reverse.chars.take(shift).join\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.slice!(0, shift)\n  digits = digits.reverse\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  x.to_s.split(\"\").reverse.inject(\"\") do |s, digit|\n\
    \    s << digit if digit > 0 && digit < shift\n    s << digit if digit >= shift\n\
    \    s\n  end\nend", "  x = x.to_s\n  shift = shift || 0\n  len = x.length\n \
    \ digits = x.split(//)\n  digits.reverse!\n  digits[shift] = digits[shift].to_s\n\
    \  digits.reverse!\n  return digits.join(\"\")\nend", "  digits = x.to_s.reverse\n\
    \  digits = digits.chars.drop(shift).concat(digits.chars.take(shift))\n  digits.reverse!\n\
    \  digits.to_s\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n\
    <| c |>\nI like this solution, but I wonder if there is a way to do this without\
    \ having to use an external gem?\n<|/ c |>\n<| c |>\nI added a solution without\
    \ using an external gem.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  x = x.to_i\n\
    \  shift = shift % x.digits\n  digits = x.digits\n  digits_left = digits - shift\n\
    \  digits_right = digits_left - shift\n  digits_left_shifted = digits_left <<\
    \ shift\n  digits_right_shifted = digits_right << shift\n  digits_left_shifted_reversed\
    \ = digits_left_shifted.reverse\n  digits_right_shifted_reversed = digits_right_shifted.reverse\n\
    \  digits_left_shifted_reversed.each_with_index do |digit, index|\n    digits_right_shifted_reversed[index]\
    \ = digit\n  end\n  digits_right_shifted_reversed.join\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `circular_shift(-12,\
    \ 1)`\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it by adding an if statement\
    \ to check for negative numbers. Thanks for pointing that out.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>", "  digits = x.to_s.reverse\n  digits = digits.slice(shift,\
    \ digits.length)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse", "  x.to_s.split(\"\"\
    ).reverse.inject(\"\") do |s, digit|\n    s << digit if digit > 0 && digit < shift\n\
    \    s << digit.modulo(10)\n  end\nend", "  digits = x.to_s.reverse\n  digits.slice!(0,\
    \ shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  ", "  digits = x.to_s.reverse\n\
    \  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  ", "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  x = x.to_i\n  shift = shift.to_i\n\
    \  return x.to_s(10).reverse.chars.reverse.inject(\"\") do |s, c|\n    s << c\
    \ if (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z')\n    s << c if (c >= 'A'\
    \ && c <= 'Z') || (c >= 'a' && c <= 'z')\n    s << c if (c >= '0' && c <= '9')\
    \ || (c >= 'A' && c <= 'Z')\n    s << c if (c >= 'a' && c <= 'z') || (c >= 'A'\
    \ && c <= 'Z')\n    s << c if (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z')\n\
    \    s << c if (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')\n    s << c if\
    \ (c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z')\n    s << c if (c >= 'a' &&\
    \ c <= 'z') || (c >= 'A' && c <= 'Z')\n    s << c if (c >= '0' && c <= '9') ||\
    \ (c >= 'a' && c <= 'z')\n    s << c if (c >= 'A' && c <= 'Z') || (c >= 'a' &&\
    \ c <= 'z')\n    s << c if (c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z')\n\
    \    s << c if (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')\n    s << c if\
    \ (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z')\n    s << c if (c >= 'A' &&\
    \ c <= 'Z') || (c >= 'a' && c <= 'z')\n    s << c if (c >= '0' && c <= '9') ||\
    \ (c >= 'A' && c <= 'Z')\n    s << c if (c >= 'a' && c <= 'z') || (c >= 'A' &&\
    \ c <= 'Z')\n  end.reverse\nend", "  digits = x.to_s.reverse.to_i\n  digits =\
    \ digits.digits.reverse\n  digits = digits[0...shift]\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n", "  x.to_s.split(\"\
    \").reverse.each_slice(shift).map(&:join).join\nend", "  digits = x.to_s.reverse.to_i\n\
    \  digits = digits.digits.reverse\n  digits[shift] = digits[shift].to_i\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse", " \
    \ digits = x.to_s.reverse\n  digits[0...shift] = digits[shift]\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.reverse\n  digits = digits[0...shift]\n\
    \  digits = digits[0...(digits.length - 1)]\n  digits = digits.reverse\n  return\
    \ digits\nend", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n\
    \  digits[shift] = digits[shift].to_s\n  digits.join\nend", "  x = x.to_s\n  shift\
    \ = shift || 0\n  digits = x.reverse.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits[shift].concat(digits[shift..-1])\n  digits.join(\"\")\nend", "  x =\
    \ x.to_s\n  shift = shift % x.size\n  x.reverse!\n  x.slice!(0, shift)\n  x.reverse!\n\
    \  x.to_s\nend", "  digits = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  ", "  x = x.to_s\n  shift = shift % x.length\n\
    \  digits = x.chars.reverse.take(shift)\n  digits.reverse!\n  digits.join\nend",
  "  x.slice!(0, shift)\n  x.slice!(-shift, -1)\n  x\nend", "  x = x.to_i\n  shift\
    \ = shift.to_i\n  return x.to_s.reverse.chars.take(shift).join\nend", "  digits\
    \ = x.to_s.reverse\n  digits = digits[0...shift]\n  digits = digits[0...digits.length]\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n\
    \  digits = digits.shift(shift)\n  digits.join\nend", "  x = x.to_s\n  shift =\
    \ shift % x.length\n  digits = x.chars.reverse.take(shift)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.reverse\n  digits = digits.chars.drop(shift).reverse\n\
    \  digits = digits.chars.reverse\n  digits = digits.reverse\n  digits.to_s\nend",
  "  digits = x.to_s.reverse\n  digits = digits.chars.to_a.reverse\n  digits = digits.slice(-shift)\n\
    \  digits.reverse!\n  digits.join\nend\n</code>\n<|/ a tags=ruby |>\n<| c |>\n\
    Thanks for the answer! I ended up using your solution, but I used `digits.slice(-shift)`\
    \ instead of `digits.slice(-shift, shift)` because I wanted to be able to shift\
    \ by negative numbers. I ended up using `digits.slice(-shift, shift)` because\
    \ I wanted to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. I ended up\
    \ using `digits.slice(-shift, shift)` because I wanted to be able to shift by\
    \ negative numbers. I ended up using `digits.slice(-shift, shift)` because I wanted\
    \ to be able to shift by negative numbers. I ended up using `digits.slice(-shift,\
    \ shift)` because I wanted to be able to shift by negative numbers. ", "  digits\
    \ = x.to_s.reverse\n  digits.slice!(0, shift)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  "]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

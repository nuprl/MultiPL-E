name: HumanEval_141_file_name_check
language: ruby
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# file_name_check(\"example.txt\"\
  ) # => 'Yes'\n# file_name_check(\"1example.dll\") # => 'No' (the name should start\
  \ with a latin alphapet letter)\ndef file_name_check(file_name)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_file_name_check\n\
  \    candidate = method(:file_name_check)\n    assert_equal(\"Yes\", candidate.call(\"\
  example.txt\"))\n    assert_equal(\"No\", candidate.call(\"1example.dll\"))\n  \
  \  assert_equal(\"No\", candidate.call(\"s1sdf3.asd\"))\n    assert_equal(\"Yes\"\
  , candidate.call(\"K.dll\"))\n    assert_equal(\"Yes\", candidate.call(\"MY16FILE3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"His12FILE94.exe\"))\n    assert_equal(\"\
  No\", candidate.call(\"_Y.txt\"))\n    assert_equal(\"No\", candidate.call(\"?aREYA.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"/this_is_valid.dll\"))\n    assert_equal(\"\
  No\", candidate.call(\"this_is_valid.wow\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  this_is_valid.txt\"))\n    assert_equal(\"No\", candidate.call(\"this_is_valid.txtexe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"#this2_i4s_5valid.ten\"))\n    assert_equal(\"\
  No\", candidate.call(\"@this1_is6_valid.exe\"))\n    assert_equal(\"No\", candidate.call(\"\
  this_is_12valid.6exe4.txt\"))\n    assert_equal(\"No\", candidate.call(\"all.exe.txt\"\
  ))\n    assert_equal(\"Yes\", candidate.call(\"I563_No.exe\"))\n    assert_equal(\"\
  Yes\", candidate.call(\"Is3youfault.txt\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  no_one#knows.dll\"))\n    assert_equal(\"No\", candidate.call(\"1I563_Yes3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"I563_Yes3.txtt\"))\n    assert_equal(\"\
  No\", candidate.call(\"final..txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  final132\"))\n    assert_equal(\"No\", candidate.call(\"_f4indsartal132.\"))\n \
  \   assert_equal(\"No\", candidate.call(\".txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  s.\"))\n  end\nend\n"
completions: ["  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.chomp!\n\
    \  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.]txt|[.]exe|[.]dll/)\n\
    \  file_name.include?('.')\nend", "  file_name.downcase!\n  file_name = file_name.chomp\n\
    \  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\.[a-z]+$/,\
    \ '')\n  file_name = file_name.downcase\n  file_name.include?('.txt') || file_name.include?('.exe')\
    \ || file_name.include?('.dll')\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=ruby\
    \ |>\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? &&\n    file_name.scan(/[a-z]/).empty? &&\
    \ file_name.scan(/[a-z][a-z]/).empty? &&\n    file_name.scan(/[a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z]/).empty? &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z]/).empty? &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty? &&\n  \
    \  file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty? && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?('a')\n  file_name.start_with?('A')\n  file_name.end_with?('txt')\n\
    \  file_name.end_with?('exe')\n  file_name.end_with?('dll')\n  file_name.length\
    \ == 3\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{3}/).empty? && file_name.scan(/[a-z][a-z\\.]+/).empty? && file_name.scan(/[a-z][a-z\\\
    .]+\\.[a-z]{3}/).empty?\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(", "  file_name.downcase!\n\
    \  file_name = file_name.split(\".\").first\n  file_name.gsub!(/^0/, \"\")\n \
    \ file_name.gsub!(/[^a-z]/, \"\")\n  file_name.start_with?(\"a\") || file_name.start_with?(\"\
    z\") || file_name.start_with?(\"A\") || file_name.start_with?(\"Z\")\n  file_name.include?(\"\
    txt\") || file_name.include?(\"exe\") || file_name.include?(\"dll\")\nend", " \
    \ file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, \"\
    \")\n  file_name = file_name.gsub(/^\\.+/, \"\")\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\.\\./, \".\")\n  file_name\
    \ = file_name.gsub(/^[a-z]/, \"a\")\n  file_name = file_name.gsub(/[A-Z]/, \"\
    A\")\n  file_name = file_name.gsub(/\\.$/, \"\")\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/^\\\
    .+/, \"\")\n  file_name = file_name.gsub(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \".\")\n  file_name = file_name.gsub(/^[a-z]/, \"a\")\n  file_name = file_name.gsub(/[A-Z]/,\
    \ \"A\")\n  file_name = file_name.gsub(/\\.$/, \"\")\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/^\\\
    .+/, \"\")\n  file_name = file_name.gsub(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \".\")\n  file_name = file_name.gsub(/^[a-z]/, \"a\")\n  file_name = file_name.gsub(/[A-Z]/,\
    \ \"A\")\n  file_name = file_name.gsub(/\\.$/, \"\")\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/^\\\
    .+/, \"\")\n  file_name = file_name.gsub(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \".\")\n  file_name = file_name.gsub(/^[a-z]/, \"a\")\n  file_name = file_name.gsub(/[A-Z]/,\
    \ \"A\")\n  file_name = file_name.gsub(/\\.$/, \"\")\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/^\\\
    .+/, \"\")\n  file_name = file_name.gsub(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \".\")\n  file_name = file_name.gsub(/^[a-z]/, \"a\")\n  file_name = file_name.gsub(/[A-Z",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.empty? ?\
    \ 'No' : file_name.include?('.') ? 'Yes' : file_name.start_with?('a-z') ? 'Yes'\
    \ : 'No'\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\")\n\
    \  file_name.gsub!(/^\\.+/, \"\")\n  file_name.gsub!(/\\.[a-z]+$/i, \"\")\n  file_name.downcase!\n\
    \  file_name.match(/^[a-z]+/)\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\.\\z/, \"\
    \") # remove all trailing dot\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") || file_name.start_with?(\"A\") && file_name.end_with?(\"Z\") || file_name.start_with?(\"\
    0\") && file_name.end_with?(\"9\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_\") || file_name.start_with?(\"\
    _\") || file_name.end_with?(\"_\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\") || file_name.start_with?(\"_\") || file_name.end_with?(\"_", "  file_name\
    \ = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n\
    \  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name.gsub(/^[a-z]/, 'a')\n  file_name = file_name.gsub(/[A-Z]/,\
    \ 'A')\n  file_name = file_name", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\.\\./, \"\
    \") # remove all dots \n  file_name.gsub!(/^[a-z]/i, \"a\") # convert all letters\
    \ to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".a\") # convert all dots to lowercase\n\
    \  file_name.gsub!(/^[a-z]/i, \"z\") # convert all letters to lowercase\n  file_name.gsub!(/\\\
    .[a-z]/i, \".z\") # convert all dots to lowercase\n  file_name.gsub!(/^[a-z]/i,\
    \ \"A\") # convert all letters to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \"\
    .A\") # convert all dots to lowercase\n  file_name.gsub!(/^[a-z]/i, \"Z\") # convert\
    \ all letters to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".Z\") # convert all\
    \ dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".txt\") # convert all dots\
    \ to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".exe\") # convert all dots to\
    \ lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".dll\") # convert all dots to lowercase\n\
    \  file_name.gsub!(/\\.[a-z]/i, \".exe\") # convert all dots to lowercase\n  file_name.gsub!(/\\\
    .[a-z]/i, \".dll\") # convert all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i,\
    \ \".exe\") # convert all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \"\
    .dll\") # convert all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".exe\"\
    ) # convert all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".dll\") #\
    \ convert all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".exe\") # convert\
    \ all dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".dll\") # convert all\
    \ dots to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".exe\") # convert all dots\
    \ to lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".dll\") # convert all dots to\
    \ lowercase\n  file_name.gsub!(/\\.[a-z]/i, \".exe", "  file_name.downcase!\n\
    \  file_name.split(//).each do |char|\n    next if char.empty?\n    next if char.start_with?('0')\n\
    \    next if char.start_with?('9')\n    next if char.start_with?('.')\n    next\
    \ if char.start_with?('a')\n    next if char.start_with?('z')\n    next if char.start_with?('A')\n\
    \    next if char.start_with?('Z')\n    next\n  end\n  file_name.split('.').each\
    \ do |char|\n    next if char.empty?\n    next if char.start_with?('0')\n    next\
    \ if char.start_with?('9')\n    next\n  end\n  file_name.split('.').each do |char|\n\
    \    next if char.empty?\n    next if char.start_with?('0')\n    next if char.start_with?('9')\n\
    \    next\n  end\n  file_name.split('.').each do |char|\n    next if char.empty?\n\
    \    next if char.start_with?('0')\n    next if char.start_with?('9')\n    next\n\
    \  end\n  file_name.split('.').each do |char|\n    next if char.empty?\n    next\
    \ if char.start_with?('0')\n    next if char.start_with?('9')\n    next\n  end\n\
    \  file_name.split('.').each do |char|\n    next if char.empty?\n    next if char.start_with?('0')\n\
    \    next if char.start_with?('9')\n    next\n  end\n  file_name.split('.').each\
    \ do |char|\n    next if char.empty?\n    next if char.start_with?('0')\n    next\
    \ if char.start_with?('9')\n    next\n  end\n  file_name.split('.').each do |char|\n\
    \    next if char.empty?\n    next if char.start_with?('0')\n    next if char.start_with?('9')\n\
    \    next\n  end\n  file_name.split('.').each do |char|\n    next if char.empty?\n\
    \    next if char.start_with?('0')\n    next if char.start_with?('9')\n    next\n\
    \  end\n  file_name.split('.').each do |char|\n    next if char.empty?\n    next\
    \ if char.start_with?('0')\n    next if char", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\./, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[^\\.]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/[^\\.exe|dll]/).empty?\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.gsub!(/\\.\\z/, \"\")\n  file_name.gsub!(/^[a-z]/, \"\"\
    )\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, ",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[a-z]/)\n \
    \ file_name.include?('.')\nend", "  file_name.downcase!\n  file_name.chomp!\n\
    \  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.", "  file_name.downcase!\n\
    \  file_name = file_name.chomp\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/^\\\
    ./, '')\n  file_name.gsub!(/\\.[^a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.g",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.exe,.dll]/)\n\
    end\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nI like your solution, however\
    \ it fails on filenames such as \"1example.txt\"\n<|/ c |>\n<| c |>\nI added a\
    \ version which should handle that case\n<|/ c |>\n<| c |>\nI added a version\
    \ which should handle that case\n<|/ c |>\n<| c |>\nI added a version which should\
    \ handle that case\n<|/ c |>\n<| c |>\nI added a version which should handle that\
    \ case\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/^\\./, '')\n  file_name.gsub!(/\\.[^\\.]+$/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '.')\n  file_name.gsub!(/\\.[A-Z]/, '.')\n  file_name.gsub!(/\\\
    .[a-z][A-Z]/, '.')\n  file_name.gsub!(/\\.[A-Z][a-z]/, '.')\n  file_name.gsub!(/\\\
    .[a-z][A-Z][a-z]/, '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][a-z]/, '.')\n  file_name.gsub!(/\\\
    .[a-z][A-Z][A-Z][a-z]/, '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z]/, '.')\n\
    \  file_name.gsub!(/\\.[a-z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\\
    .[A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\.[a-z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\\
    .[a-z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.gsub!(/\\.[a-z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n\
    \  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\\
    .[a-z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/, '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.gsub!(/\\.[a-z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.gsub!(/\\.[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.gsub!(/\\.[a-z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z]/,\
    \ '.')\n  file_name.g", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.\\.+/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.\\.+/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.\\.+/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.\\.+/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.\\.+/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^",
  "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\\
    .\\./).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-zA-z]/).empty? && file_name.scan(/^[A-Za-z]/).empty?\
    \ && file_name.scan(/^[0-9a-z]/).empty? && file_name.scan(/^[0-9A-Za-z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z0-9_]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_a-z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z0-9_A-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_A-Za-z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z0-9_\\-]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -a-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-A-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -A-Za-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -\\-a-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-A-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -\\-A-Za-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-]/).empty? &&\
    \ file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-a-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -\\-\\-A-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-A-Za-z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-\\-]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -\\-\\-\\-a-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-\\-A-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-\\-A-Za-z]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\\
    -\\-\\-\\-\\-]/).empty? && file_name.scan(/^[0-9a-zA-Z0-9_\\-\\-\\-\\-\\-a-z]/).empty?\
    \ && file_name.scan(", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/,\
    \ \"\") # remove all non-digit and non-dot characters\n  file_name.gsub!(/\\.+/,\
    \ \".\") # replace multiple dots with one dot\n  file_name.gsub!(/^[^a-z]/i, \"\
    a\") # replace all non-letter characters with 'a'\n  file_name.gsub!(/[^a-z]/i,\
    \ \"z\") # replace all non-letter characters with 'z'\n  file_name.gsub!(/[^a-z]/i,\
    \ \"A\") # replace all non-letter characters with 'A'\n  file_name.gsub!(/[^a-z]/i,\
    \ \"Z\") # replace all non-letter characters with 'Z'\n  file_name.gsub!(/^.$/,\
    \ \"\") # remove all characters at the beginning and end of the string\n  file_name.gsub!(/\\\
    .$/, \"\") # remove all characters at the end of the string\n  file_name.empty?\
    \ ? \"No\" : \"Yes\"\nend", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\./, '')\n  file_name = file_name.gsub(/\\\
    .[^a-z]/, '')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/\\.\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '.')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .\\.$/, '')\n  file_name = file_name.gsub(/\\.", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ 'a')\n  file_name = file_name.gsub(/[A-Z]/, 'A')\n  file_name = file_name.gsub(/[^a-zA-z]/,\
    \ '')\n  file_name = file_name.downcase\n  \n  if file_name.count > 3 || file_name.count\
    \ < 1\n    return \"No\"\n  elsif file_name.count > 1 && file_name.count < 3\n\
    \    return \"No\"\n  elsif file_name.count > 3 && file_name.count > 1 && file_name.count\
    \ < 4\n    return \"No\"\n  elsif file_name.count < 3\n    return \"Yes\"\n  end\n\
    end", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.g", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.exe,.dll]/)\n\
    \  file_name.include?('.')\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\.[^\\.]+$/,\
    \ \"\") # remove all characters after the last dot\n  file_name.gsub!(/^[^a-z]/,\
    \ \"\") # remove all characters before the first\n  file_name.gsub!(/\\.\\./,\
    \ \".\") # replace all dots with a single one\n  file_name.gsub!(/\\.$/, \"\"\
    ) # remove the last dot\n  file_name.empty? ? \"No\" : \"Yes\"\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9][0-9][0-9]/).empty? && file_name.scan(/\\.[^\\.]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).", "  file_name.downcase!\n  file_name.chomp!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name.start_with?(\"a\") || file_name.start_with?(\"\
    A\")\n  file_name.end_with?(\"txt\") || file_name.end_with?(\"exe\") || file_name.end_with?(\"\
    dll\")\n  file_name.include?(\".\") && file_name.split(\".\").length == 1\nend\n\
    </code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nI like this solution, but\
    \ I realized that my question was a bit unclear. I've edited my question to make\
    \ it more clear. Thanks for your answer though!\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a solution for your updated question.\n<|/ c |>\n<| c |>\n\
    I edited my answer to include a solution for your updated question.\n<|/ c |>\n\
    <| c |>\nI edited my answer to include a solution for your updated question.\n\
    <|/ c |>\n<| a tags=ruby,ruby-on-rails |>\nI believe this should work:\n<code>",
  "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/^[a-z]/).empty?\n  file_name.include?(\".\") && file_name.split(\"\
    .\").size == 1 && file_name.split(\".\").first.downcase =~ /[a-z]/\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.\\z/, '')\n  file_name.start_with?(/[a-z]/)\
    \ && file_name.end_with?(/[a-z]/)\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[^\\.]/).empty? &&\n    file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty? &&\n    file_name.scan(/[^0-9]/).empty?\n\
    end", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name",
  "  file_name_array = file_name.split('.')\n  file_name_array_size = file_name_array.size\n\
    \  \n  if file_name_array_size < 3 || file_name_array_size > 3\n    return 'No'\n\
    \  end\n  \n  if file_name_array[0].empty? || file_name_array[0][0].upcase !=\
    \ 'A' || file_name_array[0][0].downcase != 'A'\n    return 'No'\n  end\n  \n \
    \ if file_name_array[1].empty? || ['txt', 'exe', 'dll'].include?(file_name_array[1])\n\
    \    return 'Yes'\n  end\n  \n  return 'No'\nend", "  file_name.downcase!\n  file_name.chomp!\n\
    \  file_name.include?(\".\") && !file_name.match(/^[0-9][0-9][0-9]\\.[a-z][a-z]$/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name.gsub!(/^\\\
    .+/, \"\")\n  file_name.gsub!(/\\.[^\\.]+$/, \"\")\n  file_name.gsub!(/^[a-z]/,\
    \ \"a\")\n  file_name.gsub!(/[A-Z]/, \"A\")\n  file_name.gsub!(/[^a-zA-z]/, \"\
    \")\n  file_name.empty? ? \"No\" : \"Yes\"\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks for the answer. Your code works perfectly for my purposes. I appreciate\
    \ your help and time.\n<|/ c |>\n<| a tags=ruby,regex |>\nI believe this should\
    \ do what you want:\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty?\
    \ && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{3,}/).empty? && file_name.scan(/[a-z][a-z\\.]{3,}/).", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit and non-dot characters\n\
    \  file_name.gsub!(/\\.{2,}/, \".\") # replace multiple dots with a single dot\n\
    \  file_name.gsub!(/^[^a-z]/i, \"a\") # replace all non-letter characters with\
    \ 'a'\n  file_name.gsub!(/[^a-z]/i, \"z\") # replace all non-letter characters\
    \ with 'z'\n  file_name.gsub!(/[^a-z]/i, \"A\") # replace all non-letter characters\
    \ with 'A'\n  file_name.gsub!(/[^a-z]/i, \"Z\") # replace all non-letter characters\
    \ with 'Z'\n  file_name.gsub!(/^[a-z]/i, \"a\") # replace all letter characters\
    \ with 'a'\n  file_name.gsub!(/^[a-z]/i, \"z\") # replace all letter characters\
    \ with 'z'\n  file_name.gsub!(/^[a-z]/i, \"A\") # replace all letter characters\
    \ with 'A'\n  file_name.gsub!(/^[a-z]/i, \"Z\") # replace all letter characters\
    \ with 'Z'\n  file_name.empty? ? \"Yes\" : \"No\"\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine for all the cases\
    \ except for \"01.exe\" which returns \"No\". I think you forgot to add that case\
    \ in your code.\n<|/ c |>\n<| c |>\nThanks for your comment. I've updated my answer\
    \ to include a check for that case.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for all the cases except for \"01.exe\" which returns \"\
    No\". I think you forgot to add that case in your code.\n<|/ c |>\n<| c |>\nThanks\
    \ for your comment. I've updated my answer to include a check for that case.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works fine for all the cases\
    \ except for \"01.exe\" which returns \"No\". I think you forgot to add that case\
    \ in your code.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit and non-dot characters\n\
    \  file_name.gsub!(/\\.{2,}/, \".\") # remove all consecutive dots\n  file_name.gsub!(/^\\\
    ./, \"\") # remove leading dot\n  file_name.gsub!(/\\.$/, \"\") # remove trailing\
    \ dot\n  file_name.gsub!(/[^a-z]/i, \"_\") # replace all non-letter characters\
    \ with an underscore\n  file_name.gsub!(/[^A-Z]/i, \"_\") # replace all non-letter\
    \ characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i, \"_\") # replace\
    \ all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") # replace all non-letter characters with an underscore\n  file_name.gsub!(/[^A-Za-z0-9]/i,\
    \ \"_\") ", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{2,}/).empty? &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]{1}[a-z]/).empty?\
    \ &&\n", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/\\./, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name",
  "  file_name.downcase!\n  file_name.chomp!\n  file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/)\n\
    \  file_name.include?(\".\") && file_name.split(\".\").length == 1\nend", "  file_name\
    \ = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n\
    \  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.split(%r{\\.}) # Split file name into\
    \ an array with one element containing the file extension\n  file_name.split(%r{[^0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array with one element\
    \ containing the file extension\n  file_name.split(%r{^[a-z][0-9]}) # Split file\
    \ name into an array with one element containing the file extension\n  file_name.split(%r{^[a-z][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9]}) # Split file name into an array\
    \ with one element containing the file extension\n  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9]}) # Split file name into\
    \ an array with one element containing the file extension\n  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9]}) # Split file\
    \ name into an array with one element containing the file extension\n  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]}) #\
    \ Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]})\
    \ # Split file name into an array with one element containing the file extension\n\
    \  file_name.split(%r{^[a-z][0-9][0-9][0-9][0-9", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/^[a-z]/)\n  file_name.end_with?(/[.]\\w+$/)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution, however I do not\
    \ understand how it works. Could you please explain how it works?\n<|/ c |>\n\
    <| c |>\nI added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thank you very much for your explanation. Now I understand how it works. I appreciate\
    \ your help.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  file_name.downcase!\n\
    \  file_name = file_name.split('.')\n  file_name.each do |file_name_part|\n  \
    \  file_name_part.downcase!\n    file_name_part = file_name_part.split('')\n \
    \   file_name_part.each do |file_name_part_part|\n      file_name_part_part.downcase!\n\
    \      file_name_part_part = file_name_part_part.split('')\n      file_name_part_part.each\
    \ do |file_name_part_part_part|\n        file_name_part_part_part.downcase!\n\
    \        file_name_part_part_part = file_name_part_part_part.split('')\n     \
    \   file_name_part_part_part.each do |file_name_part_part_part_part|\n       \
    \   file_name_part_part_part_part.downcase!\n          file_name_part_part_part_part\
    \ = file_name_part_part_part_part.split('')\n          file_name_part_part_part_part.each\
    \ do |file_name_part_part_part_part_part|\n            file_name_part_part_part_part_part.downcase!\n\
    \            file_name_part_part_part_part_part = file_name_part_part_part_part_part.split('')\n\
    \            file_name_part_part_part_part_part.each do |file_name_part_part_part_part_part_part|\n\
    \              file_name_part_part_part_part_part_part_part.downcase!\n      \
    \        file_name_part_part_part_part_part_part_part = file_name_part_part_part_part_part_part_part.split('')\n\
    \              file_name_part_part_part_part_part_part_part_part.each do |file_name_part_part_part_part_part_part_part_part_part|\n\
    \                file_name_part_part_part_part_part_part_part_part_part_part.downcase!\n\
    \                file_name_part_part_part_part_part_part_part_part_part = file_name_part_part_part_part_part_part_part_part_part_part_part.split('')\n\
    \                file_name_part_part_part_part_part_part_part_part_part.each do\
    \ |file_name_part_part_part_part_part_part_part_part_part_part_part|\n       \
    \           file_name_part_part_part_part_part_part_part_part_part_part_part_part_part.downcase!\n\
    \                  file_name_part_part_part_part_part_part_part_part_part_part_part_part_part_part\
    \ = file_name_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part.split('')\n\
    \                  file_name_part_part_part_part_part_part_part_part_part_part_part_part_part_part.each\
    \ do |file_name_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part|\n\
    \                    file_name_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_part_",
  "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\
    \ && file_name.scan(/[^0-9]/).empty? && file_name.scan(/[^\\.]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name.scan(/[^exe]/).empty?\
    \ && file_name.scan(/[^dll]/).empty? && file_name.scan(/[^txt]/).empty? && file_name",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/) && file_name.end_with?(/[a-z]/)\nend",
  "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .\\./).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]{3,4}/).empty?\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.chomp!\n\
    \  file_name.start_with?(/^[a-z]/) && file_name.end_with?(/[.]\\w+$/)\nend", " \
    \ file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.]txt|[.]exe|[.]dll/)\n\
    end", "  file_name.downcase!\n  file_name = file_name.split('.')\n  file_name.each\
    \ do |file_name_part|\n    file_name_part.strip!\n    file_name_part.split('').each\
    \ do |char|\n      if !char.match(/^[a-z]/i) || !char.match(/^[A-Z]/i) || !char.match(/^[0-9]/)\n\
    \        return 'No'\n      end\n    end\n  end\n  return 'Yes'\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.[a-z]{3}/).empty? &&\
    \ file_name.scan(/[a-z][a-z\\.]*/).empty? && file_name.scan(/[a-z][a-z\\.]*/).empty?\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\z/, '')\n  file_name.start_with?(/^[a-z]/)\n  file_name.end_with?(/\\.(txt|exe|dll)$/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all\
    \ non-digit and '.' characters\n  file_name.gsub!(/\\.+/, \".\") # replace multiple\
    \ '.' with one '.'\n  file_name.gsub!(/^[^a-z]/i, \"a\") # replace all non-letter\
    \ characters with 'a'\n  file_name.gsub!(/[^a-z]/i, \"z\") # replace all non-letter\
    \ characters with 'z'\n  file_name.gsub!(/^[^a-z]/i, \"A\") # replace all non-letter\
    \ characters with 'A'\n  file_name.gsub!(/[^a-z]/i, \"Z\") # replace all non-letter\
    \ characters with 'Z'\n  file_name.gsub!(/^[^a-z]/i, \"0\") # replace all non-letter\
    \ characters with '0'\n  file_name.gsub!(/[^a-z]/i, \"9\") # replace all non-letter\
    \ characters with '9'\n  file_name.gsub!(/^[a-z]/i, \"a\") # replace all letter\
    \ characters with 'a'\n  file_name.gsub!(/[a-z]/i, \"z\") # replace all letter\
    \ characters with 'z'\n  file_name.gsub!(/^[a-z]/i, \"A\") # replace all letter\
    \ characters with 'A'\n  file_name.gsub!(/[a-z]/i, \"Z\") # replace all letter\
    \ characters with 'Z'\n  file_name.gsub!(/^[a-z]/i, \"0\") # replace all letter\
    \ characters with '0'\n  file_name.gsub!(/[a-z]/i, \"9\") # replace all letter\
    \ characters with '9'\n  file_name.empty? ? \"No\" : \"Yes\"\nend\n</code>\n<|/\
    \ a tags=ruby,ruby-on-rails |>\n<| c |>\nThis doesn't work. `file_name_check(\"\
    1example.dll\") # => 'No'`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting.\
    \ What is your input string?\n<|/ c |>\n<| c |>\nI tested it again and it works.\
    \ I edited my answer to include my test results.\n<|/ c |>\n<| c |>\nI tested\
    \ it again and it works. I edited my answer to include my test results.\n<|/ c\
    \ |>\n<| c |>\nI tested it again and it works. I edited my answer to include my\
    \ test results.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9][0-9]*/).empty? && file_name.scan(/\\.[a-z]+/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? &&\
    \ file_name.scan(/\\.[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]+$/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\.[a-z]+$/).empty", "  file_name\
    \ = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.start_with?('a')\n\
    \  file_name.start_with?('A')\n  file_name.include?('.')\n  file_name.include?('.txt')\n\
    \  file_name.include?('.exe')\n  file_name.include?('.dll')\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[A-Z]/).empty? && file_name.scan(/^[a-zA-z]/).empty? &&\
    \ file_name.scan(/^[A-Za-z]/).empty? && file_name.scan(/^[0-9a-z]/).empty? &&\
    \ file_name.scan(/^[0-9A-Za-z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[0-9a-zA-Z]/).empty? && ", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.empty? ? 'No' : 'Yes'\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks for your answer! I appreciate it! I really appreciate your effort!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I ", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n\
    \  file_name.gsub!(/\\.\\z/, '')\n  file_name.start_with?(/[a-z]/) && file_name.end_with?(/[a-z]/)\n\
    end", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{2,}/).empty? &&\n    file_name.scan(/[a-z][a-z\\.]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]{2,}/).empty?\nend", "  file_name.downcase!\n  file_name.chomp!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.chomp!\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") && file_name.start_with?(\"A\") && file_name.end_with?(\"Z\")\n  file_name.include?(\"\
    .\") && !file_name.empty? && !file_name.start_with?(\".\") && [\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/[^a-z]/, 'a')\n  file_name = file_name.gsub(/^a/,\
    \ 'a')\n  file_name = file_name.gsub(/", "  file_name = file_name.downcase\n \
    \ file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '", "  file_name.downcase!\n\
    \  file_name.split(%r{\\.}) # Split file name into an array with two elements:\
    \ \n                    # the file name without the extension, and the extension\n\
    \  file_name.split(%r{\\d}) # Split file name into an array with two elements:\
    \ \n                    # the file name without the extension, and the extension\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array with two elements:\
    \ \n                    # the file name without the extension, and the extension\n\
    \  file_name.split(%r{^[a-z]})[0] # Split file name into an array with two elements:\
    \ \n                    # the file name without the extension, and the extension\n\
    \  file_name.split(%r{^[a-z]})[0].downcase! # Convert first element of array into\
    \ \n                                            # lower case\n  file_name.split(%r{^[a-z]})[0].split(%r{\\\
    d})[0] # Split file name into an array with two elements: \n                 \
    \   # the file name without the extension, and the extension\n  file_name.split(%r{^[a-z]})[0].split(%r{\\\
    d})[0].downcase! # Convert first element of array into \n                    \
    \                                        # lower case\n  file_name.split(%r{^[a-z]})[0].split(%r{\\\
    d})[0].split(%r{\\.})[0] # Split file name into an array with two elements: \n\
    \                    # the file name without the extension, and the extension\n\
    \  file_name.split(%r{^[a-z]})[0].split(%r{\\d})[0].split(%r{\\.})[0].downcase!\
    \ # Convert first element of array into \n                                   \
    \                                     # lower case\n  file_name.split(%r{^[a-z]})[0].split(%r{\\\
    d})[0].split(%r{\\.})[0].split(%r{\\.})[0] # Split file name into an array with\
    \ two elements: \n                    # the file name without the extension, and\
    \ the extension\n  file_name.split(%r{^[a-z]})[0].split(%r{\\d})[0].split(%r{\\\
    .})[0].split(%r{\\.})[0].split(%r{\\.})[0] # Split file name into an array with\
    \ two elements: \n                    # the file name without the extension, and\
    \ the extension\n  file_name.split(%r{^[a-z]})[0].split(%r{\\d})[0].split(%r{\\\
    .})[0].split(%r{\\.})[0].split(%r{\\.})[0].split(%r{\\.})[0] # Split file name\
    \ into an array with two elements: \n                    # the file name without\
    \ the extension, and the extension\n  file_name.split(%r{^[a-z]})[0].split(%r{\\\
    d})[0].split(%r{\\.})[0].split(%r{\\.})[0].split(%r{\\.})[0].split(%r{\\.})[0].split(%r{\\\
    .})[0] # Split file name into an array with two elements: \n                 \
    \   # the file name without the extension", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z\\.]/, '')\n", "  file_name_array = file_name.split('.')\n\
    \  if file_name_array.length != 2 or file_name_array[0].length < 1 or file_name_array[0].upcase\
    \ !~ /^[a-z]$/ or file_name_array[1].upcase !~ /^[a-z]$/\n    return 'No'\n  else\n\
    \    return 'Yes'\n  end\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.gsub!(/^\\./, \"\")\n  file_name.gsub!(/\\..*/, \"\")\n\
    \  file_name.downcase!\n  file_name.include?(\".\")\n  file_name.include?(\"..\"\
    )\n  file_name.include?(\".txt\")\n  file_name.include?(\".exe\")\n  file_name.include?(\"\
    .dll\")\n  file_name.include?(\"..\")\nend", "  file_name.downcase!\n  file_name.split(%r{\\\
    .}) # Split file name into an array containing ['example', 'txt']\n  file_name.split(%r{\\\
    d}) # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{^[a-z]})[0]\
    \ # Split file name into an array containing ['1', 'example']\n  file_name.split(%r{^[a-z]})[0].downcase!\n\
    \  file_name.split(%r{[a-z]}) # Split file name into an array containing ['example']\n\
    \  file_name.split(%r{[a-z]})[0] # Split file name into an array containing ['example']\n\
    \  file_name.split(%r{[a-z]})[0].downcase!\n  file_name.split(%r{[a-z]})[0].split(%r{\\\
    .}) # Split file name into an array containing ['example', 'txt']\n  file_name.split(%r{[a-z]})[0].split(%r{\\\
    d}) # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{[a-z]})[0].split(%r{^[a-z]})\
    \ # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{[a-z]})[0].split(%r{^[a-z]})[0]\
    \ # Split file name into an array containing ['1', 'example']\n  file_name.split(%r{[a-z]})[0].split(%r{^[a-z]})[0].downcase!\n\
    \  file_name.split(%r{[a-z]})[0].split(%r{[a-z]}) # Split file name into an array\
    \ containing ['example']\n  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0]\
    \ # Split file name into an array containing ['example']\n  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0].downcase!\n\
    \  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0].split(%r{\\.}) # Split file\
    \ name into an array containing ['example', 'txt']\n  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0].split(%r{\\\
    d}) # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0].split(%r{^[a-z]})\
    \ # Split file name into an array containing ['1', 'example', 'dll']\n  file_name.split(%r{[a-z]})[0].split(%r{[a-z]})[0].split(%r{^[a-z]})[0]\
    \ # Split file name into an array containing ['1', 'example']\n  file_name.split(",
  "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/^\\./, '')\n  file_name = file_name.gsub(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name\
    \ = file_name", "  file_name = file_name.downcase\n  \n  # Check that the file\
    \ name contains exactly one dot '.'\n  if file_name.count (\".\") == 1\n    #\
    \ Check that there are no more than three digits in the file's name\n    if file_name.count\
    \ (\"0\"..\"9\") > 1\n      # Check that there are no more than three digits in\
    \ the file's name\n      if file_name.count (\"0\"..\"9\") > 1\n        # Check\
    \ that there are no more than three digits in the file's name\n        if file_name.count\
    \ (\"0\"..\"9\") > 1\n          # Check that there are no more than three digits\
    \ in the file's name\n          if file_name.count (\"0\"..\"9\") > 1\n      \
    \      # Check that there are no more than three digits in the file's name\n \
    \           if file_name.count (\"0\"..\"9\") > 1\n              # Check that\
    \ there are no more than three digits in the file's name\n              if file_name.count\
    \ (\"0\"..\"9\") > 1\n                # Check that there are no more than three\
    \ digits in the file's name\n                if file_name.count (\"0\"..\"9\"\
    ) > 1\n                  # Check that there are no more than three digits in the\
    \ file's name\n                  if file_name.count (\"0\"..\"9\") > 1\n     \
    \               # Check that there are no more than three digits in the file's\
    \ name\n                    if file_name.count (\"0\"..\"9\") > 1\n          \
    \            # Check that there are no more than three digits in the file's name\n\
    \                      if file_name.count (\"0\"..\"9\") > 1\n               \
    \         # Check that there are no more than three digits in the file's name\n\
    \                        if file_name.count (\"0\"..\"9\") > 1\n             \
    \             # Check that there are no more than three digits in the file's name\n\
    \                          if file_name.count (\"0\"..\"9\") > 1\n           \
    \                 # Check that there are no more than three digits in the file's\
    \ name\n                            if file_name.count (\"0\"..\"9\") > 1\n  \
    \                            # Check that there are no more than three digits\
    \ in the file's name\n                              if file_name.count (\"0\"\
    ..\"9\") > 1\n                                # Check that there are no more than\
    \ three digits in the file's name\n                                if file_name.count\
    \ (\"0\"..\"9\") > 1\n                                  # Check that there are\
    \ no more than three digits in the file's name\n                             \
    \     if file_name.count (\"0\"..\"9\") > 1\n                                \
    \    # Check that there are no more than three digits in the file's name\n   \
    \                                 if file_name.count (\"0\"..\"9\") > 1\n    \
    \                                  # Check that there are no more than three digits\
    \ in the file's name\n                                    if file_name.count (\"\
    0\"..\"9\") > 1\n                                      # Check that there are\
    \ no more than three digits in the file's name\n                             \
    \       if file_name.count (\"0\"..\"9\") > 1\n                              \
    \        # Check that there are no more than three digits in the file", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.\\./, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.scan(/\\.[a-z]+/).flatten.each do |dot|\n    file_name.slice!(0,dot.length)\n\
    \  end\n  file_name.scan(/[a-z]/).flatten.each do |letter|\n    file_name.slice!(0,1)\n\
    \  end\n  file_name.empty? ? true : false\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| c |>\nThis doesn't seem to work. `file_name_check(\"1example.dll\") #\
    \ => true`\n<|/ c |>\n<| c |>\n: I updated my answer to fix the bug. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| c |>\nThanks for your answer. I've updated my\
    \ question to include a test case that fails. I appreciate your help on this.\n\
    <|/ c |>\n<| c |>\n: I updated my answer to fix the bug. Thanks for pointing it\
    \ out.\n<|/ c |>\n<| c |>\nThanks for your answer. I've updated my question to\
    \ include a test case that fails. I appreciate your help on this.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/\\\
    .(txt|exe|dll)$/).empty? && file_name.scan(/[^\\.]$/).empty?\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/\\.exe/).empty? && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.html/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty?\
    \ && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\.haml/).empty? && file_name.scan(/\\\
    .haml/).empty? && file_name.scan(/\\.haml/).empty? ", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  ", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\z/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.exe,.dll]/)\n\
    \  file_name.length <= 3\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.\\z/, '')\n  file_name.gsub!(/^[a-z]/, '')\n \
    \ file_name.include?('.')\n  file_name.include?('.txt') || file_name.include?('.exe')\
    \ || file_name.include?('.dll')\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks\
    \ for your answer. Your code works perfectly for me. I am just wondering why my\
    \ code does not work. Do you know why?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation.\
    \ Your explanation makes sense to me. I am just wondering why my code does not\
    \ work. Do you know why?\n<|/ c |>\n<| c |>\nI added some explanation to the answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation. Your explanation\
    \ makes sense to me. I am just wondering why my code does not work. Do you know\
    \ why?\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.[a-z]+/).empty? &&\
    \ file_name.scan(/[a-z][a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+/).empty?\
    \ && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+/).empty?\
    \ && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+/).empty?\
    \ && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\.[a-z]+\\\
    .[a-z]+\\.[a-z]+/).empty? && file_name.scan(/[a-z][a-z]+", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\n\
    \  file_name.include?(\".\") && file_name.split(\".\").size <= 2\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\\
    ./, \"\") # remove all dots\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") || file_name.start_with?(\"A\") && file_name.end_with?(\"Z\") || file_name.start_with?(\"\
    0\") && file_name.end_with?(\"9\") || file_name.start_with?(\"_\") || file_name.end_with?(\"\
    _\")\n  file_name.include?(\".\") && file_name.split(\".\").length == 2 && file_name.split(\"\
    .\").first.start_with?(\"a\") && file_name.split(\".\").last.end_with?(\"z\")\
    \ || file_name.split(\".\").first.start_with?(\"A\") && file_name.split(\".\"\
    ).last.end_with?(\"Z\") || file_name.split(\".\").first.start_with?(\"0\") &&\
    \ file_name.split(\".\").last.end_with?(\"9\") || file_name.split(\".\").first.start_with?(\"\
    _\") || file_name.split(\".\").last.end_with?(\"_\")\n  return file_name.include?(\"\
    .\") && file_name.split(\".\").length == 2 && file_name.split(\".\").first.start_with?(\"\
    a\") && file_name.split(\".\").last.end_with?(\"z\") || file_name.split(\".\"\
    ).first.start_with?(\"A\") && file_name.split(\".\").last.end_with?(\"Z\") ||\
    \ file_name.split(\".\").first.start_with?(\"0\") && file_name.split(\".\").last.end_with?(\"\
    9\") || file_name.split(\".\").first.start_with?(\"_\") || file_name.split(\"\
    .\").last.end_with?(\"_\")\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/^\\.+/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.include?('.')\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\.[^\\.]/,\
    \ \"\") # remove all dots except the last one\n  file_name.gsub!(/^\\./, \"\"\
    ) # remove all dots except the first one\n  file_name.gsub!(/\\A[a-z][a-z]+\\\
    z/i, \"Yes\") # remove all non-letter characters before the dot\n  file_name.gsub!(/\\\
    A[a-z][a-z]+\\.txt\\z/i, \"Yes\") # remove all non-letter characters before the\
    \ dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.exe\\z/i, \"Yes\") # remove all non-letter\
    \ characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.dll\\z/i, \"\
    Yes\") # remove all non-letter characters before the dot\n  file_name.gsub!(/\\\
    A[a-z][a-z]+\\.zip\\z/i, \"Yes\") # remove all non-letter characters before the\
    \ dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.rar\\z/i, \"Yes\") # remove all non-letter\
    \ characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.7z\\z/i, \"Yes\"\
    ) # remove all non-letter characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\\
    .tar\\z/i, \"Yes\") # remove all non-letter characters before the dot\n  file_name.gsub!(/\\\
    A[a-z][a-z]+\\.gz\\z/i, \"Yes\") # remove all non-letter characters before the\
    \ dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.bz2\\z/i, \"Yes\") # remove all non-letter\
    \ characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.7z\\z/i, \"Yes\"\
    ) # remove all non-letter characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\\
    .tar\\.gz\\z/i, \"Yes\") # remove all non-letter characters before the dot\n \
    \ file_name.gsub!(/\\A[a-z][a-z]+\\.tar\\.bz2\\z/i, \"Yes\") # remove all non-letter\
    \ characters before the dot\n  file_name.gsub!(/\\A[a-z][a-z]+\\.tar\\.xz\\z/i,\
    \ \"Yes\") # remove all non-letter characters before the dot\n  file_name.gsub!(/\\\
    A[a-z][a-z]+\\.tar\\.lz\\z/i, \"Yes\") # remove all non-letter characters before\
    \ the dot", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\\
    .\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? && file_name.scan(/\\.exe/).empty?\
    \ && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\.txt/).empty?\n  return\
    \ 'Yes'\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\") #\
    \ remove everything except numbers and dots\n  file_name.gsub!(/\\.+/, \".\")\
    \ # replace multiple dots with one dot\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") && file_name.end_with?(\"A\") && file_name.end_with?(\"Z\") && file_name.length\
    \ > 3 ? \"Yes\" : \"No\"\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  file_name.downcase!\n  file_name.split(//).count < 3 || file_name.include?(\"\
    .\") || file_name.split(\".\").first.empty? || file_name.split(\".\").first.upcase.start_with?(\"\
    A\") || file_name.split(\".\").last.downcase.end_with?(\"TXT\") || file_name.split(\"\
    .\").last.downcase.end_with?(\"EXE\") || file_name.split(\".\").last.downcase.end_with?(\"\
    DLL\")\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for your help.\
    \ I really appreciate it. I tried your code, but I got this error when I tried\
    \ to run it: undefined method `split' for nil:NilClass. I tried to fix it, but\
    \ I still get the same error. Do you know what might be causing this?\n<|/ c |>\n\
    <| c |>\nI edited my answer to include a solution for your problem. Let me know\
    \ if it works.\n<|/ c |>\n<| c |>\nThank you so much for your help. I really appreciate\
    \ it. I tried your code, but I got this error when I tried to run it: undefined\
    \ method `split' for nil:NilClass. I tried to fix it, but I still get the same\
    \ error. Do you know what might be causing this?\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include a solution for your problem. Let me know if it works.\n\
    <|/ c |>\n<| c |>\nThank you so much for your help. I really appreciate it. I\
    \ tried your code, but I got this error when I tried to run it: undefined method\
    \ `split' for nil:NilClass. I tried to fix it, but I still get the same error.\
    \ Do you know what might be causing this?\n<|/ c |>\n<| a tags=ruby,ruby-on-rails,ruby-on-rails-4\
    \ |>\nI believe this should work:\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[^\\.]/).empty? && file_name.scan(/[a-z][A-Z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\")\n  file_name.gsub!(/^\\.+/, \"\")\n  file_name.gsub!(/\\.[a-z]{2,}/,\
    \ \".\")\n  file_name.present? && file_name.include?(\".\")\nend", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit\
    \ and non-dot characters\n  file_name.gsub!(/\\.\\z/, \".\") # replace all dot\
    \ characters at the end of the string with a single dot\n  file_name.gsub!(/^\\\
    ./, \"\") # remove all leading dot characters\n  file_name.start_with?(\"a\")\
    \ && file_name.end_with?(\"z\") && file_name.start_with?(\"A\") && file_name.end_with?(\"\
    Z\") && file_name.include?(\".\") # check that file name contains only latin alphabet\
    \ letters and dots\n  return file_name\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.", "  file_name.downcase!\n\
    \  file_name = file_name.chomp\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  ", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.scan(/[^0-9\\.]/).empty? && file_name.scan(/\\\
    .[^\\.]/).empty? && file_name.scan(/[^a-zA-Z]/).empty? && file_name.scan(/^[^a-zA-Z]/).empty?\n\
    \  file_name.scan(/^[^a-zA-Z]/).empty?\nend\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThanks for your answer. Your code works well for most of the cases, but\
    \ it fails for some cases. For example, the following test case fails: \n`file_name_check(\"\
    1example.dll\") # => 'No' (the name should start with a latin alphapet letter)`\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a solution for your new case.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works well\
    \ for most of the cases, but it fails for some cases. For example, the following\
    \ test case fails:\n`file_name_check(\"1example.dll\") # => 'No' (the name should\
    \ start with a latin alphapet letter)`\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to include a solution for your new case. Hope it helps.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? &&\
    \ file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    end", "  file_name.downcase!\n  file_name.split(%r{\\.}) # Split file name into\
    \ an array using '.' as the delimiter\n  file_name.split(%r{\\d}) # Split file\
    \ name into an array using '0' as the delimiter\n  file_name.split(%r{[^a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array using everything else as the delimiter\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array using everything else as the ", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(/\\.[a-z][A-Z]/).empty?\
    \ && file_name.scan(/\\.[a-z][A-Z]/).empty? && file_name.scan(", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.\\z/, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend", "  file_name.downcase!\n  file_name\
    \ = file_name.downcase\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{3}/).empty? &&\n    file_name.scan(/[a-z][a-z]/).empty? && file_name.scan(/[a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z]/).empty? && file_name.scan(/[a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z]/).empty? && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty? &&\
    \ file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty? &&\n\
    \    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ && file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]/).empty?\
    \ &&\n    file_name.scan(/[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\./, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[^\\.]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[^\\.]/).empty?\nend", "  file_name.downcase!\n  file_name.scan(/[^0-9\\\
    .]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^A-Z]/)\n\
    \  file_name.scan(/[^A-Za-z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Za-z]/)\n\
    \  file_name.scan(/[^0-9A-Z]/)\n  file_name.scan(/[^0-9]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\\
    .]/)\n  file_name.scan(/[^\\.]/)\n  file_name.scan(/[^\\.]/)\n  file_name.", " \
    \ file_name.downcase!\n  file_name.chomp!\n  file_name.gsub!(/[^0-9\\.]/, \"\"\
    )\n  file_name.gsub!(/^\\./, \"\")\n  file_name.gsub!(/\\.[^a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\\
    .[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\
    \")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.gsub!(/\\.[a-z]/, \"\")\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\")\n  file_name.", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]+/).empty? && file_name.scan(/^[a-z]/).empty? &&\
    \ file_name.scan(/[a-z]+$/).empty?\nend", "  file_name.downcase!\n  file_name.scan(/[^0-9\\\
    .]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name.split(\"\
    .\").length == 1\n  file_name.split(\".\").first.downcase!\n  file_name.split(\"\
    .\").first.match(/^[a-z_]/)\nend", "  file_name.downcase!\n  file_name.split(%r{\\\
    .}) #=> [\"example\", \"txt\"]\n  file_name.split(%r{\\.}).size <= 2 #=> true\n\
    \  file_name.split(%r{\\.}).first =~ /^[a-z]/i #=> true\n  file_name.split(%r{\\\
    .}).last =~ /txt|exe|dll/i #=> true\n  return \"Yes\" if file_name.split(%r{\\\
    .}).size == 3 && file_name.split(%r{\\.}).first && file_name.split(%r{\\.}).last\
    \ && file_name.split(%r{\\.}).first.size <= 3 && file_name.split(%r{\\.}).last.split(/txt|exe|dll/).size\
    \ == 1 && file_name.split(%r{\\.}).last.split(/txt|exe|dll/).first =~ /^[a-z]/i\
    \ && file_name.split(%r{\\.}).last.split(/txt|exe|dll/).last =~ /txt|exe|dll/i\
    \ #=> \"Yes\"\n  return \"No\"\nend\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\n\
    Thanks for the answer! I added some examples to my question to clarify what I'm\
    \ looking for.\n<|/ c |>\n<| c |>\nI added a solution that should work for you.\
    \ Let me know if it works.\n<|/ c |>\n<| c |>\nThanks for the answer! I added\
    \ some examples to my question to clarify what I'm looking for.\n<|/ c |>\n<|\
    \ c |>\nI added a solution that should work for you. Let me know if it works.\n\
    <|/ c |>\n<| c |>\nThanks for the answer! I added some examples to my question\
    \ to clarify what I'm looking for.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[A-Z]/).empty? && file_name.scan(/^[a-z][a-z]/).empty? &&\
    \ file_name.scan(/^[A-Z][A-Z]/).empty? && file_name.scan(/^[a-z][A-Z]/).empty?\
    \ && file_name.scan(/^[A-Z][a-z]/).empty? && file_name.scan(/^[0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][A-Z]/).empty? && file_name.scan(/^[0-9][a-z][0-9]/).empty?\
    \ && file_name.scan(/^[0-9][A-Z][0-9]/).empty? && file_name.scan(/^[0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]/).empty? && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][a-z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]/).empty?\
    \ && file_name.scan(/^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9",
  "  file_name.downcase!\n  file_name.chomp!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? &&\n    file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/[a-z]{2,}/).empty? &&\n    file_name.scan(/[a-z0-9]{2,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{3,}/).empty? &&\n    file_name.scan(/[a-z0-9]{4,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{5,}/).empty? &&\n    file_name.scan(/[a-z0-9]{6,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{7,}/).empty? &&\n    file_name.scan(/[a-z0-9]{8,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{9,}/).empty? &&\n    file_name.scan(/[a-z0-9]{10,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{11,}/).empty? &&\n    file_name.scan(/[a-z0-9]{12,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{13,}/).empty? &&\n    file_name.scan(/[a-z0-9]{14,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{15,}/).empty? &&\n    file_name.scan(/[a-z0-9]{16,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{17,}/).empty? &&\n    file_name.scan(/[a-z0-9]{18,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{19,}/).empty? &&\n    file_name.scan(/[a-z0-9]{20,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{21,}/).empty? &&\n    file_name.scan(/[a-z0-9]{22,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{23,}/).empty? &&\n    file_name.scan(/[a-z0-9]{24,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{25,}/).empty? &&\n    file_name.scan(/[a-z0-9]{26,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{27,}/).empty? &&\n    file_name.scan(/[a-z0-9]{28,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{29,}/).empty? &&\n    file_name.scan(/[a-z0-9]{30,}/).empty?\
    \ && file_name.scan(/[a-z0-9]{", "  file_name = file_name.downcase\n  file_name\
    \ = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/\\.+/, '')\n\
    \  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\z/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer. I tried your code, but\
    \ I got this error `undefined method `start_with?' for nil:NilClass` at line `file_name.start_with?(/[a-z]/)`\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a test for the file's name starting\
    \ with a latin alphabet letter. Does that help?\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works fine for my case. But, I have one more question.\
    \ Can I ask you one more question? If I want to check whether the file name is\
    \ valid for another language, such as Chinese or Japanese? I tried to add `file_name.start_with?(/[\\\
    u0391-\\uFFE5]+/)` but it doesn't work. Do you have any idea?\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to include a test for the file's name starting with a\
    \ latin alphabet letter. Does that help?\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for my case. But, I have one more question. Can I ask you\
    \ one more question? If I want to check whether the file name is valid for another\
    \ language, such as Chinese or Japanese? I tried to add `file_name.start_with?(/[\\\
    u0391-\\uFFE5]+/)` but it doesn't work. Do you have any idea?\n<|/ c |>\n<| a\
    \ tags=ruby,regex |>\n<code>", "  file_name.downcase!\n  file_name.scan(/[^0-9\\\
    .]/).each do |char|\n    return false if char.nil?\n  end\n  file_name.scan(/\\\
    .[^\\.]/).each do |char|\n    return false if char.nil?\n  end\n  file_name.scan(/[^a-z]/).each\
    \ do |char|\n    return false if char.nil?\n  end\n  file_name.scan(/[^A-Z]/).each\
    \ do |char|\n    return false if char.nil?\n  end\n  file_name.scan(/[^A-Za-z]/).each\
    \ do |char|\n    return false if char.nil?\n  end\n  return true\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit and non-dot characters\n\
    \  file_name.gsub!(/\\.{2,}/, \".\") # replace multiple dots with a single dot\n\
    \  file_name.start_with?(\"a\") && file_name.end_with?(\"z\") && file_name.start_with?(\"\
    A\") && file_name.end_with?(\"Z\") && file_name.include?(\".\") && file_name.include?(\"\
    .txt\") && file_name.include?(\".exe\") && file_name.include?(\".dll\")\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9][0-9][0-9]/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[^a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\n\
    end", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\\
    .\\./).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][A-Z]/).empty? && file_name.scan(/^[A-Z][a-z]/).empty?\
    \ && file_name.scan(/^[0-9]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][A-Z]/).empty? && file_name.scan(/^[A-Z][a-z]/).empty?\
    \ && file_name.scan(/^[0-9]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][A-Z]/).empty? && file_name.scan(/^[A-Z][a-z]/).empty?\
    \ && file_name.scan(/^[0-9]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][A-Z]/).empty? && file_name.scan(/^[A-Z][a-z]/).empty?\
    \ && file_name.scan(/^[0-9]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][A-Z]/).empty? && file_name.scan(/^[A-Z][a-z]/).empty?\
    \ && file_name.scan(/^[0-9]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][a-z]/).empty? && file_name.scan(/^[A-Z][A-Z]/).empty?\
    \ && file_name.scan(/^[a-z][", "  file_name.downcase!\n  file_name.scan(/[^0-9\\\
    .]/).each do |char|\n    return false if char.size != 1\n    return false if char.first\
    \ != 'a'\n    return false if char.first != 'A'\n    return false if char.last\
    \ != 'z'\n    return false if char.last != 'Z'\n  end\n  true\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9][0-9]/).empty? && file_name.scan(/\\.[^\\.]/).empty? &&\
    \ file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[A-Z]/).empty? && file_name.scan(/^[a-zA-z]/).empty?\
    \ && file_name.scan(/^[A-Za-z]/).empty? && file_name.scan(/^[0-9a-z]/).empty?\
    \ && file_name.scan(/^[0-9A-Z]/).empty? && file_name.scan(/^[0-9a-zA-Z]/).empty?\
    \ && file_name.scan(/^[^0-9a-zA-Z\\.]/).empty?\nend", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.start_with?('a')\n\
    \  file_name.end_with?('z')\n  file_name.end_with?('A')\n  file_name.end_with?('Z')\n\
    \  file_name.include?('.')\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.chomp!\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") || file_name.start_with?(\"A\") && file_name.end_with?(\"Z\")\n  file_name.include?(\"\
    .\") && file_name.split(\".\").length == 1\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.chomp!\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[.]txt|[.]exe|[.]dll/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[a-z]/)\n \
    \ file_name.include?('.')\n  file_name.include?('.txt')\n  file_name.include?('.exe')\n\
    \  file_name.include?('.dll')\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/^\\.+/, '')\n  file_name.gsub!(/\\.[^\\.]+$/, '')\n\
    \  file_name.gsub!(/^[a-z]/, '')\n  file_name.gsub!(/[^a-z]/, '')\n  file_name.empty?\
    \ ? 'No' : 'Yes'\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/,\
    \ '')\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).first\
    \ != '' ? \"No\" : \"Yes\"\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? &&\
    \ file_name.scan(/\\.exe/).empty? && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\\
    .txt/).empty?\n  return 'Yes'\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks\
    \ for your answer. I tried your code, but I got this error `undefined method `scan'\
    \ for nil:NilClass` at `file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? && file_name.scan(/\\.exe/).empty?\
    \ && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\.txt/).empty?`\n<|/\
    \ c |>\n<| c |>\nI edited my answer to fix the error. `scan` is an instance method\
    \ of `String`, so you need to call it on a `String` instance (in this case, `file_name`).\
    \ `file_name.scan(/[0-9]{3}/).empty?` will return a `Boolean` indicating whether\
    \ or not the string contains 3 digits. `file_name.scan(/\\.\\./).empty?` will\
    \ return a `Boolean` indicating whether or not the string contains a `.` character.\
    \ `file_name.scan(/[a-z][a-z]/).empty?` will return a `Boolean` indicating whether\
    \ or not the string contains a letter from latin alphabet (`a`-`z` and `A`-`Z`).\n\
    <|/ c |>\n<| c |>\n`file_name.scan(/\\.exe/).empty?` will return a `Boolean` indicating\
    \ whether or not the string contains a `.exe` character. `file_name.scan(/\\.dll/).empty?`\
    \ will return a `Boolean` indicating whether or not the string contains a `.dll`\
    \ character. `file_name.scan(/\\.txt/).empty?` will return a `Boolean` indicating\
    \ whether or not the string contains a `.txt` character. `file_name.scan(/\\.exe/).empty?`\
    \ will return a `Boolean` indicating whether or not the string contains a `.exe`\
    \ character. `file_name.scan(/\\.dll/).empty?` will return a `Boolean` indicating\
    \ whether or not the string contains a `.dll` character. `file_name.scan(/\\.txt/).empty?` ",
  "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, \"\"\
    ) # Remove all non-numeric characters\n  file_name = file_name.gsub(/\\.[^\\.]+$/,\
    \ \"\") # Remove all characters after the last dot\n  file_name = file_name.gsub(/^[^a-z]/,\
    \ \"\") # Remove all characters before the first\n  file_name = file_name.downcase\
    \ # Convert to lower case\n  \n  if file_name.size < 3 || file_name.size > 10\n\
    \    return \"No\"\n  elsif file_name.include?(\".\") && file_name.split(\".\"\
    ).size != 2\n    return \"No\"\n  elsif !file_name.start_with?(\"a\"..\"z\") &&\
    \ !file_name.start_with?(\"A\"..\"Z\")\n    return \"No\"\n  end\n  \n  return\
    \ \"Yes\"\nend", "  file_name.downcase!\n  file_name.split(%r{\\.}) # Split file\
    \ name into an array of file extensions. \n  file_name.split(%r{^\\d}) # Split\
    \ file name into an array of file extensions. \n  file_name.split(%r{\\d}) # Split\
    \ file name into an array of file extensions. \n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]})\
    \ # Split file name into an array of file extensions. \n  file_name.split(%r{[a-z][a-z][a-z][a-z][a-z",
  "  file_name.downcase!\n  file_name.chomp!\n  file_name.scan(/[0-9][0-9]/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? &&\
    \ file_name.scan(/\\.exe/).empty? && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\.]*\\\
    z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/[a-z][a-z\\\
    .]*\\z/).empty? && file_name.scan(/\\.[a-z]{2,}/).", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit and non-dot characters\n\
    \  file_name.gsub!(/\\.+/, \".\") # replace all multiple dots with a single dot\n\
    \  file_name.start_with?(\"a\") && file_name.end_with?(\"z\") && file_name.start_with?(\"\
    A\") && file_name.end_with?(\"Z\") && file_name.include?(\".\") # check that the\
    \ file name contains at least one dot and that it starts with a latin alphapet\
    \ letter\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\") #\
    \ remove everything except numbers and dots\n  file_name.gsub!(/\\.[^\\.]/, \"\
    \") # remove everything after the dot\n  file_name.gsub!(/^[^a-z]/, \"\") # remove\
    \ everything before the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after\
    \ the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\\
    .[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\"\
    ) # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove\
    \ everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after\
    \ the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\\
    .[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\"\
    ) # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove\
    \ everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after\
    \ the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\\
    .[a-z]/, \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\") # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\"\
    ) # remove everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove\
    \ everything after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove everything ",
  "  file_name.downcase!\n  file_name = file_name.chomp\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/^[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\
    \")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\\
    .[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/, \"\")\n  file_name =\
    \ file_name.gsub(/\\.[a-z]/, \"\")\n  file_name = file_name.gsub(/\\.[a-z]/",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\z/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/\\./, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    end", "  file_name.downcase!\n  file_name.scan(/[^0-9]*/)\n  file_name.scan(/\\\
    .[^\\.]*$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n\
    \  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n\
    \  file_name.scan(/[^a-z]$/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/[^a-z]",
  "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.start_with?('a')\n\
    \  file_name.start_with?('A')\n  file_name.include?('.')\n  file_name.include?('.txt')\n\
    \  file_name.include?('.exe')\n  file_name.include?('.dll')\nend", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}[a-z][a-z][a-z]/)\n  file_name.scan(/[a-z][a-z][a-z]/)\n\
    \  file_name.scan(/[a-z][a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n\
    \  file_name.scan(/[a-z]/)\n  file_name.scan(/[a-z]/)\n  file_name", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/\\.(txt|exe|dll)$/).empty?\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]*/).size\
    \ <= 3 ? \"No\" : \"Yes\"\n  file_name.include?(\".\") ? \"No\" : \"Yes\"\n  file_name.split(\"\
    .\").first.downcase =~ /^[a-z]/ ? \"No\" : \"Yes\"\n  file_name.split(\".\").last.downcase\
    \ =~ /^(exe|dll)/ ? \"No\" : \"Yes\"\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/[txt|exe|dll]/)\n\
    end", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]+$/, '')\n  \n  if file_name.empty?\n    return 'No'\n  elsif file_name.length\
    \ >= 3\n    return 'Yes'\n  elsif file_name.include?('.') && file_name[0..0] !=\
    \ ''\n    return 'Yes'\n  elsif file_name.include?('.') && file_name[0..0] ==\
    \ '' && file_name[1..2] != 'exe' && file_name[1..2] != 'dll'\n    return 'No'\n\
    \  else\n    return 'No'\n  end\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, \"\") # remove all non-digit and non-dot characters\n  file_name.gsub!(/\\\
    .{2,}/, \".\") # replace multiple dots with a single one\n  file_name.gsub!(/^\\\
    ./, \"\") # remove leading dot\n  file_name.start_with?(\"a\") && file_name.end_with?(\"\
    z\") && file_name.start_with?(\"A\") && file_name.end_with?(\"Z\") # check if\
    \ the first character is a latin alphapet letter\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| c |>\nI like the way you explained your regex. Thanks!\n<|/ c |>\n<|\
    \ c |>\nThis doesn't seem to work if you have a file named `1example.txt`\n<|/\
    \ c |>\n<| c |>\n: I added a comment to the question explaining why this doesn't\
    \ work. Thanks for pointing it out.\n<|/ c |>\n<| c |>\n: Thanks for pointing\
    \ it out. I added a comment to the question explaining why this doesn't work.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| c |>\n: Thanks for pointing it out.\
    \ I added a comment to the question explaining why this doesn't work. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>\n/^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/\\./, '').gsub(/^[a-z]/, '')\n  file_name\
    \ = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n\
    \  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/,\
    \ '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name\
    \ = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n \
    \ file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name =\
    \ file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name\
    \ = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n\
    \  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/,\
    \ '').gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name\
    \ = file_name.gsub(/\\.$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name\
    \ = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n \
    \ file_name = file_name.gsub(/\\.[a-z]/, '').gsub(/^[a-z]/, '')\n  file_name =\
    \ file_name", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/^\\\
    ./, '')\n  file_name.gsub!(/\\.[^a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n", "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, \"\")\n  file_name = file_name.gsub(/^\\.+/, \"\")\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/^[a-z]/, \"a\")\n  file_name\
    \ = file_name.gsub(/[A-Z]/, \"A\")\n  file_name = file_name.gsub(/^[0-9]/, \"\
    0\")\n  file_name = file_name.gsub(/[0-9]/, \"0\")\n  file_name = file_name.gsub(/\\\
    .$/, \"\")\n  file_name = file_name.downcase\n  \n  if file_name =~ /^[0-9]{3}$/\n\
    \    return 'Yes'\n  else\n    return 'No'\n  end\nend", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\n\
    \  file_name.include?(\".\") && file_name.split(\".\").length == 1\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.\\z/, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend\n</code>\n<|/ a tags=ruby,regex |>\n\
    <| c |>\nThanks for your answer. Your code works perfectly for me. However I still\
    \ don't understand why my code doesn't work. Could you please explain why my code\
    \ doesn't work?\n<|/ c |>\n<| c |>\nThe code you posted doesn't work because you\
    \ didn't use my code. Your code doesn't work because you didn't use my code. Your\
    \ code doesn't work because you didn't use my code. Your code doesn't work because\
    \ you didn't use my code. Your code doesn't work because you didn't use my code.\
    \ Your code doesn't work because you didn't use my code. Your code doesn't work\
    \ because you didn't use my code. Your code doesn't work because you didn't use\
    \ my code. Your code doesn't work because you didn't use my code. Your code doesn't\
    \ work because you didn't use my code. Your code doesn't work because you didn't\
    \ use my code. Your code doesn't work because you didn't use my code. Your code\
    \ doesn't work because you didn't use my code. Your code doesn't work because\
    \ you didn't use my code. Your code doesn't work because you didn't use my code.\
    \ Your code doesn't work because you didn't use my code. Your code doesn't work\
    \ because you didn't use my code. Your code doesn't work because you didn't use\
    \ my code. Your code doesn't work because you didn't use my code. Your code doesn't\
    \ work because you didn't use my code. Your code doesn't work because you didn't\
    \ use my code. Your code doesn't work because you didn't use my code. Your code\
    \ doesn't work because you didn't use my code. Your code doesn't work because\
    \ you didn't use my code. Your code doesn't work because you didn't use my code.\
    \ Your code doesn't work because you didn't use my code. Your code doesn't work\
    \ because you didn't use my code. Your code doesn't work because you didn't use\
    \ my code. Your code doesn't work because you didn't use my code. Your code doesn't\
    \ work because you didn't use my code. Your code doesn't work because you didn't\
    \ use my code. Your code doesn't work because you didn't use my code. Your code\
    \ doesn't work because you didn't use my code. Your code doesn't work because\
    \ you didn't use my code. Your code doesn't work because you didn't use my code. ",
  "  file_name.downcase!\n  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\\
    .[a-z][a-z][a-z]$/)\n  file_name.include?(\".\") && !file_name.empty? && file_name.start_with?(\"\
    a\") && file_name.end_with?(\"z\")\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]*/).size\
    \ == 3 && file_name.include?(\".\") && file_name.split(\".\").first.downcase!.scan(/[a-z]/).size\
    \ == 1 && file_name.split(\".\").last.downcase!.scan(/[exe|dll]/).size == 1\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .+/, '')\n  file_name.start_with?(/^[a-z]/)\n  file_name.end_with?(%w(exe dll))\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\\
    .\\z/, '')\n  file_name.gsub!(/^[a-z]/, '')\n  file_name.include?('.')\nend",
  "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, '')\n\
    \  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\.[^\\\
    .]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .[a-z]/, '')\n  file_name = file_name.gsub(/\\.$/, '')\n  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/^[a-z]/,\
    \ '')\n  file_name = file_name.gsub(/\\.[a-z]/, '')\n  file_name = file_name.gsub(/\\\
    .$/, '')\n  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\\
    .]/, '')\n  file_name = file_name.gsub(/^\\.+/, '')\n  file_name = file_name.gsub(/\\\
    .[^\\.]+$/, '')\n  file_name = file_name.gsub(/^[a-z]/, '')\n  file_name = file_name.gsub(",
  "  file_name.downcase!\n  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\\
    .]/)\n  file_name.scan(/^[^a-z]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/\\\
    .[^\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.\\./).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.(txt|exe|dll)$/).empty?\nend", "  file_name.downcase!\n\
    \  file_name = file_name.chomp\n  file_name.gsub!(/[^0-9\\.]/, \"\") # remove\
    \ all non-digit and non-dot characters\n  file_name.gsub!(/\\.[^\\.]/, \"\") #\
    \ remove all dot characters except the last one\n  file_name.gsub!(/^[^a-zA-Z]/,\
    \ \"\") # remove all non-letter characters\n  file_name.gsub!(/[^a-zA-Z\\.]/,\
    \ \"\") # remove all non-letter characters\n  file_name.gsub!(/^\\.+/, \"\") #\
    \ remove all leading dot characters\n  file_name.gsub!(/\\..+/, \"\") # remove\
    \ all trailing dot characters\n  file_name.gsub!(/\\.\\./, \"\") # remove all\
    \ dot characters followed by a dot character\n  file_name.gsub!(/\\.\\.+/, \"\"\
    ) # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\./, \"\") # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\.+/, \"\") # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\.\\./, \"\") # remove all dot characters followed by a dot character \n\
    \  file_name.gsub!(/\\.\\.\\.\\.+/, \"\") # remove all dot characters followed\
    \ by a dot character \n  file_name.gsub!(/\\.\\.\\.\\.\\./, \"\") # remove all\
    \ dot characters followed by a dot character \n  file_name.gsub!(/\\.\\.\\.\\\
    .\\.+/, \"\") # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\.\\.\\.\\./, \"\") # remove all dot characters followed by a dot character\
    \ \n  file_name.gsub!(/\\.\\.\\.\\.\\.\\.+/, \"\") # remove all dot characters\
    \ followed by a dot character \n  file_name.gsub!(/\\.\\.\\.\\.\\.\\.\\./, \"\"\
    ) # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\.\\.\\.\\.\\.+/, \"\") # remove all dot characters followed by a dot character\
    \ \n  file_name.gsub!(/\\.\\.\\.\\.\\.\\.\\.\\./, \"\") # remove all dot characters\
    \ followed by a dot character \n  file_name.gsub!(/\\.\\.\\.\\.\\.\\.\\.\\.+/,\
    \ \"\") # remove all dot characters followed by a dot character \n  file_name.gsub!(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\./, \"\") # remove all dot characters followed by a dot ",
  "  file_name.downcase!\n  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\\
    .]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^a-z]/)\n  file_name.scan(/[^a-z", "  file_name.downcase!\n\
    \  file_name.chomp!\n  file_name.match(/^[0-9][0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name.gsub!(/\\\
    .\\z/, \"\")\n  file_name.start_with?(\"a\") && file_name.end_with?(\"z\") ||\
    \ file_name.start_with?(\"A\") && file_name.end_with?(\"Z\")\n  file_name.include?(\"\
    .\") && file_name.split(\".\").length == 1\nend", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, \"\")\n  file_name = file_name.gsub(/^\\\
    ./, \"\")\n  file_name = file_name.gsub(/\\.[^\\.]+$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.start_with?(/^[a-z]/) && file_name.end_with?(/[.]\\w+$/)\n\
    end", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all\
    \ non-digit and non-dot characters\n  file_name.gsub!(/\\.+/, \".\") # replace\
    \ all dots with one dot\n  file_name.gsub!(/^[a-z]/i, \"A\") # replace all letters\
    \ with capital letter\n  file_name.gsub!(/\\.[a-z]/i, \".A\") # replace all dots\
    \ with capital letter\n  file_name.gsub!(/^[A-Z]/i, \"a\") # replace all letters\
    \ with capital letter\n  file_name.gsub!(/\\.[A-Z]/i, \".a\") # replace all dots\
    \ with capital letter\n  file_name.gsub!(/^[0-9]/, \"0\") # replace all digits\
    \ with '0'\n  file_name.gsub!(/\\.[0-9]/, \".0\") # replace all dots with '0'\n\
    \  file_name.gsub!(/^[0-9a-z]/i, \"0\") # replace all digits with '0'\n  file_name.gsub!(/\\\
    .[0-9a-z]/i, \".0\") # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z]/i,\
    \ \"0\") # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z]/i, \"\
    .0\") # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z\\.]/i, \"0\"\
    ) # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z\\.]/i, \".0\"\
    ) # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z\\.\\-]/i, \"0\"\
    ) # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z\\.\\-]/i, \"\
    .0\") # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z\\.\\-\\.]/i,\
    \ \"0\") # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z\\.\\\
    -\\.]/i, \".0\") # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z\\\
    .\\-\\.\\s]/i, \"0\") # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z\\\
    .\\-\\.\\s]/i, \".0\") # replace all dots with '0'\n  file_name.gsub!(/^[0-9a-zA-Z\\\
    .\\-\\.\\s]/, \"0\") # replace all digits with '0'\n  file_name.gsub!(/\\.[0-9a-zA-Z\\\
    .\\-\\.", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.sub!(/^\\\
    ./, '')\n  file_name.sub!(/\\.[a-z]+$/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/,\
    \ '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/,\
    \ '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/,\
    \ '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/,\
    \ '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/,\
    \ '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n\
    \  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\.[a-z]+/, '')\n  file_name.sub!(/\\\
    .[a-z]+/, '')\n  file_name", "  file_name.downcase!\n  file_name.scan(/[0-9]*/).size\
    \ <= 3 ? \"Yes\" : \"No\"\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/\\\
    .(txt|exe|dll)$/)\nend", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/\\.[a-z]{2,}/).empty? && file_name.", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-digit and non-dot characters\n\
    \  file_name.gsub!(/\\.+/, \".\") # replace all multiple dots with a single dot\n\
    \  file_name.gsub!(/^\\./, \"\") # remove leading dot\n  file_name.downcase!\n\
    \  file_name.include?(\".\") && file_name.include?(\".txt\") && file_name.include?(\"\
    .exe\") && file_name.include?(\".dll\")\nend\n</code>\n<|/ a tags=ruby,regex |>\n\
    <| c |>\nThis doesn't work. `file_name_check(\"1example.dll\") # => 'No'`\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I edited the answer to include a test\
    \ case that fails.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited the\
    \ answer to include a test case that fails.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I edited the answer to include a test case that fails.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited the answer to include a test case\
    \ that fails.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name.downcase!\n \
    \ file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.scan(/\\.[^\\.]/)\n  file_name.scan(/[^a-z]/)\n\
    \  file_name.scan(/[^A-Z]/)\n  file_name.scan(/[^0-9a-z]/)\n  file_name.scan(/[^0-9A-Z]/)\n\
    \  file_name.scan(/[^0-9\\.]/)\n  file_name.", "  file_name.downcase!\n  file_name\
    \ = file_name.split('.').first\n  file_name.gsub!(/^0+/, '')\n  file_name.gsub!(/[^a-z]/,\
    \ '')\n  file_name.start_with?(/^[a-z]/)\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| c |>\nThanks for your answer. I've added a comment to my question to\
    \ explain why I prefer this approach to mine.\n<|/ c |>\n<| c |>\nI added a comment\
    \ to my question to explain why I prefer this approach to mine.\n<|/ c |>\n<|\
    \ c |>\nI added a comment to my question to explain why I prefer this approach\
    \ to mine.\n<|/ c |>\n<| c |>\nI added a comment to my question to explain why\
    \ I prefer this approach to mine.\n<|/ c |>\n<| c |>\nI added a comment to my\
    \ question to explain why I prefer this approach to mine.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.start_with?(\"\
    a\") && file_name.end_with?(\"z\") || file_name.start_with?(\"A\") && file_name.end_with?(\"\
    Z\")\n  file_name.include?(\".\") && file_name.split(\".\").size == 2 && file_name.split(\"\
    .\").first.start_with?(\"a\") && file_name.split(\".\").last.end_with?(\"z\")\
    \ || file_name.include?(\".\") && file_name.split(\".\").size == 2 && file_name.split(\"\
    .\").first.start_with?(\"A\") && file_name.split(\".\").last.end_with?(\"Z\")\n\
    \  file_name.include?(\".\") && file_name.split(\".\").size == 2 && file_name.split(\"\
    .\").last.include?(\"txt\") || file_name.include?(\".\") && file_name.split(\"\
    .\").size == 2 && file_name.split(\".\").last.include?(\"exe\") || file_name.include?(\"\
    .\") && file_name.split(\".\").size == 2 && file_name.split(\".\").last.include?(\"\
    dll\")\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-4 |>\n<| c |>\n\
    Thanks for your answer. Can you please explain how this works?\n<|/ c |>\n<| c\
    \ |>\nI added some explanation.\n<|/ c |>\n<| c |>\nThanks for your answer. Can\
    \ you please explain how this works?\n<|/ c |>\n<| c |>\nI added some explanation.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain how this works?\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.start_with?('a')\n  file_name.end_with?('z')\n  file_name.start_with?('A')\n\
    \  file_name.end_with?('Z')\n  file_name.include?('.')\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, '')\n  file_name.gsub!(/\\.\\./, '')\n  file_name.start_with?(/[a-z]/)\n\
    \  file_name.end_with?(/txt|exe|dll/)\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/\\\
    .(txt|exe|dll)$/)\nend", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\.]/,\
    \ '')\n  file_name.gsub!(/\\.\\z/, '')\n  file_name.gsub!(/^[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n\
    \  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\\
    .[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  file_name.gsub!(/\\.[a-z]/,\
    \ '')\n  file_name.gsub!(/\\.[a-z]/, '')\n  ", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.match(/^[0-9\\.]/)\n  file_name.match(/^[a-z][a-z\\.]*$/)\n\
    \  file_name.match(/^[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n \
    \ file_name.match(/^[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n \
    \ file_name.match(/^[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\\
    .]*\\.[a-z][a-z\\.]*\\.[a-z][a-z\\.]*$/)\n  file_name.match(/^[a-z][a-z\\.]*\\\
    .[a-z][a-z\\.]*\\.[a-z][a-z\\.]*", "  file_name.downcase!\n  file_name.split(%r{\\\
    .}) # Split file name into an array of strings separated by '.'\n  file_name.split(%r{[^a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{^[a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{[^a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{[^a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{[^a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{^[a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{[^a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{[^a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{[^a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{^[a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{[^a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{^[a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{[^a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.split(%r{^[a-z]})\
    \ # Split file name into an array of strings separated by non-alphabetic characters\n\
    \  file_name.split(%r{[^a-z]}) # Split file name into an array of strings separated\
    \ by non-alphabetic characters\n  file_name.split(%r{^[a-z]}) # Split file name\
    \ into an array of strings separated by non-alphabetic characters\n  file_name.",
  "  file_name = file_name.downcase\n  file_name = file_name.gsub(/[^0-9\\.]/, \"\"\
    )\n  file_name = file_name.gsub(/^\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .[^a-z]/, \"\")\n  file_name = file_name.gsub(/\\.$/, \"\")\n  file_name = file_name.gsub(/\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\.\\.\\./, \"\")\n  file_name\
    \ = file_name.gsub(/\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\.\\.\\.\\.\\\
    .\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\"\
    )\n  file_name = file_name.gsub(/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name\
    \ = file_name.gsub(/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file_name = file_name.gsub(/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./, \"\")\n  file", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.[a-z]{2,}/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty? && file_name.scan(/[a-z]{2,}/).empty? &&\
    \ file_name.scan(/[a-z]{2,}/).empty", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\.[a-z]/).first\
    \ != '' ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n  file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/\\\
    .[a-z]/).first == nil ? false : true\n", "  file_name.downcase!\n  file_name.scan(/[^0-9\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/\\\
    .[^\\.]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^a-z]/).each\
    \ do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^A-Z]/).each\
    \ do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^0-9a-z]/).each\
    \ do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^0-9A-Z]/).each\
    \ do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^0-9a-z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/\\\
    .[^\\.]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^a-z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^A-Z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^0-9a-z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/\\\
    .[^\\.]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^a-z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^A-Z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  file_name.scan(/[^0-9a-z\\\
    .]/).each do |char|\n    return false if char.size > 0\n  end\n  true\nend", " \
    \ file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\\
    .[a-z]{2,}/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty?\
    \ && file_name.scan(/^[a-z]/).empty? && file_name.scan(/^[a-z]/).empty? && file_name.scan(",
  "  file_name.downcase!\n  file_name.chomp!\n  file_name.scan(/[0-9][0-9]/).empty?\
    \ && file_name.scan(/\\.[a-z]/).empty? && file_name.scan(/[a-z]/).empty? && file_name.scan(/[^a-z]/).empty?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/[a-z]/).any? && file_name.scan(/[^a-z]/).any?\n\
    \  file_name.scan(/\\.[a-z]/).any? && file_name.scan(/", "  file_name.downcase!\n\
    \  file_name.scan(/[0-9]{3}/).empty? && file_name.scan(/\\.[^\\.]/).empty? &&\
    \ file_name.scan(/[^a-z]/).empty? && file_name.start_with?(/[a-z]/) && ['txt',\
    \ 'exe', 'dll'].include?(file_name[1..-1].to_s)\nend", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\") # remove all non-numeric characters\n  file_name.gsub!(/\\\
    .\\./, \"\") # remove all dots \n  file_name.gsub!(/^[a-z]/, \"\") # remove all\
    \ letters before the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after\
    \ the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the\
    \ dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the dot\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the dot\n  file_name.gsub!(/\\\
    .[a-z]/, \"\") # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\") # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\"\
    ) # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove\
    \ all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all\
    \ letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after\
    \ the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the\
    \ dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the dot\n\
    \  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after the dot\n  file_name.gsub!(/\\\
    .[a-z]/, \"\") # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/,\
    \ \"\") # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\"\
    ) # remove all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove\
    \ all letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all\
    \ letters after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters\
    \ after the dot\n  file_name.gsub!(/\\.[a-z]/, \"\") # remove all letters after\
    \ the dot\n  file_name.gsub!(/\\.", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? &&\
    \ file_name.scan(/\\.exe/).empty? && file_name.scan(/\\.dll/).empty? && file_name.scan(/\\\
    .txt/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.txt/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty?\
    \ && file_name.scan(/\\.md/).empty? && file_name.scan(/\\.md/).empty? && file_name.scan(/\\\
    .md/).empty? && file_name.scan(/\\.md/).empty", "  file_name.downcase!\n  file_name.scan(/[0-9]{3}/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? &&\
    \ file_name.scan(/[^a-z]/).empty?\n  file_name.include?(\".\") && file_name.split(\"\
    .\").length == 1\nend", "  file_name.downcase!\n  file_name.scan(/[^0-9]*/).each\
    \ do |char|\n    char.next! if char.nil?\n    char.next! if char.empty?\n    char.next!\
    \ if char.start_with?(\"a\")\n    char.next! if char.start_with?(\"z\")\n    char.next!\
    \ if char.start_with?(\"A\")\n    char.next! if char.start_with?(\"Z\")\n  end\n\
    \  file_name.scan(/\\.[^\\.]*$/).each do |char|\n    char.next! if char.nil?\n\
    \    char.next! if char.empty?\n    char.next! if char.start_with?(\"a\")\n  \
    \  char.next! if char.start_with?(\"z\")\n    char.next! if char.start_with?(\"\
    A\")\n    char.next! if char.start_with?(\"Z\")\n  end\n  file_name.scan(/[^a-z\\\
    .]*/).each do |char|\n    char.next! if char.nil?\n    char.next! if char.empty?\n\
    \    char.next! if char.start_with?(\"a\")\n    char.next! if char.start_with?(\"\
    z\")\n    char.next! if char.start_with?(\"A\")\n    char.next! if char.start_with?(\"\
    Z\")\n  end\n  file_name.scan(/\\.[a-z\\.]*$/).each do |char|\n    char.next!\
    \ if char.nil?\n    char.next! if char.empty?\n    char.next! if char.start_with?(\"\
    a\")\n    char.next! if char.start_with?(\"z\")\n    char.next! if char.start_with?(\"\
    A\")\n    char.next! if char.start_with?(\"Z\")\n  end\n  file_name.scan(/\\.[a-z\\\
    .]*\\.[a-z\\.]*$/).each do |char|\n    char.next! if char.nil?\n    char.next!\
    \ if char.empty?\n    char.next! if char.start_with?(\"a\")\n    char.next! if\
    \ char.start_with?(\"z\")\n    char.next! if char.start_with?(\"A\")\n    char.next!\
    \ if char.start_with?(\"Z\")\n  end\n  file_name", "  file_name.downcase!\n  file_name.scan(/[0-9][0-9][0-9]/).empty?\
    \ && file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty? &&\
    \ file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty?\n  file_name.scan(/\\.\\./).empty? && file_name.scan(/[a-z][a-z]/).empty?\
    \ && file_name.scan(/[^a-z]/).empty", "  file_name.downcase!\n  file_name.gsub!(/[^0-9\\\
    .]/, '')\n  file_name.gsub!(/\\.+/, '')\n  file_name.start_with?(/[a-z]/)\n  file_name.end_with?(/txt|exe|dll/)\n\
    \  return 'Yes' if file_name.size <= 3 && file_name.include?('.') && file_name.start_with?(/[a-z]/)\
    \ && file_name.end_with?(/txt|exe|dll/) else 'No'\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| c |>\nThank you for your answer. Your code works well for me. However\
    \ I still have a question. Why do we need the '?' after the '^' in the regex?\
    \ I thought the '?' means 'optional'.\n<|/ c |>\n<| c |>\nThe `?` makes the `^`\
    \ match at the beginning of the string, not just at the beginning. Without it,\
    \ the `^` would match at the beginning of the line and `file_name.include?('.')\
    \ && file_name.start_with?(/[a-z]/) && file_name.end_with?(/txt|exe|dll/)` would\
    \ return `true` even if the file name is `1example.dll`.\n<|/ c |>\n<| c |>\n\
    Thank you for your explanation. Now I understand why we need the '?' after the\
    \ '^'.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>", "  file_name = file_name.downcase\n\
    \  file_name = file_name.gsub(/[^0-9\\.]/, '')\n  file_name = file_name.gsub(/^\\\
    .+/, '')\n  file_name = file_name.gsub(/\\.[^\\.]+$/, '')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '.')\n  file_name = file_name.gsub(/\\\
    .\\./, '.')\n  file_name = file_name.gsub(/\\.\\./, '", "  file_name.downcase!\n\
    \  file_name.gsub!(/[^0-9\\.]/, \"\")\n  file_name.chomp!\n  file_name.start_with?(\"\
    a\") && file_name.end_with?(\"z\") || file_name.start_with?(\"A\") && file_name.end_with?(\"\
    Z\")\n  file_name.include?(\".\") && file_name.split(\".\").length == 1\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_19_sort_numbers
language: ruby
results:
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnilzkk0q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnilzkk0q.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.013488 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    74.14 tests/s, 222.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd2a9_2ph\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd2a9_2ph.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003473 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    287.94 tests/s, 863.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2a66tb11\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2a66tb11.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.009947 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    100.53 tests/s, 301.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpom742iqt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpom742iqt.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003454 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    289.52 tests/s, 868.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jgm474w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jgm474w.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003326 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.66 tests/s, 901.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\n</code>\n<|/ a tags=ruby,sorting,arrays |>\n\
    <| a tags=ruby,sorting,arrays |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8esiovbj.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqwftu0q0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqwftu0q0.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004755 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    210.30 tests/s, 630.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0but5vgq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0but5vgq.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003383 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.60 tests/s, 886.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbklx9t23\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbklx9t23.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003413 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.00 tests/s, 878.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_5kt7btm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_5kt7btm.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003837 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.62 tests/s, 781.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxfnt5bf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxfnt5bf.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00336 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    297.62 tests/s, 892.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=2 |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1op_d0ht.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe_p7doqt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe_p7doqt.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003546 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    282.01 tests/s, 846.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7al0gpcd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7al0gpcd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003306 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    302.48 tests/s, 907.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwndqt05s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwndqt05s.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003436 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.04 tests/s, 873.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5b3bwv6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5b3bwv6.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.018246 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    54.81 tests/s, 164.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7fvboiq_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7fvboiq_.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.008309 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    120.35 tests/s, 361.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyihd7_0m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyihd7_0m.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.031553 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    31.69 tests/s, 95.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyefqh1jk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyefqh1jk.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003701 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.20 tests/s, 810.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptyyks250\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptyyks250.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.005631 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    177.59 tests/s, 532.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2q03v7i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2q03v7i.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003323 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.93 tests/s, 902.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nhrj1h2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nhrj1h2.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003291 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.86 tests/s, 911.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopd1ri8k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopd1ri8k.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003682 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    271.59 tests/s, 814.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqkabfpej\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqkabfpej.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003366 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    297.09 tests/s, 891.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uykyf5o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uykyf5o.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003529 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    283.37 tests/s, 850.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa4_a0b8d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa4_a0b8d.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003319 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.30 tests/s, 903.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuxi1k817\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuxi1k817.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003254 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.31 tests/s, 921.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvjwllum\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvjwllum.rb:17:in\
    \ `test_sort_numbers'\n     14:   def test_sort_numbers\n     15:     candidate\
    \ = method(:sort_numbers)\n     16:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 17:     assert_equal(\"three\", candidate.call(\"three\"))\n     18:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     19:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     20:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.004195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    238.38 tests/s, 476.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ym6dyvy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ym6dyvy.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003377 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    296.12 tests/s, 888.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp05n6p8ra\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp05n6p8ra.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.006931 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    144.28 tests/s, 432.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4sypwxma\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4sypwxma.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.059109 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    16.92 tests/s, 50.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5apn988u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5apn988u.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00338 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.86 tests/s, 887.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0r7d60vi\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `join'\
    \ for \"\":String\n  \n    numbers.join(\" \")\n           ^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0r7d60vi.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0r7d60vi.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0r7d60vi.rb:14:in\
    \ `test_sort_numbers'\n     11: class TestHumanEval < Test::Unit::TestCase\n \
    \    12:   def test_sort_numbers\n     13:     candidate = method(:sort_numbers)\n\
    \  => 14:     assert_equal(\"\", candidate.call(\"\"))\n     15:     assert_equal(\"\
    three\", candidate.call(\"three\"))\n     16:     assert_equal(\"three five nine\"\
    , candidate.call(\"three five nine\"))\n     17:     assert_equal(\"zero four\
    \ five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n===============================================================================\n\
    \nFinished in 0.00258 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    387.60 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptq6huukh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptq6huukh.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004383 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    228.15 tests/s, 684.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw1sikwzs\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw1sikwzs.rb:17:in\
    \ `test_sort_numbers'\n     14:   def test_sort_numbers\n     15:     candidate\
    \ = method(:sort_numbers)\n     16:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 17:     assert_equal(\"three\", candidate.call(\"three\"))\n     18:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     19:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     20:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.004411 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    226.71 tests/s, 453.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn6gcupn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn6gcupn.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00758 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    131.93 tests/s, 395.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51pocyj9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51pocyj9.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003462 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    288.85 tests/s, 866.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7gmdooo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7gmdooo.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003326 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.66 tests/s, 901.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=ruby,string |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzkhtkqgg.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpogm58qba\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpogm58qba.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.017477 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    57.22 tests/s, 171.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join(\" \")\nend\n</code>\n<|/\
    \ a tags=ruby,sorting,arrays |>\n<| c |>\nThis doesn't work for me. `sort_by`\
    \ doesn't seem to exist in Ruby 1.8.7. `sort_by` does exist in Ruby 1.9.\n<|/\
    \ c |>\n<| c |>\n`sort_by` was introduced in Ruby 1.9. `sort_by!` was introduced\
    \ in Ruby 1.8.7. `sort_by` is also available on Ruby 1.8.7 and 1.9.\n<|/ c |>\n\
    <| c |>\nAh, I see. Thanks for clarifying. I was confused because I thought `sort_by`\
    \ was a method on `Array`, but it's actually a method on `Enumerable`.\n<|/ c\
    \ |>\n<| a |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpin05zt09.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5x9cp2u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5x9cp2u.rb:17:in\
    \ `test_sort_numbers'\n     14:   def test_sort_numbers\n     15:     candidate\
    \ = method(:sort_numbers)\n     16:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 17:     assert_equal(\"three\", candidate.call(\"three\"))\n     18:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     19:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     20:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.026502 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    37.73 tests/s, 75.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmvbilf6f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmvbilf6f.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.089488 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    11.17 tests/s, 33.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbv748mix\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbv748mix.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003412 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.08 tests/s, 879.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join(\" \")\nend\n</code>\n<|/\
    \ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<| c |>\nI like your solution,\
    \ but I prefer `sort_by` over `sort` because `sort_by` returns an array.\n<|/\
    \ c |>\n<| c |>\nI agree with you, `sort_by` returns an array, but I prefer `sort`\
    \ because `sort_by` returns an array. `sort` returns a `nil` if the array is empty\
    \ and `sort_by` returns an empty array if the array is empty.\n<|/ c |>\n<| c\
    \ |>\n`sort_by` returns an array, not `nil`.  `sort` returns `nil` if the array\
    \ is empty.\n<|/ c |>\n<| c |>\n`sort_by` returns an array, not `nil`. `sort`\
    \ returns `nil` if the array is empty.\n<|/ c |>\n<| c |>\n`sort_by` returns an\
    \ array, not `nil`. `sort` returns `nil` if the array is empty.\n<|/ c |>\n<|\
    \ a tags=ruby,ruby-on-rails,ruby-on-rails-3 |>\n<code>\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi4eimryr.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your\
    \ answer, but this doesn't really answer the question. Your code doesn't sort\
    \ the numbers, it just replaces them with their sorted versions. I asked how to\
    \ sort the numbers, not how to replace them with their sorted versions.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer to include a solution that sorts the numbers.\
    \ I hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgr_kbz6l.rb:12: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_yhjyq2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_yhjyq2.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003328 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.48 tests/s, 901.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprf4jmbb2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprf4jmbb2.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003795 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    263.50 tests/s, 790.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz5qs3fc8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz5qs3fc8.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.01981 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    50.48 tests/s, 151.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |x| x.to_i }.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsdh7nd4h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsdh7nd4h.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    198.69 tests/s, 794.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupoijgpl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupoijgpl.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003484 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    287.03 tests/s, 861.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo245h2r\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo245h2r.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004057 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    246.49 tests/s, 739.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppp6hu3ii\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppp6hu3ii.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.005801 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    172.38 tests/s, 517.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9v1_ty6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9v1_ty6.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003406 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.60 tests/s, 880.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy871i6pj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy871i6pj.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.009016 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.91 tests/s, 332.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join\nend\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nI like this one. Very concise and easy to understand.\n<|/ c |>\n\
    <| c |>\nI like this one too, but I find it more confusing than `sort_by`.\n<|/\
    \ c |>\n<| c |>\nI like it, but I find it more confusing than `sort_by`.\n<|/\
    \ c |>\n<| c |>\nI like it, but I find it more confusing than `sort_by`.\n<|/\
    \ c |>\n<| c |>\nI like it, but I find it more confusing than `sort_by`.\n<|/\
    \ c |>\n<| a tags=ruby,sorting |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp43ysk3it.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3g4nv3bi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3g4nv3bi.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003553 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    281.45 tests/s, 844.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpez_xgsqw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpez_xgsqw.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.018876 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    52.98 tests/s, 158.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr5flc9t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr5flc9t.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.005843 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    171.14 tests/s, 513.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjogrtrta\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjogrtrta.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.011372 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    87.94 tests/s, 263.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf5b0yo4v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf5b0yo4v.rb:17:in\
    \ `test_sort_numbers'\n     14:   def test_sort_numbers\n     15:     candidate\
    \ = method(:sort_numbers)\n     16:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 17:     assert_equal(\"three\", candidate.call(\"three\"))\n     18:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     19:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     20:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.007278 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    137.40 tests/s, 274.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptjijancb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptjijancb.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.023184 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    43.13 tests/s, 129.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qhna4u8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qhna4u8.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.009423 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    106.12 tests/s, 318.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6s5x1yl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6s5x1yl.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004907 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    203.79 tests/s, 815.16 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_mo33nl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_mo33nl.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003571 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    280.03 tests/s, 840.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprb35dmfd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprb35dmfd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.008287 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    120.67 tests/s, 362.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm58bk1jw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm58bk1jw.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.012843 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.86 tests/s, 233.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_w3vsp7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_w3vsp7.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003879 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    257.80 tests/s, 773.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzkjwnm2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzkjwnm2.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003611 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    276.93 tests/s, 830.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8uga4tg3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8uga4tg3.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003256 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.13 tests/s, 921.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3fbfaii\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3fbfaii.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003383 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.60 tests/s, 886.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwjs247k2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwjs247k2.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.008046 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    124.29 tests/s, 372.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk3y299v5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk3y299v5.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003426 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.89 tests/s, 875.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxef53lfh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxef53lfh.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004267 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    234.36 tests/s, 703.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjt84hyb3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjt84hyb3.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004224 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    236.74 tests/s, 710.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupr89ldg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupr89ldg.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.003282 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.69 tests/s, 914.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9663r6y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9663r6y.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003627 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    275.71 tests/s, 827.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi53fk3vr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi53fk3vr.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003312 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.93 tests/s, 905.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55bup69o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55bup69o.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003382 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.68 tests/s, 887.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprjsq2j95\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprjsq2j95.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003271 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    305.72 tests/s, 917.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw0p20gui\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw0p20gui.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003393 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    294.72 tests/s, 884.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr10j5bj3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr10j5bj3.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004609 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    216.97 tests/s, 650.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp20njdvw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp20njdvw.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00585 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    170.94 tests/s, 512.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7cl_e5ba\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7cl_e5ba.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.007053 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    141.78 tests/s, 425.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp13oy0xho\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp13oy0xho.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.006205 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.16 tests/s, 483.48 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\n</code>\n<|/ a tags=ruby,sorting,arrays |>\n<| c |>\n\
    I like this solution. Although it would be nice to have it return a string instead\
    \ of an array.\n<|/ c |>\n<| c |>\nI added a version that returns a string\n<|/\
    \ c |>\n<| a tags=ruby,sorting,arrays |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt3ezau8z.rb:12: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny92zyqa\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny92zyqa.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003279 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.97 tests/s, 914.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcbf8pfi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcbf8pfi.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00322 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.56 tests/s, 931.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyvh45ry9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyvh45ry9.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004386 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    228.00 tests/s, 683.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.split(\" \").join(\" \")\nend\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work for me. `sort_numbers('one two three\
    \ four five six seven eight nine')` returns `'one two three four five six seven\
    \ eight nine'`.\n<|/ c |>\n<| c |>\n: I tested it before posting. It works for\
    \ me in Ruby 1.9.3. What version of Ruby are you using?\n<|/ c |>\n<| c |>\n:\
    \ I tested it again and it works for me in Ruby 1.9.3. What version of Ruby are\
    \ you using?\n<|/ c |>\n<| c |>\n: I tested it again and it works for me in Ruby\
    \ 1.9.3. What version of Ruby are you using?\n<|/ c |>\n<| c |>\n: I tested it\
    \ again and it works for me in Ruby 1.9.3. What version of Ruby are you using?\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmper00ay3o.rb:10: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnj6pvyzj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnj6pvyzj.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.007106 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    140.73 tests/s, 422.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpru4wnafw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpru4wnafw.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003301 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    302.94 tests/s, 908.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi8bxmgk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi8bxmgk.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003728 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.24 tests/s, 804.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskysqxr6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskysqxr6.rb:17:in\
    \ `test_sort_numbers'\n     14:   def test_sort_numbers\n     15:     candidate\
    \ = method(:sort_numbers)\n     16:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 17:     assert_equal(\"three\", candidate.call(\"three\"))\n     18:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     19:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     20:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.006945 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    143.99 tests/s, 287.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ml3c18a\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ml3c18a.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.0033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.03 tests/s, 909.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivwyhd_g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivwyhd_g.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.009028 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.77 tests/s, 332.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihifbc6l\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihifbc6l.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.006854 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    145.90 tests/s, 437.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqtnmza3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqtnmza3.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003502 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    285.55 tests/s, 856.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join\nend\n</code>\n<|/ a tags=ruby,sorting,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm7737myz.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2cpizom\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2cpizom.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.059222 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    16.89 tests/s, 50.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugetz026\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `join'\
    \ for \"\":String\n  \n    numbers.join(\" \")\n           ^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugetz026.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugetz026.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugetz026.rb:14:in\
    \ `test_sort_numbers'\n     11: class TestHumanEval < Test::Unit::TestCase\n \
    \    12:   def test_sort_numbers\n     13:     candidate = method(:sort_numbers)\n\
    \  => 14:     assert_equal(\"\", candidate.call(\"\"))\n     15:     assert_equal(\"\
    three\", candidate.call(\"three\"))\n     16:     assert_equal(\"three five nine\"\
    , candidate.call(\"three five nine\"))\n     17:     assert_equal(\"zero four\
    \ five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n===============================================================================\n\
    \nFinished in 0.00811 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    123.30 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\n</code>\n<|/ a tags=ruby,sorting |>\n<| a dscore=0\
    \ |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvyy1ge7a.rb:12: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjvnebi06\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `join'\
    \ for \"\":String\n  \n    numbers.join(\" \")\n           ^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjvnebi06.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjvnebi06.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjvnebi06.rb:14:in\
    \ `test_sort_numbers'\n     11: class TestHumanEval < Test::Unit::TestCase\n \
    \    12:   def test_sort_numbers\n     13:     candidate = method(:sort_numbers)\n\
    \  => 14:     assert_equal(\"\", candidate.call(\"\"))\n     15:     assert_equal(\"\
    three\", candidate.call(\"three\"))\n     16:     assert_equal(\"three five nine\"\
    , candidate.call(\"three five nine\"))\n     17:     assert_equal(\"zero four\
    \ five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n===============================================================================\n\
    \nFinished in 0.002359 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    423.91 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_szzlyfk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_szzlyfk.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003878 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    257.86 tests/s, 773.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7sbxgyn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr7sbxgyn.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003284 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.51 tests/s, 913.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5g5o9lvd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5g5o9lvd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.003392 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    294.81 tests/s, 884.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5343td3r\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5343td3r.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003537 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    282.73 tests/s, 848.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt0u5lxg9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt0u5lxg9.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.012574 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    79.53 tests/s, 238.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwflogv5t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwflogv5t.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003839 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.48 tests/s, 781.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx4u5t9lv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx4u5t9lv.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003295 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.49 tests/s, 910.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39yu3nyt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39yu3nyt.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003408 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.43 tests/s, 880.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnogz8gt4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnogz8gt4.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"threefivenine\"\
    >\n\ndiff:\n? three five nine\n===============================================================================\n\
    \nFinished in 0.004654 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    214.87 tests/s, 644.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\n</code>\n<|/ a tags=ruby,sorting,arrays\
    \ |>\n<| a |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp840000f5.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpicskg26o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpicskg26o.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003169 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.56 tests/s, 946.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fpbw9pk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fpbw9pk.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004832 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    206.95 tests/s, 620.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzf0azc4r\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzf0azc4r.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.011754 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.08 tests/s, 255.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfko5f_z_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfko5f_z_.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004815 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    207.68 tests/s, 830.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpew9s1utd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpew9s1utd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003269 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    305.90 tests/s, 917.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8rpxshj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8rpxshj.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003869 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    258.46 tests/s, 775.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpag9ral22\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpag9ral22.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003366 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    297.09 tests/s, 891.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzjucemxs\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzjucemxs.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.012877 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.66 tests/s, 232.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb5hh4i9y\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `join'\
    \ for \"\":String\n  \n    numbers.join(\" \")\n           ^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb5hh4i9y.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb5hh4i9y.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb5hh4i9y.rb:14:in\
    \ `test_sort_numbers'\n     11: class TestHumanEval < Test::Unit::TestCase\n \
    \    12:   def test_sort_numbers\n     13:     candidate = method(:sort_numbers)\n\
    \  => 14:     assert_equal(\"\", candidate.call(\"\"))\n     15:     assert_equal(\"\
    three\", candidate.call(\"three\"))\n     16:     assert_equal(\"three five nine\"\
    , candidate.call(\"three five nine\"))\n     17:     assert_equal(\"zero four\
    \ five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n===============================================================================\n\
    \nFinished in 0.005358 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    186.64 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd_vqmvtu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd_vqmvtu.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003673 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    272.26 tests/s, 816.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0dzxivy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0dzxivy.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.005104 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    195.92 tests/s, 587.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0l_kear\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0l_kear.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.012404 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    80.62 tests/s, 241.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mfgtekr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mfgtekr.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004835 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    206.83 tests/s, 620.48 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_221aiq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_221aiq.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.01069 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    93.55 tests/s, 280.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\n</code>\n<|/ a dscore=3 |>\n<|\
    \ c |>\nI like this solution, but I wonder if there's a way to do it without having\
    \ to import a module?\n<|/ c |>\n<| c |>\n: Nope, there's no way to do it without\
    \ importing a module.  Ruby doesn't have a built-in `sort` method.\n<|/ c |>\n\
    <| c |>\n: I added a solution that doesn't require importing a module.\n<|/ c\
    \ |>\n<| a |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7srh5po9.rb:9: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprmm9d0pq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprmm9d0pq.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003374 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    296.38 tests/s, 889.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_drwa_x\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_drwa_x.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003357 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    297.89 tests/s, 893.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsacktofd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsacktofd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00342 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    292.40 tests/s, 877.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8rvftjp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8rvftjp.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003801 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    263.09 tests/s, 789.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjqwwpq8q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjqwwpq8q.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003367 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    297.00 tests/s, 891.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7r1ypmln\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7r1ypmln.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.87 tests/s, 941.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9gm2ah1q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9gm2ah1q.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.005422 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    184.43 tests/s, 553.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_rhcp_v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_rhcp_v.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003355 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    298.06 tests/s, 894.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.split(\" \").join(\" \")\nend\n</code>\n\
    <|/ a tags=ruby,sorting,arrays |>\n<| a tags=ruby,sorting,arrays |>\n<code>\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmt3ioiv.rb:10: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you\
    \ have a number like \"one two three\"\n<|/ c |>\n<| c |>\nI added a version that\
    \ works with numbers like \"one two three\"\n<|/ c |>\n<| a dscore=4 |>\n<code>\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_qod7qkj.rb:12: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6px68ik6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6px68ik6.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.032656 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    30.62 tests/s, 91.87 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8b1mness\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8b1mness.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00339 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    294.99 tests/s, 884.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0a4aaucr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0a4aaucr.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003285 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.41 tests/s, 913.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfyf6eh13\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfyf6eh13.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003499 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    285.80 tests/s, 857.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcub9dl71\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcub9dl71.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004907 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    203.79 tests/s, 611.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptlrv14ty\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptlrv14ty.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003324 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.84 tests/s, 902.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplwzwq_2l\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplwzwq_2l.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003913 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    255.56 tests/s, 766.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnoa8qyej\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnoa8qyej.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.007532 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    132.77 tests/s, 398.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpighcloxp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpighcloxp.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004938 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    202.51 tests/s, 607.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyyc_ief\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyyc_ief.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003376 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    296.21 tests/s, 888.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1qe2yljd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1qe2yljd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004736 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    211.15 tests/s, 633.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9b56fuvr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9b56fuvr.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003977 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    251.45 tests/s, 754.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnwbe1t6b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnwbe1t6b.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.14 tests/s, 912.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz4tyh49\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz4tyh49.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.00381 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    262.47 tests/s, 787.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp70eoayql\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp70eoayql.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003348 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    298.69 tests/s, 896.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6xjhpg7y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6xjhpg7y.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003316 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.57 tests/s, 904.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557fqfe3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557fqfe3.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.008238 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    121.39 tests/s, 364.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi3t4acjf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi3t4acjf.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003465 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    288.60 tests/s, 865.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1fid0vhm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1fid0vhm.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003904 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    256.15 tests/s, 768.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp58ihxwsg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp58ihxwsg.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003438 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    290.87 tests/s, 872.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwx2508gb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwx2508gb.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004459 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    224.27 tests/s, 672.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphl5aqz9m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphl5aqz9m.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003332 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.12 tests/s, 900.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ltavjbf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ltavjbf.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.006298 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.78 tests/s, 476.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ert_r__\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ert_r__.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003423 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    292.14 tests/s, 876.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprcv12j45\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprcv12j45.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003972 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    251.76 tests/s, 755.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp214tg7fg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp214tg7fg.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004972 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    201.13 tests/s, 603.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa_z4x7bb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa_z4x7bb.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.008112 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    123.27 tests/s, 369.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\n</code>\n<|/ a tags=ruby,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5qn9vh4i.rb:10: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7_ens6dy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7_ens6dy.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003319 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.30 tests/s, 903.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwnhhiif0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwnhhiif0.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003266 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.18 tests/s, 918.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj18gktcl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj18gktcl.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003564 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    280.58 tests/s, 841.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiz6wpvwo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiz6wpvwo.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.017639 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    56.69 tests/s, 170.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! do |number|\n    number.to_i\n\
    \  end\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskpqo1vn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskpqo1vn.rb:19:in\
    \ `test_sort_numbers'\n     16:   def test_sort_numbers\n     17:     candidate\
    \ = method(:sort_numbers)\n     18:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 19:     assert_equal(\"three\", candidate.call(\"three\"))\n     20:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     21:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     22:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.006406 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.10 tests/s, 312.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwujr_in_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwujr_in_.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003435 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.12 tests/s, 873.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8a47nc71\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8a47nc71.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.011387 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    87.82 tests/s, 263.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv8aj2utf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv8aj2utf.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003401 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    294.03 tests/s, 882.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tkw2pyd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tkw2pyd.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003264 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.37 tests/s, 919.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_bn7cy34\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_bn7cy34.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003464 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    288.68 tests/s, 866.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gy13k18\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gy13k18.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003952 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    253.04 tests/s, 759.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx91_36wx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx91_36wx.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003402 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.94 tests/s, 881.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpncflv2gr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpncflv2gr.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003242 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    308.45 tests/s, 925.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmv8a90w0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmv8a90w0.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.007281 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    137.34 tests/s, 412.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy4jakpmp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy4jakpmp.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.11 tests/s, 903.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgz6ldgbu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgz6ldgbu.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.003435 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.12 tests/s, 873.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvr57_x9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvr57_x9.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.28 tests/s, 918.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfmfx77xp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfmfx77xp.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003439 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    290.78 tests/s, 872.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9fqvzi45\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9fqvzi45.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.11 tests/s, 903.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2pjt8m3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2pjt8m3.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003872 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    258.26 tests/s, 774.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpne37_tlt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpne37_tlt.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003297 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.31 tests/s, 909.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.gsub!(/[^0-9]/, \"\")\n  numbers\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4lbpb1m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4lbpb1m.rb:16:in\
    \ `test_sort_numbers'\n     13:   def test_sort_numbers\n     14:     candidate\
    \ = method(:sort_numbers)\n     15:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 16:     assert_equal(\"three\", candidate.call(\"three\"))\n     17:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     18:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     19:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\"> expected but was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003024 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.69 tests/s, 661.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sjik948\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sjik948.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003268 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.00 tests/s, 917.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgggkwepm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgggkwepm.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"fiveninethree\"\
    >\n\ndiff:\n? fiveninethree five nine\n===============================================================================\n\
    \nFinished in 0.003191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.38 tests/s, 940.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! { |n| n.to_i }\n  numbers.sort!\n\
    \  numbers.join(' ')\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=ruby |>\n<code>\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwmnkh9js.rb:12: syntax\
    \ error, unexpected '<', expecting end-of-input\n</code>\n^\n"
  exit_code: 1
  status: SyntaxError
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6860k9px\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6860k9px.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003411 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.17 tests/s, 879.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuu047j81\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuu047j81.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003233 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    309.31 tests/s, 927.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_gbin8d1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_gbin8d1.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003436 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.04 tests/s, 873.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5l4szhch\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5l4szhch.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003388 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    295.16 tests/s, 885.48 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort_by { |n| n.to_i }.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qllofso\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qllofso.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004756 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    210.26 tests/s, 841.04 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pcsfeay\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pcsfeay.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.004299 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    232.61 tests/s, 697.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers = numbers.split(' ')\n  numbers.map! do |number|\n    number.to_i\n\
    \  end\n  numbers.sort!\n  numbers.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8x32_6n\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8x32_6n.rb:19:in\
    \ `test_sort_numbers'\n     16:   def test_sort_numbers\n     17:     candidate\
    \ = method(:sort_numbers)\n     18:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 19:     assert_equal(\"three\", candidate.call(\"three\"))\n     20:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     21:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     22:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    <\"three\">(UTF-8) expected but was\n<\"0\">(US-ASCII)\n\ndiff:\n? three\n? 0\
    \    \n? ?????    \n  \n? Encoding: UTF-8    \n?            S  ASCII\n?      \
    \      ??  ?\n===============================================================================\n\
    \nFinished in 0.004399 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    227.32 tests/s, 454.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort!\n  numbers.join(\" \")\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf5fk8l9\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `join'\
    \ for \"\":String\n  \n    numbers.join(\" \")\n           ^^^^^\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf5fk8l9.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf5fk8l9.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf5fk8l9.rb:14:in\
    \ `test_sort_numbers'\n     11: class TestHumanEval < Test::Unit::TestCase\n \
    \    12:   def test_sort_numbers\n     13:     candidate = method(:sort_numbers)\n\
    \  => 14:     assert_equal(\"\", candidate.call(\"\"))\n     15:     assert_equal(\"\
    three\", candidate.call(\"three\"))\n     16:     assert_equal(\"three five nine\"\
    , candidate.call(\"three five nine\"))\n     17:     assert_equal(\"zero four\
    \ five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n===============================================================================\n\
    \nFinished in 0.002462 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    406.17 tests/s, 0.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(\" \").sort.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yna45ae\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yna45ae.rb:15:in\
    \ `test_sort_numbers'\n     12:     candidate = method(:sort_numbers)\n     13:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     14:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 15:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     16:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     17:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     18:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003251 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.60 tests/s, 922.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception

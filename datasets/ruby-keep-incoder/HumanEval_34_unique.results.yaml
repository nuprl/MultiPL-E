name: HumanEval_34_unique
language: ruby
results:
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqm98c5kw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqm98c5kw.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003752 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    266.52 tests/s, 266.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg1oyhqa3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg1oyhqa3.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003726 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.38 tests/s, 268.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt32ko15\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt32ko15.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00371 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.54 tests/s, 269.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpctxva5_n\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpctxva5_n.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005989 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    166.97 tests/s, 166.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6dh3r823\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6dh3r823.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003815 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    262.12 tests/s, 262.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpohky6psa\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpohky6psa.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003725 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.46 tests/s, 268.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpshscnm6k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpshscnm6k.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005808 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    172.18 tests/s, 172.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qr4mg69\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qr4mg69.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003887 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    257.27 tests/s, 257.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvno8pzp4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvno8pzp4.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004614 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    216.73 tests/s, 216.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1rxr69y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1rxr69y.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.013509 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    74.02 tests/s, 74.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkwk59t7b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkwk59t7b.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003701 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.20 tests/s, 270.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbzqnuaz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbzqnuaz.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.004597 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    217.53 tests/s, 217.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiswo7b3u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiswo7b3u.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005538 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    180.57 tests/s, 180.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiuz8100v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiuz8100v.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003843 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.21 tests/s, 260.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvim08xr0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvim08xr0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003775 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.90 tests/s, 264.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwi0qsw_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwi0qsw_.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.008986 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.28 tests/s, 111.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptzb01w1h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptzb01w1h.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003832 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.96 tests/s, 260.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2l98enny\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2l98enny.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005435 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    183.99 tests/s, 183.99 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptrtfiazi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptrtfiazi.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004099 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    243.96 tests/s, 243.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagdlhtck\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagdlhtck.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.023433 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    42.67 tests/s, 42.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx6a9qep3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx6a9qep3.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.004648 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.15 tests/s, 215.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp50q9o1to\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp50q9o1to.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003856 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    259.34 tests/s, 259.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1yzz7rb7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1yzz7rb7.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.006645 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    150.49 tests/s, 150.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpenroytmu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpenroytmu.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.004682 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    213.58 tests/s, 213.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxy870ze0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxy870ze0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003694 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.71 tests/s, 270.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkwdqxi5p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkwdqxi5p.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003808 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    262.61 tests/s, 262.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko48wap5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko48wap5.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004287 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    233.26 tests/s, 233.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfs9hssm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfs9hssm.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.020155 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    49.62 tests/s, 49.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3trx06v0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3trx06v0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003762 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.82 tests/s, 265.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpczhxn8uz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpczhxn8uz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.029598 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    33.79 tests/s, 33.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxrdd6mmo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxrdd6mmo.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003828 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    261.23 tests/s, 261.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87egevru\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87egevru.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004574 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    218.63 tests/s, 218.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpibocmpo6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpibocmpo6.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.007392 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.28 tests/s, 135.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr5gt5zeo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr5gt5zeo.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003855 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    259.40 tests/s, 259.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nl_yayw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nl_yayw.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.005215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    191.75 tests/s, 191.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpduc3_cdz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpduc3_cdz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003692 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.86 tests/s, 270.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4lkanc55\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4lkanc55.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003774 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.97 tests/s, 264.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc2k6ix8e\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc2k6ix8e.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005805 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    172.27 tests/s, 172.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfrbhkqs\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfrbhkqs.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003676 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    272.03 tests/s, 272.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk8k5o5q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk8k5o5q.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003843 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.21 tests/s, 260.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ljualze\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ljualze.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003701 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.20 tests/s, 270.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0hw1xwjj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0hw1xwjj.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.011787 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    84.84 tests/s, 84.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxh8_3hz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphxh8_3hz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.013716 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    72.91 tests/s, 72.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsq6yhufp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsq6yhufp.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003846 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.01 tests/s, 260.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2fmcgoal\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2fmcgoal.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    253.55 tests/s, 253.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj29wz4gu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj29wz4gu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.020587 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    48.57 tests/s, 48.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph8w_uuyn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph8w_uuyn.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003965 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    252.21 tests/s, 252.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng06k6a9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng06k6a9.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.019536 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    51.19 tests/s, 51.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprggdj1df\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprggdj1df.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.015992 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    62.53 tests/s, 62.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi48kewa0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi48kewa0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003787 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.06 tests/s, 264.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscp9pfzu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscp9pfzu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.022943 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    43.59 tests/s, 43.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nvr8909\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nvr8909.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003772 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.11 tests/s, 265.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphie_y5mz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphie_y5mz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003673 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    272.26 tests/s, 272.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxx6q9vls\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxx6q9vls.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.006215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    160.90 tests/s, 160.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vfgo1s6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vfgo1s6.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.0042 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    238.10 tests/s, 238.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp05qy_unr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp05qy_unr.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003942 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    253.68 tests/s, 253.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4ixsjzz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4ixsjzz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003872 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    258.26 tests/s, 258.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8uekmwu2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8uekmwu2.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005214 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    191.79 tests/s, 191.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xvxb52y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xvxb52y.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003941 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    253.74 tests/s, 253.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\n  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0zj0joaq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0zj0joaq.rb:14:in\
    \ `test_unique'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:\
    \   def test_unique\n     13:     candidate = method(:unique)\n  => 14:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     15: \
    \  end\n     16: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.024347 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.07 tests/s, 41.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpurrqb1lw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpurrqb1lw.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.07186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    13.92 tests/s, 13.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuiza4dj2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuiza4dj2.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.007443 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    134.35 tests/s, 134.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfmu5defp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfmu5defp.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.006181 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    161.79 tests/s, 161.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphc5zrutl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphc5zrutl.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.024432 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    40.93 tests/s, 40.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94metyep\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94metyep.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.006047 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.37 tests/s, 165.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp661x6mn9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp661x6mn9.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004573 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    218.67 tests/s, 218.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps11khgqk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps11khgqk.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003871 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    258.33 tests/s, 258.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bqb95ht\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bqb95ht.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.01051 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    95.15 tests/s, 95.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc9o1yjnf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc9o1yjnf.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.00895 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.73 tests/s, 111.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxvzwcz83\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxvzwcz83.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003975 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    251.57 tests/s, 251.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw32b_ikg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw32b_ikg.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.004496 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    222.42 tests/s, 222.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprexvdzlu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprexvdzlu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.035321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    28.31 tests/s, 28.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkh844zei\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkh844zei.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003646 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    274.27 tests/s, 274.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzcc2xois\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzcc2xois.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003709 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.61 tests/s, 269.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpojpdkij4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpojpdkij4.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003809 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    262.54 tests/s, 262.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt8i19gqg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt8i19gqg.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.005149 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    194.21 tests/s, 194.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf152tbfq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf152tbfq.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003708 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.69 tests/s, 269.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yhhjjoh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yhhjjoh.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.004552 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    219.68 tests/s, 219.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq_uco7mv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq_uco7mv.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00382 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    261.78 tests/s, 261.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp64dax1xt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp64dax1xt.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003698 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.42 tests/s, 270.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpflzmxuaz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpflzmxuaz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004133 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    241.95 tests/s, 241.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8nwb571\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8nwb571.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.010366 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.47 tests/s, 96.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6kx9w5w1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6kx9w5w1.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004466 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    223.91 tests/s, 223.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa7vrk001\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa7vrk001.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.011442 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    87.40 tests/s, 87.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0liozqjf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0liozqjf.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004546 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    219.97 tests/s, 219.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu02ebw76\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu02ebw76.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003953 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    252.97 tests/s, 252.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ohj850d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ohj850d.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.005564 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    179.73 tests/s, 179.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuf3qt_g6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuf3qt_g6.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.004612 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    216.83 tests/s, 216.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l.reject! {|i| l.include?(i)}\n  l\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_unique\n    candidate = method(:unique)\n\
    \    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp74owdsp2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp74owdsp2.rb:14:in\
    \ `test_unique'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:\
    \   def test_unique\n     13:     candidate = method(:unique)\n  => 14:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     15: \
    \  end\n     16: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[]>\n\ndiff:\n\
    ? [0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003298 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.21 tests/s, 303.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpckeoi7mg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpckeoi7mg.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003923 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    254.91 tests/s, 254.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqtimsckk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqtimsckk.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005613 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    178.16 tests/s, 178.16 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jfus9av\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jfus9av.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.009142 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    109.39 tests/s, 109.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1wl7btw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1wl7btw.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004696 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    212.95 tests/s, 212.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj0aqytq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj0aqytq.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004043 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    247.34 tests/s, 247.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptiwzwht8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptiwzwht8.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00376 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.96 tests/s, 265.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj08rchl9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj08rchl9.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00446 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    224.22 tests/s, 224.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5846ci58\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5846ci58.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.0044 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    227.27 tests/s, 227.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2r8qij3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2r8qij3.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.025035 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    39.94 tests/s, 39.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptb_pf2ue\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptb_pf2ue.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.026915 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    37.15 tests/s, 37.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5vh79dpv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5vh79dpv.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.045753 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    21.86 tests/s, 21.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0qzf2ngm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0qzf2ngm.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.004768 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    209.73 tests/s, 209.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiiov5ny1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiiov5ny1.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.005106 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    195.85 tests/s, 195.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpix727vq1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpix727vq1.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005705 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    175.28 tests/s, 175.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe5ckaxxo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe5ckaxxo.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004007 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    249.56 tests/s, 249.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7zv7kg3i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7zv7kg3i.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.009567 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    104.53 tests/s, 104.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyrcmktss\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyrcmktss.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.007695 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    129.95 tests/s, 129.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1m3s5t21\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1m3s5t21.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003709 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.61 tests/s, 269.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzsmxv7jl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzsmxv7jl.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.025348 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    39.45 tests/s, 39.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7eso17o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7eso17o.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.004655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    214.82 tests/s, 214.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcvh5ly76\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcvh5ly76.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.006355 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.36 tests/s, 157.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ilc_2qv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ilc_2qv.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003692 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.86 tests/s, 270.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8h3vkz4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8h3vkz4.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003905 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    256.08 tests/s, 256.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpru0aw628\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpru0aw628.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003706 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.83 tests/s, 269.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmi7xqr5g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmi7xqr5g.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.047791 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    20.92 tests/s, 20.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx5y_np3w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx5y_np3w.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005785 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    172.86 tests/s, 172.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0_9ef9_a\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0_9ef9_a.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.023278 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    42.96 tests/s, 42.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf_d_h9p0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf_d_h9p0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.036808 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    27.17 tests/s, 27.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ibst39b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ibst39b.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003704 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.98 tests/s, 269.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkiizem6u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkiizem6u.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003809 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    262.54 tests/s, 262.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9xvjyr1x\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9xvjyr1x.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.021593 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.31 tests/s, 46.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpik9xty6g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpik9xty6g.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.007507 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    133.21 tests/s, 133.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz6shqaik\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz6shqaik.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.008567 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    116.73 tests/s, 116.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbutheswg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbutheswg.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003693 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.78 tests/s, 270.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw9o4z9j4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw9o4z9j4.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.021223 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    47.12 tests/s, 47.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpluub_q8f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpluub_q8f.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.00658 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    151.98 tests/s, 151.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxv954rgu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxv954rgu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.021548 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.41 tests/s, 46.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpedvc80be\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpedvc80be.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005046 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    198.18 tests/s, 198.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt4uy8dn6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt4uy8dn6.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003743 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    267.17 tests/s, 267.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8ffqz9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8ffqz9.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.042133 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.73 tests/s, 23.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz8kqa5sq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz8kqa5sq.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003723 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.60 tests/s, 268.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprkyqtqd8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprkyqtqd8.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003936 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    254.07 tests/s, 254.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr882d6j_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr882d6j_.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.007524 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    132.91 tests/s, 132.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6cxvhks\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6cxvhks.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003753 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    266.45 tests/s, 266.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9_sib6vl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9_sib6vl.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.048913 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    20.44 tests/s, 20.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3k6hsisi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3k6hsisi.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003622 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    276.09 tests/s, 276.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3eqhv5rf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3eqhv5rf.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003826 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    261.37 tests/s, 261.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1oim6z7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1oim6z7.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    276.01 tests/s, 276.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw86zn7tu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw86zn7tu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00398 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    251.26 tests/s, 251.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphh17olta\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphh17olta.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.004568 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    218.91 tests/s, 218.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87up2rxc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87up2rxc.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003647 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    274.20 tests/s, 274.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpclaq9kzt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpclaq9kzt.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003771 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.18 tests/s, 265.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l.reject!{|i| l.include?(i)}\n  l\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_unique\n    candidate = method(:unique)\n\
    \    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sau62iv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sau62iv.rb:14:in\
    \ `test_unique'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:\
    \   def test_unique\n     13:     candidate = method(:unique)\n  => 14:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     15: \
    \  end\n     16: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[]>\n\ndiff:\n\
    ? [0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.01032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.90 tests/s, 96.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4mvvnub\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4mvvnub.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003773 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.04 tests/s, 265.04 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe1jj2ypw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe1jj2ypw.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.006887 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    145.20 tests/s, 145.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp327cc2gc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp327cc2gc.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004775 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    209.42 tests/s, 209.42 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjw1jzvvc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjw1jzvvc.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.038553 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    25.94 tests/s, 25.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbv8fw3c8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbv8fw3c8.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.009019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.88 tests/s, 110.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bairow6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bairow6.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.013548 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    73.81 tests/s, 73.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxb38bm5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxb38bm5.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.18 tests/s, 269.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8xppe6f7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8xppe6f7.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003694 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.71 tests/s, 270.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7vpnvdwx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7vpnvdwx.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00396 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    252.53 tests/s, 252.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9avlldt\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9avlldt.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.020317 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    49.22 tests/s, 49.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsxce9sj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsxce9sj.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.004692 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    213.13 tests/s, 213.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpem6lafkf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpem6lafkf.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003775 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.90 tests/s, 264.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp06mr1ubp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp06mr1ubp.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003636 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    275.03 tests/s, 275.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpymytit7t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpymytit7t.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003681 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    271.67 tests/s, 271.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmr_00fww\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmr_00fww.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003705 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.91 tests/s, 269.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq1pwuk6m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq1pwuk6m.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.021178 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    47.22 tests/s, 47.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjidzt9ol\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjidzt9ol.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003694 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.71 tests/s, 270.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1]\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc0m5ex_4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc0m5ex_4.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 5, 3, 3,\
    \ 3, 2, 0]>\n\ndiff:\n? [0,                2, 3, 5, 9, 123]\n?  9  5, 5, 3, 3,\
    \ 3,    0            \n?  ? +++++++++++++++    ????????????            \n===============================================================================\n\
    \nFinished in 0.016398 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    60.98 tests/s, 60.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nh8e0bu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7nh8e0bu.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.009174 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    109.00 tests/s, 109.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp417tsusx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp417tsusx.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003724 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.53 tests/s, 268.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaiciwpqs\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaiciwpqs.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.013007 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    76.88 tests/s, 76.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppnrd1ha7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppnrd1ha7.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.004866 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    205.51 tests/s, 205.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspwkev6j\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspwkev6j.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.008129 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    123.02 tests/s, 123.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_0w70yy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_0w70yy.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003837 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.62 tests/s, 260.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsy0ube0f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsy0ube0f.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004385 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    228.05 tests/s, 228.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsolf_vhk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsolf_vhk.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.018486 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    54.09 tests/s, 54.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort\n  l.reverse.uniq\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuqqatnw2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuqqatnw2.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 0, 9, 3,\
    \ 2, 5]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 0, 9, 3, 2, 5]\n===============================================================================\n\
    \nFinished in 0.00357 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    280.11 tests/s, 280.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezl6g512\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezl6g512.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004811 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    207.86 tests/s, 207.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9mu9scsr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9mu9scsr.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003778 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.69 tests/s, 264.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87hcngt9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87hcngt9.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.031454 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    31.79 tests/s, 31.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzu7tqdzz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzu7tqdzz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.014835 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    67.41 tests/s, 67.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3n3n6e13\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3n3n6e13.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.025926 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    38.57 tests/s, 38.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t853qd3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t853qd3.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003764 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.67 tests/s, 265.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mh1i6cz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mh1i6cz.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.022113 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    45.22 tests/s, 45.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l.reject! {|i| l.include?(i)}\n  l\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_unique\n    candidate = method(:unique)\n\
    \    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyzlcf2s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyzlcf2s.rb:14:in\
    \ `test_unique'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:\
    \   def test_unique\n     13:     candidate = method(:unique)\n  => 14:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     15: \
    \  end\n     16: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[]>\n\ndiff:\n\
    ? [0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.00357 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    280.11 tests/s, 280.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsplaja62\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsplaja62.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003783 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    264.34 tests/s, 264.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ejencg1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ejencg1.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.007562 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    132.24 tests/s, 132.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphejfbnjc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphejfbnjc.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003756 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    266.24 tests/s, 266.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzqgz7a93\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzqgz7a93.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.006288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    159.03 tests/s, 159.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\n  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhy6nz6v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhy6nz6v.rb:14:in\
    \ `test_unique'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:\
    \   def test_unique\n     13:     candidate = method(:unique)\n  => 14:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     15: \
    \  end\n     16: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.006912 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    144.68 tests/s, 144.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgccugb2z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgccugb2z.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003743 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    267.17 tests/s, 267.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz8czjq_z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz8czjq_z.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004029 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    248.20 tests/s, 248.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobz72qss\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobz72qss.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003725 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.46 tests/s, 268.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l[1..-1].uniq!\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpttf6bn46\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpttf6bn46.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[9, 5, 3, 2, 0]>\n\
    \ndiff:\n? [0,       2, 3, 5, 9, 123]\n?  9  5, 3,    0            \n?  ? ++++++\
    \    ????????????            \n===============================================================================\n\
    \nFinished in 0.019734 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    50.67 tests/s, 50.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpay_bc36w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpay_bc36w.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004947 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    202.14 tests/s, 202.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5q_wgvme\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5q_wgvme.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005609 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    178.28 tests/s, 178.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.sort!\n  l.reverse!\n\
    \  l\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_unique\n    candidate = method(:unique)\n    assert_equal([0, 2, 3,\
    \ 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlkrs4_s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlkrs4_s.rb:13:in\
    \ `test_unique'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:\
    \   def test_unique\n     12:     candidate = method(:unique)\n  => 13:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     14: \
    \  end\n     15: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[123, 9, 5, 5,\
    \ 3, 3, 3, 2, 0]>\n\ndiff:\n? [0, 2, 3, 5, 9, 123, 9, 5, 5, 3, 3, 3, 2, 0]\n===============================================================================\n\
    \nFinished in 0.007375 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.59 tests/s, 135.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsemtewn0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsemtewn0.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004081 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    245.04 tests/s, 245.04 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp738_tlv6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp738_tlv6.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003661 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    273.15 tests/s, 273.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyk9zlytm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyk9zlytm.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003755 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    266.31 tests/s, 266.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_cu8jx5b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_cu8jx5b.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.005625 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    177.78 tests/s, 177.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3m8nf6j\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3m8nf6j.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    238.61 tests/s, 238.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1djjzc8d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1djjzc8d.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004942 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    202.35 tests/s, 202.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp77yehlho\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp77yehlho.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003703 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    270.05 tests/s, 270.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7dz1fabg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7dz1fabg.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004532 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    220.65 tests/s, 220.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxd11yotr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxd11yotr.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.004006 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    249.63 tests/s, 249.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx2ggnz4g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx2ggnz4g.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003729 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.17 tests/s, 268.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\ndef unique(l)\n  l.uniq!\n  l\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique\n\
    \    candidate = method(:unique)\n    assert_equal([0, 2, 3, 5, 9, 123], candidate.call([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4ow5zvx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_unique(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4ow5zvx.rb:12:in\
    \ `test_unique'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:\
    \   def test_unique\n     11:     candidate = method(:unique)\n  => 12:     assert_equal([0,\
    \ 2, 3, 5, 9, 123], candidate.call([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n     13: \
    \  end\n     14: end\n<[0, 2, 3, 5, 9, 123]> expected but was\n<[5, 3, 2, 9, 0,\
    \ 123]>\n\ndiff:\n? [5, 3, 2, 9, 0, 2, 3, 5, 9, 123]\n===============================================================================\n\
    \nFinished in 0.003974 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    251.64 tests/s, 251.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception

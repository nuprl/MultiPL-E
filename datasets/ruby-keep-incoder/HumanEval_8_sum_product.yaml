name: HumanEval_8_sum_product
language: ruby
prompt: "# For a given list of integers, return a tuple consisting of a sum and a\
  \ product of all the integers in a list.\n# Empty sum should be equal to 0 and empty\
  \ product should be equal to 1.\n# >>> sum_product([])\n# (0, 1)\n# >>> sum_product([1,\
  \ 2, 3, 4])\n# (10, 24)\ndef sum_product(numbers)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_product\n\
  \    candidate = method(:sum_product)\n    assert_equal([0, 1], candidate.call([]))\n\
  \    assert_equal([3, 1], candidate.call([1, 1, 1]))\n    assert_equal([100, 0],\
  \ candidate.call([100, 0]))\n    assert_equal([15, 105], candidate.call([3, 5, 7]))\n\
  \    assert_equal([10, 10], candidate.call([10]))\n  end\nend\n"
completions: ["  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  return [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  return [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+,\
    \ 0)\n  product = numbers.inject(1, :*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return sum,\
    \ product\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = numbers.reduce(:+)\n  product = numbers.reduce(:*)\n  [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |n|\n    sum += n\n    product\
    \ *= n\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=ruby |>\n<code>", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return sum, product\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |n|\n    sum += n\n    product\
    \ *= n\n  end\n  return [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = numbers.reduce(:+)\n  product = numbers.reduce(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = numbers.reduce(:+)\n\
    \  product = numbers.reduce(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n\
    \  product = 1\n  numbers.each do |number|\n    sum += number\n    product *=\
    \ number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return sum, product\nend", "  sum = 0\n  product = 1\n \
    \ numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return sum, product\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return sum, product\nend", "  sum = 0\n  product = 1\n \
    \ numbers.each do |n|\n    sum += n\n    product *= n\n  end\n  return [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |n|\n    sum += n\n    product *= n\n  end\n  return\
    \ [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return sum, product\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |n|\n    sum += n\n    product *= n\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = numbers.reduce(:+)\n  product = numbers.reduce(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  return [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+, 0)\n\
    \  product = numbers.inject(1, :*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  return [sum, product]\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = 1\n  numbers.each\
    \ do |number|\n    product *= number\n  end\n  [sum, product]\nend", "  sum =\
    \ 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product =\
    \ 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n  product\
    \ = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum\
    \ += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum = 0\n\
    \  product = 1\n  numbers.each do |number|\n    sum += number\n    product *=\
    \ number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |number|\n    sum += number\n    product *= number\n  end\n  return [sum,\
    \ product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return sum, product\nend", "  sum = 0\n  product = 1\n \
    \ numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product = 1\n\
    \  numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return sum, product\nend", "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n\
    \  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each\
    \ do |n|\n    sum += n\n    product *= n\n  end\n  [sum, product]\nend", "  sum\
    \ = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\nend",
  "  sum = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\n\
    end", "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n\
    \    product *= number\n  end\n  return [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  return [sum, product]\nend\n</cell>\n<cell>", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = numbers.inject(:+)\n\
    \  product = numbers.inject(:*)\n  [sum, product]\nend", "  sum = 0\n  product\
    \ = 1\n  numbers.each do |number|\n    sum += number\n    product *= number\n\
    \  end\n  [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend", "  sum\
    \ = numbers.inject(:+)\n  product = numbers.inject(:*)\n  [sum, product]\nend",
  "  sum = 0\n  product = 1\n  numbers.each do |number|\n    sum += number\n    product\
    \ *= number\n  end\n  return sum, product\nend", "  sum = 0\n  product = 1\n \
    \ numbers.each do |number|\n    sum += number\n    product *= number\n  end\n\
    \  return [sum, product]\nend", "  sum = 0\n  product = 1\n  numbers.each do |number|\n\
    \    sum += number\n    product *= number\n  end\n  [sum, product]\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

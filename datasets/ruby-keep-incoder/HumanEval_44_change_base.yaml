name: HumanEval_44_change_base
language: ruby
prompt: "# Change numerical base of input number x to base.\n# return string representation\
  \ after the conversion.\n# base numbers are less than 10.\n# >>> change_base(8,\
  \ 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7, 2)\n# '111'\n\
  def change_base(x, base)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n\
  \    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8,\
  \ 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\"\
  , candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n\
  \    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7,\
  \ 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3,\
  \ 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5,\
  \ 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7,\
  \ 8))\n  end\nend\n"
completions: ["  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0\n  \
    \  digit = x % base\n    result += (digit.to_s).rjust(digit.size + 1)\n    x /=\
    \ base\n  end\n  result\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map! {|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  x = x.to_i\n  base = base.to_i\n  \n  if base == 10\n    x.to_s\n  else\n   \
    \ x.to_s.reverse.chars.take(base).join\n  end\nend\n</code>\n<|/ a tags=ruby,string\
    \ |>\n<| a dscore=0 |>\n<code>", "  x.to_s(base)\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  result = ''\n  while x > 0\n    digit = x % base\n    digit =\
    \ digit.to_s(base)\n    x = x / base\n    result = digit + result\n  end\n  result\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join\nend", "  x = x.to_i\n  base = base.to_i\n \
    \ while x > base\n    x /= base\n  end\n  x = x.to_i\n  base = 10\n  while x <\
    \ base\n    x *= base\n    base /= base\n  end\n  x.to_s\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub(/../)\
    \ { |s| s.to_i(base) }.reverse\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s(base)\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\
    \").reverse.inject(\"\") do |s, x|\n    s << x if x.to_s.to_i == base\n    s <<\
    \ x.to_s.to_i\n  end\n  x.reverse\nend", "  x.to_s(base)\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  result = ''\n  while\
    \ x > 0\n    digit = x % base\n    digit = digit.to_i\n    result = digit.to_s\
    \ + result\n    x = x / base\n  end\n  result\nend", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n  while i < x.length\n\
    \    x[i] = x[i].to_i(base)\n    i += 1\n  i = 0\n  while i < x.length\n    x[i]\
    \ = x[i].to_s(base)\n    i += 1\n  x.join(\"\")\nend", "  x = x.to_i\n  base =\
    \ base.to_i\n  result = ''\n  while x > 0 do\n    digit = x % base\n    digit\
    \ = digit.to_i\n    result = digit.to_s + result\n    x = x / base\n  end\n  return\
    \ result\nend", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n\
    \  else\n    x.to_s.reverse.chars.take(base).join\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join\nend\n</code>\n<|/ a tags=ruby |>\n<| c |>\n\
    I like your solution, but I feel like it could be made more efficient by not reversing\
    \ the array and instead just iterating through it backwards. That way you only\
    \ have to do one pass through the array instead of two.\n<|/ c |>\n<| c |>\nI\
    \ agree with you. I was thinking about that but didn't have time to write it down.\
    \ I'll edit my answer accordingly.\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  x.to_s(base)\n\
    end", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0\n    digit\
    \ = x % base\n    result += (digit.to_s).rjust(digit.size + 1)\n    x /= base\n\
    \  end\n  result\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while\
    \ x > 0\n    digit = x % base\n    result += (digit.to_s).rjust(digit.size + 1)\n\
    \    x = x / base\n  end\n  result\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  while x > base\n    x = x / base\n  end\n  x = x * base\n  x = x.to_i\n  return\
    \ x.to_s(base)\nend", "  digits = x.to_s.chars.to_a\n  digits.reverse!\n  digits.map!\
    \ {|d| d.to_i(base) }\n  digits.reverse!\n  digits.join\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_i\n  base\
    \ = base.to_i\n  while x < base\n    x *= base\n  end\n  x.to_s\nend", "  x =\
    \ x.to_i\n  base = base.to_i\n  while x >= base\n    x /= base\n  end\n  x.to_i\n\
    end", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n\
    \    x = x / base\n  end\n  x = x.to_s\n  while x < base\n    x = (x * base) +\
    \ x.to_s\n  end\n  x\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.join(\"\")\nend", "  x = x.to_i\n \
    \ base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.take(base).join\n\
    \  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n\
    \  result = ''\n  while x > 0\n    digit = x % base\n    result += (digit.to_s).rjust(digit.size\
    \ + 1)\n    x = x / base\n  end\n  result\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map! {|d| d.to_i(base) }\n  digits.join(\"\")\nend",
  "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x =\
    \ x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n  x\nend", "  x\
    \ = x.to_i\n  base = base.to_i\n  while x > base\n    x = x/base\n  end\n  x =\
    \ x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n  x\nend", "  x\
    \ = x.to_i\n  base = base.to_i\n  if x < base\n    digits = x.to_s.reverse\n \
    \   digits = digits[0...base]\n    digits = digits.reverse\n    x = x.to_i + digits.to_i\n\
    \  end\n  return x.to_s\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n\
    \  while x > 0 do\n    digit = x % base\n    digit = digit.to_i\n    result =\
    \ digit.to_s + result\n    x = x / base\n  end\n  return result\nend", "  x.to_s(base)\n\
    end", "  digits = x.to_s.chars.reverse\n  digits = digits.take_while { |x| x <\
    \ base }\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_i\n\
    \  base = base.to_i\n  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n  digits\
    \ = digits.digits.reverse.to_i\n  digits = digits.digits.", "  x.to_s(base)\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x = x.to_i\n  base = base.to_i\n  \n  if x < base\n    digits\
    \ = x.to_s(base)\n  else\n    digits = x.to_s(base).reverse\n  end\n  \n  digits\
    \ = digits.reverse\n  \n  if digits == \"\"\n    digits = \"0\"\n  end\n  \n \
    \ return digits\nend", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n  \
    \  x.to_s\n  else\n    x.to_s.reverse.chars.map { |c| c.to_i(base) }.join\n  end\n\
    end", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0 do\n   \
    \ digit = x % base\n    digit = digit.to_i\n    result << digit\n    x = x / base\n\
    \  end\n  result\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n\
    \    x /= base\n  end\n  x = x.to_i\n  base = base.to_i\n  while x < base\n  \
    \  x *= base\n  end\n  x.to_s\nend", "  x = x.to_i\n  base = base.to_i\n  result\
    \ = ''\n  while x > 0 do\n    digit = x % base\n    digit = digit.to_i\n    result\
    \ << digit\n    x = x / base\n  end\n  result\nend", "  x.to_s(base)\nend", " \
    \ x.to_s(base)\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base\
    \ = base.to_i\n  if base > 10\n    puts \"Base must be less than 10.\"\n  elsif\
    \ base < 0\n    puts \"Base must be greater than 0.\"\n  else\n    digits = []\n\
    \    digit = x.to_i\n    digit = digit.to_s\n    while digit != 0\n      digit\
    \ = digit.to_i\n      digit = digit.to_s\n    end\n    digits.reverse!\n    digit\
    \ = digit.to_s\n    while digit != 0\n      digit = digit.to_i\n      digit =\
    \ digit.to_s\n    end\n    digits.reverse!\n    digit = digit.to_s\n    while\
    \ digit != 0\n      digit = digit.to_i\n      digit = digit.to_s\n    end\n  \
    \  digits.reverse!\n    digit = digit.to_s\n    while digit != 0\n      digit\
    \ = digit.to_i\n      digit = digit.to_s\n    end\n    digits.reverse!\n    digit\
    \ = digit.to_s\n    while digit != 0\n      digit = digit.to_i\n      digit =\
    \ digit.to_s\n    end\n    digits.reverse!\n    digit = digit.to_s\n    while\
    \ digit != 0\n      digit = digit.to_i\n      digit = digit.to_s\n    end\n  \
    \  digits.reverse!\n    digit = digit.to_s\n    while digit != 0\n      digit\
    \ = digit.to_i\n      digit = digit.to_s\n    end\n    digits.reverse!\n    digit\
    \ = digit.to_s\n    while digit != 0\n      digit = digit.to_i\n      digit =\
    \ digit.to_s\n    end\n    digits.reverse!\n    digit = digit.to_s\n    while\
    \ digit != 0\n      digit = digit.to_i\n      digit = digit.to_s\n    end\n  \
    \  digits.reverse!\n    digit = digit.to_s\n    while digit != 0\n      digit\
    \ = digit.to_i\n      digit = digit.to_s\n    end\n    digits.reverse!\n    digit\
    \ = digit.to_s\n    while digit != 0\n      digit = digit.to_i\n      digit =\
    \ digit.to_s\n    end\n    digits.reverse!\n    digit = digit.to_s\n    while\
    \ digit != 0\n      digit = digit.to_i\n      digit = digit.to_s\n    end\n  \
    \  digits.reverse!\n    digit = digit.to_s\n    while digit != 0\n      digit\
    \ = digit.to_i\n      digit = digit.to_s\n    end\n    digits.reverse!\n    digit\
    \ = digit.to_s\n    while digit != 0\n      digit", "  x = x.to_s\n  base = base.to_s\n\
    \  \n  if x.to_s.length < base.length\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  if x < 10\n    puts x\n  elsif base < 0\n    puts \"Invalid base\"\
    \n  else\n    digits = x.to_s.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_i\n\
    \    digits = digits.digits.reverse.to_i\n    digits = digits.digits.reverse.to_",
  "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x =\
    \ x.to_i\n  base = 10**base\n  while x < base\n    x *= base\n  end\n  x.to_s\n\
    end", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n\
    \    x.to_s.reverse.chars.each_with_index.map { |c, i| c * base + i }.join\n \
    \ end\nend", "  if base < 2 or base > 36:\n    raise ValueError('Base must be\
    \ between 2 and 36')\n  digits = []\n  while x != 0:\n    digits.append(x % base)\n\
    \    x = x / base\n  digits.reverse()\n  return ''.join(map(str, digits))", " \
    \ if x < 10\n    puts x\n  else\n    puts x.to_s(base)\n  end\nend", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map! {|d| d.to_i(base) }\n \
    \ digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\")\n  x.reverse!\n\
    \  base.reverse!\n  i = 0\n  while i < x.length\n    digit = x[i]\n    digit =\
    \ digit.to_i\n    digit = digit.to_s(base)\n    x[i] = digit\n    i += 1\n  x.reverse!\n\
    \  i = 0\n  while i < x.length\n    digit = x[i]\n    digit = digit.to_i\n   \
    \ digit = digit.to_s(base)\n    x[i] = digit\n    i += 1\n  x.reverse!\n  i =\
    \ 0\n  while i < x.length\n    digit = x[i]\n    digit = digit.to_i\n    digit\
    \ = digit.to_s(base)\n    x[i] = digit\n    i += 1\n  x.reverse!\n  i = 0\n  while\
    \ i < x.length\n    digit = x[i]\n    digit = digit.to_i\n    digit = digit.to_s(base)\n\
    \    x[i] = digit\n    i += 1\n  x.reverse!\n  i = 0\n  while i < x.length\n \
    \   digit = x[i]\n    digit = digit.to_i\n    digit = digit.to_s(base)\n    x[i]\
    \ = digit\n    i += 1\n  x.reverse!\n  i = 0\n  while i < x.length\n    digit\
    \ = x[i]\n    digit = digit.to_i\n    digit = digit.to_s(base)\n    x[i] = digit\n\
    \    i += 1\n  x.reverse!\n  i = 0\n  while i < x.length\n    digit = x[i]\n \
    \   digit = digit.to_i\n    digit = digit.to_s(base)\n    x[i] = digit\n    i\
    \ += 1\n  x.reverse!\n  i = 0\n  while i < x.length\n    digit = x[i]\n    digit\
    \ = digit.to_i\n    digit = digit.to_s(base)\n    x[i] = digit\n    i += 1\n \
    \ x.reverse!\n  i = 0\n  while i < x.length\n    digit = x[i]\n    digit = digit.to_i\n\
    \    digit = digit.to_s(base)\n    x[i] = digit\n    i += 1\n  x.reverse!\n  i\
    \ = 0\n  while i < x.length\n    digit = x[i]\n    digit = digit.to_i\n    digit\
    \ = digit.to_s(base)\n    x[i] = digit\n    i += 1\n  x.reverse!\n  i = 0\n  while\
    \ i < x.length\n    digit = x[i]\n    digit = digit.to_i\n    digit = digit.to_s(base)\n\
    \    x[i] = digit\n    i += 1\n  x.reverse!\n  i = 0\n  while i < x.length\n \
    \   digit = x[i]\n    digit = digit.to_i\n    digit = digit.to_s(base)\n    x[i]\
    \ = digit\n    i += 1\n  x.reverse", "  x = x.to_i\n  base = base.to_i\n  if x\
    \ < base\n    x.times { |i| x = x * base + i }\n    x.to_s\n  else\n    x.to_s\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_i\n  base = base.to_i\n\
    \  \n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub(/../) { |s|\
    \ s.to_i(base) }.reverse\n  end\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map! {|d| d.to_i(base)}\n  digits.reverse!\n  digits.join\nend", " \
    \ x = x.to_i\n  base = base.to_i\n  if x < base\n    digits = x.to_s(base)\n \
    \   digits = digits[0...digits.length-1]\n    digits = digits.reverse\n    digits\
    \ = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = ", "  digits = x.to_s.chars.reverse\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_s\n  base = base.to_s\n\
    \  \n  x = x.split(\"\")\n  base = base.split(\"\")\n  \n  i = 0\n  while i <\
    \ x.length\n    if x[i].to_i == base[i].to_i\n      x[i] = base[i].to_s\n    \
    \  i += 1\n    else\n      i += 1\n    end\n  end\n  \n  x.join(\"\")\nend", " \
    \ if base < 2 or base > 36:\n    raise ValueError('Invalid base')\n  digits =\
    \ ''\n  while x > 0:\n    digits = digits*base + digits(x % base)\n    x = x //\
    \ base\n  return digits\n</cell>\n<cell>", "  x = x.to_i\n  base = base.to_i\n\
    \  if x < base\n    digits = x.to_s.reverse\n    digits = digits.reverse\n   \
    \ digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digit", "  x =\
    \ x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_i\n\
    \  while x < base\n    x *= base\n  end\n  x.to_s\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n  while\
    \ i < x.length\n    if x[i].to_i == base[i].to_i\n      x[i] = base[i]\n     \
    \ i += 1\n    else\n      i += 1\n    end\n  end\n  x.join(\"\")\nend", "  x =\
    \ x.to_i\n  base = base.to_i\n  while x > base\n    x = x / base\n  end\n  x =\
    \ x * base\n  x = x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n\
    \  x\nend", "  digits = x.to_s.chars.reverse.map { |d| d.to_i(base) }.reverse\n\
    \  digits.join\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while\
    \ x > 0\n    digit = x % base\n    digit = digit.to_i\n    result += (digit.to_s).rjust(digit.length)\n\
    \    x = x / base\n  end\n  result\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map! { |d| d.to_i(base) }\n  digits.reverse!\n  digits.join\nend", " \
    \ x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base < 10 && x.to_s(base).length\
    \ < base.length\n  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  result\
    \ = ''\n  while x > 0\n    digit = x % base\n    digit = digit.to_i\n    result\
    \ += (digit.to_s).rjust(digit.abs)\n    x /= base\n  end\n  result\nend", "  x.to_s(base)\n\
    end", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.map { |e|\
    \ e.to_i(base) }.join\n  x = x.reverse\n  x.join(\"\")\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| a dscore=0 |>\n<code>", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  digits\
    \ = x.to_s.chars.reverse.map { |d| d.to_i(base) }.reverse\n  digits.join\nend",
  "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base < 10 && x.to_s(base).length\
    \ < base.length\n  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  if\
    \ base == 10\n    x.to_s\n  else\n    digits = x.to_s.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse", "  x = x.to_s\n  base = base.to_s\n  \n  if x.length\
    \ <= base.length\n    return x.to_s\n  \n  digits = x.to_s.split(//)\n  \n  digits.reverse!\n\
    \  \n  while digits.length > 0\n    digit = digits.pop\n    \n    if digit ==\
    \ base\n      digits.unshift(digit.to_s)\n      digits.reverse!\n      break\n\
    \    end\n    \n    digit = digit.to_s.split(//).reverse.join.to_i\n    \n   \
    \ digit = digit.to_s(base)\n    \n    digits.unshift(digit)\n    digits.reverse!\n\
    \  end\n  \n  digits.reverse!\n  \n  return digits.join\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\").reverse.map { |i| i.to_i(base) }.join\n\
    \  x = x.to_i(base)\n  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  x = x.to_i\n  base =\
    \ base.to_i\n  result = ''\n  while x > 0 do\n    digit = x % base\n    digit\
    \ = digit.to_i\n    result << digit\n    x /= base\n  end\n  result\nend", " \
    \ x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base < 10 && x.to_s(base).length\
    \ < base.length\n  x.to_s(base)\nend", "  x.to_s(base)\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_s\n  while\
    \ x.length <= base\n    x = \"0\" + x\n  end\n  x\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n\
    \  x = x.to_i\n  base = 10\n  while x < base\n    x *= base\n    base /= 10\n\
    \  end\n  x.to_s\nend", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map! {|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend", "  digits = x.to_s.chars.to_a\n  digits.reverse!\n  digits.map! {|d|\
    \ d.to_i(base)}\n  digits.join\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n\
    \  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join\nend", "  x\
    \ = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub!(/../)\
    \ { |s| s.to_i ** base }\n    x.to_s.reverse\n  end\nend", "  x.to_s(base)\nend",
  "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  if x < base\n    digits = x.to_s(base)\n    digits = digits[0..(digits.length\
    \ - 1)]\n    digits = digits.reverse\n    digits = digits.reverse\n    digits\
    \ = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    ", "  x.to_s(base)\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_i\n  if base == 10\n\
    \    x.to_s\n  else\n    digits = x.to_s.split(//)\n    digits.reverse!\n    digits.reverse!\n\
    \    digits = digits.map { |d| d.to_i(base) }\n    digits.reverse!\n    digits.join(//)\n\
    \  end\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n\
    \  while i < x.length\n    x[i] = x[i].to_i(base)\n    i += 1\n  end\n  return\
    \ x.join(\"\")\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n  \
    \  x /= base\n  end\n  x = x.to_s\n  while x.length <= base\n    x = \"0\" + x\n\
    \  end\n  x\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, x|\n    s << case x\n      when \"0\"\n        \"0\"\n      when \"\
    1\"\n        \"1\"\n      when \"2\"\n        \"10\"\n      when \"3\"\n     \
    \   \"11\"\n      when \"4\"\n        \"100\"\n      when \"5\"\n        \"101\"\
    \n      when \"6\"\n        \"110\"\n      when \"7\"\n        \"111\"\n     \
    \ when \"8\"\n        \"1000\"\n      when \"9\"\n        \"1001\"\n      when\
    \ \"a\"\n        \"1010\"\n      when \"b\"\n        \"1011\"\n      when \"c\"\
    \n        \"1100\"\n      when \"d\"\n        \"1101\"\n      when \"e\"\n   \
    \     \"1110\"\n      when \"f\"\n        \"1111\"\n      else\n        \"\"\n\
    \    end\n  end\n  x = x.split(\"\").reverse.inject(\"\") do |s, x|\n    s <<\
    \ case x\n      when \"0\"\n        \"0\"\n      when \"1\"\n        \"1\"\n \
    \     when \"2\"\n        \"10\"\n      when \"3\"\n        \"11\"\n      when\
    \ \"4\"\n        \"100\"\n      when \"5\"\n        \"101\"\n      when \"6\"\n\
    \        \"110\"\n      when \"7\"\n        \"111\"\n      when \"8\"\n      \
    \  \"1000\"\n      when \"9\"\n        \"1001\"\n      when \"a\"\n        \"\
    1010\"\n      when \"b\"\n        \"1011\"\n      when \"c\"\n        \"1100\"\
    \n      when \"d\"\n        \"1101\"\n      when \"e\"\n        \"1110\"\n   \
    \   when \"f\"\n        \"1111\"\n      else\n        \"\"\n    end\n  end\n \
    \ x = x.split(\"\").reverse.inject(\"\") do |s, x|\n    s << case x\n      when\
    \ \"0\"\n        \"0\"\n      when \"1\"\n        \"1\"\n      when \"2\"\n  \
    \      \"10\"\n      when \"3\"\n        \"11\"\n      when \"4\"\n        \"\
    100\"\n      when \"5\"\n        \"101\"\n      when \"6\"\n        \"110\"\n\
    \      when \"7\"\n        \"111\"\n      when \"8\"\n        \"1000\"\n     \
    \ when \"9\"\n        \"1001\"\n      when \"a\"\n        \"1010\"\n      when\
    \ \"b\"\n        \"1011\"\n", "  x = x.to_i\n  base = base.to_i\n  \n  while x\
    \ > base\n    x /= base\n  end\n  \n  x = x.to_i\n  \n  while x < base\n    x\
    \ *= base\n  end\n  \n  x.to_s\nend", "  x = x.to_s\n  base = base.to_s\n  while\
    \ x.length <= base.length\n    x += \"0\"\n  end\n  x = x.slice(-base.length)\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n  x = x.reverse\n\
    \  ", "  x.to_s(base)\nend", "  x = x.to_s\n  base = base.to_s\n  \n  if x.to_s.length\
    \ < base.length\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n", "  x = x.to_i\n\
    \  base = base.to_i\n  return x.to_s(base).reverse\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n  while\
    \ i < x.length\n    x[i] = x[i].to_i(base)\n    i += 1\n  end\n  i = 0\n  while\
    \ i < x.length\n    x[i] = x[i].to_s(base)\n    i += 1\n  end\n  x.join(\"\")\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n\
    \  digits.reverse!\n  digits.join(\"\")\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  while x >= base\n    x /= base\n  end\n  x.to_s\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  result = ''\n  while x > 0\n    digit = x % base\n    digit =\
    \ digit.to_i\n    result += (digit.to_s).rjust(digit.abs)\n    x /= base\n  end\n\
    \  result\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /=\
    \ base\n  end\n  x = x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n\
    \  return x\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x\
    \ /= base\n  end\n  x = x.to_i\n  base = base.to_i\n  x = x.to_s(base)\n  while\
    \ x < base\n    x *= base\n  end\n  x = x.to_i\n  x = x.to_s(base)\n  return x\n\
    end", "  x.to_s(base)\nend", "  x = x.to_s\n  base = base.to_s\n  if x.to_s.length\
    \ < base.length\n    x.to_s(base.length)\n  else\n    x.to_s(base)\n  end\nend",
  "  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.map { |c| c.to_i(base)\
    \ }.join\n  end\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\
    \")\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\nI like your solution, but\
    \ I wonder if there is a way to do it without using regular expressions.\n<|/\
    \ c |>\n<| c |>\nI added a solution that doesn't use regular expressions.\n<|/\
    \ c |>\n<| c |>\nI like your solution, but I wonder if there is a way to do it\
    \ without using regular expressions.\n<|/ c |>\n<| c |>\nI added a solution that\
    \ doesn't use regular expressions.\n<|/ c |>\n<| c |>\nI like your solution, but\
    \ I wonder if there is a way to do it without using regular expressions.\n<|/\
    \ c |>\n<| a tags=ruby,string |>\n<code>", "  x.to_s(base)\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n  while x.length <=\
    \ base.length\n    x += '0'\n  end\n  x = x.reverse\n  while x.length <= base.length\n\
    \    x = x.reverse\n  end\n  x.slice!(0, base.length)\n  x.reverse!\n  x\nend",
  "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n   \
    \ x /= base\n  end\n  x.to_i\nend", "  x = x.to_i\n  base = base.to_i\n  \n  while\
    \ x > base\n    x /= base\n  end\n  \n  x = x.to_s\n  \n  while x < base\n   \
    \ x *= base\n  end\n  \n  x\nend", "  x = x.to_s\n  base = base.to_s\n  base =\
    \ 10**base.to_i\n  x = x.to_i\n  \n  if base == 10\n    return x.to_s\n  \n  while\
    \ x > base\n    x /= base\n  end\n  \n  x = x.to_i\n  \n  while x < base\n   \
    \ x *= base\n  end\n  \n  return x.to_s\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  while\
    \ x > base\n    x /= base\n  end\n  x.to_s\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\"\
    )\n  base = base.split(\"\")\n  x.map! do |i|\n    i = i.to_i\n    i = i * base[base.index(i)].to_i\n\
    \    i = i.to_s\n    i\n  end\n  x.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  if base < 2 or base > 36:\n    raise ValueError('Invalid base')\n\
    \  digits = ''\n  while x > 0:\n    digits = digits*base + digits(x % base)\n\
    \    x = x // base\n  return digits\n</cell>\n<cell>", "  x = x.to_s\n  base =\
    \ base.to_s\n  \n  if base == '0'\n    return x\n  \n  if base == '1'\n    return\
    \ x.to_i\n  \n  if base == '2'\n    return x.to_i * 10\n  \n  if base == '3'\n\
    \    return x.to_i * 100\n  \n  if base == '4'\n    return x.to_i * 1000\n  \n\
    \  if base == '5'\n    return x.to_i * 10000\n  \n  if base == '6'\n    return\
    \ x.to_i * 100000\n  \n  if base == '7'\n    return x.to_i * 1000000\n  \n  if\
    \ base == '8'\n    return x.to_i * 10000000\n  \n  if base == '9'\n    return\
    \ x.to_i * 100000000\n  \n  if base == '10'\n    return x.to_i * 1000000000\n\
    \  \n  if base == '11'\n    return x.to_i * 10000000000\n  \n  if base == '12'\n\
    \    return x.to_i * 100000000000\n  \n  if base == '13'\n    return x.to_i *\
    \ 1000000000000\n  \n  if base == '14'\n    return x.to_i * 10000000000000\n \
    \ \n  if base == '15'\n    return x.to_i * 100000000000000\n  \n  if base == '16'\n\
    \    return x.to_i * 1000000000000000\n  \n  if base == '17'\n    return x.to_i\
    \ * 10000000000000000\n  \n  if base == '18'\n    return x.to_i * 100000000000000000\n\
    \  \n  if base == '19'\n    return x.to_i * 1000000000000000000\n  \n  if base\
    \ == '20'\n    return x.to_i * 10000000000000000000\n  \n  if base == '21'\n \
    \   return x.to_i * 100000000000000000000\n  \n  if base == '22'\n    return x.to_i\
    \ * 1000000000000000000000\n  \n  if base == '23'\n    return x.to_i * 10000000000000000000000\n\
    \  \n  if base == '24'\n    return x.to_i * 100000000000000000000000\n  \n  if\
    \ base == '25'\n    return x.to_i * 1000000000000000000000000\n  \n  if base ==\
    \ '26'\n    return x.to_i * 10000000000000000000000000\n  \n  if base == '27'\n\
    \    return x.to_i * 100000000000000000000000000\n  \n  if base == '28'\n    return\
    \ x.to_i * 1000000000000000000000000000\n  \n  if base == '29'\n    return x.to_i\
    \ * 10000000000000000000000000000\n  \n  if base == '30'\n    return x.to_i *\
    \ 100000000000000000000000000000\n  \n  if base == '31'\n    return x.to_i * 1000000000000000000000000000000\n\
    \  \n  if base == '32'\n    return x.to_i * 1000000000000000000", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 2 or base > 36:\n    raise ValueError('Invalid base')\n  digits\
    \ = []\n  while x > 0:\n    digits.append(x % base)\n    x = int(x / base)\n \
    \ digits.reverse()\n  return ''.join(map(str, digits))", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.join(\"\")\nend",
  "  x = x.to_s\n  base = base.to_i\n  result = ''\n  while x != 0\n    digit = x\
    \ % base\n    digit = digit.to_i\n    result += (digit.to_s).to_s\n    x = x /\
    \ base\n  end\n  result\nend", "  x.to_s(base)\nend", "  digits = x.to_s.chars.reverse\n\
    \  digits[0..base-1] = digits[0..base-1].to_i\n  digits.reverse!\n  digits.join\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!\
    \ {|d| d.to_i(base) }\n  digits.reverse!\n  digits.join\nend\n</code>\n<|/ a |>\n\
    <| a tags=ruby,ruby-on-rails |>\n<code>", "  x = x.to_s\n  base = base.to_s\n\
    \  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse", " \
    \ x.to_s(base)\nend", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  x.to_s(base)\n\
    end", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\
    \")\n  x.map! { |i| i.to_i(base) }\n  x.join\nend", "  if x < 10\n    x.to_s(base)\n\
    \  else\n    x.to_s(base).reverse.chars.reverse.join\n  end\nend", "  if x < 10\n\
    \    x.to_s(base)\n  else\n    x.to_s(base).reverse.chars.take(base).join\n  end\n\
    end\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| a tags=ruby,ruby-on-rails |>\n\
    <code>", "  x = x.to_i\n  base = base.to_i\n  \n  result = ''\n  while x > 0 do\n\
    \    digit = x % base\n    digit = digit.to_i\n    \n    result = digit.to_s +\
    \ result\n    x = x / base\n  end\n  \n  result\nend", "  x = x.to_i\n  base =\
    \ base.to_i\n  \n  if x < base\n    x.times { |i| x = x * base + i }\n    x.to_s\n\
    \  else\n    x.to_s\n  end\nend", "  x.to_s(base)\nend", "  if x < 10\n    puts\
    \ x\n  else\n    puts x.to_s(base)\n  end\nend", "  x.to_s(base)\nend", "  x =\
    \ x.to_s\n  base = base.to_s\n  result = ''\n  while x != 0\n    digit = x % base\n\
    \    digit = digit.to_s.to_i\n    result += (digit.to_s + digit.to_s)\n    x =\
    \ x / base\n  end\n  result\nend", "  x.to_s(base)\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  x = x.to_s\n  base = base.to_i\n  if base == 10\n    return\
    \ x.to_s\n  else\n    digits = x.to_s.split(//)\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n    digits.reverse!\n\
    \    digits.reverse!\n    digits.", "  if base < 2 or base > 36:\n    raise ValueError('Invalid\
    \ base')\n  digits = []\n  while x != 0:\n    digits.append(x % base)\n    x =\
    \ int(x / base)\n  digits.reverse()\n  return ''.join(map(str, digits))", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x.to_s(base)\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x = x.to_i\n  base = base.to_i\n  digits = x.to_s(base)\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n  digits\
    \ = digits.reverse\n", "  x = x.to_s\n  base = base.to_s\n  digits = x.split(\"\
    \")\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  digits = x.to_s.chars.reverse\n  digits = digits.take_while { |x| x <\
    \ base }\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  digits = x.to_s.chars.reverse\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.", "  x = x.to_i\n\
    \  base = base.to_i\n  if x < base\n    digits = x.to_s(base)\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digits = digits.reverse\n\
    \    digits = digits.reverse\n    digits = digits.reverse\n    digit", "  digits\
    \ = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n\
    \  digits.join\nend", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  result = ''\n  while x > 0\n    digit = x % base\n    digit = digit.to_i\n\
    \    result += (digit.to_s).rjust(digit.abs)\n    x /= base\n  end\n  result\n\
    end", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.", "  x = x.to_i\n  base = base.to_i\n  if x < base\n\
    \    x.times { |i| x = x * base + i }\n    x.to_s\n  else\n    x.times { |i| x\
    \ = x / base + i }\n    x.to_s\n  end\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  \n  if x < base\n    x.times { |i| x = x * base + i }\n    x.to_s\n  else\n\
    \    x.to_s\n  end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  digits = x.to_s.split(//)\n  digits.reverse!\n  digits.map!{|d|\
    \ d.to_i(base)}\n  digits.reverse!\n  digits.join(\"\")\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.map!{|d| d.to_i(base)}\n  digits.reverse!\n  digits.join\n\
    end", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n\
    \  while x > 0 do\n    digit = x % base\n    digit = digit.to_i\n    result =\
    \ digit.to_s + result\n    x = x / base\n  end\n  result\nend", "  digits = x.to_s.split(//)\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n\
    \  else\n    x.to_s.reverse.chars.take(base).join\n  end\nend", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\") do |s, digit|\n\
    \    s << digit.to_s(base)\n  end\n  x.reverse\nend", "  x = x.to_i\n  base =\
    \ base.to_i\n  return x.to_s(base) if x != 0 else '0'\nend", "  x = x.to_i\n \
    \ base = base.to_i\n  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.", "  x = x.to_i\n \
    \ base = base.to_i\n  result = ''\n  while x > 0\n    digit = x % base\n    digit\
    \ = digit.to_s(base)\n    result << digit\n    x /= base\n  end\n  result\nend",
  "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while x > 0\n    digit = x %\
    \ base\n    result << digit\n    x /= base\n  end\n  result\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

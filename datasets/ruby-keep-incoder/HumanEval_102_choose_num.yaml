name: HumanEval_102_choose_num
language: ruby
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# choose_num(12,\
  \ 15) = 14\n# choose_num(13, 12) = -1\ndef choose_num(x, y)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_choose_num\n\
  \    candidate = method(:choose_num)\n    assert_equal(14, candidate.call(12, 15))\n\
  \    assert_equal(-1, candidate.call(13, 12))\n    assert_equal(12354, candidate.call(33,\
  \ 12354))\n    assert_equal(-1, candidate.call(5234, 5233))\n    assert_equal(28,\
  \ candidate.call(6, 29))\n    assert_equal(-1, candidate.call(27, 10))\n    assert_equal(-1,\
  \ candidate.call(7, 7))\n    assert_equal(546, candidate.call(546, 546))\n  end\n\
  end\n"
completions: ["  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n \
    \   if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x +\
    \ 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  even = x.even?\
    \ && y.even?\n  odd = x.odd? && y.odd?\n  if even\n    x.divmod(y).reduce(:+)\n\
    \  elsif odd\n    x.gcd(y).reduce(:+)\n  else\n    -1\n  end\nend", "  \n  # Initialize\
    \ a variable to store the biggest even number that is \n  # in the range [x, y]\
    \ inclusive.\n  biggest_even = nil\n  \n  # Iterate through all even numbers from\
    \ x to y, and check if they are \n  # in the range [x, y] inclusive. If so, store\
    \ the biggest even number \n  # that is in the range [x, y] inclusive.\n  x.upto(y)\
    \ do |even|\n    if even >= x && even <= y\n      biggest_even = even\n    end\n\
    \  end\n  \n  # Return the biggest even number that is in the range [x, y] inclusive.\n\
    \  return biggest_even\nend", "  even = x % 2 == 0\n  even = even and y % 2 ==\
    \ 0\n  even = even and ((x != y) and (x % 2 == 0))\n  even = even and ((y != x)\
    \ and (y % 2 == 0))\n  even = even and ((x != y) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y\
    \ % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x % 2 == 0) and (y % 2 == 0))\n  ", "  even = x % 2 == 0\n  even = even\
    \ ? x : y\n  even = even - 1\n  even = even % 2 == 0\n  even = even ? even : -1\n\
    \  return even\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI didn't test it but I think it works.\
    \ I tested it on ruby 2.4.\n<|/ c |>\n<| c |>\nI tested it on ruby 2.4.0 and it\
    \ works. I edited my answer to include a test case.\n<|/ c |>\n<| c |>\nI tested\
    \ it on ruby 2.4.0 and it works. I edited my answer to include a test case.\n\
    <|/ c |>\n<| c |>\nI tested it on ruby 2.4.0 and it works. I edited my answer\
    \ to include a test case.\n<|/ c |>\n<| a |>\n<code>", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x < y\n    x += 1\n    y -= 1\n  \n  x -= 1\n  \n  while x > y\n\
    \    x -= 1\n    y += 1\n  \n  return x if x % 2 == 0 and y % 2 == 0 else -1\n\
    end", "  \n  # Initialize a variable called \"result\" to the value -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called \"even\" to the value 0.\n  even\
    \ = 0\n  \n  # Initialize a variable called \"odd\" to the value 1.\n  odd = 1\n\
    \  \n  # Initialize a variable called \"i\" to the value 1.\n  i = 1\n  \n  #\
    \ Initialize a variable called \"j\" to the value y.\n  j = y\n  \n  # While \"\
    i\" is less than or equal to \"j\", and while \"even\" is less than \n  # \"odd\"\
    , and while \"i\" is less than or equal to \"j\", and while \"i\" is \n  # less\
    \ than or equal to \"j\", and while \"i\" is less than or equal to \"j\", \n \
    \ # and while \"i\" is less than or equal to \"j\", and while \"i\" is less than\
    \ \n  # or equal to \"j\", and while \"i\" is less than or equal to \"j\", and\
    \ while \n  # \"i\" is less than or equal to \"j\", and while \"i\" is less than\
    \ or equal to \n  # \"j\", and while \"i\" is less than or equal to \"j\", and\
    \ while \"i\" is less \n  # than or equal to \"j\", and while \"i\" is less than\
    \ or equal to \"j\", and while \n  # \"i\" is less than or equal to \"j\", and\
    \ while \"i\" is less than or equal to \n  # \"j\", and while \"i\" is less than\
    \ or equal to \"j\", and while \"i\" is less than \n  # or equal to \"j\", and\
    \ while \"i\" is less than or equal to \"j\", and while \n  # \"i\" is less than\
    \ or equal to \"j\", and while \"i\" is less than or equal to \n  # \"j\", and\
    \ while \"i\" is less than or equal to \"j\", and while \"i\" is less \n  # than\
    \ or equal to \"j\", and while \"i\" is less than or equal to \"j\", and while\
    \ \n  # \"i\" is less than or equal to \"j\", and while \"i\" is less than or\
    \ equal to \n  # \"j\", and while \"i\" is less than or equal to \"j\", and while\
    \ \"i\" is less \n  # than or equal to \"j\", and while \"i\" is less than or\
    \ equal to \"j\", and while \n  # \"i\" is less than or equal to \"j\", and while\
    \ \"i\" is less than or equal to \n  # \"j\", and while \"i\" is less than or\
    \ equal to \"j\", and while \"i\" is less \n  # than or equal to \"j\", and while\
    \ \"i\" is less than or equal to \"j\", and while \n  # \"i\" is less than or\
    \ equal to \"j\", and while \"", "  \n  # Initialize a variable called \"result\"\
    \ to the value -1.\n  result = -1\n  \n  # Initialize a variable called \"i\"\
    \ to the value 1.\n  i = 1\n  \n  # Initialize a variable called \"limit\" to\
    \ the value x.\n  limit = x \n  \n  # Initialize a variable called \"count\" to\
    \ the value 0.\n  count = 0\n  \n  # While \"i\" is not equal to \"limit\":\n\
    \  while i != limit\n    \n    # If the number at \"i\" is even:\n    if i % 2\
    \ == 0\n      \n      # Increment \"count\" by 1.\n      count = count + 1\n \
    \     \n      # If \"count\" is greater than \"result\":\n      if count > result\n\
    \        result = count\n      \n      # Increment \"i\" by 1.\n      i = i +\
    \ 1\n      \n    # Else:\n    else\n      \n      # Increment \"count\" by 1.\n\
    \      count = count + 1\n      \n      # If \"count\" is greater than \"result\"\
    :\n      if count > result\n        result = count\n      \n      # Increment\
    \ \"i\" by 1.\n      i = i + 1\n      \n  # Return result.\n  return result\n\
    \  ", "  \n  # Initialize a variable called \"result\" to the value -1.\n  result\
    \ = -1\n  \n  # Initialize a variable called \"even\" to 0.\n  even = 0\n  \n\
    \  # Initialize a variable called \"odd\" to 1.\n  odd = 1\n  \n  # Initialize\
    \ a variable called \"temp\" to the value of x.\n  temp = x\n  \n  # Initialize\
    \ a variable called \"temp2\" to y.\n  temp2 = y\n  \n  # While loop that keeps\
    \ running while \"temp\" is not equal to \"temp2\".\n  while temp != temp2\n \
    \ \n    # If the value of \"temp\" is even, then increment \"even\".\n    if temp\
    \ % 2 == 0\n      even = even + 1\n    \n    # If the value of \"temp\" is odd,\
    \ then increment \"odd\".\n    else\n      odd = odd + 1  \n    \n    # Increment\
    \ \"temp\" by 1.\n    temp = temp + 1\n  \n  # If the value of \"even\" is greater\
    \ than \"odd\", then return \"even\".\n  if even > odd\n    result = even\n  \n\
    \  # If the value of \"even\" is less than \"odd\", then return \"odd\".\n  else\n\
    \    result = odd\n  \n  # Return the value of \"result\".\n  result\nend\n</cell>\n\
    <cell>", "  even = x % 2 == 0\n  even = even ? x : y\n  even = even % 2 == 0\n\
    \  even = even ? even : -1\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11182927)\n\
    <|/ c |>\n<| c |>\nI believe it does answer the question. He asked how to find\
    \ the biggest even number in a range. He also asked how to find the biggest even\
    \ number in a range. He also asked how to find the biggest even number in a range.\
    \ He also asked how to find the biggest even number in a range. He also asked\
    \ how to find the biggest even number in a range. He also asked how to find the\
    \ biggest even number in a range. He also asked how to find the biggest even number\
    \ in a range. He also asked how to find the biggest even number in a range. He\
    \ also asked how to find the biggest even number in a range. He also asked how\
    \ to find the biggest even number in a range. He also asked how to find the biggest\
    \ even number in a range. He also asked how to find the biggest even number in\
    \ a range. He also asked how to find the biggest even number in a range. He also\
    \ asked how to find the biggest even number in a range. He also asked how to find\
    \ the biggest even number in a range. He also asked how to find the biggest even\
    \ number in a range. He also asked how to find the biggest even number in a range.\
    \ He also asked how to find the biggest even number in a range. He also asked\
    \ how to find the biggest even number in a range. He also asked how to find the\
    \ biggest even number in a range. He also asked how to find the biggest even number\
    \ in a range. He also asked how to find the biggest even number in a range. He\
    \ also asked how to find the biggest even number in a range. He also asked how\
    \ to find the biggest even number in a range. He also asked how to find the biggest\
    \ even number in a range. He also asked how to find the biggest even number in\
    \ a range. He also asked how to find the biggest even number in a range. He also\
    \ asked how to find the biggest even number in a range. He also asked how to ",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While the\
    \ value of \"i\" is less than or equal to \"y\", and the\n  # value of \"j\" is\
    \ less than or equal to \"x\", do the following:\n  while i <= y && j <= x\n \
    \   \n    # If the value of \"i\" is even, add 2 to \"i\".\n    if i % 2 == 0\n\
    \      i += 1\n    \n    # If the value of \"j\" is even, subtract 2 from \"j\"\
    .\n    if j % 2 == 0\n      j -= 1\n    \n    # If the value of \"i\" is greater\
    \ than \"y\", then set \"result\"\n    # to the value of \"i\".\n    if i > y\n\
    \      result = i\n    \n    # If the value of \"j\" is greater than \"x\", then\
    \ set \"result\"\n    # to the value of \"j\".\n    if j > x\n      result = j\n\
    \    \n    # Increment \"i\" and \"j\" by 1.\n    i += 1\n    j += 1\n  \n  #\
    \ Return the value of \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"even\" to the value 0.\n  even = 0\n \
    \ \n  # Initialize a variable called \"odd\" to the value 1.\n  odd = 1\n  \n\
    \  # Initialize a variable called \"temp\" to the value x.\n  temp = x\n  \n \
    \ # Initialize a variable called \"temp2\" to the value y.\n  temp2 = y\n  \n\
    \  # While loop that checks whether the value of \"temp\" is less than \n  # \"\
    temp2\".\n  while temp < temp2\n    \n    # Increment \"even\" by 1.\n    even\
    \ = even + 1\n    \n    # Decrement \"temp\" by 1.\n    temp = temp - 1\n    \n\
    \  # While loop that checks whether the value of \"temp\" is greater than \n \
    \ # \"temp2\".\n  while temp > temp2\n    \n    # Increment \"odd\" by 1.\n  \
    \  odd = odd + 1\n    \n    # Decrement \"temp\" by 1.\n    temp = temp - 1\n\
    \    \n  # If \"even\" is greater than \"odd\", then \"result\" should be \"even\"\
    .\n  if even > odd\n    result = even\n  \n  # If \"even\" is less than \"odd\"\
    , then \"result\" should be \"odd\".\n  else\n    result = odd\n  \n  # Return\
    \ the value of \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>",
  "  even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n    even = y % 2 == 0\n\
    \    odd = y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd =\
    \ y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 !=\
    \ 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n \
    \ if even && odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even &&\
    \ odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n   \
    \ even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n    even = y\
    \ % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n\
    \    odd = y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd =\
    \ y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 !=\
    \ 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n \
    \ if even && odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even &&\
    \ odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n   \
    \ even = y % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n    even = y\
    \ % 2 == 0\n    odd = y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n\
    \    odd = y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd =\
    \ y % 2 != 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 !=\
    \ 0\n  \n  if even && odd\n    even = y % 2 == 0\n    odd = y % 2 != 0\n  \n \
    \ if even && odd\n    even = y % 2 == 0\n    od", "  \n  even = x % 2 == 0\n \
    \ \n  if even\n    \n    if x > y\n      \n      biggest = y\n      \n    else\n\
    \      \n      biggest = x\n      \n    end\n    \n  else\n    \n    if x > y\n\
    \      \n      biggest = x\n      \n    else\n      \n      biggest = y\n    \
    \  \n    end\n    \n  end\n  \n  biggest\nend\n</cell>\n<code language=julia-1.5>",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While the\
    \ variable \"i\" is less than or equal to the variable \"j\", do:\n  while i <=\
    \ j\n  \n    # If the variable \"i\" is less than or equal to the variable \"\
    y\", do:\n    if i <= y\n    \n      # Increment the variable \"i\" by 1.\n  \
    \    i += 1\n      \n      # If the variable \"i\" is greater than or equal to\
    \ the variable \"x\", do:\n      if i > x\n      \n        # Increment the variable\
    \ \"j\" by 1.\n        j += 1\n      \n        # Set the variable \"result\" to\
    \ the value of the variable \"i\".\n        result = i\n      \n      # If the\
    \ variable \"i\" is less than or equal to the variable \"x\", do:\n      else\n\
    \      \n        # Increment the variable \"j\" by 1.\n        j += 1\n      \n\
    \      # Set the variable \"result\" to the value of the variable \"j\".\n   \
    \   result = j\n    \n    # If the variable \"i\" is greater than or equal to\
    \ the variable \"y\", do:\n    else\n    \n      # Increment the variable \"j\"\
    \ by 1.\n      j += 1\n      \n      # Set the variable \"result\" to the value\
    \ of the variable \"j\".\n      result = j\n    \n  # Return the variable \"result\"\
    .\n  return result\nend\n</cell>\n<code language=julia-1.5>", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable\
    \ called \"j\" to the value x.\n  j = x\n  \n  # Initialize a variable called\
    \ \"k\" to the value y.\n  k = y\n  \n  # While the value of \"i\" is less than\
    \ or equal to \"j\", and the\n  # value of \"k\" is less than or equal to \"j\"\
    , increment \"i\".\n  while i <= j and k <= j\n    \n    # If the value of \"\
    i\" is even, increment \"i\" by two.\n    if i % 2 == 0\n      i += 1\n    \n\
    \    # If the value of \"k\" is even, increment \"k\" by two.\n    if k % 2 ==\
    \ 0\n      k += 1\n    \n    # If the value of \"i\" is greater than \"k\", decrement\
    \ \"k\" by two.\n    if i > k\n      k -= 1\n    \n    # If the value of \"i\"\
    \ is less than \"k\", decrement \"i\" by two.\n    if i < k\n      i += 1\n  \
    \  \n    # If the value of \"i\" is equal to the value of \"k\", then \n    #\
    \ return \"i\".\n    if i == k\n      return i\n    \n  # If the value of \"i\"\
    \ is greater than \"j\", then return \"result\".\n  if i > j\n    return result\n\
    \  \n  # If the value of \"i\" is less than \"j\", then return \"result\".\n \
    \ if i < j\n    return result\n  \n  # If the value of \"i\" is equal to \"j\"\
    , then return \"i\".\n  if i == j\n    return result\n  \n  # If the value of\
    \ \"i\" is greater than \"k\", then return \"result\".\n  if i > k\n    return\
    \ result\n  \n  # If the value of \"i\" is less than \"k\", then return \"result\"\
    .\n  if i < k\n    return result\n  \n  # If the value of \"i\" is equal to \"\
    k\", then return \"i\".\n  if i == k\n    return result\n  \n  # If the value\
    \ of \"i\" is greater than \"y\", then return \"result\".\n  if i > y\n    return\
    \ result\n  \n  # If the value of \"i\" is less than \"y\", then return \"result\"\
    .\n  if i < y\n    return result\n  \n  # If the value of \"i\" is equal to \"\
    y\", then return \"i\".\n  if i == y\n    return result\n  \n  # If the value\
    \ of \"i\" is greater than \"x\", then return \"result\".\n  if i > x\n    return\
    \ result\n  \n  # If the value of \"i\" is less than \"x\", then return \"result\"\
    .\n  if i < x\n    return result\n", "  \n  # Initialize a variable called \"\
    result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"even\" to 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to\
    \ 1.\n  odd = 1\n  \n  # Initialize a variable called \"i\" to the value 0.\n\
    \  i = 0\n  \n  # Initialize a variable called \"j\" to the value 1.\n  j = 1\n\
    \  \n  # While \"i\" is less than \"y\" and \"j\" is less than \"x\":\n  while\
    \ i < y and j < x:\n    \n    # If the current value of \"i\" is even:\n    if\
    \ i % 2 == 0:\n      \n      # Increment \"even\" by 1.\n      even += 1\n   \
    \   \n    # Else, if the current value of \"i\" is odd:\n    else:\n      \n \
    \     # Increment \"odd\" by 1.\n      odd += 1\n      \n    # Increment \"i\"\
    \ by 1.\n    i += 1\n    \n    # Increment \"j\" by 1.\n    j += 1\n    \n  #\
    \ If the value of \"even\" is greater than \"odd\", then \"result\" is the \n\
    \  # value of \"even\".\n  if even > odd:\n    result = even\n  \n  # If the value\
    \ of \"odd\" is greater than \"even\", then \"result\" is the \n  # value of \"\
    odd\".\n  else:\n    result = odd\n  \n  # Return the value of \"result\".\n \
    \ return result\n</cell>\n<cell>", "  if x > y\n    x, y = y, x\n  \n  while x\
    \ <= y\n    x += 1\n    y -= 1\n    \n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  \n  even = x % 2 == 0\n  \n  if even\n    \n\
    \    if x > y\n      \n      return x\n      \n    elsif x < y\n      \n     \
    \ return y\n      \n    elsif x == y\n      \n      return x\n      \n    end\n\
    \    \n  else\n    \n    if x > y\n      \n      return y\n      \n    elsif x\
    \ < y\n      \n      return x\n      \n    elsif x == y\n      \n      return\
    \ x\n      \n    end\n    \n  end\n  \nend", "  \n  even = x % 2 == 0\n  \n  if\
    \ even\n    \n    if x > y\n      \n      biggest = y\n      \n    else\n    \
    \  \n      biggest = x\n      \n    end\n    \n  else\n    \n    if x > y\n  \
    \    \n      biggest = x\n      \n    else\n      \n      biggest = y\n      \n\
    \    end\n    \n  end\n  \n  return biggest\n  \nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nProblem 7: Write a function that takes a positive integer number x and\
    \ returns the number of digits in x. If x is negative, return -1.", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n  end\n  \n  x\nend", "  \n  # Initialize a variable\
    \ called result to -1\n  result = -1\n  \n  # Initialize a variable called remainder\
    \ to 0\n  remainder = 0\n  \n  # Initialize a variable called i to 1\n  i = 1\n\
    \  \n  # While i is less than or equal to y\n  while i <= y\n    \n    # If the\
    \ remainder is zero\n    if remainder == 0\n      \n      # Set result to i\n\
    \      result = i\n      \n      # Increment i\n      i += 1\n      \n    # Else\
    \ the remainder is not zero\n    else\n      \n      # Set remainder to the remainder\
    \ of i divided by 2\n      remainder = i % 2\n      \n      # Increment i\n  \
    \    i += 1\n      \n  # Return result\n  result\nend\n</cell>\n<cell>\nchoose_num(12,\
    \ 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n\
    </cell>\n<cell>\nchoose_num(13, 14)\n</cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n\
    <cell>\nchoose_num(13, 16)\n</cell>\n<cell>\nchoose_num(13, 17)\n</cell>\n<cell>\n\
    choose_num(13, 18)\n</cell>\n<cell>\nchoose_num(13, 19)\n</cell>\n<cell>\nchoose_num(13,\
    \ 20)\n</cell>\n<cell>\nchoose_num(13, 21)\n</cell>\n<cell>\nchoose_num(13, 22)\n\
    </cell>\n<cell>\nchoose_num(13, 23)\n</cell>\n<cell>\nchoose_num(13, 24)\n</cell>\n\
    <cell>\nchoose_num(13, 25)\n</cell>\n<cell>\nchoose_num(13, 26)\n</cell>\n<cell>\n\
    choose_num(13, 27)\n</cell>\n<cell>\nchoose_num(13, 28)\n</cell>\n<cell>\nchoose_num(13,\
    \ 29)\n</cell>\n<cell>\nchoose_num(13, 30)\n</cell>\n<cell>\nchoose_num(13, 31)\n\
    </cell>\n<cell>\nchoose_num(13, 32)\n</cell>\n<cell>\nchoose_num(13, 33)\n</cell>\n",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While the\
    \ variable \"i\" is less than the variable \"y\".\n  while i < y\n    \n    #\
    \ While the variable \"j\" is less than the variable \"x\".\n    while j < x\n\
    \      \n      # If the variable \"i\" is evenly divisible by \"j\", then increment\
    \ \"j\".\n      if i % j == 0\n        j += 1\n      \n      # If the variable\
    \ \"j\" is evenly divisible by \"i\", then increment \"i\".\n      else\n    \
    \    i += 1\n      end\n    end\n    \n    # If the variable \"i\" is greater\
    \ than or equal to the variable \"y\", then \n    # set the variable \"result\"\
    \ to the value of \"i\".\n    if i >= y\n      result = i\n    end\n    \n   \
    \ # If the variable \"i\" is less than or equal to the variable \"y\", then \n\
    \    # set the variable \"result\" to the value of \"i\".\n    if i < y\n    \
    \  result = i\n    end\n    \n    # Increment \"i\".\n    i += 1\n  end\n  \n\
    \  # Return the value of \"result\".\n  return result\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\nbiggest odd number that is in the\
    \ range [x, y] inclusive. If there's no such \nnumber, then the function should\
    \ return -1.\nFor example:\nchoose_num(12, 15) = 13\nchoose_num(13, 12) = -1\n\
    Hint: Remember that you can use the % operator to check if a number is \nevenly\
    \ divisible by another number.", "  \n  # Initialize a variable called \"result\"\
    \ to the value -1.\n  result = -1\n  \n  # Initialize a variable called \"even\"\
    \ to the value 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to\
    \ the value 1.\n  odd = 1\n  \n  # Initialize a variable called \"x\" to the value\
    \ of x.\n  x = x.to_i\n  \n  # Initialize a variable called \"y\" to the value\
    \ of y.\n  y = y.to_i\n  \n  # Initialize a variable called \"i\" to the value\
    \ of 0.\n  i = 0\n  \n  # Initialize a variable called \"j\" to the value of 1.\n\
    \  j = 1\n  \n  # Initialize a variable called \"k\" to the value of 2.\n  k =\
    \ 2\n  \n  # Initialize a variable called \"l\" to the value of 3.\n  l = 3\n\
    \  \n  # Initialize a variable called \"m\" to the value of 4.\n  m = 4\n  \n\
    \  # Initialize a variable called \"n\" to the value of 5.\n  n = 5\n  \n  # Initialize\
    \ a variable called \"o\" to the value of 6.\n  o = 6\n  \n  # Initialize a variable\
    \ called \"p\" to the value of 7.\n  p = 7\n  \n  # Initialize a variable called\
    \ \"q\" to the value of 8.\n  q = 8\n  \n  # Initialize a variable called \"r\"\
    \ to the value of 9.\n  r = 9\n  \n  # Initialize a variable called \"s\" to the\
    \ value of 10.\n  s = 10\n  \n  # Initialize a variable called \"t\" to the value\
    \ of 11.\n  t = 11\n  \n  # Initialize a variable called \"u\" to the value of\
    \ 12.\n  u = 12\n  \n  # Initialize a variable called \"v\" to the value of 13.\n\
    \  v = 13\n  \n  # Initialize a variable called \"w\" to the value of 14.\n  w\
    \ = 14\n  \n  # Initialize a variable called \"x\" to the value of 15.\n  x =\
    \ 15\n  \n  # Initialize a variable called \"y\" to the value of 16.\n  y = 16\n\
    \  \n  # Initialize a variable called \"z\" to the value of 17.\n  z = 17\n  \n\
    \  # Initialize a variable called \"a\" to the value of 18.\n  a = 18\n  \n  #\
    \ Initialize a variable called \"b\" to the value of 19.\n  b = 19\n  \n  # Initialize\
    \ a variable called \"c\" to the value of 20.\n  c = 20\n  \n  # Initialize a\
    \ variable called \"d\" to the value of 21.\n  d = 21\n  \n  # Initialize a variable\
    \ called \"e\" to the value of 22.\n  e = 22\n  \n  # Initialize a ", "  \n  #\
    \ Initialize a variable called result to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable\
    \ called i to 0\n  i = 0\n  \n  # Initialize a variable called j to 1\n  j = 1\n\
    \  \n  # While i is less than or equal to y\n  while i <= y\n  \n    # While j\
    \ is less than or equal to x\n    while j <= x\n    \n      # If remainder is\
    \ zero, add j to result\n      if remainder == 0\n        result = j\n      \n\
    \      # If remainder is not zero, subtract remainder from result\n      else\n\
    \        result = result - remainder\n      \n      # Add remainder to remainder\n\
    \      remainder = remainder + j\n      \n      # Add 1 to j\n      j = j + 1\n\
    \    end\n    \n    # Add 1 to i\n    i = i + 1\n  end\n  \n  # Return result\n\
    \  result\nend\n</cell>\n<cell>", "  \n  even = x % 2 == 0\n  \n  if even\n  \
    \  \n    if x == y\n      \n      return x\n    \n    else \n      \n      return\
    \ y\n    \n  else\n    \n    if x == y\n      \n      return x\n    \n    else\
    \ \n      \n      return y\n    \n  end \nend", "  \n  # Initialize a variable\
    \ called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called \"i\" to the value 0.\n  i = 0\n  \n  # While the value of \"i\" is less\
    \ than or equal to \"y\", and the\n  # value of \"result\" is -1, loop while incrementing\
    \ \"i\".\n  while i <= y && result == -1\n    \n    # If the value of \"i\" is\
    \ less than or equal to \"x\", then set \"result\"\n    # to the value of \"i\"\
    .\n    if i <= x\n      result = i\n    \n    # Increment \"i\" by 1.\n    i +=\
    \ 1\n  \n  # Return the value of \"result\".\n  return result\nend\n</cell>\n\
    <code language=julia-1.5>", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even\
    \ and x < y\n  even = even and x > 0 and y > 0 and x < y\n  even = even and x\
    \ > 0 and y > 0 and x < y and y < x\n  even = even and x > 0 and y > 0 and x <\
    \ y and y < x and x < y\n  even = even and x > 0 and y > 0 and x < y and y < x\
    \ and x < y and y < x\n  even = even and x > 0 and y > 0 and x < y and y < x and\
    \ x < y and y < x and x < y\n  even = even and x > 0 and y > 0 and x < y and y\
    \ < x and x < y and y < x and x < y and y < x\n  even = even and x > 0 and y >\
    \ 0 and x < y and y < x and x < y and y < x and x < y and y < x and x < y\n  even\
    \ = even and x > 0 and y > 0 and x < y and y < x and x < y and y < x and x < y\
    \ and y < x and x < y and y < x\n  even = even and x > 0 and y > 0 and x < y and\
    \ y < x and x < y and y < x and x < y and y < x and x < y and y < x and x < y\n\
    \  even = even and x > 0 and y > 0 and x < y and y < x and x < y and y < x and\
    \ x < y and y < x and x < y and y < x and x < y and y < x\n  even = even and x\
    \ > 0 and y > 0 and x < y and y < x and x < y and y < x and x < y and y < x and\
    \ x < y and y < x and x < y and y < x and x < y\n  even = even and x > 0 and y\
    \ > 0 and x < y and y < x and x < y and y < x and x < y and y < x and x < y and\
    \ y < x and x < y and y < x and x < y and y < x\n  even = even and x > 0 and y\
    \ > 0 and x < y and y < x and x < y and y < x and x < y and y < x and x < y and\
    \ y < x and x < y and y < x and x < y and y < x and x < y\n  even = even and x\
    \ > 0 and y > 0 and x < y and y < x and x < y and y < x and x < y and y < x and\
    \ x < y and y < x and x < y and y < x and x < y and y < x and x < y and y < x\n\
    \  even = even and x > 0 and y > 0 and x < y and y < x and x < y and y < x and\
    \ x < y and y < x and x < y and y < x and x < y and y < x and x < y and y < x\
    \ and x < y and y < x\n  even = even and x > 0 and y > 0 and x < y and y < x and\
    \ x < y and y < x and x < y and y < x and x < y and y < x and x < y and y < x\
    \ and x < y and y < x and x < y and y < x\n  even = even and x > 0 and y > 0 and\
    \ x < y and y < x and x < y and y < x and x < y and y < x and x < y and y < x\
    \ and x < y and y < x and x < y and y < x and x < y and y < x\n  even = even and ",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    x += 1\n  end\n  \n  return -1\nend", "  \n  even = x % 2 == 0\n  \n\
    \  if even\n    \n    if x > y\n      \n      biggest = y\n      \n    elsif x\
    \ < y\n      \n      biggest = x\n      \n    else\n      \n      biggest = x\
    \ if x > y else y\n    end\n    \n  else\n    \n    if x > y\n      \n      biggest\
    \ = y\n      \n    elsif x < y\n      \n      biggest = x\n      \n    else\n\
    \      \n      biggest = x if x > y else y\n    end\n  end\n  \n  return biggest\n\
    end", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and ((x\
    \ - y) / 2) < 0\n  even = even and ((x - y) / 2) > 0\n  even = even and ((x -\
    \ y) / 2) < 1\n  even = even and ((x - y) / 2) >= 1\n  even = even and ((x - y)\
    \ / 2) < 2\n  even = even and ((x - y) / 2) >= 2\n  even = even and ((x - y) /\
    \ 2) < 3\n  even = even and ((x - y) / 2) >= 3\n  even = even and ((x - y) / 2)\
    \ < 4\n  even = even and ((x - y) / 2) >= 4\n  even = even and ((x - y) / 2) <\
    \ 5\n  even = even and ((x - y) / 2) >= 5\n  even = even and ((x - y) / 2) < 6\n\
    \  even = even and ((x - y) / 2) >= 6\n  even = even and ((x - y) / 2) < 7\n \
    \ even = even and ((x - y) / 2) >= 7\n  even = even and ((x - y) / 2) < 8\n  even\
    \ = even and ((x - y) / 2) >= 8\n  even = even and ((x - y) / 2) < 9\n  even =\
    \ even and ((x - y) / 2) >= 9\n  even = even and ((x - y) / 2) < 10\n  even =\
    \ even and ((x - y) / 2) >= 10\n  even = even and ((x - y) / 2) < 11\n  even =\
    \ even and ((x - y) / 2) >= 11\n  even = even and ((x - y) / 2) < 12\n  even =\
    \ even and ((x - y) / 2) >= 12\n  even = even and ((x - y) / 2) < 13\n  even =\
    \ even and ((x - y) / 2) >= 13\n  even = even and ((x - y) / 2) < 14\n  even =\
    \ even and ((x - y) / 2) >= 14\n  even = even and ((x - y) / 2) < 15\n  even =\
    \ even and ((x - y) / 2) >= 15\n  even = even and ((x - y) / 2) < 16\n  even =\
    \ even and ((x - y) / 2) >= 16\n  even = even and ((x - y) / 2) < 17\n  even =\
    \ even and ((x - y) / 2) >= 17\n  even = even and ((x - y) / 2) < 18\n  even =\
    \ even and ((x - y) / 2) >= 18\n  ", "  if x > y\n    return -1\n  elsif x ==\
    \ y\n    return 0\n  elsif x % 2 == 0\n    return choose_num(x / 2, y)\n  else\n\
    \    return choose_num(x / 2, y + 1)\n  end\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 36)\n</", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    biggest\
    \ = y\n    \n  else\n    \n    biggest = x\n    \n  end\n  \n  while biggest <\
    \ y\n    \n    biggest = biggest + 2\n    \n  end\n  \n  return biggest\nend\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 35)\n</cell>\n<code language=juli",
  "  even = x % 2 == 0\n  odd = y % 2 == 0\n  if even && odd\n    biggest = x if x\
    \ > y else y\n  elsif even && !odd\n    biggest = y\n  elsif !even && odd\n  \
    \  biggest = x\n  end\n  return biggest\nend", "  \n  # Initialize a variable\
    \ called 'result' to -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j' to 1.\n  j = 1\n\
    \  \n  # While 'i' is less than or equal to 'y' and 'j' is less than or equal\
    \ to 'x', \n  # increment 'i' and 'j' by 2.\n  while i <= y && j <= x\n    \n\
    \    # If the current value of 'i' is even, increment 'i' by 2.\n    if i % 2\
    \ == 0\n      i += 1\n    \n    # If the current value of 'j' is even, increment\
    \ 'j' by 2.\n    if j % 2 == 0\n      j += 1\n    \n    # If the current value\
    \ of 'i' is greater than 'y', then set 'result' to 'i'.\n    if i > y\n      result\
    \ = i\n    \n    # If the current value of 'j' is greater than 'x', then set 'result'\
    \ to 'j'.\n    if j > x\n      result = j\n    \n    # If the current value of\
    \ 'i' is equal to 'y' and current value of 'j' is equal to 'x', \n    # then set\
    \ 'result' to -1.\n    if i == y && j == x\n      result = -1\n    \n    # If\
    \ the current value of 'i' is equal to 'y' and current value of 'j' is greater\
    \ than 'x', \n    # then set 'result' to -1.\n    if i == y && j > x\n      result\
    \ = -1\n    \n    # If the current value of 'i' is greater than 'y' and current\
    \ value of 'j' is equal to 'x', \n    # then set 'result' to -1.\n    if i > y\
    \ && j == x\n      result = -1\n    \n    # If the current value of 'i' is greater\
    \ than 'y' and current value of 'j' is greater than 'x', \n    # then set 'result'\
    \ to -1.\n    if i > y && j > x\n      result = -1\n    \n    # If the current\
    \ value of 'i' is less than 'y' and current value of 'j' is equal to 'x', \n \
    \   # then set 'result' to -1.\n    if i < y && j == x\n      result = -1\n  \
    \  \n    # If the current value of 'i' is less than 'y' and current value of 'j'\
    \ is greater than 'x', \n    # then set 'result' to -1.\n    if i < y && j > x\n\
    \      result = -1\n    \n    # If the current value of 'i' is equal to 'y' and\
    \ current value of 'j' is equal to 'x', \n    # then set 'result' to -1.\n   \
    \ if i == y && j == x\n      result = -1\n    \n    # If the current value of\
    \ 'i' is equal to 'y' and current value of 'j' is ", "  \n  # Initialize a variable\
    \ called 'result' to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'i' to the value 0.\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to the value 1.\n  j = 1\n  \n  # While the value of 'i' is less than or equal\
    \ to 'y' and \n  # the value of 'j' is less than or equal to 'x'\n  while i <=\
    \ y && j <= x\n    \n    # If the value of 'i' is evenly divisible by 'j'\n  \
    \  if i % j == 0\n      \n      # Then the value of 'result' is the value of 'i'.\n\
    \      result = i\n      \n      # Break the while loop.\n      break\n    \n\
    \    # Increment the value of 'j'.\n    j += 1\n    \n    # Increment the value\
    \ of 'i'.\n    i += 1\n  \n  # Return the value of 'result'.\n  return result\n\
    end\n</cell>\n<code language=julia-1.5>", "  if x > y\n    x, y = y, x\n  while\
    \ x != y\n    x, y = y, x % y\n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x < y\n    x += 1\n    y -= 1\n \
    \ end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 36)\n</cell>",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 1.\n  i = 1\n  \n  #\
    \ Initialize a variable called \"j\" to the value 2.\n  j = 2\n  \n  # While \"\
    i\" is not equal to \"j\", do:\n  while i != j\n  \n    # Check if \"i\" is evenly\
    \ divisible by \"j\".\n    if i % j == 0\n    \n      # If \"i\" is evenly divisible\
    \ by \"j\", then set \"result\" to \"i\".\n      result = i\n      \n      # Set\
    \ \"i\" to the value of \"j\" plus 1.\n      i = j + 1\n      \n      # Set \"\
    j\" to the value of \"j\" plus 2.\n      j = j + 2\n      \n    # Else, set \"\
    i\" to the value of \"j\" plus 1.\n    else\n      i = j + 1\n      \n      #\
    \ Set \"j\" to the value of \"j\" plus 2.\n      j = j + 2\n    end\n  end\n \
    \ \n  # Return the value of \"result\".\n  return result\nend\n</cell>\n<cell>",
  "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and ((x % 4 ==\
    \ 0 and y % 4 == 0) or (x % 4 == 0 and y % 4 == 1))\n  even = even and ((x % 8\
    \ == 0 and y % 8 == 0) or (x % 8 == 0 and y % 8 == 1))\n  even = even and ((x\
    \ % 16 == 0 and y % 16 == 0) or (x % 16 == 0 and y % 16 == 1))\n  even = even\
    \ and ((x % 32 == 0 and y % 32 == 0) or (x % 32 == 0 and y % 32 == 1))\n  even\
    \ = even and ((x % 64 == 0 and y % 64 == 0) or (x % 64 == 0 and y % 64 == 1))\n\
    \  even = even and ((x % 128 == 0 and y % 128 == 0) or (x % 128 == 0 and y % 128\
    \ == 1))\n  even = even and ((x % 256 == 0 and y % 256 == 0) or (x % 256 == 0\
    \ and y % 256 == 1))\n  even = even and ((x % 512 == 0 and y % 512 == 0) or (x\
    \ % 512 == 0 and y % 512 == 1))\n  even = even and ((x % 1024 == 0 and y % 1024\
    \ == 0) or (x % 1024 == 0 and y % 1024 == 1))\n  even = even and ((x % 2048 ==\
    \ 0 and y % 2048 == 0) or (x % 2048 == 0 and y % 2048 == 1))\n  even = even and\
    \ ((x % 4096 == 0 and y % 4096 == 0) or (x % 4096 == 0 and y % 4096 == 1))\n \
    \ even = even and ((x % 8192 == 0 and y % 8192 == 0) or (x % 8192 == 0 and y %\
    \ 8192 == 1))\n  even = even and ((x % 16384 == 0 and y % 16384 == 0) or (x %\
    \ 16384 == 0 and y % 16384 == 1))\n  even = even and ((x % 32768 == 0 and y %\
    \ 32768 == 0) or (x % 32768 == 0 and y % 32768 == 1))\n  even = even and ((x %\
    \ 65536 == 0 and y % 65536 == 0) or (x % 65536 == 0 and y % 65536 == 1))\n  even\
    \ = even and ((x % 131072 == 0 and y % 131072 == 0) or (x % 131072 == 0 and y\
    \ % 131072 == 1))\n  even = even and ((x % 262144 == 0 and y % 262144 == 0) or\
    \ (x ", "  \n  # Write your code here.\n  return -1\nend", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 0.\n  i = 0\n  \n  # While the value of\
    \ \"i\" is less than or equal to \"y\", and the\n  # value of \"result\" is still\
    \ -1, do:\n  while i <= y && result == -1\n    \n    # If the value of \"i\" is\
    \ less than or equal to \"x\", then\n    # subtract 1 from \"i\".\n    if i <=\
    \ x\n      i -= 1\n    \n    # If the value of \"i\" is greater than \"y\", then\n\
    \    # subtract 1 from \"i\".\n    if i > y\n      i -= 1\n    \n    # If the\
    \ value of \"i\" is even, then\n    # subtract 1 from \"i\".\n    if i % 2 ==\
    \ 0\n      i -= 1\n    \n    # If the value of \"i\" is odd, then\n    # subtract\
    \ 1 from \"i\".\n    if i % 2 != 0\n      i -= 1\n    \n    # If the value of\
    \ \"i\" is equal to \"x\", then\n    # subtract 1 from \"i\".\n    if i == x\n\
    \      i -= 1\n    \n    # If the value of \"i\" is equal to \"y\", then\n   \
    \ # subtract 1 from \"i\".\n    if i == y\n      i -= 1\n    \n    # If the value\
    \ of \"i\" is less than or equal to \"x\", then\n    # subtract 1 from \"i\".\n\
    \    if i <= x\n      i -= 1\n    \n    # If the value of \"i\" is greater than\
    \ \"y\", then\n    # subtract 1 from \"i\".\n    if i > y\n      i -= 1\n    \n\
    \    # If the value of \"i\" is even, then\n    # subtract 1 from \"i\".\n   \
    \ if i % 2 == 0\n      i -= 1\n    \n    # If the value of \"i\" is odd, then\n\
    \    # subtract 1 from \"i\".\n    if i % 2 != 0\n      i -= 1\n    \n    # If\
    \ the value of \"i\" is equal to \"x\", then\n    # subtract 1 from \"i\".\n \
    \   if i == x\n      i -= 1\n    \n    # If the value of \"i\" is equal to \"\
    y\", then\n    # subtract 1 from \"i\".\n    if i == y\n      i -= 1\n    \n \
    \   # If the value of \"i\" is less than or equal to \"x\", then\n    # subtract\
    \ 1 from \"i\".\n    if i <= x\n      i -= 1\n    \n    # If the value of \"i\"\
    \ is greater than \"y\", then\n    # subtract 1 from \"i\".\n    if i > y\n  \
    \    i -= 1\n    \n    # If the value of \"i\" is even, then\n    # subtract 1\
    \ from \"i\".\n    if i % 2 == 0\n      i -= 1", "  \n  # Initialize a variable\
    \ to store the result\n  result = -1\n  \n  # Iterate through all numbers between\
    \ x and y\n  for i in (x..y)\n    \n    # If the number is even, add 2 to it\n\
    \    if i % 2 == 0\n      result += 2\n    \n    # If the number is odd, subtract\
    \ 1 from it\n    else\n      result -= 1\n    \n    # If the result is still negative,\
    \ return -1\n    if result < 0\n      break\n    \n  # Return the result\n  return\
    \ result\nend", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even\
    \ and x > y\n  even = even and x < y\n  even = even and y > x\n  even = even and\
    \ y < x\n  even = even and x > 0 and y > 0\n  even = even and x < 0 and y > 0\n\
    \  even = even and x > 0 and y < 0\n  even = even and x < 0 and y < 0\n  even\
    \ = even and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even\
    \ and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even and x\
    \ > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even and x > 0 and\
    \ y > 0\n  even = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n\
    \  even = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even\
    \ = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even\
    \ and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even and x\
    \ < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even and x < 0 and\
    \ y < 0\n  even = even and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n\
    \  even = even and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even\
    \ = even and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even\
    \ and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even and x\
    \ > 0 and y > 0\n  even = even and x < 0 and y < 0\n  even = even and x > 0 and\
    \ y > 0\n  even = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n\
    \  even = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even\
    \ = even and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even\
    \ and x < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even and x\
    \ < 0 and y < 0\n  even = even and x > 0 and y > 0\n  even = even and x < 0 and\
    \ y < 0\n  even = even and x > 0 and y > 0\n  even = even and x < 0 and y < 0\n\
    \  ", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n  \
    \    result = x\n      \n    elsif x < y\n      \n      result = y\n      \n \
    \   else\n      \n      result = x\n      \n    end\n    \n  else\n    \n    if\
    \ x > y\n      \n      result = y\n      \n    elsif x < y\n      \n      result\
    \ = x\n      \n    else\n      \n      result = x\n      \n    end\n    \n  end\n\
    \  \n  return result\nend\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n<cell>\n\
    choose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n</cell>\n<cell>\nchoose_num(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n<cell>\nchoose_num(13, 16)\n\
    </cell>\n<cell>\nchoose_num(13, 17)\n</cell>\n<cell>\nchoose_num(13, 18)\n</cell>\n\
    <cell>\nchoose_num(13, 19)\n</cell>\n<cell>\nchoose_num(13, 20)\n</cell>\n<cell>\n\
    choose_num(13, 21)\n</cell>\n<cell>\nchoose_num(13, 22)\n</cell>\n<cell>\nchoose_num(13,\
    \ 23)\n</cell>\n<cell>\nchoose_num(13, 24)\n</cell>\n<cell>\nchoose_num(13, 25)\n\
    </cell>\n<cell>\nchoose_num(13, 26)\n</cell>\n<cell>\nchoose_num(13, 27)\n</cell>\n\
    <cell>\nchoose_num(13, 28)\n</cell>\n<cell>\nchoose_num(13, 29)\n</cell>\n<cell>\n\
    choose_num(13, 30)\n</cell>\n<cell>\nchoose_num(13, 31)\n</cell>\n<cell>\nchoose_num(13,\
    \ 32)\n</cell>\n<cell>\nchoose_num(13, 33)\n</cell>\n<cell>\nchoose_num(13, 34)\n\
    </cell>\n<cell>\nchoose_num(13, 35)\n</cell>\n<cell>\nchoose_num(13, 36", "  biggest\
    \ = nil\n  \n  for i in 1..y\n    if biggest.nil? or biggest > i\n      biggest\
    \ = i\n    end\n  end\n  \n  for i in x..y\n    if biggest.nil? or biggest > i\n\
    \      biggest = i\n    end\n  end\n  \n  return biggest\nend", "  \n  even =\
    \ x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      biggest = y\n \
    \     \n    else\n      \n      biggest = x\n      \n    end\n    \n  else\n \
    \   \n    if x > y\n      \n      biggest = x\n      \n    else\n      \n    \
    \  biggest = y\n      \n    end\n    \n  end\n  \n  return biggest\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=", "  \n  # Initialize a variable called \"result\" to the value\
    \ -1.\n  result = -1\n  \n  # Initialize a variable called \"even\" to 0.\n  even\
    \ = 0\n  \n  # Initialize a variable called \"odd\" to 1.\n  odd = 1\n  \n  #\
    \ Initialize a variable called \"temp\" to the value of x.\n  temp = x\n  \n \
    \ # Initialize a variable called \"temp2\" to y.\n  temp2 = y\n  \n  # While \"\
    temp\" is not equal to \"temp2\":\n  while temp != temp2:\n    \n    # If the\
    \ value of \"temp\" is even:\n    if temp % 2 == 0:\n      \n      # Increment\
    \ \"even\" by 1.\n      even += 1\n      \n      # Decrement \"temp\" by 1.\n\
    \      temp -= 1\n      \n    # Else, if the value of \"temp\" is odd:\n    else:\n\
    \      \n      # Increment \"odd\" by 1.\n      odd += 1\n      \n      # Decrement\
    \ \"temp\" by 1.\n      temp -= 1\n      \n  # If the value of \"even\" is greater\
    \ than \"odd\", then return \"even\".\n  if even > odd:\n    result = even\n \
    \ \n  # Else, if the value of \"odd\" is greater than \"even\", then return \"\
    odd\".\n  else:\n    result = odd\n  \n  # Return the value of \"result\".\n \
    \ return result\n  ", "  even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n\
    \    biggest = y\n  else\n    biggest = x\n  end\n  \n  while biggest < y\n  \
    \  biggest = biggest + 2\n  end\n  \n  while biggest > y\n    biggest = biggest\
    \ - 2\n  end\n  \n  if biggest == y\n    biggest\n  else\n    -1\n  end\nend\n\
    </code>\n<|/ a |>\n<| c |>\nI like your solution, but I believe it can be simplified\
    \ a bit. `choose_num(12, 15)` returns 14 instead of 15. `choose_num(13, 12)` returns\
    \ -1 instead of 12. `choose_num(13, 13)` returns 13 instead of 13. `choose_num(13,\
    \ 14)` returns 14 instead of 14. `choose_num(13, 15)` returns 14 instead of 15.\
    \ `choose_num(14, 13)` returns 14 instead of 13. `choose_num(14, 14)` returns\
    \ 14 instead of 14. `choose_num(14, 15)` returns 14 instead of 15. `choose_num(15,\
    \ 14)` returns 14 instead of 14. `choose_num(15, 15)` returns 14 instead of 15.\
    \ `choose_num(16, 14)` returns 14 instead of 14. `choose_num(16, 15)` returns\
    \ 14 instead of 15. `choose_num(17, 14)` returns 14 instead of 14. `choose_num(17,\
    \ 15)` returns 14 instead of 15. `choose_num(18, 14)` returns 14 instead of 14.\
    \ `choose_num(18, 15)` returns 14 instead of 15. `choose_num(19, 14)` returns\
    \ 14 instead of 14. `choose_num(19, 15)` returns 14 instead of 15. `choose_num(20,\
    \ 14)` returns 14 instead of 14. `choose_num(20, 15)` returns 14 instead of 15.\
    \ `choose_num(21, 14)` returns 14 instead of 14. `choose_num(21, 15)` returns\
    \ 14 instead of 15. `choose_num(22, 14)` returns 14 instead of 14. `choose_num(22,\
    \ 15)` returns 14 instead of 15. `choose_num(23, 14)` returns 14 instead of 14.\
    \ `choose_num(23, 15)` returns 14 instead of 15. `choose_num(24, 14)` returns\
    \ 14 instead of 14. `choose_num(24, 15)` returns 14 instead of 15. `choose_num(25,\
    \ 14)` returns 14 instead of 14. `choose_num(25, 15)` returns 14 ", "  even =\
    \ x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x > y\n  even =\
    \ even and x < y\n  even = even and x > 0 and x < y\n  even = even and x > 0 and\
    \ y > 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and y > 0\n\
    \  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even\
    \ = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even\
    \ and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x\
    \ > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and\
    \ y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n\
    \  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even\
    \ = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even\
    \ and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x\
    \ > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and\
    \ y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n\
    \  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even\
    \ = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even\
    \ and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x\
    \ > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and\
    \ y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n\
    \  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even\
    \ = even and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even\
    \ and x > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x\
    \ > 0 and y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and\
    \ y < 0\n  even = even and x > 0 and y < 0\n  even = even and x > 0 and y < ",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x\
    \ > y\n      \n      result = x\n      \n    else\n      \n      result = y\n\
    \      \n    end\n    \n  else\n    \n    if x > y\n      \n      result = y\n\
    \      \n    else\n      \n      result = x\n      \n    end\n    \n  end\n  \n\
    \  return result\nend\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n<cell>\n\
    choose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n</cell>\n<cell>\nchoose_num(13,\
    \ 14)\n</cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n<cell>\nchoose_num(13, 16)\n\
    </cell>\n<cell>\nchoose_num(13, 17)\n</cell>\n<cell>\nchoose_num(13, 18)\n</cell>\n\
    <cell>\nchoose_num(13, 19)\n</cell>\n<cell>\nchoose_num(13, 20)\n</cell>\n<cell>\n\
    choose_num(13, 21)\n</cell>\n<cell>\nchoose_num(13, 22)\n</cell>\n<cell>\nchoose_num(13,\
    \ 23)\n</cell>\n<cell>\nchoose_num(13, 24)\n</cell>\n<cell>\nchoose_num(13, 25)\n\
    </cell>\n<cell>\nchoose_num(13, 26)\n</cell>\n<cell>\nchoose_num(13, 27)\n</cell>\n\
    <cell>\nchoose_num(13, 28)\n</cell>\n<cell>\nchoose_num(13, 29)\n</cell>\n<cell>\n\
    choose_num(13, 30)\n</cell>\n<cell>\nchoose_num(13, 31)\n</cell>\n<cell>\nchoose_num(13,\
    \ 32)\n</cell>\n<cell>\nchoose_num(13, 33)\n</cell>\n<cell>\nchoose_num(13, 34)\n\
    </cell>\n<cell>\nchoose_num(13, 35)\n</cell>\n<cell>\nchoose_num(13, 36)\n</cell>\n\
    <cell>\nchoose_num(13, 37)\n</cell>\n<cell>\nchoose_num(", "  \n  # Initialize\
    \ a variable to store the biggest even number that is \n  # in the range [x, y]\
    \ inclusive.\n  biggest_even = -1\n  \n  # Initialize a variable to store the\
    \ current number being checked.\n  current_even = 1\n  \n  # Loop while current_even\
    \ is not equal to x.\n  while current_even != x\n  \n    # If the current number\
    \ is even, increment current_even by 1.\n    if current_even % 2 == 0\n      current_even\
    \ += 1\n    \n    # If the current number is odd, decrement current_even by 1.\n\
    \    else\n      current_even -= 1\n    end\n  \n    # If the current number is\
    \ bigger than the biggest even number \n    # that is in the range [x, y] inclusive,\
    \ update biggest_even to \n    # current_even.\n    if current_even > biggest_even\n\
    \      biggest_even = current_even\n    end\n  end\n  \n  # Return the biggest\
    \ even number that is in the range [x, y] inclusive.\n  return biggest_even\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes two positive numbers x and y and returns\
    \ true if x is less than or equal to y or false otherwise.", "  x = x.to_i\n \
    \ y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n   \
    \ \n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n\
    \  return -1\nend", "  biggest_even = -1\n  \n  for i in 1..y\n    if i % 2 ==\
    \ 0\n      if biggest_even < i\n        biggest_even = i\n      end\n    end\n\
    \  end\n  \n  if biggest_even < x\n    biggest_even = x\n  end\n  \n  return biggest_even\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x < y\n    x, y = y, x + y\n  end\n  \n  x\nend", "  \n  # Initialize\
    \ a variable to store the biggest even number that is \n  # in the range [x, y]\
    \ inclusive.\n  max_even = nil\n  \n  # Loop through all even numbers between\
    \ x and y.\n  (0...x).each do |i|\n    \n    # If the current number is even,\
    \ add it to the biggest even number\n    # that is in the range [x, y] inclusive.\n\
    \    if i % 2 == 0\n      max_even = i if max_even.nil? || max_even > i\n    end\n\
    \  end\n  \n  # Return the biggest even number that is in the range [x, y] inclusive.\n\
    \  max_even\nend", "  \n  # Initialize a variable called 'result' to -1\n  result\
    \ = -1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  #\
    \ Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable\
    \ called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y' to y\n  y\
    \ = y\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n  # Initialize\
    \ a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable called 'k'\
    \ to 1\n  k = 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n\
    \  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # While the value of 'i' is less than or equal\
    \ to 'y' \n  # and the value of 'j' is less than or equal to 'x'\n  while i <=\
    \ y && j <= x\n    \n    # If the value of 'i' is even\n    if i % 2 == 0\n  \
    \    \n      # Increment the value of 'even'\n      even = even + 1\n      \n\
    \    # Else\n    else\n      \n      # Increment the value of 'odd'\n      odd\
    \ = odd + 1 \n    \n    # Increment the value of 'i'\n    i = i + 1\n    \n  \
    \  # Increment the value of 'j'\n    j = j + 1\n    \n    # If the value of 'i'\
    \ is greater than 'y'\n    if i > y\n      \n      # Increment the value of 'i'\n\
    \      i = i + 1\n      \n      # Increment the value of 'j'\n      j = j + 1\n\
    \      \n      # If the value of 'j' is greater than 'x'\n      if j > x\n   \
    \     \n        # Increment the value of 'j'\n        j = j + 1\n        \n  \
    \      # Increment the value of 'k'\n        k = k + 1\n      \n      # Else\n\
    \      else\n        \n        # Increment the value of 'k'\n        k = k + 1\n\
    \      \n      # If the value of 'k' is greater than 'even'\n      if k > even\n\
    \        \n        # Increment the value of 'k'\n        k = k", "  \n  # Initialize\
    \ a variable called result to -1\n  result = -1\n  \n  # Initialize a variable\
    \ called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable called\
    \ num to 0\n  num = 0\n  \n  # Initialize a variable called remainder to 0\n \
    \ remainder = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n  \n\
    \  # Initialize a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize\
    \ a variable called num to 0\n  num = 0\n  \n  # Initialize a variable called\
    \ remainder to 0\n  remainder = 0\n  \n  # Initialize a variable called num to\
    \ 0\n  num = 0\n  \n  # Initialize a variable called remainder to 0\n  remainder\
    \ = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n  \n  # Initialize\
    \ a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable\
    \ called num to 0\n  num = 0\n  \n  # Initialize a variable called remainder to\
    \ 0\n  remainder = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n\
    \  \n  # Initialize a variable called remainder to 0\n  remainder = 0\n  \n  #\
    \ Initialize a variable called num to 0\n  num = 0\n  \n  # Initialize a variable\
    \ called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable called\
    \ num to 0\n  num = 0\n  \n  # Initialize a variable called remainder to 0\n \
    \ remainder = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n  \n\
    \  # Initialize a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize\
    \ a variable called num to 0\n  num = 0\n  \n  # Initialize a variable called\
    \ remainder to 0\n  remainder = 0\n  \n  # Initialize a variable called num to\
    \ 0\n  num = 0\n  \n  # Initialize a variable called remainder to 0\n  remainder\
    \ = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n  \n  # Initialize\
    \ a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable\
    \ called num to 0\n  num = 0\n  \n  # Initialize a variable called remainder to\
    \ 0\n  remainder = 0\n  \n  # Initialize a variable called num to 0\n  num = 0\n\
    \  \n  # Initialize a variable called remainder to 0\n  remainder = 0\n", "  \n\
    \  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      biggest\
    \ = y\n      \n    else\n      \n      biggest = x\n      \n    end\n    \n  else\n\
    \    \n    if x > y\n      \n      biggest = x\n      \n    else\n      \n   \
    \   biggest = y\n      \n    end\n    \n  end\n  \n  return biggest\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(21, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(22, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(22, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(24, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(24, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"i\" to the value 0.\n  i = 0\n  \n  # Initialize a variable called \"j\" to\
    \ the value 1.\n  j = 1\n  \n  # While the value of \"i\" is less than or equal\
    \ to \"y\" and the value of \"j\" is less than or equal to \"x\":\n  while i <=\
    \ y && j <= x\n    \n    # If the value of \"i\" is even:\n    if i % 2 == 0\n\
    \      \n      # Increment \"i\" by 2:\n      i = i + 2\n      \n      # Increment\
    \ \"j\" by 2:\n      j = j + 2\n      \n      # If the value of \"i\" is greater\
    \ than \"y\":\n      if i > y\n        \n        # Set the value of \"result\"\
    \ to the value of \"i\":\n        result = i\n      \n      # If the value of\
    \ \"i\" is less than \"y\":\n      else\n        \n        # Set the value of\
    \ \"result\" to the value of \"j\":\n        result = j\n      \n    # If the\
    \ value of \"i\" is odd:\n    else\n      \n      # Increment \"i\" by 1:\n  \
    \    i = i + 1\n      \n      # Increment \"j\" by 1:\n      j = j + 1\n     \
    \ \n      # If the value of \"i\" is greater than \"y\":\n      if i > y\n   \
    \     \n        # Set the value of \"result\" to the value of \"i\":\n       \
    \ result = i\n      \n      # If the value of \"i\" is less than \"y\":\n    \
    \  else\n        \n        # Set the value of \"result\" to the value of \"j\"\
    :\n        result = j\n      \n  end\n  \n  # Return the value of \"result\":\n\
    \  return result\nend\n</cell>\n<code language=julia-1.5>", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n\
    \  x\nend", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n    \
    \  \n      y = x\n      \n      x = y\n      \n      y = x + 1\n      \n    elsif\
    \ x < y\n      \n      x = y\n      \n      y = x\n      \n      y = y - 1\n \
    \     \n    end\n    \n  end\n  \n  even = y % 2 == 0\n  \n  if even\n    \n \
    \   if x > y\n      \n      y = x\n      \n      x = y\n      \n      y = x +\
    \ 1\n      \n    elsif x < y\n      \n      x = y\n      \n      y = x\n     \
    \ \n      y = y - 1\n      \n    end\n    \n  end\n  \n  if x > y\n    \n    y\
    \ = x\n    \n    x = y\n    \n    y = x + 1\n    \n  elsif x < y\n    \n    x\
    \ = y\n    \n    y = x\n    \n    y = y - 1\n    \n  end\n  \n  return y\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>", "  if x > y\n    x, y\
    \ = y, x\n  while x != y\n    x, y = y, x % y\n  end\n  x\nend", "  \n  # Initialize\
    \ a variable to store the biggest even number that is \n  # in the range [x, y]\
    \ inclusive.\n  biggest_even = nil\n  \n  # Loop through the numbers from x to\
    \ y, and check if they are even.\n  for i in (x..y)\n    if i % 2 == 0\n     \
    \ if biggest_even.nil?\n        biggest_even = i\n      else\n        if i > biggest_even\n\
    \          biggest_even = i\n        end\n      end\n    end\n  end\n  \n  # Return\
    \ the biggest even number that is in the range [x, y] inclusive.\n  return biggest_even\n\
    end", "  \n  # Initialize a variable to hold the biggest even number that is\n\
    \  # in the range [x, y] inclusive.\n  biggest_even = nil\n  \n  # Loop through\
    \ all numbers in the range [x, y] inclusive.\n  (1..x).each do |i|\n    (1..y).each\
    \ do |j|\n      \n      # If the current number is even, add it to the biggest\
    \ even number.\n      if i % 2 == 0\n        biggest_even = i if biggest_even.nil?\
    \ || biggest_even > i\n      end\n    end\n  end\n  \n  # Return the biggest even\
    \ number that exists in the range [x, y] inclusive.\n  biggest_even\nend", " \
    \ \n  # initialize a variable called \"result\" to the value -1\n  result = -1\n\
    \  \n  # initialize a variable called \"even\" to the value 0\n  even = 0\n  \n\
    \  # initialize a variable called \"odd\" to the value 1\n  odd = 1\n  \n  # initialize\
    \ a variable called \"num\" to the value x\n  num = x\n  \n  # initialize a variable\
    \ called \"num2\" to the value y\n  num2 = y\n  \n  # initialize a variable called\
    \ \"count\" to the value 0\n  count = 0\n  \n  # initialize a variable called\
    \ \"count2\" to the value 0\n  count2 = 0\n  \n  # initialize a variable called\
    \ \"count3\" to the value 0\n  count3 = 0\n  \n  # initialize a variable called\
    \ \"count4\" to the value 0\n  count4 = 0\n  \n  # initialize a variable called\
    \ \"count5\" to the value 0\n  count5 = 0\n  \n  # initialize a variable called\
    \ \"count6\" to the value 0\n  count6 = 0\n  \n  # initialize a variable called\
    \ \"count7\" to the value 0\n  count7 = 0\n  \n  # initialize a variable called\
    \ \"count8\" to the value 0\n  count8 = 0\n  \n  # initialize a variable called\
    \ \"count9\" to the value 0\n  count9 = 0\n  \n  # initialize a variable called\
    \ \"count10\" to the value 0\n  count10 = 0\n  \n  # initialize a variable called\
    \ \"count11\" to the value 0\n  count11 = 0\n  \n  # initialize a variable called\
    \ \"count12\" to the value 0\n  count12 = 0\n  \n  # initialize a variable called\
    \ \"count13\" to the value 0\n  count13 = 0\n  \n  # initialize a variable called\
    \ \"count14\" to the value 0\n  count14 = 0\n  \n  # initialize a variable called\
    \ \"count15\" to the value 0\n  count15 = 0\n  \n  # initialize a variable called\
    \ \"count16\" to the value 0\n  count16 = 0\n  \n  # initialize a variable called\
    \ \"count17\" to the value 0\n  count17 = 0\n  \n  # initialize a variable called\
    \ \"count18\" to the value 0\n  count18 = 0\n  \n  # initialize a variable called\
    \ \"count19\" to the value 0\n  count19 = 0\n  \n  # initialize a variable called\
    \ \"count20\" to the value 0\n  count20 = 0\n  \n  # initialize a variable called\
    \ \"count21\" to the value 0\n  count21 = 0\n  \n  # initialize ", "  even = x\
    \ % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n    x -= 1\n  elsif odd\n    x\
    \ += 1\n  else\n    return -1\n  end\n  \n  even = y % 2 == 0\n  odd = y % 2 !=\
    \ 0\n  \n  if even\n    y -= 1\n  elsif odd\n    y += 1\n  else\n    return -1\n\
    \  end\n  \n  while x > y\n    if x % 2 == 0\n      x -= 1\n    else\n      x\
    \ += 1\n    end\n  end\n  \n  while y > x\n    if y % 2 == 0\n      y -= 1\n \
    \   else\n      y += 1\n    end\n  end\n  \n  return x\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 13)\n</cell>", "  \n  # Initialize a\
    \ variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"even\" to 0.\n  even = 0\n  \n  # Initialize a variable\
    \ called \"odd\" to 1.\n  odd = 1\n  \n  # Initialize a variable called \"i\"\
    \ to the value 1.\n  i = 1\n  \n  # While \"i\" is less than or equal to \"y\"\
    , and while \"even\" is less than \n  # or equal to \"x\", and while \"odd\" is\
    \ less than or equal to \"x\", and \n  # while \"i\" is less than or equal to\
    \ \"y\", and while \"i\" is less than or \n  # equal to \"y\", and while \"i\"\
    \ is less than or equal to \"y\", and while \n  # \"i\" is less than or equal\
    \ to \"y\", and while \"i\" is less than or equal to \n  # \"y\", and while \"\
    i\" is less than or equal to \"y\", and while \"i\" is less than \n  # or equal\
    \ to \"y\", and while \"i\" is less than or equal to \"y\", and while \n  # \"\
    i\" is less than or equal to \"y\", and while \"i\" is less than or equal to \n\
    \  # \"y\", and while \"i\" is less than or equal to \"y\", and while \"i\" is\
    \ less than \n  # or equal to \"y\", and while \"i\" is less than or equal to\
    \ \"y\", and while \n  # \"i\" is less than or equal to \"y\", and while \"i\"\
    \ is less than or equal to \n  # \"y\", and while \"i\" is less than or equal\
    \ to \"y\", and while \"i\" is less than \n  # or equal to \"y\", and while \"\
    i\" is less than or equal to \"y\", and while \n  # \"i\" is less than or equal\
    \ to \"y\", and while \"i\" is less than or equal to \n  # \"y\", and while \"\
    i\" is less than or equal to \"y\", and while \"i\" is less than \n  # or equal\
    \ to \"y\", and while \"i\" is less than or equal to \"y\", and while \n  # \"\
    i\" is less than or equal to \"y\", and while \"i\" is less than or equal to \n\
    \  # \"y\", and while \"i\" is less than or equal to \"y\", and while \"i\" is\
    \ less than \n  # or equal to \"y\", and while \"i\" is less than or equal to\
    \ \"y\", and while \n  # \"i\" is less than or equal to \"y\", and while \"i\"\
    \ is less than or equal to \n  # \"y\", and while \"i\" is less than or equal\
    \ to \"y\", and while \"i\" is less than \n  # or equal to \"y\", and while \"\
    i\" is less than or equal to \"y\", and while \n  # \"i\" is less than or equal\
    \ to \"y\", and while \"i\" is less than or equal to \n  # \"y\", and while \"\
    i\" is less than or equal to \"y\", and while \"i\" is ", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer number and returns its factorial.\
    \ \nFor example, factorial(5) = 5 * 5 * 4 * 3 = 120. \nThe function should work\
    \ for any positive integer number.", "  \n  # Initialize a variable called \"\
    result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"even\" to\
    \ 0\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # Initialize\
    \ a variable called \"j\" to 1\n  j = 1\n  \n  # While \"i\" is less than or equal\
    \ to \"y\"\n  while i <= y\n  \n    # While \"j\" is less than or equal to \"\
    x\"\n    while j <= x\n    \n      # If \"i\" is even\n      if i % 2 == 0\n \
    \     \n        # Increment \"even\"\n        even += 1\n      \n      # If \"\
    i\" is odd\n      else\n      \n        # Increment \"odd\"\n        odd += 1\n\
    \      \n      # Increment \"j\"\n      j += 1\n    \n    # Increment \"i\"\n\
    \    i += 1\n  \n  # If \"even\" is greater than \"odd\"\n  if even > odd\n  \n\
    \    # Set the variable \"result\" to \"even\"\n    result = even\n  \n  # If\
    \ \"odd\" is greater than \"even\"\n  else\n  \n    # Set the variable \"result\"\
    \ to \"odd\"\n    result = odd\n  \n  # Return the result\n  result\nend\n</cell>\n\
    <cell>\nchoose_num(12, 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<text>\n\
    Problem 7\nWrite a function that takes two positive numbers x and y and returns\
    \ True if x is greater than or equal to y or False otherwise.", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x < y\n    x += 1\n    y -= 1\n    \n    return x if\
    \ x % 2 == 0 and y % 2 == 0 \n    \n    return -1 if x % 2 == 0 and y % 2 == 1\n\
    \    \n    return 1 if x % 2 == 1 and y % 2 == 0\n    \n    return -1 if x % 2\
    \ == 1 and y % 2 == 1\n  end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank\
    \ you so much for helping me out. I am new to coding and this was a great learning\
    \ experience for me. I am going to try and implement this into my code now. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider\
    \ accepting it by clicking the check mark to the left of it. This will help future\
    \ visitors who may have a similar question to yours know which answer helped you\
    \ the most.\n<|/ c |>\n<| c |>\nI did but my reputation is not high enough yet.\
    \ Thanks again though!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help!\n<|/\
    \ c |>\n<| a tags=ruby,loops |>\n<code>", "  \n  # Initialize a variable called\
    \ \"result\" to -1\n  result = -1\n  \n  # Initialize a variable called \"even\"\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1\n  odd =\
    \ 1\n  \n  # Initialize a variable called \"i\" to 0\n  i = 0\n  \n  # Initialize\
    \ a variable called \"j\" to 1\n  j = 1\n  \n  # Initialize a variable called\
    \ \"k\" to 1\n  k = 1\n  \n  # While \"i\" is not equal to \"x\" or \"y\"\n  while\
    \ i != x or j != y\n  \n    # If the current value of \"i\" is even\n    if i\
    \ % 2 == 0\n    \n      # Add 1 to \"even\"\n      even += k\n      \n      #\
    \ Add 1 to \"i\"\n      i += j\n      \n      # Add 1 to \"j\"\n      j += k\n\
    \      \n      # Add 1 to \"k\"\n      k += 1\n      \n    # Else, if the current\
    \ value of \"i\" is odd\n    else\n    \n      # Add 1 to \"odd\"\n      odd +=\
    \ k\n      \n      # Add 1 to \"i\"\n      i += j\n      \n      # Add 1 to \"\
    j\"\n      j += k\n      \n      # Add 1 to \"k\"\n      k += 1\n      \n    #\
    \ Increment \"i\"\n    i += 1\n    \n  # If the value of \"even\" is greater than\
    \ \"odd\"\n  if even > odd\n  \n    # Set the value of \"result\" to \"even\"\n\
    \    result = even\n  \n  # Else, if the value of \"odd\" is greater than \"even\"\
    \n  else\n  \n    # Set the value of \"result\" to \"odd\"\n    result = odd\n\
    \  \n  # Return the value of \"result\"\n  result\nend\n</cell>\n<cell>", "  \n\
    \  # Initialize a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to 1\n  odd = 1\n  \n  # Initialize a variable called \"xrange\" to\
    \ [x, y]\n  xrange = [x, y]\n  \n  # Initialize a variable called \"evens\" to\
    \ [even]\n  evens = [even]\n  \n  # Initialize a variable called \"odds\" to [odd]\n\
    \  odds = [odd]\n  \n  # Initialize a variable called \"evens_range\" to [x, y]\n\
    \  evens_range = [even, even]\n  \n  # Initialize a variable called \"odds_range\"\
    \ to [x, y]\n  odds_range = [odd, odd]\n  \n  # Initialize a variable called \"\
    evens_ranges\" to [evens]\n  evens_ranges = [evens]\n  \n  # Initialize a variable\
    \ called \"odds_ranges\" to [odds]\n  odds_ranges = [odds]\n  \n  # Initialize\
    \ a variable called \"evens_ranges\" to [evens]\n  evens_ranges = [evens]\n  \n\
    \  # Initialize a variable called \"odds_ranges\" to [odds]\n  odds_ranges = [odds]\n\
    \  \n  # Initialize a variable called \"evens_ranges\" to [evens]\n  evens_ranges\
    \ = [evens]\n  \n  # Initialize a variable called \"odds_ranges\" to [odds]\n\
    \  odds_ranges = [odds]\n  \n  # Initialize a variable called \"evens_ranges\"\
    \ to [evens]\n  evens_ranges = [evens]\n  \n  # Initialize a variable called \"\
    odds_ranges\" to [odds]\n  odds_ranges = [odds]\n  \n  # Initialize a variable\
    \ called \"evens_ranges\" to [evens]\n  evens_ranges = [evens]\n  \n  # Initialize\
    \ a variable called \"odds_ranges\" to [odds]\n  odds_ranges = [odds]\n  \n  #\
    \ Initialize a variable called \"evens_ranges\" to [evens]\n  evens_ranges = [evens]\n\
    \  \n  # Initialize a variable called \"odds_ranges\" to [odds]\n  odds_ranges\
    \ = [odds]\n  \n  # Initialize a variable called \"evens_ranges\" to [evens]\n\
    \  evens_ranges = [evens]\n  \n  # Initialize a variable called \"odds_ranges\"\
    \ to [odds]\n  odds_ranges = [", "  x = x.to_i\n  y = y.to_i\n  \n  while x <=\
    \ y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x +=\
    \ 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  \n  #\
    \ Initialize a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called \"even\" to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to 1\n  odd = 1\n  \n  # Initialize a variable called \"xrange\" to\
    \ [x, y]\n  xrange = [x, y]\n  \n  # Initialize a variable called \"evens\" to\
    \ [x, y]\n  evens = [x, y]\n  \n  # Initialize a variable called \"odds\" to [x,\
    \ y]\n  odds = [x, y]\n  \n  # Initialize a variable called \"evens_range\" to\
    \ [x, y]\n  evens_range = [x, y]\n  \n  # Initialize a variable called \"odds_range\"\
    \ to [x, y]\n  odds_range = [x, y]\n  \n  # Initialize a variable called \"evens_ranges\"\
    \ to [x, y]\n  evens_ranges = [x, y]\n  \n  # Initialize a variable called \"\
    odds_ranges\" to [x, y]\n  odds_ranges = [x, y]\n  \n  # Initialize a variable\
    \ called \"evens_ranges_sum\" to 0\n  evens_ranges_sum = 0\n  \n  # Initialize\
    \ a variable called \"odds_ranges_sum\" to 0\n  odds_ranges_sum = 0\n  \n  # Initialize\
    \ a variable called \"evens_ranges_sums\" to 0\n  evens_ranges_sums = 0\n  \n\
    \  # Initialize a variable called \"odds_ranges_sums\" to 0\n  odds_ranges_sums\
    \ = 0\n  \n  # Initialize a variable called \"evens_ranges_sums_sum\" to 0\n \
    \ evens_ranges_sums_sum = 0\n  \n  # Initialize a variable called \"odds_ranges_sums_sum\"\
    \ to 0\n  odds_ranges_sums_sum = 0\n  \n  # Initialize a variable called \"evens_ranges_sums_sums\"\
    \ to 0\n  evens_ranges_sums_sums = 0\n  \n  # Initialize a variable called \"\
    odds_ranges_sums_sums\" to 0\n  odds_ranges_sums_sums = 0\n  \n  # Initialize\
    \ a variable called \"evens_ranges_sums_sums_sum\" to 0\n  evens_ranges_sums_sums_sum\
    \ = 0\n  \n  # Initialize a variable called \"odds_ranges_sums_sums_sum\" to 0\n\
    \  odds_ranges_sums_sums_sum = 0\n  \n  # Initialize a variable called \"evens_ranges_sums_sums_sums\"\
    \ to 0\n  evens_range", "  \n  # Initialize a variable to store the biggest even\
    \ number that is\n  # in the range [x, y] inclusive.\n  max_even = nil\n  \n \
    \ # Loop through all even numbers between x and y, inclusive.\n  (0...x).each\
    \ do |i|\n    \n      # If the current number is even, add it to the biggest even\
    \ number.\n      if i % 2 == 0\n        max_even = i if i > max_even\n      end\n\
    \    end\n  \n  # Return the biggest even number that is in the range [x, y] inclusive.\n\
    \  max_even\nend", "  \n  # Initialize a variable to store the biggest even number\
    \ that is \n  # in the range [x, y] inclusive.\n  biggest_even = nil\n  \n  #\
    \ Loop through all even numbers between x and y, inclusive.\n  (0...x).each do\
    \ |i|\n    \n      # If the current number is even, add it to the biggest_even\
    \ variable.\n      if i % 2 == 0\n        biggest_even = i if biggest_even.nil?\
    \ || biggest_even > i\n      end\n    end\n  \n  # Return the biggest even number\
    \ that is in the range [x, y] inclusive.\n  return biggest_even if biggest_even.nil?\n\
    end\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    \n    x += 1\n  end\n  \n  return -1\nend", "  \n  # Initialize a variable\
    \ called 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'i'\
    \ to 0\n  i = 0\n  \n  # Initialize a variable called 'j' to y\n  j = y\n  \n\
    \  # While the variable 'i' is less than or equal to 'j'\n  while i <= j\n   \
    \ \n    # If the number at position i of the variable 'x' is even\n    if x[i]\
    \ % 2 == 0\n      \n      # Increment the variable 'i' by 1\n      i += 1\n  \
    \    \n      # If the number at position i of the variable 'y' is even\n     \
    \ if y[i] % 2 == 0\n        \n        # Increment the variable 'i' by 1\n    \
    \    i += 1\n        \n        # If the number at position i of the variable 'x'\
    \ is greater than \n        # the number at position i of the variable 'y'\n \
    \       if x[i] > y[i]\n          \n          # Set the variable 'result' to x[i]\n\
    \          result = x[i]\n          \n          # Exit the while loop\n      \
    \    break\n        \n        # Else, if the number at position i of the variable\
    \ 'y' is greater than \n        # the number at position i of the variable 'y'\n\
    \        else\n          \n          # Set the variable 'result' to y[i]\n   \
    \       result = y[i]\n          \n          # Exit the while loop\n         \
    \ break\n      \n      # Else, if the number at position i of the variable 'x'\
    \ is greater than \n      # the number at position i of the variable 'y'\n   \
    \   else\n        \n        # Increment the variable 'i' by 1\n        i += 1\n\
    \        \n        # Set the variable 'result' to x[i]\n        result = x[i]\n\
    \        \n        # Exit the while loop\n        break\n      \n    # Else, if\
    \ the number at position i of the variable 'x' is even\n    else\n      \n   \
    \   # Increment the variable 'i' by 1\n      i += 1\n      \n      # If the number\
    \ at position i of the variable 'y' is even\n      if y[i] % 2 == 0\n        \n\
    \        # Increment the variable 'i' by 1\n        i += 1\n        \n       \
    \ # If the number at position i of the variable 'x' is greater than \n       \
    \ # the number at position i of the variable 'y'\n        if x[i] > y[i]\n   \
    \       \n          # Set the variable 'result' to y[i]\n          result = y[i]\n\
    \          \n          # Exit the while loop\n          break\n        \n    \
    \    # Else, if the number at position i of the variable 'y' is greater than \n\
    \        # the number at position i of the variable 'y'\n        else\n      \
    \    \n          # Set the variable 'result' to x[i]\n          result = x[i]\n\
    \          \n          # Exit ", "  \n  # Initialize a variable called \"result\"\
    \ to the value -1.\n  result = -1\n  \n  # Initialize a variable called \"even\"\
    \ to 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to 1.\n  odd\
    \ = 1\n  \n  # Initialize a variable called \"xrange\" to [x, y].\n  xrange =\
    \ [x, y]\n  \n  # Initialize a variable called \"evens\" to 0.\n  evens = 0\n\
    \  \n  # Initialize a variable called \"odds\" to 1.\n  odds = 1\n  \n  # Initialize\
    \ a variable called \"xranges\" to [xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange, xrange,\
    \ x", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n   \
    \   return x\n    x += 1\n  end\n  \n  while y <= x\n    if y % 2 == 0\n     \
    \ return y\n    y += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  \n\
    \  # Initialize a variable called result to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called remainder to 0\n  remainder = 0\n  \n  # Initialize a variable\
    \ called num to 0\n  num = 0\n  \n  # Initialize a variable called remainder_check\
    \ to 0\n  remainder_check = 0\n  \n  # Initialize a variable called num_check\
    \ to 0\n  num_check = 0\n  \n  # Initialize a variable called num_check to 0\n\
    \  num_check_2 = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_3\
    \ = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_4 = 0\n\
    \  \n  # Initialize a variable called num_check to 0\n  num_check_5 = 0\n  \n\
    \  # Initialize a variable called num_check to 0\n  num_check_6 = 0\n  \n  # Initialize\
    \ a variable called num_check to 0\n  num_check_7 = 0\n  \n  # Initialize a variable\
    \ called num_check to 0\n  num_check_8 = 0\n  \n  # Initialize a variable called\
    \ num_check to 0\n  num_check_9 = 0\n  \n  # Initialize a variable called num_check\
    \ to 0\n  num_check_10 = 0\n  \n  # Initialize a variable called num_check to\
    \ 0\n  num_check_11 = 0\n  \n  # Initialize a variable called num_check to 0\n\
    \  num_check_12 = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_13\
    \ = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_14 = 0\n\
    \  \n  # Initialize a variable called num_check to 0\n  num_check_15 = 0\n  \n\
    \  # Initialize a variable called num_check to 0\n  num_check_16 = 0\n  \n  #\
    \ Initialize a variable called num_check to 0\n  num_check_17 = 0\n  \n  # Initialize\
    \ a variable called num_check to 0\n  num_check_18 = 0\n  \n  # Initialize a variable\
    \ called num_check to 0\n  num_check_19 = 0\n  \n  # Initialize a variable called\
    \ num_check to 0\n  num_check_20 = 0\n  \n  # Initialize a variable called num_check\
    \ to 0\n  num_check_21 = 0\n  \n  # Initialize a variable called num_check to\
    \ 0\n  num_check_22 = 0\n  \n  # Initialize a variable called num_check to 0\n\
    \  num_check_23 = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_24\
    \ = 0\n  \n  # Initialize a variable called num_check to 0\n  num_check_25 = 0\n\
    \  \n  # Initialize a variable called num_check to 0\n  num_check_26 = 0\n  \n\
    \  # Initialize a variable ", "  \n  even = x % 2 == 0\n  \n  if even\n    \n\
    \    if y > x\n      \n      y = y - 1\n      \n      choose_num(x, y)\n     \
    \ \n    else\n      \n      x = x + 1\n      \n      choose_num(x, y)\n      \n\
    \    end\n    \n  else\n    \n    if y > x\n      \n      x = x + 1\n      \n\
    \      choose_num(x, y)\n      \n    else\n      \n      y = y + 1\n      \n \
    \     choose_num(x, y)\n      \n    end\n    \n  end\n  \n  if even && y > x\n\
    \    \n    return y\n    \n  elsif !even && y > x\n    \n    return -1\n    \n\
    \  else\n    \n    return -1\n    \n  end\n  \nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  even =\
    \ x.even?\n  even = y.even?\n  if even\n    x.next\n  else\n    y.next\n  end\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x += 1\n    y -= 1\n\
    \    \n    return x if x % 2 == 0 and y % 2 == 0 else -1\n  end\nend", "  biggest\
    \ = -1\n  for i in (2..x)\n    if i % 2 == 0\n      biggest = i\n      break\n\
    \  end\n  for i in (2..y)\n    if i % 2 == 0\n      biggest = i\n      break\n\
    \    end\n  end\n  return biggest\nend", "  even = x % 2 == 0\n  biggest = x if\
    \ even else y\n  while even && biggest < y\n    biggest = biggest + 2\n    even\
    \ = even and biggest % 2 == 0\n  end\n  biggest\nend", "  \n  # Initialize a variable\
    \ to store the result\n  result = -1\n  \n  # Initialize a variable to store the\
    \ biggest even number in the range\n  # [x, y]\n  biggest_even = nil\n  \n  #\
    \ Loop through all numbers in the range [x, y]\n  (0...x).each do |i|\n    \n\
    \    # If the number is even, store it\n    if i % 2 == 0\n      biggest_even\
    \ = i\n      break\n    end\n  end\n  \n  # If biggest_even is not nil, store\
    \ it\n  if biggest_even\n    result = biggest_even\n  end\n  \n  # Return the\
    \ result\n  result\nend", "  \n  # Initialize a variable called result to -1.\n\
    \  result = -1\n  \n  # Initialize a variable called remainder to 0.\n  remainder\
    \ = 0\n  \n  # Initialize a variable called i to 0.\n  i = 0\n  \n  # While i\
    \ is less than or equal to y, and remainder is less than or equal to 0.\n  while\
    \ i <= y && remainder <= 0\n    \n    # If the current number is evenly divisible\
    \ by i, then add i to result.\n    if remainder % i == 0\n      result = result\
    \ + i\n      \n    # If the current number is odd, then subtract i from remainder.\n\
    \    else\n      remainder = remainder - i\n    end\n    \n    # Increment i by\
    \ 1.\n    i = i + 1\n  end\n  \n  # Return the result.\n  return result\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes two positive numbers x and y and returns true\
    \ if and only if x is less than or equal to y or y is less than or equal to x.",
  "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      biggest\
    \ = y\n      \n    elsif x < y\n      \n      biggest = x\n      \n    elsif x\
    \ == y\n      \n      biggest = x\n      \n    end\n    \n  else\n    \n    if\
    \ x > y\n      \n      biggest = y\n      \n    elsif x < y\n      \n      biggest\
    \ = x\n      \n    elsif x == y\n      \n      biggest = x\n      \n    end\n\
    \    \n  end\n  \n  return biggest\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(22, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(24, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(25, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(26, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(27, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(28, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(29, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(30, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(31, 15)\n</cell>\n<code language=juli", "  \n  # Initialize a variable\
    \ called 'result' to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called 'odd'\
    \ to 1.\n  odd = 1\n  \n  # Initialize a variable called 'num' to x.\n  num =\
    \ x\n  \n  # Initialize a variable called 'num2' to y.\n  num2 = y\n  \n  # While\
    \ the variable 'num' is not equal to 'num2' and the variable 'even' \n  # is equal\
    \ to 0, increment the variable 'even' by 1.\n  while num != num2 and even != 0\n\
    \    even = even+1\n    num = num+1\n  end\n  \n  # While the variable 'num' is\
    \ not equal to 'num2' and the variable 'odd' \n  # is equal to 1, increment the\
    \ variable 'odd' by 1.\n  while num != num2 and odd != 1\n    odd = odd+1\n  \
    \  num = num+1\n  end\n  \n  # If the variable 'even' is equal to 0, then return\
    \ 'num'.\n  if even == 0\n    result = num\n  end\n  \n  # If the variable 'odd'\
    \ is equal to 1, then return 'num'.\n  if odd != 0\n    result = num\n  end\n\
    \  \n  # Return the variable 'result'.\n  result\nend\n</cell>\n<code language=julia-1.5>",
  "  \n  # Initialize a variable called \"result\" to -1\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to 1\n  i = 1\n  \n  # While \"i\" is not equal to \"\
    x\" or \"y\"\n  while i != x or i != y\n    \n    # If the number is even\n  \
    \  if i % 2 == 0\n      \n      # Set \"result\" to the number that is even\n\
    \      result = i\n      \n      # Set \"i\" to the number that is even\n    \
    \  i = i + 1\n    \n    # If the number is odd\n    else\n      \n      # Set\
    \ \"result\" to the number that is odd\n      result = i\n      \n      # Set\
    \ \"i\" to the number that is odd\n      i = i + 1\n  \n  # Return the \"result\"\
    \ variable\n  return result\n  ", "  \n  even = x % 2 == 0\n  \n  if even\n  \
    \  \n    biggest = y\n    \n  else\n    \n    biggest = x\n    \n  end\n  \n \
    \ while biggest < y\n    \n    biggest = biggest + 2\n    \n  end\n  \n  while\
    \ biggest > y\n    \n    biggest = biggest - 2\n    \n  end\n  \n  return biggest\n\
    end\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n\
    </cell>\n<cell>\nchoose_num(12, 13)\n</cell>\n<cell>\nchoose_num(13, 14)\n</cell>\n\
    <cell>\nchoose_num(13, 15)\n</cell>\n<cell>\nchoose_num(14, 12)\n</cell>\n<cell>\n\
    choose_num(14, 13)\n</cell>\n<cell>\nchoose_num(14, 14)\n</cell>\n<cell>\nchoose_num(14,\
    \ 15)\n</cell>\n<cell>\nchoose_num(15, 12)\n</cell>\n<cell>\nchoose_num(15, 13)\n\
    </cell>\n<cell>\nchoose_num(15, 14)\n</cell>\n<cell>\nchoose_num(15, 15)\n</cell>\n\
    <cell>\nchoose_num(16, 12)\n</cell>\n<cell>\nchoose_num(16, 13)\n</cell>\n<cell>\n\
    choose_num(16, 14)\n</cell>\n<cell>\nchoose_num(16, 15)\n</cell>\n<cell>\nchoose_num(17,\
    \ 12)\n</cell>\n<cell>\nchoose_num(17, 13)\n</cell>\n<cell>\nchoose_num(17, 14)\n\
    </cell>\n<cell>\nchoose_num(17, 15)\n</cell>\n<cell>\nchoose_num(18, 12)\n</cell>\n\
    <cell>\nchoose_num(18, 13)\n</cell>\n<cell>\nchoose_num(18, 14)\n</cell>\n<cell>\n\
    choose_num(18, 15)\n</cell>\n<cell>\nchoose_num(19, 12)\n</cell>\n<cell>\nchoose_num(19,\
    \ 13)\n</cell>\n<cell>\nchoose_num(", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x.to_i\n  \n  # Initialize a variable called\
    \ 'y' to y\n  y = y.to_i\n  \n  # Initialize a variable called 'i' to 1\n  i =\
    \ 1\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n  # Initialize\
    \ a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called\
    \ 'x' to x\n  x = x.to_i\n  \n  # Initialize a variable called 'y' to y\n  y =\
    \ y.to_i\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n  # Initialize\
    \ a variable called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x =\
    \ x.to_i\n  \n  # Initialize a variable called 'y' to y\n  y = y.to_i\n  \n  #\
    \ Initialize a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a variable\
    \ called 'even' to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to\
    \ 1\n  odd = 1\n  \n  # Initialize a variable called 'x' to x\n  x = x.to_i\n\
    \  \n  # Initialize a variable called 'y' to y\n  y = y.to_i\n  \n  # Initialize\
    \ a variable called 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x.to_i\n  \n  # Initialize\
    \ a variable called 'y' to y\n  y = y.to_i\n  \n  # Initialize a variable called\
    \ 'i' to 1\n  i = 1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x.to_i\n  \n  # Initialize a variable called\
    \ 'y' to y\n  y = y.to_i\n  \n", "  even = x % 2 == 0\n  even = even ? x : y\n\
    \  even = even - even.abs\n  even = even / 2\n  even.ceil\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x < y\n    x, y = y, x + y\n  end\n  \n  x\nend",
  "  even = x % 2 == 0\n  even = even ? x : y\n  even = even % 2 == 0\n  even = even\
    \ ? even : -1\nend", "  even = x % 2 == 0\n  even = even ? x : y\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nI like your solution, but I believe it can be simplified a bit.\
    \ `even = x % 2 == 0` can be replaced with `even = x % 2`. And `even = even ?\
    \ x : y` can be replaced with `even = x if even`.\n<|/ c |>\n<| c |>\nI agree\
    \ with you. I've updated my answer accordingly.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</cell>",
  "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n      \n      result\
    \ = x\n      \n    elsif x < y\n      \n      result = y\n      \n    elsif x\
    \ == y\n      \n      result = x\n      \n    end\n    \n  else\n    \n    if\
    \ x > y\n      \n      result = y\n      \n    elsif x < y\n      \n      result\
    \ = x\n      \n    elsif x == y\n      \n      result = x\n      \n    end\n \
    \   \n  end\n  \n  return result\nend\n</cell>\n<code language=julia-1.3>", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    x += 1\n    y -= 1\n    \n    if x % 2 == 0\n      return x\n  \
    \  end\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(21, 12)\n</cell>\n\
    <code language=julia-1.5", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x,\
    \ y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n   \
    \ end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes two positive numbers x and y and returns the\nbiggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such number,\
    \ then the function should return -1.\nFor example:\nchoose_num(12, 15) = 13\n\
    choose_num(13, 12) = -1\nchoose_num(13, 15) = -1", "  \n  # Initialize a variable\
    \ called \"even\" to be equal to 1.\n  even = 1\n  \n  # Initialize a variable\
    \ called \"odd\" to be equal to 0.\n  odd = 0\n  \n  # Initialize a variable called\
    \ \"num\" to be equal to 1.\n  num = 1\n  \n  # Initialize a variable called \"\
    max_even\" to be equal to 0.\n  max_even = 0\n  \n  # Initialize a variable called\
    \ \"max_odd\" to be equal to 0.\n  max_odd = 0\n  \n  # Initialize a variable\
    \ called \"max_num\" to be equal to 1.\n  max_num = 1\n  \n  # Initialize a variable\
    \ called \"i\" to be equal to 1.\n  i = 1\n  \n  # Initialize a variable called\
    \ \"j\" to be equal to 1.\n  j = 1\n  \n  # Initialize a variable called \"k\"\
    \ to be equal to 1.\n  k = 1\n  \n  # Initialize a variable called \"l\" to be\
    \ equal to 1.\n  l = 1\n  \n  # Initialize a variable called \"m\" to be equal\
    \ to 1.\n  m = 1\n  \n  # Initialize a variable called \"n\" to be equal to 1.\n\
    \  n = 1\n  \n  # Initialize a variable called \"x\" to be equal to 1.\n  x =\
    \ 1\n  \n  # Initialize a variable called \"y\" to be equal to 1.\n  y = 1\n \
    \ \n  # Initialize a variable called \"z\" to be equal to 1.\n  z = 1\n  \n  #\
    \ Initialize a variable called \"even\" to be equal to 1.\n  even = 1\n  \n  #\
    \ Initialize a variable called \"odd\" to be equal to 0.\n  odd = 0\n  \n  # Initialize\
    \ a variable called \"num\" to be equal to 1.\n  num = 1\n  \n  # Initialize a\
    \ variable called \"max_even\" to be equal to 0.\n  max_even = 0\n  \n  # Initialize\
    \ a variable called \"max_odd\" to be equal to 0.\n  max_odd = 0\n  \n  # Initialize\
    \ a variable called \"max_num\" to be equal to 1.\n  max_num = 1\n  \n  # Initialize\
    \ a variable called \"i\" to be equal to 1.\n  i = 1\n  \n  # Initialize a variable\
    \ called \"j\" to be equal to 1.\n  j = 1\n  \n  # Initialize a variable called\
    \ \"k\" to be equal to 1.\n  k = 1\n  \n  # Initialize a variable called \"l\"\
    \ to be equal to 1.\n  l = 1\n  \n  # Initialize a variable called \"m\" to be\
    \ equal to 1.\n  m = 1\n  \n  # Initialize a variable called \"n\" to be equal\
    \ to 1.\n  n = 1\n  \n  # Initialize a variable called \"x\" to be equal to 1.\n",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x % 2 == 0\n     \
    \ x = x + 1\n    else\n      x = x - 1\n    end\n    \n    if x % 2 == 0\n   \
    \   x = x + 1\n    else\n      x = x - 1\n    end\n    \n  end\n  \n  x\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend", "  even = x % 2 == 0\n  even = even ? x : y\n  even =\
    \ even - 1 if even > y\n  even = even + 1 if even < x\n  return even if even >=\
    \ 0 and even <= y else -1\nend", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'temp' to 0\n\
    \  temp = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n\
    \  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a\
    \ variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'temp' to 0\n\
    \  temp = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n\
    \  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a\
    \ variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'temp' to 0\n\
    \  temp = 0\n  \n  # Initialize a variable called 'even' to 0\n  even = 0\n  \n\
    \  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize a\
    \ variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 0\n  i = 0\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called '", "  biggest\
    \ = y\n  while biggest < x\n    biggest = biggest + 2\n  end\n  while biggest\
    \ > x\n    biggest = biggest - 2\n  end\n  return biggest\nend", "  even = x %\
    \ 2 == 0\n  even = even and y % 2 == 0\n  even = even and x % y == 0\n  even =\
    \ even and y % y == 0\n  even = even and x % y != 0\n  even = even and y % y !=\
    \ 0\n  even = even and x % y != 0\n  even = even and y % y != 0\n  even = even\
    \ and x % y != 0\n  even = even and y % y != 0\n  even = even and x % y != 0\n\
    \  even = even and y % y != 0\n  even = even and x % y != 0\n  even = even and\
    \ y % y != 0\n  even = even and x % y != 0\n  even = even and y % y != 0\n  even\
    \ = even and x % y != 0\n  even = even and y % y != 0\n  even = even and x % y\
    \ != 0\n  even = even and y % y != 0\n  even = even and x % y != 0\n  even = even\
    \ and y % y != 0\n  even = even and x % y != 0\n  even = even and y % y != 0\n\
    \  even = even and x % y != 0\n  even = even and y % y != 0\n  even = even and\
    \ x % y != 0\n  even = even and y % y != 0\n  even = even and x % y != 0\n  even\
    \ = even and y % y != 0\n  even = even and x % y != 0\n  even = even and y % y\
    \ != 0\n  even = even and x % y != 0\n  even = even and y % y != 0\n  even = even\
    \ and x % y != 0\n  even = even and y % y != 0\n  even = even and x % y != 0\n\
    \  even = even and y % y != 0\n  even = even and x % y != 0\n  even = even and\
    \ y % y != 0\n  even = even and x % y != 0\n  even = even and y % y != 0\n  even\
    \ = even and x % y != 0\n  even = even and y % y != 0\n  even = even and x % y\
    \ != 0\n  even = even and y % y != 0\n  even = even and x % y != 0\n  ", "  even\
    \ = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and ((x != y) and\
    \ (x % 2 == 0))\n  even = even and ((y != x) and (y % 2 == 0))\n  even = even\
    \ and ((x != y) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  even = even and ((x % 2 == 0) and (y % 2 == 0))\n  even = even and\
    \ ((x % 2 == 0) and (y % 2 == 0))\n  even = even and ((x % 2 == 0) and (y % 2\
    \ == 0))\n  ", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + ", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  \n  even = x % 2 == 0\n  \n  if\
    \ even\n    \n    if x > y\n      \n      result = x\n      \n    elsif x < y\n\
    \      \n      result = y\n      \n    else\n      \n      result = x if x > y\
    \ else y\n      \n    end\n    \n  else\n    \n    if x > y\n      \n      result\
    \ = y\n      \n    elsif x < y\n      \n      result = x\n      \n    else\n \
    \     \n      result = x if x > y else y\n      \n    end\n    \n  end\n  \n \
    \ return result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(22, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(22, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(23, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(24, ", "  \n  even = x % 2 == 0\n  \n  if\
    \ even\n    \n    if x > y\n      \n      biggest = x\n      \n    else\n    \
    \  \n      biggest = y\n      \n    end\n    \n  else\n    \n    if x > y\n  \
    \    \n      biggest = x\n      \n    else\n      \n      biggest = y\n      \n\
    \    end\n    \n  end\n  \n  return biggest\nend\n</cell>\n<cell>\nchoose_num(12,\
    \ 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n\
    </cell>\n<cell>\nchoose_num(13, 14)\n</cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n\
    <cell>\nchoose_num(13, 16)\n</cell>\n<cell>\nchoose_num(13, 17)\n</cell>\n<cell>\n\
    choose_num(13, 18)\n</cell>\n<cell>\nchoose_num(13, 19)\n</cell>\n<cell>\nchoose_num(13,\
    \ 20)\n</cell>\n<cell>\nchoose_num(13, 21)\n</cell>\n<cell>\nchoose_num(13, 22)\n\
    </cell>\n<cell>\nchoose_num(13, 23)\n</cell>\n<cell>\nchoose_num(13, 24)\n</cell>\n\
    <cell>\nchoose_num(13, 25)\n</cell>\n<cell>\nchoose_num(13, 26)\n</cell>\n<cell>\n\
    choose_num(13, 27)\n</cell>\n<cell>\nchoose_num(13, 28)\n</cell>\n<cell>\nchoose_num(13,\
    \ 29)\n</cell>\n<cell>\nchoose_num(13, 30)\n</cell>\n<cell>\nchoose_num(13, 31)\n\
    </cell>\n<cell>\nchoose_num(13, 32)\n</cell>\n<cell>\nchoose_num(13, 33)\n</cell>\n\
    <cell>\nchoose_num(13, 34)\n</cell>\n<cell>\nchoose_num(13, 35)\n</cell>\n<cell>\n\
    choose_num(13, 36)\n</cell>\n<cell>\nchoose_num(13, 37)\n</cell>\n<", "  \n  even\
    \ = x % 2 == 0\n  \n  if even\n    \n    if y > x\n      \n      y = y - 1\n \
    \     \n      choose_num(x, y)\n      \n    elsif y > x + 1\n      \n      y =\
    \ y - 1\n      \n      choose_num(x, y)\n      \n    elsif y > x + 2\n      \n\
    \      y = y - 1\n      \n      choose_num(x, y)\n      \n    elsif y > x + 3\n\
    \      \n      y = y - 1\n      \n      choose_num(x, y)\n      \n    elsif y\
    \ > x + 4\n      \n      y = y - 1\n      \n      choose_num(x, y)\n      \n \
    \   elsif y > x + 5\n      \n      y = y - 1\n      \n      choose_num(x, y)\n\
    \      \n    elsif y > x + 6\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 7\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 8\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 9\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 10\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 11\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 12\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 13\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 14\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 15\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 16\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 17\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y > x + 18\n      \n      y = y - 1\n      \n      choose_num(x,\
    \ y)\n      \n    elsif y ", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n   \
    \ x, y = y, x\n  end\n  \n  while x <= y\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend", "  \n  even = x.even?\
    \ && y.even?\n  \n  if even\n    \n    if x > y\n      \n      x\n    \n    elsif\
    \ y > x\n      \n      y\n    \n    else\n      \n      x\n    end\n  \n  else\n\
    \    \n    if x > y\n      \n      y\n    \n    elsif y > x\n      \n      x\n\
    \    \n    else\n      \n      x\n    end\n  end\nend\n</code>\n<|/ a |>\n<| c\
    \ |>\nI like your solution, but I believe it can be simplified even more. `choose_num(12,\
    \ 15) = 14` can be written as `choose_num(12, 15).even? ? 14 : -1`.\n<|/ c |>\n\
    <| c |>\nYes, I agree. I've just added it for educational purposes.\n<|/ c |>\n\
    <| c |>\nI like your solution, but I believe it can be simplified even more. `choose_num(12,\
    \ 15) = 14` can be written as `choose_num(12, 15).even? ? 14 : -1`.\n<|/ c |>\n\
    <| a tags=ruby |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x,\
    \ y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n  \
    \  else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  \n  # Initialize a\
    \ variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"even\" to the value 0.\n  even = 0\n  \n  # Initialize a\
    \ variable called \"odd\" to the value 1.\n  odd = 1\n  \n  # Initialize a variable\
    \ called \"i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called\
    \ \"j\" to the value y.\n  j = y\n  \n  # While the value of \"i\" is less than\
    \ or equal to \"j\", do:\n  while i <= j\n    \n    # If the value of \"i\" is\
    \ even, then:\n    if i % 2 == 0\n      \n      # Increment \"even\" by 1.\n \
    \     even = even + 1\n      \n    # Else:\n    else\n      \n      # Increment\
    \ \"odd\" by 1.\n      odd = odd + 1 \n      \n    # Increment \"i\" by 1.\n \
    \   i = i + 1\n  \n  # If the value of \"even\" is greater than \"odd\", then:\n\
    \  if even > odd\n    \n    # Set the value of \"result\" to the value of \"even\"\
    .\n    result = even\n  \n  # Else:\n  else\n    \n    # Set the value of \"result\"\
    \ to the value of \"odd\".\n    result = odd\n  \n  # Return the value of \"result\"\
    .\n  return result\n    ", "  biggest = nil\n  for i in 1..y\n    if biggest ==\
    \ nil || biggest > i\n      biggest = i\n    end\n  end\n  for i in x..y\n   \
    \ if biggest == nil || biggest < i\n      biggest = i\n    end\n  end\n  return\
    \ biggest\nend", "  even = x % 2 == 0\n  even = even ? x : y\n  even = even -\
    \ even.abs\n  even.times { |i| return i if i % 2 == 0 }\n  -1\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work if x is negative.\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work because `even.times { |i| return i if i % 2 == 0 }` returns\
    \ `nil` when `even` is negative.\n<|/ c |>\n<| c |>\nYes, I see that. My point\
    \ was that `even.times { |i| return i if i % 2 == 0 }` returns `nil` when `even`\
    \ is negative.\n<|/ c |>\n<| c |>\nI see what you mean. Yes, I see that. My point\
    \ was that `even.times { |i| return i if i % 2 == 0 }` returns `nil` when `even`\
    \ is negative.\n<|/ c |>\n<| c |>\nI see what you mean. Yes, I see that. My point\
    \ was that `even.times { |i| return i if i % 2 == 0 }` returns `nil` when `even`\
    \ is negative.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  even = x % 2 == 0\n  even\
    \ = even ? x : x + 1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even =\
    \ even ? even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even\
    \ = even % 2 == 0\n  even = even ? even : -1\n  even", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n  end\n  \n  x\nend", "  \n  # Initialize a variable\
    \ called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called \"even\" to the value 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ \"odd\" to the value 1.\n  odd = 1\n  \n  # Initialize a variable called \"\
    i\" to the value 1.\n  i = 1\n  \n  # Initialize a variable called \"j\" to the\
    \ value y.\n  j = y\n  \n  # While the value of \"i\" is less than or equal to\
    \ \"j\", do:\n  while i <= j\n  \n    # If the value of \"i\" is even, then:\n\
    \    if i % 2 == 0\n    \n      # Increment \"even\" by 1.\n      even = even\
    \ + 1\n    \n    # Else:\n    else\n    \n      # Increment \"odd\" by 1.\n  \
    \    odd = odd + 1  \n    \n    # Increment \"i\" by 1.\n    i = i + 1\n  \n \
    \ # If the value of \"even\" is greater than \"odd\", then:\n  if even > odd\n\
    \  \n    # Set the value of \"result\" to the value of \"even\".\n    result =\
    \ even\n  \n  # Else:\n  else\n  \n    # Set the value of \"result\" to the value\
    \ of \"odd\".\n    result = odd\n  \n  # Return the value of \"result\".\n  result\n\
    end\n</cell>\n<cell>", "  \n  # Initialize a variable called \"result\" to the\
    \ value -1.\n  result = -1\n  \n  # Initialize a variable called \"i\" to the\
    \ value 0.\n  i = 0\n  \n  # Initialize a variable called \"j\" to the value 1.\n\
    \  j = 1\n  \n  # Initialize a variable called \"k\" to the value 2.\n  k = 2\n\
    \  \n  # Initialize a variable called \"k\" to the value 3.\n  k = 3\n  \n  #\
    \ Initialize a variable called \"k\" to the value 4.\n  k = 4\n  \n  # Initialize\
    \ a variable called \"k\" to the value 5.\n  k = 5\n  \n  # Initialize a variable\
    \ called \"k\" to the value 6.\n  k = 6\n  \n  # Initialize a variable called\
    \ \"k\" to the value 7.\n  k = 7\n  \n  # Initialize a variable called \"k\" to\
    \ the value 8.\n  k = 8\n  \n  # Initialize a variable called \"k\" to the value\
    \ 9.\n  k = 9\n  \n  # Initialize a variable called \"k\" to the value 10.\n \
    \ k = 10\n  \n  # Initialize a variable called \"k\" to the value 11.\n  k = 11\n\
    \  \n  # Initialize a variable called \"k\" to the value 12.\n  k = 12\n  \n \
    \ # Initialize a variable called \"k\" to the value 13.\n  k = 13\n  \n  # Initialize\
    \ a variable called \"k\" to the value 14.\n  k = 14\n  \n  # Initialize a variable\
    \ called \"k\" to the value 15.\n  k = 15\n  \n  # Initialize a variable called\
    \ \"k\" to the value 16.\n  k = 16\n  \n  # Initialize a variable called \"k\"\
    \ to the value 17.\n  k = 17\n  \n  # Initialize a variable called \"k\" to the\
    \ value 18.\n  k = 18\n  \n  # Initialize a variable called \"k\" to the value\
    \ 19.\n  k = 19\n  \n  # Initialize a variable called \"k\" to the value 20.\n\
    \  k = 20\n  \n  # Initialize a variable called \"k\" to the value 21.\n  k =\
    \ 21\n  \n  # Initialize a variable called \"k\" to the value 22.\n  k = 22\n\
    \  \n  # Initialize a variable called \"k\" to the value 23.\n  k = 23\n  \n \
    \ # Initialize a variable called \"k\" to the value 24.\n  k = 24\n  \n  # Initialize\
    \ a variable called \"k\" to the value 25.\n  k = 25\n  \n  # Initialize a variable\
    \ called \"k\" to the value 26.\n  k = 26\n  \n  # Initialize a variable called\
    \ \"k", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  \n  even = x % 2 == 0\n  \n  if even\n    \n\
    \    if x > y\n      \n      result = x\n      \n    elsif x < y\n      \n   \
    \   result = y\n      \n    else\n      \n      result = x if x > y else y\n \
    \     \n    end\n    \n  else\n    \n    if x > y\n      \n      result = y\n\
    \      \n    elsif x < y\n      \n      result = x\n      \n    else\n      \n\
    \      result = x if x > y else y\n      \n    end\n    \n  end\n  \n  return\
    \ result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, ", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n\
    \    x += 1\n    \n    break if x % 2 == 0\n  end\n  \n  while y < x\n    y -=\
    \ 1\n    \n    break if y % 2 == 0\n  end\n  \n  x -= 1 if x % 2 == 0\n  y -=\
    \ 1 if y % 2 == 0\n  \n  return x if x > y\n  \n  return y\nend\n</cell>\n<cell>\n\
    choose_num(12, 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13,\
    \ 13)\n</cell>\n<text>\nExercise: Write a function that takes an integer and returns\
    \ the number of digits in that integer.", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"even\" to 0.\n  even = 0\n  \n  # Initialize a variable called \"odd\" to\
    \ 1.\n  odd = 1\n  \n  # Initialize a variable called \"num\" to x.\n  num = x\n\
    \  \n  # Initialize a variable called \"num2\" to y.\n  num2 = y\n  \n  # While\
    \ loop that keeps looping until \"num\" and \"num2\" are both \n  # equal to or\
    \ less than 0.\n  while num != 0 or num2 != 0\n  \n    # If the number is even,\
    \ add 2 to even.\n    if num % 2 == 0\n      even += 2\n    \n    # If the number\
    \ is odd, add 1 to odd.\n    else\n      odd += 1\n    \n    # If the number is\
    \ bigger than the biggest even number so far, \n    # then set \"result\" to the\
    \ biggest even number so far.\n    if even > result\n      result = even\n   \
    \ \n    # If the number is smaller than the smallest odd number so far, \n   \
    \ # then set \"result\" to the smallest odd number so far.\n    if odd < result\n\
    \      result = odd\n    \n    # Increment \"num\" and \"num2\" by 1.\n    num\
    \ += 1\n    num2 += 1\n  \n  # Return the value of \"result\".\n  return result\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    The function choose_num() above takes two positive numbers x and y and returns\
    \ the biggest even integer number that is in the range [x, y] inclusive. If there's\
    \ no such number, then the function should return -1.", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    \n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)", " \
    \ even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even && odd\n    puts \"#{x}\
    \ is even\"\n  elsif even\n    puts \"#{x} is even\"\n  elsif odd\n    puts \"\
    #{x} is odd\"\n  else\n    puts \"#{x} is neither even nor odd\"\n  end\nend",
  "  ((x > y) ? x : y).to_i\nend", "  \n  # initialize a variable called \"result\"\
    \ with value -1\n  result = -1\n  \n  # initialize a variable called \"i\" with\
    \ value 1\n  i = 1\n  \n  # while \"i\" is not equal to \"x\" or \"y\"\n  while\
    \ i != x or i != y\n  \n    # if the number is even\n    if i % 2 == 0\n    \n\
    \      # subtract 1 from i\n      i = i - 1\n      \n      # if the number is\
    \ still even\n      if i % 2 == 0\n        \n        # subtract 1 from i\n   \
    \     i = i - 1\n        \n        # if the number is still even\n        if i\
    \ % 2 == 0\n          \n          # subtract 1 from i\n          i = i - 1\n \
    \         \n          # if the number is still even\n          if i % 2 == 0\n\
    \            \n            # subtract 1 from i\n            i = i - 1\n      \
    \      \n            # if the number is still even\n            if i % 2 == 0\n\
    \              \n              # subtract 1 from i\n              i = i - 1\n\
    \              \n              # if the number is still even\n              if\
    \ i % 2 == 0\n                \n                # subtract 1 from i\n        \
    \        i = i - 1\n                \n                # if the number is still\
    \ even\n                if i % 2 == 0\n                  \n                  #\
    \ subtract 1 from i\n                  i = i - 1\n                  \n       \
    \           # if the number is still even\n                  if i % 2 == 0\n \
    \                   \n                    # subtract 1 from i\n              \
    \      i = i - 1\n                    \n                    # if the number is\
    \ still even\n                    if i % 2 == 0\n                      \n    \
    \                  # subtract 1 from i\n                      i = i - 1\n    \
    \                  \n                      # if the number is still even\n   \
    \                   if i % 2 == 0\n                        \n                \
    \        # subtract 1 from i\n                        i = i - 1\n            \
    \            \n                        # if the number is still even\n       \
    \                 if i % 2 == 0\n                          \n                \
    \          # subtract 1 from i\n                          i = i - 1\n        \
    \                  \n                          # if the number is still even\n\
    \                          if i % 2 == 0\n                            \n     \
    \                       # subtract 1 from i\n                            i = i\
    \ - 1\n                            \n                            # if the number\
    \ is still even\n                            if i % 2 == 0\n                 \
    \             \n                              # subtract 1 from i\n          \
    \                    i = i - 1\n                              \n             \
    \                 # if the number is still even\n                            \
    \  if i % 2 == 0\n                                \n                         \
    \       # subtract 1 from i\n                                i = i - 1\n     \
    \                           \n                                # if the number\
    \ is still even\n                                if i % 2 == 0\n             \
    \                     \n                                  # subtract 1 from i\n\
    \                                  i = i - 1\n                               \
    \   \n                                  # if the number is still even\n      \
    \                            if i % 2 == 0\n                                 \
    \   \n                                      # subtract 1 from i\n            \
    \                          i = i - 1\n                                      \n\
    \                                      # if the ", "  even = x % 2 == 0\n  biggest\
    \ = y\n  \n  while even and biggest < y\n    biggest = biggest + 2\n    even =\
    \ even and x % 2 == 0\n  end\n  \n  return biggest if even\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n      x =\
    \ x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n      x\
    \ = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n     \
    \ x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n   \
    \   x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n \
    \     x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n    \n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + ", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    if x > y\n\
    \      \n      biggest = y\n      \n    else\n      \n      biggest = x\n    \
    \  \n    end\n    \n  else\n    \n    if x > y\n      \n      biggest = x\n  \
    \    \n    else\n      \n      biggest = y\n      \n    end\n    \n  end\n  \n\
    \  return biggest\n  \nend", "  \n  # Write your code here.\n  \n  if x > y\n\
    \    min = x\n    max = y\n  else\n    min = y\n    max = x\n  end\n  \n  while\
    \ min <= max\n    \n    if min % 2 == 0\n      min = min + 1\n    else\n     \
    \ min = min - 1\n    end\n    \n    if max % 2 == 0\n      max = max - 1 \n  \
    \  else\n      max = max + 1\n    end\n  end\n  \n  if min == max\n    return\
    \ min\n  else\n    return -1\n  end\nend\n</cell>\n<text>\nNow let's test your\
    \ function with the examples we gave you.", "  \n  # Initialize a variable called\
    \ \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable called\
    \ \"evens\" to the value 0.\n  evens = 0\n  \n  # Initialize a variable called\
    \ \"odds\" to the value 1.\n  odds = 1\n  \n  # Initialize a variable called \"\
    xrange\" to the range from x to y.\n  xrange = x.upto(y)\n  \n  # Initialize a\
    \ variable called \"yrange\" to the range from y to x.\n  yrange = y.upto(x)\n\
    \  \n  # Initialize a variable called \"evens\" to the value 0.\n  evens = 0\n\
    \  \n  # Initialize a variable called \"odds\" to the value 1.\n  odds = 1\n \
    \ \n  # Initialize a variable called \"xrange\" to the range from x to y.\n  xrange\
    \ = x.upto(y)\n  \n  # Initialize a variable called \"yrange\" to the range from\
    \ y to x.\n  yrange = y.upto(x)\n  \n  # Initialize a variable called \"evens\"\
    \ to the value 0.\n  evens = 0\n  \n  # Initialize a variable called \"odds\"\
    \ to the value 1.\n  odds = 1\n  \n  # Initialize a variable called \"xrange\"\
    \ to the range from x to y.\n  xrange = x.upto(y)\n  \n  # Initialize a variable\
    \ called \"yrange\" to the range from y to x.\n  yrange = y.upto(x)\n  \n  # Initialize\
    \ a variable called \"evens\" to the value 0.\n  evens = 0\n  \n  # Initialize\
    \ a variable called \"odds\" to the value 1.\n  odds = 1\n  \n  # Initialize a\
    \ variable called \"xrange\" to the range from x to y.\n  xrange = x.upto(y)\n\
    \  \n  # Initialize a variable called \"yrange\" to the range from y to x.\n \
    \ yrange = y.upto(x)\n  \n  # Initialize a variable called \"evens\" to the value\
    \ 0.\n  evens = 0\n  \n  # Initialize a variable called \"odds\" to the value\
    \ 1.\n  odds = 1\n  \n  # Initialize a variable called \"xrange\" to the range\
    \ from x to y.\n  xrange = x.upto(y)\n  \n  # Initialize a variable called \"\
    yrange\" to the range from y to x.\n  yrange = y.upto(x)\n  \n  # Initialize a\
    \ variable called \"evens\" to the value 0.\n  evens = 0\n  \n  # Initialize a\
    \ variable called \"odds\" to the value 1.\n  odds = 1\n  \n  # Initialize a variable\
    \ called \"xrange\" to the range from x to y.\n  xrange = x.up", "  \n  # Write\
    \ your code here\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x < y\n\
    \    x, y = y, x + y\n  end\n  \n  x\nend\n</cell>\n<cell>", "  even = x % 2 ==\
    \ 0\n  odd = x % 2 != 0\n  \n  if even\n    x -= 1\n  elsif odd\n    x += 1\n\
    \  end\n  \n  if y > x\n    y -= 1\n  elsif y < x\n    y += 1\n  end\n  \n  while\
    \ y > x\n    if y % 2 == 0\n      y -= 1\n    else\n      y += 1\n    end\n  end\n\
    \  \n  return y\nend\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n<cell>\nchoose_num(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n</cell>\n<cell>\nchoose_num(13, 14)\n\
    </cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n<cell>\nchoose_num(13, 16)\n</cell>\n\
    <cell>\nchoose_num(13, 17)\n</cell>\n<cell>\nchoose_num(13, 18)\n</cell>\n<cell>\n\
    choose_num(13, 19)\n</cell>\n<cell>\nchoose_num(13, 20)\n</cell>\n<cell>\nchoose_num(13,\
    \ 21)\n</cell>\n<cell>\nchoose_num(13, 22)\n</cell>\n<cell>\nchoose_num(13, 23)\n\
    </cell>\n<cell>\nchoose_num(13, 24)\n</cell>\n<cell>\nchoose_num(13, 25)\n</cell>\n\
    <cell>\nchoose_num(13, 26)\n</cell>\n<cell>\nchoose_num(13, 27)\n</cell>\n<cell>\n\
    choose_num(13, 28)\n</cell>\n<cell>\nchoose_num(13, 29)\n</cell>\n<cell>\nchoose_num(13,\
    \ 30)\n</cell>\n<cell>\nchoose_num(13, 31)\n</cell>\n<cell>\nchoose_num(13, 32)\n\
    </cell>\n<cell>\nchoose_num(13, 33)\n</cell>\n<cell>\nchoose_num(13, 34)\n</cell>\n\
    <cell>\nchoose_num(13, 35)\n</cell>\n<cell>\nchoose_num(13, 36)\n</cell>\n<cell>\n\
    choose_num(13, 37", "  \n  # Initialize a variable called \"result\" to -1\n \
    \ result = -1\n  \n  # Initialize a variable called \"even\" to 0\n  even = 0\n\
    \  \n  # Initialize a variable called \"odd\" to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called \"xrange\" to [x, y]\n  xrange = [x, y]\n  \n  # Initialize\
    \ a variable called \"evens\" to [x, y]\n  evens = [x, y]\n  \n  # Initialize\
    \ a variable called \"odds\" to [x, y]\n  odds = [x, y]\n  \n  # Initialize a\
    \ variable called \"evens_range\" to [x, y]\n  evens_range = [x, y]\n  \n  # Initialize\
    \ a variable called \"odds_range\" to [x, y]\n  odds_range = [x, y]\n  \n  # Initialize\
    \ a variable called \"evens_range_min\" to x\n  evens_range_min = x\n  \n  # Initialize\
    \ a variable called \"evens_range_max\" to x\n  evens_range_max = x\n  \n  # Initialize\
    \ a variable called \"odds_range_min\" to y\n  odds_range_min = y\n  \n  # Initialize\
    \ a variable called \"odds_range_max\" to y\n  odds_range_max = y\n  \n  # Initialize\
    \ a variable called \"evens_range_min_max\" to [x, y]\n  evens_range_min_max =\
    \ [x, y]\n  \n  # Initialize a variable called \"odds_range_min_max\" to [x, y]\n\
    \  odds_range_min_max = [x, y]\n  \n  # Initialize a variable called \"evens_range_min_max_min\"\
    \ to [x, y]\n  evens_range_min_max_min = [x, y]\n  \n  # Initialize a variable\
    \ called \"odds_range_min_max_min\" to [x, y]\n  odds_range_min_max_min = [x,\
    \ y]\n  \n  # Initialize a variable called \"evens_range_min_max_max\" to [x,\
    \ y]\n  evens_range_min_max_max = [x, y]\n  \n  # Initialize a variable called\
    \ \"odds_range_min_max_max\" to [x, y]\n  odds_range_min_max_max = [x, y]\n  \n\
    \  # Initialize a variable called \"evens_range_min_max_max_min\" to [x, y]\n\
    \  evens_range_min_max_max_min = [x, y]\n  \n  # Initialize a variable called\
    \ \"odds_range_min_max_max_min\" to [x, y]\n  odds_range_min_max_max_min = [x,\
    \ y]\n  \n  # Initialize a variable called \"evens_range_min_max_max_max\" to\
    \ [x, y]\n  evens_", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even\
    \ = even and x > y\n  even = even and x < y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  even = even and x != y\n  even = even and x != y\n  even\
    \ = even and x != y\n  ", "  \n  # Initialize a variable called \"result\" to\
    \ the value -1.\n  result = -1\n  \n  # Initialize a variable called \"i\" to\
    \ the value 1.\n  i = 1\n  \n  # Initialize a variable called \"j\" to the value\
    \ y.\n  j = y\n  \n  # While the value of \"i\" is less than or equal to \"j\"\
    , and the\n  # value of \"i\" is not equal to \"result\", and the\n  # value of\
    \ \"i\" is not equal to \"x\", and the\n  # value of \"i\" is not equal to \"\
    y\".\n  while i <= j and i != result and i != x and i != y\n  \n    # If the value\
    \ of \"i\" is even, then divide \"i\" by 2.\n    if i % 2 == 0\n      i = i /\
    \ 2\n    \n    # If the value of \"i\" is odd, then multiply \"i\" by 3 and add\
    \ 1.\n    else\n      i = i * 3 + 1 \n  end\n  \n  # If the value of \"i\" is\
    \ greater than \"y\", then set \"result\"\n  # to \"i\".\n  if i > y\n    result\
    \ = i\n  \n  # If the value of \"i\" is less than \"y\", then set \"result\"\n\
    \  # to \"-1\".\n  else\n    result = -1\n  end\n  \n  # Return the value of \"\
    result\".\n  result\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\nsmallest odd number that is in the range [x, y] inclusive.\
    \ If there's\nno such number, then the function should return -1.\nFor example:\n\
    choose_num(12, 15) = 13\nchoose_num(13, 12) = -1\nHint: You might want to use\
    \ the while loop to solve this problem.", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    \n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 36)\n</", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n\
    \  even = even and x > y\n  even = even and x < y\n  even = even and x > 0 and\
    \ x < y\n  even = even and x > 0 and y > 0\n  even = even and x > 0 and y > 0\
    \ and x < y\n  even = even and x > 0 and y > 0 and x > y\n  even = even and x\
    \ > 0 and y > 0 and x > y and x < y\n  even = even and x > 0 and y > 0 and x >\
    \ y and x > y\n  even = even and x > 0 and y > 0 and x > y and x > y and x < y\n\
    \  even = even and x > 0 and y > 0 and x > y and x > y and x > y\n  even = even\
    \ and x > 0 and y > 0 and x > y and x > y and x > y and x < y\n  even = even and\
    \ x > 0 and y > 0 and x > y and x > y and x > y and x > y\n  even = even and x\
    \ > 0 and y > 0 and x > y and x > y and x > y and x > y and x < y\n  even = even\
    \ and x > 0 and y > 0 and x > y and x > y and x > y and x > y and x > y\n  even\
    \ = even and x > 0 and y > 0 and x > y and x > y and x > y and x > y and x > y\n\
    \  even = even and x > 0 and y > 0 and x > y and x > y and x > y and x > y and\
    \ x > y and x < y\n  even = even and x > 0 and y > 0 and x > y and x > y and x\
    \ > y and x > y and x > y and x > y\n  even = even and x > 0 and y > 0 and x >\
    \ y and x > y and x > y and x > y and x > y and x > y and x < y\n  even = even\
    \ and x > 0 and y > 0 and x > y and x > y and x > y and x > y and x > y and x\
    \ > y and x < y\n  even = even and x > 0 and y > 0 and x > y and x > y and x >\
    \ y and x > y and x > y and x > y and x < y\n  even = even and x > 0 and y > 0\
    \ and x > y and x > y and x > y and x > y and x > y and x > y and x < y\n  even\
    \ = even and x > 0 and y > 0 and x > y and x > y and x > y and x > y and x > y\
    \ and x > y and x > y and x < y\n  even = even and x > 0 and y > 0 and x > y and\
    \ x > y and x > y and x > y and x > y and x > y and x > y and x < y\n  even =\
    \ even and x > 0 and y > 0 and x > y and x > y and x > y and x > y and x > y and\
    \ x > y and x > y and x < y\n  even = even and x > 0 and y > 0 and x > y and x\
    \ > y and x > y and x > y and x > y and x > y and x > y and x < y\n  even = even\
    \ and x > 0 and y > 0 and x > y and x > ", "  even = x % 2 == 0\n  even = even\
    \ and y % 2 == 0\n  even = even and y > x\n  even = even and y > x and y % 2 ==\
    \ 0\n  even = even and y > x and y % 2 == 0\n  even = even and y > x and y % 2\
    \ == 0\n  even = even and y > x and y % 2 == 0\n  even = even and y > x and y\
    \ % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even and y > x and\
    \ y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even and y > x\
    \ and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even and y\
    \ > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even and\
    \ y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even and y > x and y % 2 == 0\n  even = even\
    \ and y > x and y % 2 == 0\n  even = even ", "  x = x.to_i\n  y = y.to_i\n  if\
    \ x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n    \
    \  return x\n  end\n  return -1\nend", "  \n  # Initialize a variable to store\
    \ the biggest even number that is\n  # in the range [x, y] inclusive.\n  max_even\
    \ = nil\n  \n  # Loop through all the numbers in the range [x, y] inclusive.\n\
    \  (0...x).each do |i|\n    \n    # If the number is even, add it to the biggest\
    \ even number that\n    # is currently stored in the variable max_even.\n    if\
    \ i % 2 == 0\n      max_even = i if max_even.nil? || max_even > i\n    end\n \
    \ end\n  \n  # Return the biggest even number that is in the range [x, y] inclusive.\n\
    \  return max_even if max_even\n  return -1\nend\n</cell>\n<code language=julia-1.0>",
  "  \n  # Initialize a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1.\n  odd = 1\n  \n  # Initialize a variable called 'x' to x.\n  x\
    \ = x\n  \n  # Initialize a variable called 'y' to y.\n  y = y\n  \n  # Initialize\
    \ a variable called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to 1.\n  j = 1\n  \n  # Initialize a variable called 'k' to 2.\n  k = 2\n  \n\
    \  # Initialize a variable called 'l' to 3.\n  l = 3\n  \n  # Initialize a variable\
    \ called 'm' to 4.\n  m = 4\n  \n  # Initialize a variable called 'n' to 5.\n\
    \  n = 5\n  \n  # Initialize a variable called 'o' to 6.\n  o = 6\n  \n  # Initialize\
    \ a variable called 'p' to 7.\n  p = 7\n  \n  # Initialize a variable called 'q'\
    \ to 8.\n  q = 8\n  \n  # Initialize a variable called 'r' to 9.\n  r = 9\n  \n\
    \  # Initialize a variable called 's' to 10.\n  s = 10\n  \n  # Initialize a variable\
    \ called 't' to 11.\n  t = 11\n  \n  # Initialize a variable called 'u' to 12.\n\
    \  u = 12\n  \n  # Initialize a variable called 'v' to 13.\n  v = 13\n  \n  #\
    \ Initialize a variable called 'w' to 14.\n  w = 14\n  \n  # Initialize a variable\
    \ called 'x' to x.\n  x = x\n  \n  # Initialize a variable called 'y' to y.\n\
    \  y = y\n  \n  # Initialize a variable called 'i' to 0.\n  i = 0\n  \n  # Initialize\
    \ a variable called 'j' to 1.\n  j = 1\n  \n  # Initialize a variable called 'k'\
    \ to 2.\n  k = 2\n  \n  # Initialize a variable called 'l' to 3.\n  l = 3\n  \n\
    \  # Initialize a variable called 'm' to 4.\n  m = 4\n  \n  # Initialize a variable\
    \ called 'n' to 5.\n  n = 5\n  \n  # Initialize a variable called 'o' to 6.\n\
    \  o = 6\n  \n  # Initialize a variable called 'p' to 7.\n  p = 7\n  \n  # Initialize\
    \ a variable called 'q' to 8.\n  q = 8\n  \n  # Initialize a variable called 'r'\
    \ to 9.\n  r = 9\n  \n", "  even = x % 2 == 0\n  even = even and y % 2 == 0\n\
    \  even = even and ((x != y) and (x % 2 == 0) and (y % 2 == 0))\n  even = even\
    \ and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y)\
    \ and (x % 2 != 0) and (y % 2 == 0))\n  even = even and ((x != y) and (x % 2 ==\
    \ 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y %\
    \ 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n \
    \ even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even\
    \ and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y)\
    \ and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 !=\
    \ 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y %\
    \ 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n \
    \ even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even\
    \ and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y)\
    \ and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 !=\
    \ 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y %\
    \ 2 != 0))\n  even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n \
    \ even = even and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even\
    \ and ((x != y) and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y)\
    \ and (x % 2 != 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 !=\
    \ 0) and (y % 2 != 0))\n  even = even and ((x != y) and (x % 2 != ", "  \n  #\
    \ Initialize a variable to store the biggest even number that is \n  # in the\
    \ range [x, y] inclusive.\n  max_even = nil\n  \n  # Loop through all even numbers\
    \ from x to y, inclusive.\n  (1..y).each do |i|\n    \n    # If the current number\
    \ is even, add it to the biggest even number.\n    if i % 2 == 0\n      max_even\
    \ = i if i > max_even\n    end\n  end\n  \n  # Return the biggest even number\
    \ that is in the range [x, y] inclusive.\n  return max_even if max_even\n  \n\
    \  # Otherwise, return -1.\n  return -1\nend\n</cell>\n<code language=julia-1.1>",
  "  \n  # Initialize a variable called 'result' to -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called 'i' to 0.\n  i = 0\n  \n  # Initialize a variable called 'j'\
    \ to 0.\n  j = 0\n  \n  # Initialize a variable called 'even' to 0.\n  even =\
    \ 0\n  \n  # Initialize a variable called 'odd' to 0.\n  odd = 0\n  \n  # While\
    \ the variable 'i' is less than or equal to 'x' and \n  # the variable 'j' is\
    \ less than or equal to 'y', \n  # increment the variable 'i' and decrement the\
    \ variable 'j'.\n  while i <= x and j <= y:\n    \n    # If the variable 'i' is\
    \ even, increment the variable 'even'.\n    if i % 2 == 0:\n      even += 1\n\
    \    \n    # If the variable 'i' is odd, increment the variable 'odd'.\n    else:\n\
    \      odd += 1\n    \n    # Increment the variable 'i' and decrement the variable\
    \ 'j'.\n    i += 1\n    j -= 1\n  \n  # If the variable 'even' is greater than\
    \ or equal to 'odd', \n  # then 'result' is the variable 'even'.\n  if even >=\
    \ odd:\n    result = even\n  \n  # If the variable 'odd' is greater than or equal\
    \ to 'even', \n  # then 'result' is the variable 'odd'.\n  else:\n    result =\
    \ odd\n  \n  # Return the variable 'result'.\n  return result\n</cell>\n<cell>",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    if x % 2 == 0\n      x = x +\
    \ 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"i\" to the value 1.\n  i = 1\n  \n  # While the variable\
    \ \"i\" is less than or equal to the variable \"y\".\n  while i <= y\n  \n   \
    \ # If the variable \"i\" is even, then add 1 to \"i\".\n    if i % 2 == 0\n \
    \     i += 1\n    \n    # If the variable \"i\" is odd, then subtract 1 from \"\
    i\".\n    else\n      i -= 1\n    end\n  \n    # If the variable \"i\" is equal\
    \ to the variable \"x\", then set \"result\" to\n    # \"i\".\n    if i == x\n\
    \      result = i\n    end\n  end\n  \n  # Return the variable \"result\".\n \
    \ result\nend\n</cell>\n<cell>", "  even = x % 2 == 0\n  even = even ? x : x +\
    \ 1\n  even = even % 2 == 0\n  even = even ? even : -1\n  odd = y % 2 == 0\n \
    \ odd = odd ? y : y + 1\n  odd = odd % 2 == 0\n  odd = odd ? odd : -1\n  if even\
    \ == -1 and odd == -1\n    puts \"No even or odd numbers in [#{x}, #{y}]\"\n \
    \ elsif even == -1 and odd != -1\n    puts \"No even numbers in [#{x}, #{y}]\"\
    \n  elsif even != -1 and odd == -1\n    puts \"No odd numbers in [#{x}, #{y}]\"\
    \n  elsif even != -1 and odd != -1\n    puts \"#{even} in [#{x}, #{y}]\"\n  end\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 22)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 25)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 28)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 31)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 34)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 36)\n</cell>", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend",
  "  even = x % 2 == 0\n  odd = x % 2 != 0\n  \n  if even\n    y -= 1\n  elsif odd\n\
    \    x -= 1\n  end\n  \n  while x > y\n    x -= 1\n  end\n  \n  while x < y\n\
    \    y += 1\n  end\n  \n  return x if even && y > x || odd && x > y\n  return\
    \ y if even && x > y || odd && y > x\n  return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(", "  \n  # Initialize a variable called\
    \ 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to\
    \ 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a\
    \ variable called 'y' to y\n  y = y\n  \n  # While the variable 'result' is less\
    \ than or equal to 'y'\n  while result <= y\n  \n    # While the variable 'even'\
    \ is less than or equal to 'x'\n    while even <= x\n    \n      # If the variable\
    \ 'even' is even, add 2 to 'even'\n      if even % 2 == 0\n        even = even\
    \ + 2\n      \n      # If the variable 'even' is odd, add 1 to 'odd'\n      else\n\
    \        odd = odd + 1\n      \n      # Increment the variable 'even'\n      even\
    \ = even + 1\n    \n    # Increment the variable 'result'\n    result = result\
    \ + 1\n  \n  # Return the variable 'result'\n  return result\nend\n</cell>\n<cell>",
  "  \n  # Initialize a variable called \"result\" to the value -1.\n  result = -1\n\
    \  \n  # Initialize a variable called \"i\" to the value 0.\n  i = 0\n  \n  #\
    \ Initialize a variable called \"j\" to the value 1.\n  j = 1\n  \n  # While \"\
    i\" is not equal to \"j\", and while \"i\" is less than \"y\", and \n  # while\
    \ \"i\" is not equal to \"result\", and while \"i\" is less than \"x\", \n  #\
    \ and while \"i\" is less than \"y\", and while \"i\" is less than \"result\"\
    , \n  # and while \"i\" is less than \"x\", and while \"i\" is less than \"y\"\
    , \n  # and while \"i\" is less than \"result\", and while \"i\" is less than\
    \ \"x\", \n  # and while \"i\" is less than \"y\", and while \"i\" is less than\
    \ \"result\", \n  # and while \"i\" is less than \"x\", and while \"i\" is less\
    \ than \"y\", \n  # and while \"i\" is less than \"result\", and while \"i\" is\
    \ less than \"x\", \n  # and while \"i\" is less than \"y\", and while \"i\" is\
    \ less than \"result\", \n  # and while \"i\" is less than \"x\", and while \"\
    i\" is less than \"y\", \n  # and while \"i\" is less than \"result\", and while\
    \ \"i\" is less than \"x\", \n  # and while \"i\" is less than \"y\", and while\
    \ \"i\" is less than \"result\", \n  # and while \"i\" is less than \"x\", and\
    \ while \"i\" is less than \"y\", \n  # and while \"i\" is less than \"result\"\
    , and while \"i\" is less than \"x\", \n  # and while \"i\" is less than \"y\"\
    , and while \"i\" is less than \"result\", \n  # and while \"i\" is less than\
    \ \"x\", and while \"i\" is less than \"y\", \n  # and while \"i\" is less than\
    \ \"result\", and while \"i\" is less than \"x\", \n  # and while \"i\" is less\
    \ than \"y\", and while \"i\" is less than \"result\", \n  # and while \"i\" is\
    \ less than \"x\", and while \"i\" is less than \"y\", \n  # and while \"i\" is\
    \ less than \"result\", and while \"i\" is less than \"x\", \n  # and while \"\
    i\" is less than \"y\", and while \"i\" is less than \"result\", \n  # and while\
    \ \"i\" is less than \"x\", and while \"i\" is less than \"y\", \n  # and while\
    \ \"i\" is less than \"result\", and while \"i\" is less than \"x\", \n  # and\
    \ while \"i\" is less than \"y\", and while \"i\" is less than \"result\", \n\
    \  # and while \"i\" is less than ", "  \n  even = x % 2 == 0\n  \n  if even\n\
    \    \n    if x > y\n      \n      result = x\n      \n    elsif x < y\n     \
    \ \n      result = y\n      \n    else\n      \n      result = x\n      \n   \
    \ end\n    \n  else\n    \n    if x > y\n      \n      result = y\n      \n  \
    \  elsif x < y\n      \n      result = x\n      \n    else\n      \n      result\
    \ = x\n      \n    end\n    \n  end\n  \n  return result\nend\n</cell>\n<cell>\n\
    choose_num(12, 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<cell>\nchoose_num(14,\
    \ 12)\n</cell>\n<cell>\nchoose_num(14, 15)\n</cell>\n<cell>\nchoose_num(15, 12)\n\
    </cell>\n<cell>\nchoose_num(15, 15)\n</cell>\n<cell>\nchoose_num(16, 12)\n</cell>\n\
    <cell>\nchoose_num(16, 15)\n</cell>\n<cell>\nchoose_num(17, 12)\n</cell>\n<cell>\n\
    choose_num(17, 15)\n</cell>\n<cell>\nchoose_num(18, 12)\n</cell>\n<cell>\nchoose_num(18,\
    \ 15)\n</cell>\n<cell>\nchoose_num(19, 12)\n</cell>\n<cell>\nchoose_num(19, 15)\n\
    </cell>\n<cell>\nchoose_num(20, 12)\n</cell>\n<cell>\nchoose_num(20, 15)\n</cell>\n\
    <cell>\nchoose_num(21, 12)\n</cell>\n<cell>\nchoose_num(21, 15)\n</cell>\n<cell>\n\
    choose_num(22, 12)\n</cell>\n<cell>\nchoose_num(22, 15)\n</cell>\n<cell>\nchoose_num(23,\
    \ 12)\n</cell>\n<cell>\nchoose_num(23, 15)\n</cell>\n<cell>\nchoose_num(24, 12)\n\
    </cell>\n<cell>\nchoose_num(24, 15)\n</cell>\n<cell>\nchoose_num(25, 12)\n</cell>\n\
    <cell>\nchoose_num(25, 15)\n</cell>\n<cell>\ncho", "  \n  # Initialize a variable\
    \ called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize a variable\
    \ called \"i\" to the value 0.\n  i = 0\n  \n  # While the variable \"i\" is less\
    \ than or equal to the variable \"y\", \n  # increment the variable \"i\" by 1.\n\
    \  while i < y\n    \n    # If the number at position i in the range [x, y] is\
    \ even, then\n    # increment the variable \"i\" by 1.\n    if i % 2 == 0\n  \
    \    i += 1\n      \n      # If the number at position i in the range [x, y] is\
    \ odd, then\n      # decrement the variable \"i\" by 1.\n    else\n      i -=\
    \ 1\n    end\n    \n    # If the variable \"i\" is equal to the variable \"y\"\
    , then set \n    # the variable \"result\" to the number at position i in the\
    \ \n    # range [x, y].\n    if i == y\n      result = i\n    end\n  end\n  \n\
    \  # Return the variable \"result\".\n  return result\nend\n</cell>\n<cell>",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    y -= 1\n    \n \
    \   if x % 2 == 0 and y % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  \n  even = x.even? && y.even?\n  \n  if even\n    \n    if x.to_i\
    \ > y.to_i\n      \n      return x.to_i\n      \n    elsif x.to_i < y.to_i\n \
    \     \n      return y.to_i\n      \n    else\n      \n      return -1\n    end\n\
    \    \n  else\n    \n    if x.to_i > y.to_i\n      \n      return x.to_i\n   \
    \   \n    elsif x.to_i < y.to_i\n      \n      return y.to_i\n      \n    else\n\
    \      \n      return -1\n    end\n  end\nend\n</cell>\n<cell>", "  \n  # Initialize\
    \ a variable called 'result' to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called 'even' to 0.\n  even = 0\n  \n  # Initialize a variable called\
    \ 'odd' to 1.\n  odd = 1\n  \n  # Initialize a variable called 'xrange' to [x,\
    \ y].\n  xrange = [x, y]\n  \n  # Initialize a variable called 'evens' to 0.\n\
    \  evens = 0\n  \n  # Initialize a variable called 'odds' to 1.\n  odds = 1\n\
    \  \n  # Initialize a variable called 'xrange' to [x, y].\n  xrange = [x, y]\n\
    \  \n  # Initialize a variable called 'evens' to 0.\n  evens = 0\n  \n  # Initialize\
    \ a variable called 'odds' to 1.\n  odds = 1\n  \n  # Initialize a variable called\
    \ 'xrange' to [x, y].\n  xrange = [x, y]\n  \n  # Initialize a variable called\
    \ 'evens' to 0.\n  evens = 0\n  \n  # Initialize a variable called 'odds' to 1.\n\
    \  odds = 1\n  \n  # Initialize a variable called 'xrange' to [x, y].\n  xrange\
    \ = [x, y]\n  \n  # Initialize a variable called 'evens' to 0.\n  evens = 0\n\
    \  \n  # Initialize a variable called 'odds' to 1.\n  odds = 1\n  \n  # Initialize\
    \ a variable called 'xrange' to [x, y].\n  xrange = [x, y]\n  \n  # Initialize\
    \ a variable called 'evens' to 0.\n  evens = 0\n  \n  # Initialize a variable\
    \ called 'odds' to 1.\n  odds = 1\n  \n  # Initialize a variable called 'xrange'\
    \ to [x, y].\n  xrange = [x, y]\n  \n  # Initialize a variable called 'evens'\
    \ to 0.\n  evens = 0\n  \n  # Initialize a variable called 'odds' to 1.\n  odds\
    \ = 1\n  \n  # Initialize a variable called 'xrange' to [x, y].\n  xrange = [x,\
    \ y]\n  \n  # Initialize a variable called 'evens' to 0.\n  evens = 0\n  \n  #\
    \ Initialize a variable called 'odds' to 1.\n  odds = 1\n  \n  # Initialize a\
    \ variable called 'xrange' to [x, y].\n  xrange = [x, y]\n  \n  # Initialize a\
    \ variable called 'evens' to 0.\n  evens = 0\n  \n  # Initialize a variable called\
    \ 'odds' to 1.\n  odds = 1\n  \n  # Initialize a variable called 'xrange' to [x,\
    \ y", "  \n  # Write your code here\n  \n  if x > y\n    min = x\n    max = y\n\
    \  else\n    min = y\n    max = x\n  end\n  \n  while min <= max\n    \n    num\
    \ = min + rand(max - min) + 1\n    \n    if num % 2 == 0\n      return num\n \
    \   end\n    \n    min = min + 1\n  end\n  \n  return -1\nend\n</cell>\n<cell>\n\
    choose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example:\nfactorial(5)\
    \ = 5 * 5 * 4 * 3 = 120\nfactorial(6) = 2 * 3 * 2 * 1 = 24\nfactorial(7) = 2 *\
    \ 2 * 2 * 1 = 24\nfactorial(8) = 2 * 2 * 2 * 2 * 1 = 48\nfactorial(9) = 2 * 2\
    \ * 2 * 2 * 2 * 1 = 72\nfactorial(10) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 144\n\
    factorial(11) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 288\nfactorial(12) = 2 * 2\
    \ * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 576\nfactorial(13) = 2 * 2 * 2 * 2 * 2 * 2\
    \ * 2 * 2 * 2 * 2 * 1 = 864\nfactorial(14) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\
    \ * 2 * 2 * 1 = 1472\nfactorial(15) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 *\
    \ 2 * 2 * 1 = 2816\nfactorial(16) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\
    \ * 2 * 2 * 1 = 5632\nfactorial(17) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 *\
    \ 2 * 2 * 2 * 2 * 1 = 10368\nfactorial(18) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\
    \ * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 15120\nfactorial(19) = 2 * 2 * 2 * 2 * 2 * 2 *\
    \ 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 23040\nfactorial(20) = 2 * 2 * 2\
    \ * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 46080\nfactorial(21)\
    \ = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\
    \ * 1 = 86400\nfactorial(22) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 *\
    \ 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 172800\nfactorial(23) = 2 * 2 * 2 * 2 *\
    \ 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 288800\n\
    factorial(24) = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\
    \ * 2 * 2 * 2 * 2 * 2 * 2 * 1 = 573600\nfactorial(25) = 2 * ", "  \n  # Initialize\
    \ a variable called \"result\" to the value -1.\n  result = -1\n  \n  # Initialize\
    \ a variable called \"evens\" to a list containing all even \n  # numbers less\
    \ than or equal to x.\n  evens = x.to_s.split(//).select { |n| n % 2 == 0 }\n\
    \  \n  # Initialize a variable called \"odds\" to a list containing all odd \n\
    \  # numbers less than or equal to y.\n  odds = y.to_s.split(//).select { |n|\
    \ n % 2 == 1 }\n  \n  # Initialize a variable called \"evens_sum\" to the sum\
    \ of all even numbers \n  # in evens.\n  evens_sum = evens.inject(0) { |sum, n|\
    \ sum + n }\n  \n  # Initialize a variable called \"odds_sum\" to the sum of all\
    \ odd numbers \n  # in odds.\n  odds_sum = odds.inject(0) { |sum, n| sum + n }\n\
    \  \n  # Initialize a variable called \"result\" to the value of x if \n  # evens_sum\
    \ is greater than or equal to y or to y if evens_sum is \n  # less than or equal\
    \ to x.\n  result = evens_sum >= y ? x : y\n  \n  # Return result.\n  result\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for your help. I really\
    \ appreciate it. I was able to get it to work. I'm still a beginner at Ruby and\
    \ I really appreciate your help.\n<|/ c |>\n<| c |>\nYou're welcome! If this answer\
    \ solved your problem, please mark it as accepted by clicking the check mark next\
    \ to it.\n<|/ c |>\n<| c |>\nI did but it said I had to wait 2 minutes before\
    \ I could mark it as accepted.\n<|/ c |>\n<| c |>\nAh, okay. Glad I could help.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  \n  # Initialize a variable called 'result'\
    \ to -1\n  result = -1\n  \n  # Initialize a variable called 'even' to 0\n  even\
    \ = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n  \n  # Initialize\
    \ a variable called 'x' to x\n  x = x\n  \n  # Initialize a variable called 'y'\
    \ to y\n  y = y\n  \n  # Initialize a variable called 'i' to 1\n  i = 1\n  \n\
    \  # Initialize a variable called 'j' to 1\n  j = 1\n  \n  # Initialize a variable\
    \ called 'k' to 1\n  k = 1\n  \n  # Initialize a variable called 'l' to 1\n  l\
    \ = 1\n  \n  # Initialize a variable called 'm' to 1\n  m = 1\n  \n  # Initialize\
    \ a variable called 'n' to 1\n  n = 1\n  \n  # Initialize a variable called 'o'\
    \ to 1\n  o = 1\n  \n  # Initialize a variable called 'p' to 1\n  p = 1 \n  \n\
    \  # Initialize a variable called 'q' to 1\n  q = 1\n  \n  # Initialize a variable\
    \ called 'r' to 1\n  r = 1\n  \n  # Initialize a variable called 's' to 1\n  s\
    \ = 1\n  \n  # Initialize a variable called 't' to 1\n  t = 1\n  \n  # Initialize\
    \ a variable called 'u' to 1\n  u = 1\n  \n  # Initialize a variable called 'v'\
    \ to 1\n  v = 1\n  \n  # Initialize a variable called 'w' to 1\n  w = 1\n  \n\
    \  # Initialize a variable called 'x' to 1\n  x = 1\n  \n  # Initialize a variable\
    \ called 'y' to 1\n  y = 1\n  \n  # Initialize a variable called 'z' to 1\n  z\
    \ = 1\n  \n  # Initialize a variable called 'a' to 1\n  a = 1\n  \n  # Initialize\
    \ a variable called 'b' to 1\n  b = 1\n  \n  # Initialize a variable called 'c'\
    \ to 1\n  c = 1\n  \n  # Initialize a variable called 'd' to 1\n  d = 1\n  \n\
    \  # Initialize a variable called 'e' to 1\n  e = 1\n  \n  # Initialize a variable\
    \ called 'f' to 1\n  f = 1\n  \n  # Initialize a variable called 'g' to 1\n  g\
    \ = 1\n  \n  # Initialize a variable called 'h' to 1\n  h = 1\n  \n  # Initialize\
    \ a variable called 'i' to 1\n  i = 1\n  \n  # Initialize ", "  even = x % 2 ==\
    \ 0\n  biggest = y if even\n  biggest = y if even && x > y\n  biggest = y if even\
    \ && x < y\n  biggest = y if even && x > y && x < y\n  biggest = y if even &&\
    \ x > y && x < y && y < x\n  biggest = y if even && x > y && x < y && y < x &&\
    \ y > x\n  biggest = y if even && x > y && x < y && y < x && y > x && x > y\n\
    \  biggest = y if even && x > y && x < y && y < x && y > x && x > y && x < y\n\
    \  biggest = y if even && x > y && x < y && y < x && y > x && x > y && x < y &&\
    \ y < x\n  biggest = y if even && x > y && x < y && y < x && y > x && x > y &&\
    \ x < y && y < x && y > x\n  biggest = y if even && x > y && x < y && y < x &&\
    \ y > x && x > y && x < y && y < x && y > x && x > y\n  biggest = y if even &&\
    \ x > y && x < y && y < x && y > x && x > y && x < y && y < x && y > x && x >\
    \ y && x < y\n  biggest = y if even && x > y && x < y && y < x && y > x && x >\
    \ y && x < y && y < x && y > x && x > y && x < y && y < x\n  biggest = y if even\
    \ && x > y && x < y && y < x && y > x && x > y && x < y && y < x && y > x && x\
    \ > y && x < y && y < x && y > x\n  biggest = y if even && x > y && x < y && y\
    \ < x && y > x && x > y && x < y && y < x && y > x && x > y && x < y && y < x\
    \ && y > x && x > y\n  biggest = y if even && x > y && x < y && y < x && y > x\
    \ && x > y && x < y && y < x && y > x && x > y && x < y && y < x && y > x && x\
    \ > y && x < y\n  biggest = y if even && x > y && x < y && y < x && y > x && x\
    \ > y && x < y && y < x && y > x && x > y && ", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  even =\
    \ x.even? && y.even?\n  odd = x.odd? && y.odd?\n  if even && odd\n    x.divmod(y).last\n\
    \  elsif even && !odd\n    x\n  elsif !even && odd\n    y\n  end\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x\
    \ <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    x += 2\n    \n    if x % 2 == 0\n      return x\n   \
    \ end\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</",
  "  biggest = -1\n  for i in [x, y]\n    if biggest < 0 || biggest > i\n      biggest\
    \ = i\n    end\n  end\n  return biggest\nend", "  even = x % 2 == 0\n  even =\
    \ even and y % 2 == 0\n  even = even and x > y\n  even = even and x < y\n  even\
    \ = even and x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x > y\n\
    \  even = even and x < y\n  even = even and x % 2 == 0\n  even = even and y %\
    \ 2 == 0\n  even = even and x > y\n  even = even and x < y\n  even = even and\
    \ x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x > y\n  even =\
    \ even and x < y\n  even = even and x % 2 == 0\n  even = even and y % 2 == 0\n\
    \  even = even and x > y\n  even = even and x < y\n  even = even and x % 2 ==\
    \ 0\n  even = even and y % 2 == 0\n  even = even and x > y\n  even = even and\
    \ x < y\n  even = even and x % 2 == 0\n  even = even and y % 2 == 0\n  even =\
    \ even and x > y\n  even = even and x < y\n  even = even and x % 2 == 0\n  even\
    \ = even and y % 2 == 0\n  even = even and x > y\n  even = even and x < y\n  even\
    \ = even and x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x > y\n\
    \  even = even and x < y\n  even = even and x % 2 == 0\n  even = even and y %\
    \ 2 == 0\n  even = even and x > y\n  even = even and x < y\n  even = even and\
    \ x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x > y\n  even =\
    \ even and x < y\n  even = even and x % 2 == 0\n  even = even and y % 2 == 0\n\
    \  even = even and x > y\n  even = even and x < y\n  even = even and x % 2 ==\
    \ 0\n  even = even and y % 2 == 0\n  even = even and x > y\n  even = even and\
    \ x < y\n  even = even and x % 2 == 0\n  even = even and y % 2 == 0\n  even =\
    \ even and x > y\n  even = even and x < y\n  even = even and x % 2 == 0\n", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x % 2 == 0\n    \
    \  x = x + 1\n    else\n      x = x - 1\n    end\n    \n    if x == y\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  \n  even = x % 2 == 0\n  \n  if\
    \ even\n    \n    if x > y\n      \n      biggest = y\n      \n    else \n   \
    \   \n      biggest = x\n      \n    end\n    \n  else \n    \n    if x > y\n\
    \      \n      biggest = x\n      \n    else \n      \n      biggest = y\n   \
    \   \n    end\n    \n  end\n  \n  return biggest\nend\n</cell>\n<cell>\nchoose_num(12,\
    \ 15)\n</cell>\n<cell>\nchoose_num(13, 12)\n</cell>\n<cell>\nchoose_num(13, 13)\n\
    </cell>\n<cell>\nchoose_num(13, 14)\n</cell>\n<cell>\nchoose_num(13, 15)\n</cell>\n\
    <cell>\nchoose_num(14, 13)\n</cell>\n<cell>\nchoose_num(14, 14)\n</cell>\n<cell>\n\
    choose_num(14, 15)\n</cell>\n<cell>\nchoose_num(15, 14)\n</cell>\n<cell>\nchoose_num(15,\
    \ 15)\n</cell>\n<cell>\nchoose_num(16, 15)\n</cell>\n<cell>\nchoose_num(17, 15)\n\
    </cell>\n<cell>\nchoose_num(18, 15)\n</cell>\n<cell>\nchoose_num(19, 15)\n</cell>\n\
    <cell>\nchoose_num(20, 15)\n</cell>\n<cell>\nchoose_num(21, 15)\n</cell>\n<cell>\n\
    choose_num(22, 15)\n</cell>\n<cell>\nchoose_num(23, 15)\n</cell>\n<cell>\nchoose_num(24,\
    \ 15)\n</cell>\n<cell>\nchoose_num(25, 15)\n</cell>\n<cell>\nchoose_num(26, 15)\n\
    </cell>\n<cell>\nchoose_num(27, 15)\n</cell>\n<cell>\nchoose_num(28, 15)\n</cell>\n\
    <cell>\nchoose_num(29, 15)\n</cell>\n<cell>\nchoose_num(30, 15)\n</cell>\n<cell>\n\
    choose_num(31, 15)\n</cell>\n<cell>\nchoose_num(32, 15)\n</cell>\n<cell>\nchoose_num(33,\
    \ 15)\n", "  \n  even = x % 2 == 0\n  \n  if even\n    \n    even = y % 2 == 0\n\
    \    \n    if even\n      \n      biggest = x if x > y else y\n      \n    else\
    \ \n      \n      biggest = y\n      \n  else \n    \n    even = y % 2 == 0\n\
    \    \n    if even\n      \n      biggest = y\n      \n    else \n      \n   \
    \   biggest = x\n      \n  return biggest\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 9)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 7)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 6)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 5)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 4)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 3)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 2)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 1)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 0)\n</cell>\n<code language=julia-1.5>\nchoose_num(11, 11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(11, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(11, 9)\n</cell>\n<code language=julia-1.5>\nchoose_num(11, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(11, 7)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(11, 6)\n</cell>\n<code language=julia-1.5>\nchoose_num(11, 5)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(11, 4)\n", "  \n  # Initialize a variable\
    \ called 'result' to -1\n  result = -1\n  \n  # Initialize a variable called 'even'\
    \ to 0\n  even = 0\n  \n  # Initialize a variable called 'odd' to 1\n  odd = 1\n\
    \  \n  # Initialize a variable called 'x' to x\n  x = x\n  \n  # Initialize a\
    \ variable called 'y' to y\n  y = y\n  \n  # While loop that keeps looping while\
    \ 'x' is less than or equal to 'y'\n  while x <= y\n    \n    # If the number\
    \ is even, add 2 to 'even'\n    if x % 2 == 0\n      even += 2\n    \n    # If\
    \ the number is odd, add 1 to 'odd'\n    else\n      odd += 1\n    \n    # Increment\
    \ 'x' by 1\n    x += 1\n  \n  # If the even number is greater than or equal to\
    \ 'x', then 'result' is even\n  if even >= x\n    result = even\n  \n  # If the\
    \ odd number is greater than or equal to 'x', then 'result' is odd\n  else\n \
    \   result = odd\n  \n  # Return the result\n  result\nend\n</cell>\n<code language=julia-1.5>",
  "  even = x % 2 == 0\n  even = even and y % 2 == 0\n  even = even and x % y != 0\n\
    \  even = even and y % x != 0\n  even = even and x % y == 0\n  even = even and\
    \ y % x == 0\n  even = even and x % y == 0\n  even = even and y % x == 0\n  even\
    \ = even and x % y == 0\n  even = even and y % x == 0\n  even = even and x % y\
    \ == 0\n  even = even and y % x == 0\n  even = even and x % y == 0\n  even = even\
    \ and y % x == 0\n  even = even and x % y == 0\n  even = even and y % x == 0\n\
    \  even = even and x % y == 0\n  even = even and y % x == 0\n  even = even and\
    \ x % y == 0\n  even = even and y % x == 0\n  even = even and x % y == 0\n  even\
    \ = even and y % x == 0\n  even = even and x % y == 0\n  even = even and y % x\
    \ == 0\n  even = even and x % y == 0\n  even = even and y % x == 0\n  even = even\
    \ and x % y == 0\n  even = even and y % x == 0\n  even = even and x % y == 0\n\
    \  even = even and y % x == 0\n  even = even and x % y == 0\n  even = even and\
    \ y % x == 0\n  even = even and x % y == 0\n  even = even and y % x == 0\n  even\
    \ = even and x % y == 0\n  even = even and y % x == 0\n  even = even and x % y\
    \ == 0\n  even = even and y % x == 0\n  even = even and x % y == 0\n  even = even\
    \ and y % x == 0\n  even = even and x % y == 0\n  even = even and y % x == 0\n\
    \  even = even and x % y == 0\n  even = even and y % x == 0\n  even = even and\
    \ x % y == 0\n  even = even and y % x == 0\n  even = even and x % y == 0\n  even\
    \ = even and y % x == 0\n  even = even and x % y == 0\n  even = even and y % x\
    \ == 0\n  even = even and x % y == 0\n  even", "  x = x.to_i\n  y = y.to_i\n \
    \ \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  \n  # Initialize\
    \ a variable to store the result\n  result = -1\n  \n  # If the first number is\
    \ greater than the second number, then return -1\n  if x > y\n    return -1\n\
    \  \n  # If the first number is equal to the second number, then return that number\n\
    \  if x == y\n    return result\n  \n  # If the first number is less than the\
    \ second number, then loop through \n  # the second number from 1 to y inclusive\n\
    \  for i in 1..y\n    \n    # If the current number is even, then return that\
    \ number\n    if i % 2 == 0\n      return i\n    \n    # If the current number\
    \ is odd, then subtract 1 from the second number\n    else \n      y = y - 1\n\
    \    end\n  end\n  \n  # If the second number is greater than the second number,\
    \ then return -1\n  if x > y\n    return -1\n  \n  # If the second number is equal\
    \ to the second number, then return that number\n  if x == y\n    return result\n\
    \  \n  # If the second number is less than the second number, then loop through\
    \ \n  # the first number from 1 to x inclusive\n  for i in 1..x\n    \n    # If\
    \ the current number is even, then return that number\n    if i % 2 == 0\n   \
    \   return i\n    \n    # If the current number is odd, then subtract 1 from the\
    \ first number\n    else \n      x = x - 1\n    end\n  end\n  \n  # If the first\
    \ number is greater than the second number, then return -1\n  if x > y\n    return\
    \ -1\n  \n  # If the first number is equal to the second number, then return that\
    \ number\n  if x == y\n    return result\n  \n  # If the first number is less\
    \ than the second number, then loop through \n  # the first number from 1 to y\
    \ inclusive\n  for i in 1..y\n    \n    # If the current number is even, then\
    \ return that number\n    if i % 2 == 0\n      return i\n    \n    # If the current\
    \ number is odd, then subtract 1 from the first number\n    else \n      y = y\
    \ - 1\n    end\n  end\n  \n  # If the second number is greater than the second\
    \ number, then return -1\n  if x > y\n    return -1\n  \n  # If the second number\
    \ is equal to the second number, then return that number\n  if x == y\n    return\
    \ result\n  \n  # If the second number is less than the second number, then loop\
    \ through \n  # the first number from 1 to x inclusive\n  for i in 1..x\n    \n\
    \    # If the current number is even, then return that number\n    if i % 2 ==\
    \ 0\n      return i\n    \n    # If the current number is odd, then subtract 1\
    \ from the first number\n    else \n      x = x - 1\n    end\n  end\n  \n  # If\
    \ the first number is greater than the second number, then return -1\n  if x >\
    \ y\n    return -1\n  \n  # If the first number is equal to the second ", "  \n\
    \  # Write your code here\n  \nend", "  \n  even = x % 2 == 0\n  \n  if even\n\
    \    \n    if x > y\n      \n      result = x\n      \n      while result < y\n\
    \        \n        result *= 2\n        \n      end\n      \n      while result\
    \ > y\n        \n        result /= 2\n        \n      end\n      \n      return\
    \ result\n      \n    elsif x < y\n      \n      result = y\n      \n      while\
    \ result > x\n        \n        result /= 2\n        \n      end\n      \n   \
    \   while result < x\n        \n        result *= 2\n        \n      end\n   \
    \   \n      return result\n      \n    else\n      \n      return x\n      \n\
    \    end\n    \n  else\n    \n    if x > y\n      \n      result = y\n      \n\
    \      while result > x\n        \n        result /= 2\n        \n      end\n\
    \      \n      while result < x\n        \n        result *= 2\n        \n   \
    \   end\n      \n      return result\n      \n    elsif x < y\n      \n      result\
    \ = x\n      \n      while result > y\n        \n        result /= 2\n       \
    \ \n      end\n      \n      while result < y\n        \n        result *= 2\n\
    \        \n      end\n      \n      return result\n      \n    else\n      \n\
    \      return y\n      \n    end\n    \n  end\n  \nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 22)\n</", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend", "  even = x % 2 == 0\n  even = even\
    \ ? x : x + 1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even = even % 2 == 0\n  even = even ?\
    \ even : -1\n  even = even % 2 == 0\n  even = even ? even : -1\n  even = even\
    \ % 2 == 0\n  even = even ? even : -1\n  even", "  \n  even = x % 2 == 0\n  \n\
    \  if even\n    \n    if x > y\n      \n      biggest = y\n      \n    else\n\
    \      \n      biggest = x\n      \n    end\n    \n  else\n    \n    if x > y\n\
    \      \n      biggest = x\n      \n    else\n      \n      biggest = y\n    \
    \  \n    end\n    \n  end\n  \n  return biggest\n  \nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(22, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(23, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(24, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(25, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(26, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(27, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(28, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(29, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_101_words_string
language: ruby
prompt: "# You will be given a string of words separated by commas or spaces. Your\
  \ task is\n# to split the string into words and return an array of the words.\n\
  # For example:\n# words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
  , \"is\", \"John\"]\n# words_string(\"One, two, three, four, five, six\") == [\"\
  One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\ndef words_string(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_words_string\n\
  \    candidate = method(:words_string)\n    assert_equal([\"Hi\", \"my\", \"name\"\
  , \"is\", \"John\"], candidate.call(\"Hi, my name is John\"))\n    assert_equal([\"\
  One\", \"two\", \"three\", \"four\", \"five\", \"six\"], candidate.call(\"One, two,\
  \ three, four, five, six\"))\n    assert_equal([\"Hi\", \"my\", \"name\"], candidate.call(\"\
  Hi, my name\"))\n    assert_equal([\"One\", \"two\", \"three\", \"four\", \"five\"\
  , \"six\"], candidate.call(\"One,, two, three, four, five, six,\"))\n    assert_equal([],\
  \ candidate.call(\"\"))\n    assert_equal([\"ahmed\", \"gamal\"], candidate.call(\"\
  ahmed     , gamal\"))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

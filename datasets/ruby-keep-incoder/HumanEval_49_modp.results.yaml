name: HumanEval_49_modp
language: ruby
results:
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_i\n  p = p.to_i\n  r = p % n\n  (r == 0) ? r : r + n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpnjeqmp2u.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpkk33yzfy.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpvzjdq9uo.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r &= (p - 1); r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp05ds06_f.rb:19: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpid9kki3x.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp2bfg1s1j.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp3jocxfpe.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_s\n  p = p.to_i\n  while p > 0\n    q, r = n.divmod(p)\n    if r\
    \ != 0\n      return r\n    n, p = q, p-1\n  end\n  return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpku60ay6c.rb:22: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmphb58qqdw.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpl9h8bdja.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp99rw_k0d.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpwicbik10.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp2xzs9p7q.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmprkxx55b6.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpp2us2e66.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp11x3tc2q.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp6y_5gz01.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpxqmlqece.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpfmiznc4s.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp95h2_6r9.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpzxcwhes3.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmprssoo0hs.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r ^= n\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpd50ja1du.rb:20: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpza8hf479.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpvsw8flrv.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp956r8ix2.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum)\
    \ || n.kind_of?(Bignum)) ? n : n.to_s\n  p = p.to_i\n  while p > 0\n    q = p\
    \ / 2\n    if q * 2 > p\n      p -= 1\n    else\n      p %= q\n    end\n  end\n\
    \  p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmph37g2tcz.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpypq2cpgx.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpl2pztbce.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n == 0:\
    \ return 1\n  else return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpauq6_du8.rb:14: syntax error, unexpected ':', expecting `then'\
    \ or ';' or '\\\\n'\\n  if n == 0: return 1\\n           ^\\n/tmp/tmpauq6_du8.rb:15:\
    \ else without rescue is useless\\n  else return n\\n  ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.is_a?(Fixnum) ||\
    \ n.is_a?(Bignum)) ? n : n.to_s\n  p = p.to_i if p.is_a?(Fixnum) || p.is_a?(Bignum)\
    \ ? p : p.to_s\n  if n.zero?\n    return 0\n  elsif p.zero?\n    return 1\n  elsif\
    \ n.is_a?(Fixnum) && p.is_a?(Fixnum)\n    return n.modulo(p)\n  elsif n.is_a?(Bignum)\
    \ && p.is_a?(Bignum)\n    return n.modulo(p)\n  else\n    raise(ArgumentError,\
    \ \"invalid arguments: #{n.inspect} and #{p.inspect}\")\n  end\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpu_72d5dg.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n == 0:\
    \ return 1\n  while n != 1 and n % 2 == 0: n = n / 2\n  return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpg38qh8kn.rb:14: syntax error, unexpected ':', expecting `then'\
    \ or ';' or '\\\\n'\\n  if n == 0: return 1\\n           ^\\n/tmp/tmpg38qh8kn.rb:15:\
    \ syntax error, unexpected ':', expecting `do' for condition or ';' or '\\\\n'\\\
    n  while n != 1 and n % 2 == 0: n = n / 2\\n                             ^\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpubb0fqdb.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpk23u3tmh.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp35l52_ye.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpod0xnyb_.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpv2_3v79t.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpu5e0u9dg.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpogtgy8pz.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp7lit7vrr.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r ^= n\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpi2i29emt.rb:20: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp3o5j3n2i.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpml7o0ws8.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpclzbyn0e.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp9tfnzwq8.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n1 = n % p\n  n2 = n % p\n  n3 =\
    \ n % p\n  n4 = n % p\n  n5 = n % p\n  n6 = n % p\n  n7 = n % p\n  n8 = n % p\n\
    \  n9 = n % p\n  n10 = n % p\n  n11 = n % p\n  n12 = n % p\n  n13 = n % p\n  n14\
    \ = n % p\n  n15 = n % p\n  n16 = n % p\n  n17 = n % p\n  n18 = n % p\n  n19 =\
    \ n % p\n  n20 = n % p\n  n21 = n % p\n  n22 = n % p\n  n23 = n % p\n  n24 = n\
    \ % p\n  n25 = n % p\n  n26 = n % p\n  n27 = n % p\n  n28 = n % p\n  n29 = n %\
    \ p\n  n30 = n % p\n  n31 = n % p\n  n32 = n % p\n  n33 = n % p\n  n34 = n % p\n\
    \  n35 = n % p\n  n36 = n % p\n  n37 = n % p\n  n38 = n % p\n  n39 = n % p\n \
    \ n40 = n % p\n  n41 = n % p\n  n42 = n % p\n  n43 = n % p\n  n44 = n % p\n  n45\
    \ = n % p\n  n46 = n % p\n  n47 = n % p\n  n48 = n % p\n  n49 = n % p\n  n50 =\
    \ n % p\n  n51 = n % p\n  n52 = n % p\n  n53 = n % p\n  n54 = n % p\n  n55 = n\
    \ % p\n  n56 = n % p\n  n57 = n % p\n  n58 = n % p\n  n59 = n % p\n  n60 = n %\
    \ p\n  n61 = n % p\n  n62 = n % p\n  n63 = n % p\n  n64 = n % p\n  n65 = n % p\n\
    \  n66 = n % p\n  n67 = n % p\n  n68 = n % p\n  n69 = n % p\n  n70 = n % p\n \
    \ n71 = n % p\n  n72 = n % p\n  n73 = n % p\n  n74 = n % p\n  n75 = n % p\n"
  stdout: b''
  stderr: "b\"/tmp/tmpkgxgc2pt.rb:87: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp16l29s3b.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r |= 1 if (r > p) else 0\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpp17zrala.rb:18: syntax error, unexpected `else', expecting `end'\\\
    n  r |= 1 if (r > p) else 0\\n                    ^~~~\\n/tmp/tmpp17zrala.rb:20:\
    \ syntax error, unexpected end-of-input, expecting `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpy91dyh7u.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  if n\
    \ == 0\n    return 0\n  while n != 0\n    n >>= 1\n    p >>= 1\n    if n & 1 ==\
    \ 1\n      n -= 1\n      p -= 1\n    end\n  end\n  p -= 1\n  while p >= 0\n  \
    \  p -= 1\n    if p & 1 == 1\n      p -= 1\n    end\n  end\n  return p\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpvu3l6bkq.rb:33: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.is_a?(Integer) else\
    \ n).abs\n  p = p.to_i\n  while p > 0\n    q, r = divmod(n, p)\n    n = q\n  \
    \  p = r\n  end\n  n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp9gmv68dg.rb:13: syntax error, unexpected `else', expecting ')'\\\
    n...n.to_i if n.is_a?(Integer) else n).abs\\n...                           ^~~~\\\
    n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp79ydm7la.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmptsat4zgn.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpif2fgimk.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r += 1\n\
    \    n -= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp3_x0prhe.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp_zj2irhd.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpn570q1ce.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp57xqa4yv.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r += 1\n\
    \    n -= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpoj2o1km7.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpdjooag7k.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n == 0:\
    \ return 1\n  else return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpajtr8054.rb:14: syntax error, unexpected ':', expecting `then'\
    \ or ';' or '\\\\n'\\n  if n == 0: return 1\\n           ^\\n/tmp/tmpajtr8054.rb:15:\
    \ else without rescue is useless\\n  else return n\\n  ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i\n  while p > 0\n    q, r = divmod(n, p)\n    n =\
    \ q\n    p = r\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_s\n  p = p.to_i if p.kind_of?(Fixnum) else p.to_s\n  p += 1 if p\
    \ < 2 else 0\n  r = p % n\n  r == 0 ? 1 : r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp1l8okcy1.rb:14: else without rescue is useless\\n...to_i if\
    \ p.kind_of?(Fixnum) else p.to_s\\n...                           ^~~~\\n/tmp/tmp1l8okcy1.rb:15:\
    \ syntax error, unexpected `else', expecting `end'\\n  p += 1 if p < 2 else 0\\\
    n                  ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp9nabc971.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r ^= (n & -p) != 0\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp40101zpo.rb:20: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp8ymd65wh.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n0 = n & -p\n  n1 = n & -p\n  n2\
    \ = n & -p\n  n3 = n & -p\n  n4 = n & -p\n  n5 = n & -p\n  n6 = n & -p\n  n7 =\
    \ n & -p\n  n8 = n & -p\n  n9 = n & -p\n  n10 = n & -p\n  n11 = n & -p\n  n12\
    \ = n & -p\n  n13 = n & -p\n  n14 = n & -p\n  n15 = n & -p\n  n16 = n & -p\n \
    \ n17 = n & -p\n  n18 = n & -p\n  n19 = n & -p\n  n20 = n & -p\n  n21 = n & -p\n\
    \  n22 = n & -p\n  n23 = n & -p\n  n24 = n & -p\n  n25 = n & -p\n  n26 = n & -p\n\
    \  n27 = n & -p\n  n28 = n & -p\n  n29 = n & -p\n  n30 = n & -p\n  n31 = n & -p\n\
    \  n32 = n & -p\n  n33 = n & -p\n  n34 = n & -p\n  n35 = n & -p\n  n36 = n & -p\n\
    \  n37 = n & -p\n  n38 = n & -p\n  n39 = n & -p\n  n40 = n & -p\n  n41 = n & -p\n\
    \  n42 = n & -p\n  n43 = n & -p\n  n44 = n & -p\n  n45 = n & -p\n  n46 = n & -p\n\
    \  n47 = n & -p\n  n48 = n & -p\n  n49 = n & -p\n  n50 = n & -p\n  n51 = n & -p\n\
    \  n52 = n & -p\n  n53 = n & -p\n  n54 = n & -p\n  n55 = n & -p\n  n56 = n & -p\n\
    \  n57 = n & -p\n  n58 = n & -p\n  n59 = n & -p\n  n60 = n & -p\n  n61 = n & -p\n\
    \  n62 = n & -p\n  n63 = n & -p\n  n64 = n & -p\n  n65 = n & "
  stdout: b''
  stderr: "b'/tmp/tmpaielyody.rb:78: syntax error, unexpected end-of-input\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp97i_jz9t.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp00zs65bi.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_s\n  p = p.to_i\n  while p > 1\n    p >>= 1\n    n |= 1 << (p-1)\n\
    \  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  p %= n\n  n -=\
    \ p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n\
    \ -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n\
    \  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %=\
    \ p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n\
    \ %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n\
    \  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -=\
    \ p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n\
    \ -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n\
    \  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %=\
    \ p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n\
    \ %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n\
    \  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -=\
    \ p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= "
  stdout: b''
  stderr: "b'/tmp/tmp02zl1j9x.rb:114: syntax error, unexpected end-of-input\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 + n % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpqo06wm88.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmplfl8kvaq.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n1 = n % p\n  if n1 == 0\n    n1\
    \ = p\n  n2 = n % n1\n  if n2 == 0\n    n2 = n1\n  n3 = n % n2\n  if n3 == 0\n\
    \    n3 = n2\n  n4 = n % n3\n  if n4 == 0\n    n4 = n3\n  return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpa3gqgglo.rb:26: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpkytm_pun.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp77njzfhs.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpf95yan5h.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpc0ogfuff.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpbf0jcjhl.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp67gkgmpb.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpp9eo7gg6.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp63zyuqvq.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpc8j91sod.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpbgy7yw1b.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmprn21y9ah.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpl6539on8.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmppzb2421r.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpaj6s95lx.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp3a2_6l5z.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r &= (p - 1); r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpfj3s25hd.rb:19: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp8oxc44gw.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpsuuhdlfo.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i\n  if p < 0\n    p += p\n    n += p\n  end\n  while\
    \ p > 0\n    p -= 1\n    n %= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n < 0\n\
    \    n += p\n  end\n  return n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmphw0i2x0l.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n < 0\n\
    \    n += p\n  end\n  return n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp3kehjozt.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpy3xugv51.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  p /= n\n  p +=\
    \ 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p ==\
    \ 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p\
    \ -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p\
    \ == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else "
  stdout: b''
  stderr: "b\"/tmp/tmpanu9yr4f.rb:15: else without rescue is useless\\n  p += 1 if\
    \ n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:16: syntax\
    \ error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else 0\\\
    n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:17: else without rescue is\
    \ useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:18:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:19: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:20:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:21: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:22:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:23: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:24:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:25: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:26:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:27: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:28:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:29: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:30:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:31: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:32:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:33: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:34:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:35: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:36:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:37: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:38:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:39: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:40:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:41: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:42:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:43: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:44:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:45: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:46:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:47: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:48:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:49: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:50:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:51: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:52:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:53: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:54:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:55: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:56:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:57: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:58:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:59: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:60:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:61: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:62:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:63: else without rescue\
    \ is useless\\n  p += 1 if n % p == 0 else 0\\n                       ^~~~\\n/tmp/tmpanu9yr4f.rb:64:\
    \ syntax error, unexpected `else', expecting `end'\\n  p -= 1 if n % p == 0 else\
    \ \\n                       ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /=\
    \ n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /=\
    \ n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /=\
    \ n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= "
  stdout: b''
  stderr: "b'/tmp/tmp0wpw25x6.rb:105: syntax error, unexpected end-of-input\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpc92ca95o.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp3n7ooihy.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpkb6e_wcs.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  return n if n\
    \ < p else p\nend"
  stdout: b''
  stderr: "b'/tmp/tmpfdqhq1ij.rb:14: else without rescue is useless\\n  return n if\
    \ n < p else p\\n                    ^~~~\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  return n if n\
    \ < p else p\nend"
  stdout: b''
  stderr: "b'/tmp/tmpxa7ai00i.rb:14: else without rescue is useless\\n  return n if\
    \ n < p else p\\n                    ^~~~\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > 0\n    n -= p\n    p = p % n\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp6_v38k59.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp04zisqe0.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpqqs8sm18.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r += 1\n\
    \    n -= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpmxymxb3p.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpzeps0btv.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpb5yy20e2.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n < 0\n\
    \    n += p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  return n if n\
    \ < p else p\nend"
  stdout: b''
  stderr: "b'/tmp/tmp6wyxgg6d.rb:14: else without rescue is useless\\n  return n if\
    \ n < p else p\\n                    ^~~~\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpi9uymwzg.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n >>= 1\n  r %= p\n  r &= (p - 1); r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpkzv7ql76.rb:19: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  if n == 0:\
    \ return 1\n  else return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpviln25s6.rb:14: syntax error, unexpected ':', expecting `then'\
    \ or ';' or '\\\\n'\\n  if n == 0: return 1\\n           ^\\n/tmp/tmpviln25s6.rb:15:\
    \ else without rescue is useless\\n  else return n\\n  ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > 0\n    n -= p if n >= p else n\n  end\n  n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpvk4qs64j.rb:16: syntax error, unexpected `else', expecting `end'\\\
    n    n -= p if n >= p else n\\n                     ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp72j7olr1.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpm6hb69ah.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum)\
    \ || n.kind_of?(Bignum)) ? n : n.to_s\n  p = p.to_i if p.kind_of?(Fixnum) || p.kind_of?(Bignum)\
    \ ? p : p.to_s\n  p -= 1\n  r = p % n\n  if r == 0\n    r\n  else\n    modp(n,\
    \ p)\n  end\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpilu19n9a.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpipl8kd0i.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i\n  while p > 1\n    p >>= 1\n    n += p\n  end\n\
    \  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpz_rsrqxb.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmppnnh66ma.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > 0\n    n -= p if n >= p else n\n  end\n  n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpp0g6s2x_.rb:16: syntax error, unexpected `else', expecting `end'\\\
    n    n -= p if n >= p else n\\n                     ^~~~\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i if p.kind_of?(Fixnum) else p.to_f\n  r = n % p\n\
    \  r == 0 ? r : r + p\nend"
  stdout: b''
  stderr: "b'/tmp/tmptzxr03wj.rb:14: else without rescue is useless\\n...to_i if p.kind_of?(Fixnum)\
    \ else p.to_f\\n...                           ^~~~\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmprtykzsc4.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  while\
    \ n > p\n    n -= p\n  end\n  n\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpxm7hgg32.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmptab34lca.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpqc8w10kt.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmphlww3o5m.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpu889u3bs.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpvfmj9ui4.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp138w0dj6.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp0eucio2g.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpbc7s9zti.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n0 = n & (p-1)\n  n1 = n >> p\n \
    \ n01 = n0 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01\
    \ = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01\
    \ = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 =\
    \ n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01\
    \ & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01\
    \ >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^\
    \ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n\
    \  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n \
    \ n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01\
    \ = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01\
    \ = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 =\
    \ n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01\
    \ & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n"
  stdout: b''
  stderr: "b\"/tmp/tmp74_fqs2j.rb:68: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpyvc9y2gc.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n.to_i if n.kind_of?(Fixnum)\
    \ || n.kind_of?(Bignum)) ? n : n.to_s\n  p = (p.to_i if p.kind_of?(Fixnum) ||\
    \ p.kind_of?(Bignum)) ? p : p.to_s\n  if n.zero? || p.zero?\n    p % n == 0 ?\
    \ 1 : 0\n  else\n    p % n == 0 ? modp(n / p, p) : modp(n / p, p)\n  end\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpyb76y7fp.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpfvt2xpmw.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp5zsb30f8.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp95os2akg.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p).to_i\n  p -= n\n  n %=\
    \ p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n\
    \ %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n\
    \  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -=\
    \ n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p\
    \ -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n\
    \  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %=\
    \ p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n\
    \ %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n\
    \  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -=\
    \ n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p\
    \ -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n\
    \  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %=\
    \ p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= "
  stdout: b''
  stderr: "b'/tmp/tmphsdgfo1m.rb:114: syntax error, unexpected end-of-input\\n'"
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpr5nw7dz9.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 0\n  while n > p\n    r = r *\
    \ 2 + n % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp739m9bjd.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpmsl5hbc6.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = n.to_i\n  p = p.to_i\n  if n\
    \ == 0\n    return 1\n  while n > p\n    n -= p\n  end\n  while n < p\n    n +=\
    \ p\n  end\n  return n\nend"
  stdout: b''
  stderr: "b\"/tmp/tmptks_29_w.rb:24: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpis3pxw7d.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpmukkjp83.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r <<= 1\n\
    \    n -= p\n  r %= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp2ao5gjfa.rb:19: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p\nend"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmp92s6q9ge.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpddt9fd56.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpz5phmbh2.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n = (n % p + p) % p\n  return n\n\
    end"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpvr2f1h_g.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmpheji_lea.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmph1via695.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  n1 = n % p\n  if n1 == 0\n    n1\
    \ = p\n  n2 = n % n1\n  if n2 == 0\n    n2 = n1\n  n3 = n % n2\n  if n3 == 0\n\
    \    n3 = n2\n  n4 = n % n3\n  if n4 == 0\n    n4 = n3\n  n5 = n % n4\n  if n5\
    \ == 0\n    n5 = n4\n  n6 = n % n5\n  if n6 == 0\n    n6 = n5\n  n7 = n % n6\n\
    \  if n7 == 0\n    n7 = n6\n  n8 = n % n7\n  if n8 == 0\n    n8 = n7\n  n9 = n\
    \ % n8\n  if n9 == 0\n    n9 = n8\n  n10 = n % n9\n  if n10 == 0\n    n10 = n9\n\
    \  n11 = n % n10\n  if n11 == 0\n    n11 = n10\n  n12 = n % n11\n  if n12 == 0\n\
    \    n12 = n11\n  n13 = n % n12\n  if n13 == 0\n    n13 = n12\n  n14 = n % n13\n\
    \  if n14 == 0\n    n14 = n13\n  n15 = n % n14\n  if n15 == 0\n    n15 = n14\n\
    \  n16 = n % n15\n  if n16 == 0\n    n16 = n15\n  n17 = n % n16\n  if n17 == 0\n\
    \    n17 = n16\n  n18 = n % n17\n  if n18 == 0\n    n18 = n17\n  n19 = n % n18\n\
    \  if n19 == 0\n    n19 = n18\n  n20 = n % n19\n  if n20 == 0\n    n20 = n19\n\
    \  n21 = n % n20\n  if n21 == 0\n    n21 = n20\n  n22 = n % n21\n  if n22 == 0\n\
    \    n22 = n21\n  n23 = n % n22\n  if n23 == 0\n    n23 = n22\n  n24 = n % n23\n\
    \  if n24 == 0\n    n24 = n23\n  n25 = n % n24\n  if n25 == 0\n    n25 = n24\n\
    \  n26 = n % n25\n  if n26 == 0\n    n26 = n25\n  n27 = n % n26\n  if n27 == 0\n\
    \    n27 = n26\n  n28 = n % n27\n  if n28 == 0\n    n28 = n27\n  n29 = n % n28\n\
    \  if n29 == 0\n    n29 = n28\n  n30 = n % n29\n"
  stdout: b''
  stderr: "b\"/tmp/tmp59wy6gc6.rb:100: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend"
  stdout: b''
  stderr: "b\"/tmp/tmpp_f43fzh.rb:18: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp585txi7a.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK
- program: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n\
    # >>> modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n\
    # >>> modp(100, 101)\n# 1\ndef modp(n, p)\n  return ((n % p) + p) % p"
  stdout: b''
  stderr: "b\"/tmp/tmp1_9mvurb.rb:13: syntax error, unexpected end-of-input, expecting\
    \ `end'\\n\""
  exit_code: 1
  status: OK

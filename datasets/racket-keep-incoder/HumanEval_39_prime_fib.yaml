name: HumanEval_39_prime_fib
language: racket
prompt: "#lang racket\n\n;; prime_fib returns n-th number that is a Fibonacci number\
  \ and it's also prime.\n;; >>> prime_fib(1)\n;; 2\n;; >>> prime_fib(2)\n;; 3\n;;\
  \ >>> prime_fib(3)\n;; 5\n;; >>> prime_fib(4)\n;; 13\n;; >>> prime_fib(5)\n;; 89\n\
  (define (prime_fib n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate prime_fib))\n\
  \    (check-equal? (candidate 1) 2)\n    (check-equal? (candidate 2) 3)\n    (check-equal?\
  \ (candidate 3) 5)\n    (check-equal? (candidate 4) 13)\n    (check-equal? (candidate\
  \ 5) 89)\n    (check-equal? (candidate 6) 233)\n    (check-equal? (candidate 7)\
  \ 1597)\n    (check-equal? (candidate 8) 28657)\n    (check-equal? (candidate 9)\
  \ 514229)\n    (check-equal? (candidate 10) 433494437)\n))\n\n(test-humaneval)"
completions: ["  (cond [(= n 2) 2]\n        [(= n 3) 5]\n        [(= n 5) 13]\n  \
    \      [else (* n (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(=\
    \ n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ 5]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib (-\
    \ n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3\
    \ (prime_fib (- n 1))) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (let\
    \ ([a (prime_fib (- n 1))\n                      b (prime_fib (- n 2))])\n   \
    \             (if (= (mod n a) 0)\n                    (if (= (mod n b) 0)\n \
    \                       (+ a b)\n                        (+ b a))\n          \
    \          (+ a b)))]))\n", "  (cond [(= n 2) 2]\n        [(= n 3) 5]\n      \
    \  [(= n 4) 13]\n        [(= n 5) 89]\n        [else (* n (prime_fib (- n 1)))\
    \ (prime_fib (- n 1))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 2 (prime_fib (- n\
    \ 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib\
    \ (- n 1))) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(=\
    \ n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 3 (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 prime_fib(2))]\n        [else (+ prime_fib(3) (prime_fib(2) prime_fib(1)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n\
    \                   (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n       \
    \ [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else\
    \ (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 0) 2]\n\
    \        [(= n 1) 3]\n        [else (* 3 (prime_fib (- n 1))) (+ 2 (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 2) 2]\n   \
    \     [(= n 3) 5]\n        [(= n 4) 13]\n        [(= n 5) 89]\n        [else (*\
    \ n (prime_fib (- n 1))) (prime_fib (- n 1))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n                  \
    \ (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n    \
    \    [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n\
    \ 1) 2]\n        [(= n 2) 3]\n        [else (let ([a (prime_fib (- n 1))\n   \
    \                   b (prime_fib (- n 2))])\n                (if (= (mod n a)\
    \ 0)\n                    (if (= (mod n b) 0)\n                        (+ a b)\n\
    \                        (+ b a))\n                    (+ a b)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+\
    \ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n \
    \       [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n     \
    \              (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n\
    \ 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+\
    \ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n\
    \                   (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n       \
    \ [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+\
    \ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib\
    \ (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2)\
    \ 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 3 (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 0) 2]\n        [(= n 1) 3]\n\
    \        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 1))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(=\
    \ n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (let\
    \ ([a (prime_fib (- n 1))\n                      b (prime_fib (- n 2))])\n   \
    \             (if (= (+ a b) n)\n                    (+ a b)\n               \
    \     (if (= (mod n a) 0)\n                        (+ a b)\n                 \
    \       (if (= (mod n b) 0)\n                            (+ a b)\n           \
    \                 (if (= (mod n a) (mod n b))\n                              \
    \  (+ a b)\n                                (if (= (mod n b) (mod n a))\n    \
    \                                (+ a b)\n                                   \
    \ (if (= (mod n a) (mod n b))\n                                        (+ a b)\n\
    \                                        (if (= (mod n b) (mod n a))\n       \
    \                                     (+ a b)\n                              \
    \              (if (= (mod n a) (mod n b))\n                                 \
    \               (+ a b)\n                                                (if (=\
    \ (mod n b) (mod n a))\n                                                    (+\
    \ a b)\n                                                    (if (= (mod n a) (mod\
    \ n b))\n                                                        (+ a b)\n   \
    \                                                     (if (= (mod n b) (mod n\
    \ a))\n                                                            (+ a b)\n \
    \                                                           (if (= (mod n a) (mod\
    \ n b))\n                                                                (+ a\
    \ b)\n                                                                (if (= (mod\
    \ n b) (mod n a))\n                                                          \
    \          (+ a b)\n                                                         \
    \           (if (= (mod n a) (mod n b))\n                                    \
    \                                    (+ a b)\n                               \
    \                                         (if (= (mod n b) (mod n a))\n      \
    \                                                                      (+ a b)\n\
    \                                                                            (if\
    \ (= (mod n a) (mod n b))\n                                                  \
    \                              (+ a b)\n                                     \
    \                                           (if (= (mod n b) (mod n a))\n    \
    \                                                                            \
    \    (+ a b)\n                                                               \
    \                     (if (= (mod n a) (mod n b))\n                          \
    \                                                              (+ a b)\n     \
    \                                                                            \
    \       (if (= (mod n b) (mod n a))\n                                        \
    \                                                    (+ a b)\n               \
    \                                                                            \
    \ (if (= (mod n a) (mod n b))\n                                              \
    \                                                  (+ a b)\n                 \
    \                                                                            \
    \   (if (= (mod n b) (mod n a))\n                                            \
    \                                                        (+ a b)\n           \
    \                                                                            \
    \             (if (= (mod n a) (mod n b))\n                                  \
    \                                                                      (+ a b)\n\
    \                                                                            \
    \                            (if (= (mod n b) (mod n a))\n                   \
    \                                                                            \
    \             (+ a b)\n                                                      \
    \                                                      (if (= (mod n a) (mod n\
    \ b))\n                                                                      \
    \                                          (+ a b)\n                         \
    \                                                                            \
    \           (if (= (mod n b) (", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n \
    \       [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n\
    \ 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 3 (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1))\
    \ (prime_fib (- n 2))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n   \
    \     [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+\
    \ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib (- n 2))))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1)) (+ 3 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n\
    \ 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else\
    \ (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [else (let ([a (prime_fib (- n 1))\n           \
    \           b (prime_fib (- n 2))])\n                (if (= (modulo n a) 0)\n\
    \                    (if (= (modulo n b) 0)\n                        (+ a b)\n\
    \                        (* a b))\n                    (* a b))]))])\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))\n                   (prime_fib (- n 2)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+\
    \ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n \
    \       [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))\n                   (prime_fib (- n 2)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) 5]\n        [else (* n (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n          \
    \        (prime_fib (- n 2)))]))\n", "  (cond [(= n 0) 2]\n        [(= n 1) 3]\n\
    \        [else (+ (prime_fib (- n 1)) (prime_fib (- n 2)))]))\n", "  (cond [(=\
    \ n 0) 2]\n        [(= n 1) 3]\n        [(= (mod n 2) 0) (+ 3 (prime_fib (- n\
    \ 1)))]\n        [else (+ 3 (prime_fib (- n 1)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 2) 2]\n        [(= n 3) 3]\n        [(= n 5) 5]\n        [else (*\
    \ 3 (prime_fib (- n 1))\n                  (prime_fib (- n 2)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) 5]\n        [else (* n (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 2)\
    \ 2]\n        [(= n 3) 5]\n        [(= n 4) 13]\n        [(= n 5) 89]\n      \
    \  [else (* n (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n\
    \ 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [else (* 3 (prime_fib (- n 1))\n                  (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 prime_fib(- n 2))]\n\
    \        [else (+ prime_fib(- n 2) (+ 5 prime_fib(- n 3)))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(=\
    \ n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 2)\
    \ 2]\n        [(= n 3) 5]\n        [(= n 5) 13]\n        [else (* n (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 prime_fib(- n 2))]\n        [else (+ prime_fib(- n 2) prime_fib(- n 3))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [else (* 3 (prime_fib (- n 1))\n                   (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5\
    \ (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n   \
    \     [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+\
    \ 5 (prime_fib (- n 1)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n  \
    \      [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 3 (prime_fib (-\
    \ n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib\
    \ (- n 1)) (prime_fib (- n 2))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2)\
    \ 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 2 (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(=\
    \ n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(=\
    \ n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 0) 2]\n   \
    \     [(= n 1) 3]\n        [(= (prime_fib n-1) 0)\n         (if (= (prime_fib\
    \ n-2) 0)\n             (+ n 1)\n             (+ n (prime_fib n-2)))]\n      \
    \  [else (+ n (prime_fib n-1))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 prime_fib(- n 2))]\n        [else (+ prime_fib(- n 2) (+\
    \ 5 prime_fib(- n 3)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n    \
    \    [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib (-\
    \ n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (let\
    \ ([a (prime_fib (- n 1))\n                      b (prime_fib (- n 2))])\n   \
    \             (if (= (mod n a) 0)\n                    (if (= (mod n b) 0)\n \
    \                       (+ a b)\n                        (+ b a))\n          \
    \          (+ a b)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n      \
    \  [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (prime_fib (- n 1)) (+ 3 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 2 (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1))))]))\n", "  (cond [(= n 0) 2]\n        [(= n 1) 3]\n        [(= (mod n\
    \ 2) 0) (+ 3 (prime_fib (- n 1)))]\n        [else (+ 5 (prime_fib (- n 1)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+ 5 3)]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n\
    \ 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(=\
    \ n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 prime_fib(2))]\n   \
    \     [else (+ prime_fib(3) (prime_fib(2) prime_fib(1)))]))\n", "  (cond [(= n\
    \ 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n   \
    \     [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (-\
    \ n 1)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) 5]\n\
    \        [else (* n (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n      \
    \  [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1)) (+\
    \ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5\
    \ 3)]\n        [else (prime_fib (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib\
    \ (- n 1)) (+ 2 (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(=\
    \ n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (+ 2 (prime_fib (- n 2)))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) 5]\n        [else (*\
    \ 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 2) 2]\n   \
    \     [(= n 3) 5]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+\
    \ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n \
    \       [(= n 3) (+ 3 (prime_fib (- n 1)))]\n        [else (+ 5 (prime_fib (-\
    \ n 1)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib\
    \ (- n 1)) (prime_fib (- n 2)))]))\n", "  (cond [(= n 2) 2]\n        [(= n 3)\
    \ 3]\n        [(= n 5) 5]\n        [else (* n (prime_fib (- n 1))))]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))) (prime_fib (- n\
    \ 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5\
    \ 3)]\n        [else (+ 5 (prime_fib (- n 1))))))\n", "  (cond [(= n 2) 2]\n \
    \       [(= n 3) 5]\n        [(= n 4) 13]\n        [(= n 5) 89]\n        [else\
    \ (* n (prime_fib (- n 1))) (+ n (prime_fib (- n 1)))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n          \
    \         (prime_fib (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 3 (prime_fib (-\
    \ n 1)))]\n        [else (+ 5 (prime_fib (- n 1)))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib\
    \ (- n 1))))]))\n", "  (cond [(= n 2) 2]\n        [(= n 3) 3]\n        [(= n 5)\
    \ 5]\n        [else (* n (prime_fib (- n 1)))]))\n", "  (cond [(= n 1) 2]\n  \
    \      [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (prime_fib (- n 1))\
    \ (+ 5 3)]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+\
    \ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n\
    \        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n\
    \ 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib\
    \ (- n 1))) (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2)\
    \ 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", " \
    \ (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else\
    \ (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n\
    \        [else (+ (prime_fib (- n 1)) (prime_fib (- n 2))))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 3)]\n        [else (+ 5\
    \ (prime_fib (- n 1))))]))\n", "  (cond [(= n 2) 2]\n        [(= n 3) 5]\n   \
    \     [(= n 5) 13]\n        [else (* n (prime_fib (- n 1))))]))\n", "  (cond [(=\
    \ n 1) 2]\n        [(= n 2) 3]\n        [(= n 3) (+ 5 prime_fib(2))]\n       \
    \ [else (+ prime_fib(3) (prime_fib(2) prime_fib (- n 1)))]))\n", "  (cond [(=\
    \ n 2) 2]\n        [(= n 3) 5]\n        [(= n 4) 13]\n        [(= n 5) 89]\n \
    \       [else (* n (prime_fib (- n 1))))]))\n", "  (cond [(= n 1) 2]\n       \
    \ [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib (- n 2))]))\n",
  "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1)))\
    \ (prime_fib (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n     \
    \   [(= n 3) (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond\
    \ [(= n 1) 2]\n        [(= n 2) 3]\n        [else (+ (prime_fib (- n 1)) (prime_fib\
    \ (- n 2)))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))) (prime_fib\
    \ (- n 2))]))\n", "  (cond [(= n 1) 2]\n        [(= n 2) 3]\n        [(= n 3)\
    \ (+ 5 3)]\n        [else (+ 5 (prime_fib (- n 1))))]))\n", "  (cond [(= n 1)\
    \ 2]\n        [(= n 2) 3]\n        [else (* 3 (prime_fib (- n 1))\n          \
    \         (prime_fib (- n 2)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

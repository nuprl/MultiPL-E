name: HumanEval_138_is_equal_to_sum_even
language: racket
prompt: "#lang racket\n\n;; Evaluate whether the given number n can be written as\
  \ the sum of exactly 4 positive even numbers\n;; Example\n;; is_equal_to_sum_even(4)\
  \ == False\n;; is_equal_to_sum_even(6) == False\n;; is_equal_to_sum_even(8) == True\n\
  (define (is_equal_to_sum_even n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_equal_to_sum_even))\n\
  \    (check-equal? (candidate 4) #f)\n    (check-equal? (candidate 6) #f)\n    (check-equal?\
  \ (candidate 8) #t)\n    (check-equal? (candidate 10) #t)\n    (check-equal? (candidate\
  \ 11) #f)\n    (check-equal? (candidate 12) #t)\n    (check-equal? (candidate 13)\
  \ #f)\n    (check-equal? (candidate 16) #t)\n))\n\n(test-humaneval)"
completions: ["  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo\
    \ (+ n 4) 4)))\n", "  (= (modulo n 4) (modulo (+ n 1) 4)))\n", "  (= (modulo (+\
    \ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 5) 4) (modulo (+ n 7) 4)))\n", "  (=\
    \ (mod n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (=\
    \ (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) (modulo (+\
    \ n 1) 4)))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4)\
    \ (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0)\n\
    \  (= (modulo n 4) 0)\n  (= (modulo n 6) 0)\n  (= (modulo n 8) 0)\n  (= (modulo\
    \ n 10) 0)\n  (= (modulo n 12) 0)\n  (= (modulo n 14) 0)\n  (= (modulo n 16) 0)\n\
    \  (= (modulo n 18) 0)\n  (= (modulo n 20) 0)\n  (= (modulo n 22) 0)\n  (= (modulo\
    \ n 24) 0)\n  (= (modulo n 26) 0)\n  (= (modulo n 28) 0)\n  (= (modulo n 30) 0)\n\
    \  (= (modulo n 32) 0)\n  (= (modulo n 34) 0)\n  (= (modulo n 36) 0)\n  (= (modulo\
    \ n 38) 0)\n  (= (modulo n 40) 0)\n  (= (modulo n 42) 0)\n  (= (modulo n 44) 0)\n\
    \  (= (modulo n 46) 0)\n  (= (modulo n 48) 0)\n  (= (modulo n 50) 0)\n  (= (modulo\
    \ n 52) 0)\n  (= (modulo n 54) 0)\n  (= (modulo n 56) 0)\n  (= (modulo n 58) 0)\n\
    \  (= (modulo n 60) 0)\n  (= (modulo n 62) 0)\n  (= (modulo n 64) 0)\n  (= (modulo\
    \ n 66) 0)\n  (= (modulo n 68) 0)\n  (= (modulo n 70) 0)\n  (= (modulo n 72) 0)\n\
    \  (= (modulo n 74) 0)\n  (= (modulo n 76) 0)\n  (= (modulo n 78) 0)\n  (= (modulo\
    \ n 80) 0)\n  (= (modulo n 82) 0)\n  (= (modulo n 84) 0)\n  (= (modulo n 86) 0)\n\
    \  (= (modulo n 88) 0)\n  (= (modulo n 90) 0)\n  (= (modulo n 92) 0)\n  (= (modulo\
    \ n 94) 0)\n  (= (modulo n 96) 0)\n  (= (modulo n 98) 0)\n  (= (modulo n 100)\
    \ 0)\n  (= (modulo n 102) 0)\n  (= (modulo n 104", "  (= (modulo n 4) 0))\n",
  '  (= (modulo n 2) 0))', "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+\
    \ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+\
    \ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4)\n     (modulo\
    \ (+ n 2) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (=\
    \ (mod n 2) 0)\n  (= (mod n 4) 0)\n  (= (mod n 6) 0)\n  (= (mod n 8) 0)\n  (=\
    \ (mod n 10) 0)\n  (= (mod n 12) 0)\n  (= (mod n 14) 0)\n  (= (mod n 16) 0)\n\
    \  (= (mod n 18) 0)\n  (= (mod n 20) 0)\n  (= (mod n 22) 0)\n  (= (mod n 24) 0)\n\
    \  (= (mod n 26) 0)\n  (= (mod n 28) 0)\n  (= (mod n 30) 0)\n  (= (mod n 32) 0)\n\
    \  (= (mod n 34) 0)\n  (= (mod n 36) 0)\n  (= (mod n 38) 0)\n  (= (mod n 40) 0)\n\
    \  (= (mod n 42) 0)\n  (= (mod n 44) 0)\n  (= (mod n 46) 0)\n  (= (mod n 48) 0)\n\
    \  (= (mod n 50) 0)\n  (= (mod n 52) 0)\n  (= (mod n 54) 0)\n  (= (mod n 56) 0)\n\
    \  (= (mod n 58) 0)\n  (= (mod n 60) 0)\n  (= (mod n 62) 0)\n  (= (mod n 64) 0)\n\
    \  (= (mod n 66) 0)\n  (= (mod n 68) 0)\n  (= (mod n 70) 0)\n  (= (mod n 72) 0)\n\
    \  (= (mod n 74) 0)\n  (= (mod n 76) 0)\n  (= (mod n 78) 0)\n  (= (mod n 80) 0)\n\
    \  (= (mod n 82) 0)\n  (= (mod n 84) 0)\n  (= (mod n 86) 0)\n  (= (mod n 88) 0)\n\
    \  (= (mod n 90) 0)\n  (= (mod n 92) 0)\n  (= (mod n 94) 0)\n  (= (mod n 96) 0)\n\
    \  (= (mod n 98) 0)\n  (= (mod n 100) 0)\n  (= (mod n 102) 0)\n  (= (mod n 104)\
    \ 0)\n  (= (mod n 106) 0)\n  (= (mod n 108) 0)\n  (= (mod n 110) 0)\n  (= (mod\
    \ n 112) 0)\n  (= (mod n 114) 0)\n  (= (mod ", "  (= (modulo n 4) 0))\n", "  (=\
    \ (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", '  (= (modulo n 4) (modulo n
    2)))', "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+\
    \ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (=\
    \ (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", '  (= (modulo n 4) (modulo
    n 2)))', "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (mod\
    \ n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+\
    \ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 2) 0))\n",
  "  (= (modulo (+ n 1) 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo\
    \ (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo n 2) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+\
    \ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (modulo (+ n 2) 4) (modulo (+ n 2) 4)))\n", "  (= (modulo n\
    \ 4) 0))\n", "  (= (mod n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) (modulo (+ n 1) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4)\
    \ 0))\n", "  (= (mod n 2) 0)\n  (= (mod n 4) 0)\n  (= (mod n 6) 0)\n  (= (mod\
    \ n 8) 0)\n  (= (mod n 10) 0)\n  (= (mod n 12) 0)\n  (= (mod n 14) 0)\n  (= (mod\
    \ n 16) 0)\n  (= (mod n 18) 0)\n  (= (mod n 20) 0)\n  (= (mod n 22) 0)\n  (= (mod\
    \ n 24) 0)\n  (= (mod n 26) 0)\n  (= (mod n 28) 0)\n  (= (mod n 30) 0)\n  (= (mod\
    \ n 32) 0)\n  (= (mod n 34) 0)\n  (= (mod n 36) 0)\n  (= (mod n 38) 0)\n  (= (mod\
    \ n 40) 0)\n  (= (mod n 42) 0)\n  (= (mod n 44) 0)\n  (= (mod n 46) 0)\n  (= (mod\
    \ n 48) 0)\n  (= (mod n 50) 0)\n  (= (mod n 52) 0)\n  (= (mod n 54) 0)\n  (= (mod\
    \ n 56) 0)\n  (= (mod n 58) 0)\n  (= (mod n 60) 0)\n  (= (mod n 62) 0)\n  (= (mod\
    \ n 64) 0)\n  (= (mod n 66) 0)\n  (= (mod n 68) 0)\n  (= (mod n 70) 0)\n  (= (mod\
    \ n 72) 0)\n  (= (mod n 74) 0)\n  (= (mod n 76) 0)\n  (= (mod n 78) 0)\n  (= (mod\
    \ n 80) 0)\n  (= (mod n 82) 0)\n  (= (mod n 84) 0)\n  (= (mod n 86) 0)\n  (= (mod\
    \ n 88) 0)\n  (= (mod n 90) 0)\n  (= (mod n 92) 0)\n  (= (mod n 94) 0)\n  (= (mod\
    \ n 96) 0)\n  (= (mod n 98) 0)\n  (= (mod n 100) 0)\n  (= (mod n 102) 0)\n  (=\
    \ (mod n 104) 0)\n  (= (mod n 106) 0)\n  (= (mod n 108) 0)\n  (= (mod n 110) 0)\n\
    \  (= (mod n 112) 0)\n  (= (mod n 114) 0)\n  (= (mod ", "  (= (modulo n 4) 0))\n",
  "  (= (modulo (+ n 2) 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1)\
    \ 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo\
    \ n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ (+ n 1) 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo n 4) 0))\n", " \
    \ (= (modulo n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n",
  '  (= (modulo n 4) (modulo n 2)))', "  (= (modulo n 4) 0))\n", "  (= (modulo n 4)\
    \ 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 2) 4)\
    \ (modulo (+ n 3) 4) (modulo (+ n 5) 4) (modulo (+ n 7) 4)))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (mod n 2) 0))\n", "  (= (modulo n 4) 0))\n", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo\
    \ (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+\
    \ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo (+ n 1) 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo n 2) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo\
    \ (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n",
  "  (= (mod n 2) 0))\n", '  (= (modulo n 4) (modulo n 2)))', "  (= (modulo (+ n 2)\
    \ 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 2) 0))\n", "  (= (modulo\
    \ n 4) (modulo (+ n 1) 4)))\n", "  (= (mod n 2) 0)\n  (= (mod n 4) 0)\n  (= (mod\
    \ n 6) 0)\n  (= (mod n 8) 0)\n  (= (mod n 10) 0)\n  (= (mod n 12) 0)\n  (= (mod\
    \ n 14) 0)\n  (= (mod n 16) 0)\n  (= (mod n 18) 0)\n  (= (mod n 20) 0)\n  (= (mod\
    \ n 22) 0)\n  (= (mod n 24) 0)\n  (= (mod n 26) 0)\n  (= (mod n 28) 0)\n  (= (mod\
    \ n 30) 0)\n  (= (mod n 32) 0)\n  (= (mod n 34) 0)\n  (= (mod n 36) 0)\n  (= (mod\
    \ n 38) 0)\n  (= (mod n 40) 0)\n  (= (mod n 42) 0)\n  (= (mod n 44) 0)\n  (= (mod\
    \ n 46) 0)\n  (= (mod n 48) 0)\n  (= (mod n 50) 0)\n  (= (mod n 52) 0)\n  (= (mod\
    \ n 54) 0)\n  (= (mod n 56) 0)\n  (= (mod n 58) 0)\n  (= (mod n 60) 0)\n  (= (mod\
    \ n 62) 0)\n  (= (mod n 64) 0)\n  (= (mod n 66) 0)\n  (= (mod n 68) 0)\n  (= (mod\
    \ n 70) 0)\n  (= (mod n 72) 0)\n  (= (mod n 74) 0)\n  (= (mod n 76) 0)\n  (= (mod\
    \ n 78) 0)\n  (= (mod n 80) 0)\n  (= (mod n 82) 0)\n  (= (mod n 84) 0)\n  (= (mod\
    \ n 86) 0)\n  (= (mod n 88) 0)\n  (= (mod n 90) 0)\n  (= (mod n 92) 0)\n  (= (mod\
    \ n 94) 0)\n  (= (mod n 96) 0)\n  (= (mod n 98) 0)\n  (= (mod n 100) 0)\n  (=\
    \ (mod n 102) 0)\n  (= (mod n 104) 0)\n  (= (mod n 106) 0)\n  (= (mod n 108) 0)\n\
    \  (= (mod n 110) 0)\n  (= (mod n 112) 0)\n  (= (mod n 114) 0)\n  (= (mod ", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4)\
    \ (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 2) 0))\n", "  (= (modulo (+ n 1) 4) 0))\n", "  (= (modulo n 4) 0))\n", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 1) 4)\
    \ 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 2) 0))\n", "  (= (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 5) 4)\
    \ (modulo (+ n 7) 4)))\n", "  (= (mod n 2) 0)\n  (= (mod n 4) 0)\n  (= (mod n\
    \ 6) 0)\n  (= (mod n 8) 0)\n  (= (mod n 10) 0)\n  (= (mod n 12) 0)\n  (= (mod\
    \ n 14) 0)\n  (= (mod n 16) 0)\n  (= (mod n 18) 0)\n  (= (mod n 20) 0)\n  (= (mod\
    \ n 22) 0)\n  (= (mod n 24) 0)\n  (= (mod n 26) 0)\n  (= (mod n 28) 0)\n  (= (mod\
    \ n 30) 0)\n  (= (mod n 32) 0)\n  (= (mod n 34) 0)\n  (= (mod n 36) 0)\n  (= (mod\
    \ n 38) 0)\n  (= (mod n 40) 0)\n  (= (mod n 42) 0)\n  (= (mod n 44) 0)\n  (= (mod\
    \ n 46) 0)\n  (= (mod n 48) 0)\n  (= (mod n 50) 0)\n  (= (mod n 52) 0)\n  (= (mod\
    \ n 54) 0)\n  (= (mod n 56) 0)\n  (= (mod n 58) 0)\n  (= (mod n 60) 0)\n  (= (mod\
    \ n 62) 0)\n  (= (mod n 64) 0)\n  (= (mod n 66) 0)\n  (= (mod n 68) 0)\n  (= (mod\
    \ n 70) 0)\n  (= (mod n 72) 0)\n  (= (mod n 74) 0)\n  (= (mod n 76) 0)\n  (= (mod\
    \ n 78) 0)\n  (= (mod n 80) 0)\n  (= (mod n 82) 0)\n  (= (mod n 84) 0)\n  (= (mod\
    \ n 86) 0)\n  (= (mod n 88) 0)\n  (= (mod n 90) 0)\n  (= (mod n 92) 0)\n  (= (mod\
    \ n 94) 0)\n  (= (mod n 96) 0)\n  (= (mod n 98) 0)\n  (= (mod n 100) 0)\n  (=\
    \ (mod n 102) 0)\n  (= (mod n 104) 0)\n  (= (mod n 106) 0)\n  (= (mod n 108) 0)\n\
    \  (= (mod n 110) 0)\n  (= (mod n 112) 0)\n  (= (mod n 114) 0)\n  (= (mod ", " \
    \ (= (modulo n 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4)\
    \ (modulo (+ n 4) 4)))\n", "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo\
    \ (+ n 3) 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (mod n 2) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 2) 0)\n  (= (modulo n 4) 0)\n  (= (modulo n 6)\
    \ 0)\n  (= (modulo n 8) 0)\n  (= (modulo n 10) 0)\n  (= (modulo n 12) 0)\n  (=\
    \ (modulo n 14) 0)\n  (= (modulo n 16) 0)\n  (= (modulo n 18) 0)\n  (= (modulo\
    \ n 20) 0)\n  (= (modulo n 22) 0)\n  (= (modulo n 24) 0)\n  (= (modulo n 26) 0)\n\
    \  (= (modulo n 28) 0)\n  (= (modulo n 30) 0)\n  (= (modulo n 32) 0)\n  (= (modulo\
    \ n 34) 0)\n  (= (modulo n 36) 0)\n  (= (modulo n 38) 0)\n  (= (modulo n 40) 0)\n\
    \  (= (modulo n 42) 0)\n  (= (modulo n 44) 0)\n  (= (modulo n 46) 0)\n  (= (modulo\
    \ n 48) 0)\n  (= (modulo n 50) 0)\n  (= (modulo n 52) 0)\n  (= (modulo n 54) 0)\n\
    \  (= (modulo n 56) 0)\n  (= (modulo n 58) 0)\n  (= (modulo n 60) 0)\n  (= (modulo\
    \ n 62) 0)\n  (= (modulo n 64) 0)\n  (= (modulo n 66) 0)\n  (= (modulo n 68) 0)\n\
    \  (= (modulo n 70) 0)\n  (= (modulo n 72) 0)\n  (= (modulo n 74) 0)\n  (= (modulo\
    \ n 76) 0)\n  (= (modulo n 78) 0)\n  (= (modulo n 80) 0)\n  (= (modulo n 82) 0)\n\
    \  (= (modulo n 84) 0)\n  (= (modulo n 86) 0)\n  (= (modulo n 88) 0)\n  (= (modulo\
    \ n 90) 0)\n  (= (modulo n 92) 0)\n  (= (modulo n 94) 0)\n  (= (modulo n 96) 0)\n\
    \  (= (modulo n 98) 0)\n  (= (modulo n 100) 0)\n  (= (modulo n 102) 0)\n  (= (modulo\
    \ n 104", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo (+ n 2) 4) (modulo (+ n 2) 4)))\n", '  (=
    (modulo n 2) 0))', "  (= (modulo (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3)\
    \ 4) (modulo (+ n 4) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n",
  "  (= (modulo n 4) (modulo (+ n 1) 4)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ (+ n 1) 4) (modulo (+ n 2) 4) (modulo (+ n 3) 4) (modulo (+ n 4) 4)))\n", " \
    \ (= (modulo n 4) (modulo n 2)))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo\
    \ n 4) 0))\n", "  (= (modulo n 4) 0))\n", "  (= (modulo n 4) (modulo n 2)))\n",
  "  (= (modulo n 4) 0))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

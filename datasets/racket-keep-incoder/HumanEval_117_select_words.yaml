name: HumanEval_117_select_words
language: racket
prompt: "#lang racket\n\n;; Given a string s and a natural number n, you have been\
  \ tasked to implement \n;; a function that returns a list of all words from string\
  \ s that contain exactly \n;; n consonants, in order these words appear in the string\
  \ s.\n;; If the string s is empty then the function should return an empty list.\n\
  ;; Note: you may assume the input string contains only letters and spaces.\n;; Examples:\n\
  ;; select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n;; select_words(\"\
  Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n;; select_words(\"simple\
  \ white space\", 2) ==> []\n;; select_words(\"Hello world\", 4) ==> [\"world\"]\n\
  ;; select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n(define (select_words s n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate select_words))\n\
  \    (check-equal? (candidate \"Mary had a little lamb\" 4) (list \"little\"))\n\
  \    (check-equal? (candidate \"Mary had a little lamb\" 3) (list \"Mary\" \"lamb\"\
  ))\n    (check-equal? (candidate \"simple white space\" 2) (list ))\n    (check-equal?\
  \ (candidate \"Hello world\" 4) (list \"world\"))\n    (check-equal? (candidate\
  \ \"Uncle sam\" 3) (list \"Uncle\"))\n    (check-equal? (candidate \"\" 4) (list\
  \ ))\n    (check-equal? (candidate \"a b c d e f\" 1) (list \"b\" \"c\" \"d\" \"\
  f\"))\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? s) (empty-list)] \n    [(= n 0) (empty-list)]\
    \ \n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else\
    \ (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (substring\
    \ s 0 (- (length s) n)) (select_words (substring s n) (- n 1))) ]))\n", "  (cond\n\
    \    [(empty? s) (list)]\n    [(= n 0) (list)]\n    [(= n 1) (cons (first s) (select_words\
    \ (rest s) 0))]\n    [else (cons (first s)\n                (select_words (rest\
    \ s)\n                            (sub1 n)))]))\n", "  (cond\n    [(empty? s)\
    \ (list)]\n    [(= n 0) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons\
    \ (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s)\
    \ '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (substring\
    \ s 0 (- (length s) n)) (select_words (substring s n) (- n 1)))]))\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) n) (cons s empty)]\n\
    \    [else (cons (substring s 0 (- n 1)) (select_words (substring s (+ n 1) (length\
    \ s))))]\n  ))\n", "  (cond\n    [(empty? s) (list)]\n    [(= 0 (string-length\
    \ s)) (list)]\n    [(= n (string-length s)) (list)]\n    [else (cons (substring\
    \ s 0 (- n 1)) (select_words (substring s (+ n 1) (length s)))]))) \n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first\
    \ s) (select_words (rest s) (- n 1))))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= (length s) n) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) 1)\
    \ (cons (first s) (select_words (rest s) n))]\n    [else (cons (first s)\n   \
    \             (select_words (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s)\
    \ '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ (cons (first s) (select_words (rest s) n))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(= 0 (length\
    \ s)) (list)]\n    [(= 1 (length s)) (list '())]\n    [else (cons (first s)\n\
    \                (select_words (rest s) n))]\n  ))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(equal? (length s) n) '()]\n    [(equal? (length s) 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s) n))]\n    ))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s)\
    \ (select_words (rest s) 0))]\n    [else (cons (first s)\n                (select_words\
    \ (rest s)\n                            (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(equal? (length s) n) (cons (car s) (select_words (cdr s) n))]\n\
    \    [else (cons (car s)\n                (select_words (cdr s) n))]\n  ))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s)\
    \ (select_words (rest s) 0))]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) n) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ n 0) '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n\
    \    [(empty? s) (list)]\n    [(equal? (length s) n) (list s)]\n    [else (cons\
    \ (first s) (select_words (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s) (list)]\n\
    \    [(= (length s) n) (list s)]\n    [else (cons (first s) (select_words (rest\
    \ s) n))]\n  ))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ n 1) (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first s)\n\
    \                (select_words (rest s)\n                            (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (car s) (select_words\
    \ (cdr s) 0))]\n    [else (cons (car s) (select_words (cdr s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else\
    \ (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) (list '())]\n    [(= (length s) n) (list s)]\n    [(= (length s) 0) (list\
    \ '())]\n    [(= (length s) 1) (list '())]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else (cons (first s)\n      \
    \          (select_words (rest s)\n                            (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ (length s) n) s]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n   \
    \ [(= n 1) (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= n 1) (cons (first s) (select_words (rest s) 0))]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [else (cons (first s)\n \
    \               (select_words (rest s)\n                             (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(equal? (length s) n) (list s)]\n    [else\
    \ (cons (first s)\n                (select_words (rest s) n))]\n  )\n)\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list s)]\n   \
    \ [else (cons (first s)\n                (select_words (rest s)\n            \
    \                (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list empty)]\n \
    \   [(equal? (length s) 0) (list empty)]\n    [(equal? (length s) n) (list s)]\n\
    \    [else (cons (first s)\n                (select_words (rest s) n))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= n 1) (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (empty)]\n\
    \    [(= 0 (string-length s)) '()]\n    [(= n 0) '()]\n    [(= (string-length\
    \ s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first s)\n\
    \                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) (list)]\n    [(= 0 (string-length s)) (list)]\n    [(= n (string-length s))\
    \ (list)]\n    [else (cons (first s)\n                (select_words (rest s)\n\
    \                             (- n (string-length s))))]\n    )\n  )\n)\n", " \
    \ (cond\n    [(empty? s) (list)]\n    [(= 0 (string-length s)) empty]\n    [(=\
    \ n (string-length s)) empty]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= (length s) n) (cons s (select_words (rest\
    \ s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(equal? (length (first s)) n) (cons (first\
    \ s) (select_words (rest s) n))]\n    [else (cons (first s) (select_words (rest\
    \ s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) 0) '()]\n\
    \    [(equal? (length s) n) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(= 0 (string-length\
    \ s)) (list)]\n    [(= n (string-length s)) (list)]\n    [else (cons (substring\
    \ s 0 (- n 1)) (select_words (substring s (+ n 1) (- n 1))))]\n  )\n)\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else\
    \ (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= (length s) n) '()]\n    [(= (length s)\
    \ 0) '()]\n    [(= n 0) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(= n 0) (list)]\n\
    \    [(= (length s) 0) (list)]\n    [else (cons (substring s 0 (- (length s) n))\
    \ (select_words (substring s n (- (length s) n)) (- n 1)))]))\n", "  (cond\n \
    \   [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length\
    \ s) n) '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) (list)]\n    [(equal? (length s) n) (list s)]\n    [else (cons (first s)\n\
    \                (select_words (rest s) n))]\n  ))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s) (select_words (rest\
    \ s) 0))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s)\n         \
    \                    (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(=\
    \ n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first s)\n         \
    \       (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n \
    \   [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s)\
    \ (select_words (rest s) 0))]\n    [else (cons (first s)\n                (select_words\
    \ (rest s)\n                            (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= (length s) n) (cons (car s) (select_words (cdr s) n))]\n  \
    \  [else (cons (car s)\n                (select_words (cdr s) n))]\n  ))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) n) s]\n    [else (cons (first\
    \ s) (select_words (rest s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal?\
    \ (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first\
    \ s) (select_words (rest s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal?\
    \ (length s) 0) '()]\n    [(equal? (length s) n) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) n))]))\n", "  (cond\n    [(empty? s) (list)]\n   \
    \ [(equal? (length s) n) (list s)]\n    [else (cons (first s)\n              \
    \  (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) (list)]\n\
    \    [(equal? (length s) n) (list s)]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= n 1) (cons (first s) (select_words (rest\
    \ s) 0))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(equal? (length s) n) (list s)]\n    [(equal?\
    \ (length s) 0) (list)]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(equal? (length\
    \ s) n) (list s)]\n    [else (append (select_words (substring s 0 (- (length s)\
    \ n)) n) (select_words (substring s n (- (length s) n)) n))]))\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ (length s) n) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s)\n                            (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) (list)]\n    [(equal? (length s) 0) (list)]\n    [(equal? (length s) n) (list)]\n\
    \    [else (cons (first s)\n                (select_words (rest s) n))]\n  ))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s)\n         \
    \                    (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n   \
    \ [(= (length s) 0) (list)]\n    [(= (length s) n) (list)]\n    [else (cons (first\
    \ s) (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (first s)\n  \
    \              (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s) (select_words (rest\
    \ s) 0))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s)\
    \ (select_words (rest s) 0))]\n    [else (cons (first s)\n                (select_words\
    \ (rest s)\n                            (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ (cons (first s) (select_words (rest s) n))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length\
    \ s) 0) '()]\n    [(equal? (length s) n) '()]\n    [else (cons (first s)\n   \
    \             (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s)\
    \ (list)]\n    [(= 0 (length s)) (list)]\n    [(= 1 (length s)) (list s)]\n  \
    \  [else (cons (first s)\n                (select_words (rest s) n))]\n    )\n\
    \  )\n)\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) n) s]\n  \
    \  [(equal? (length s) 0) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length s) 0)\
    \ (list)]\n    [(= n 0) (list)]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length\
    \ s) 0) '()]\n    [(equal? (length s) n) '()]\n    [else (cons (first s)\n   \
    \             (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s)\
    \ '()]\n    [(= n 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else\
    \ (cons (first s)\n                (select_words (rest s)\n                  \
    \           (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) n) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) (empty-list)] \n    [(= (length\
    \ s) n) (cons (car s) (empty-list))] \n    [(= (length s) 0) (empty-list)] \n\
    \    [else (cons (car s) (select_words (cdr s) n))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= n 0) '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= (length s) n) '()]\n    [(= (length s) 0)\
    \ '()]\n    [(= n 0) '()]\n    [else (cons (first s) (select_words (rest s) (sub1\
    \ n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) n) '()]\n   \
    \ [(= (length s) 0) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(equal? (length\
    \ s) n) (list s)]\n    [else (cons (first s) (select_words (rest s) n))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else\
    \ (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) (list '())]\n    [(equal? (length s) 0) (list '())]\n\
    \    [(equal? (length s) n) (list '())]\n    [(equal? (length s) (- n 1)) (cons\
    \ (first s) (select_words (rest s) n))]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length\
    \ s) 0) (list)]\n    [(= (length s) n) (list)]\n    [else (cons (first s)\n  \
    \              (select_words (rest s) n))]\n    )\n  )\n)\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(equal? (length s) n) '()]\n    [(equal? (length s) 0) '()]\n\
    \    [else (cons (first s) (select_words (rest s) n))]\n  )\n)\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first\
    \ s) (select_words (rest s) (- n 1)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) 0) '()]\n    [(equal? (length\
    \ s) n) '()]\n    [else (cons (first s)\n                (select_words (rest s)\n\
    \                             (- n (length s))))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) n) (cons (car s) (select_words\
    \ (cdr s) n))]\n    [else (cons (car s) (select_words (cdr s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list '())]\n    [(= (length s) n) (list s)]\n    [(=\
    \ (length s) 0) (list '())]\n    [else (cons (first s) (select_words (rest s)\
    \ n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list\
    \ s)]\n    [else (cons (first s)\n                (select_words (rest s) (sub1\
    \ n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) 0) '()]\n\
    \    [(equal? (length s) n) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= n 1) (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n\
    \    [(= (length s) n) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons\
    \ (first s)\n                (select_words (rest s) n))]\n    )\n  )\n)\n", " \
    \ (cond\n    [(empty? s) (list '())]\n    [(equal? (length s) n) (list s)]\n \
    \   [(equal? (length s) 0) (list '())]\n    [else (cons (first s)\n          \
    \      (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first s)\n  \
    \              (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n) (cons (first\
    \ s) (select_words (rest s) n))]\n    [else (cons (first s) (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n   \
    \ [(= n 1) (list s)]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length\
    \ s) n) (cons (car s) (select_words (cdr s) n))]\n    [else (cons (car s)\n  \
    \              (select_words (cdr s) n))]\n  ))\n", "  (cond\n    [(empty? s)\
    \ (list empty)]\n    [(equal? (length s) 0) (list empty)]\n    [(equal? (length\
    \ s) n) (list s)]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1)\
    \ (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= n 1) (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first\
    \ s)\n                (select_words (rest s)\n                             (sub1\
    \ n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length\
    \ s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s)\n        \
    \        (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(equal? (length s) 0) '()]\n    [(equal? (length s) n) '()]\n    [else (cons\
    \ (first s)\n                (select_words (rest s) n))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (first s)\
    \ (select_words (rest s) 0))]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(equal? (length\
    \ s) n) (list s)]\n    [else (cons (first s) (select_words (rest s) n))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= 0 (string-length s)) (list)]\n    [(=\
    \ n (string-length s)) (list)]\n    [else (cons (substring s 0 (string-length\
    \ s) (+ 0 (string-length s))) \n                (select_words (substring s (+\
    \ 0 (string-length s)) \n                                 (+ 0 (string-length\
    \ s))) n)]\n  )\n)\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length s) 0)\
    \ (list)]\n    [(= (length s) n) (list)]\n    [else (cons (first s)\n        \
    \        (select_words (rest s) n))]\n    )\n  )\n)\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else (cons (first s)\n\
    \                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n\
    \    [(= n 0) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons (first s)\
    \ (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n  \
    \  [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n   \
    \ [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n  \
    \  [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length\
    \ s) n) '()]\n    [else (cons (first s)\n                (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= n 0) '()]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n   \
    \ [(= (length s) 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= (length s) 0) (list)]\n    [(= n 0) (list)]\n\
    \    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(equal? (length s) n) s]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length s)\
    \ n) s]\n    [else (cons (first s)\n                (select_words (rest s) n))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (- n 1)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ '()]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (- n 1)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= n 1) (cons (car s) (select_words (cdr s)\
    \ 0))]\n    [else (cons (car s)\n                (select_words (cdr s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= n 0) (list)]\n    [(= n 1) (cons (first\
    \ s) (select_words (rest s) 0))]\n    [else (cons (first s) (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n   \
    \ [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s)\
    \ (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n  \
    \  [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n) s]\n    [else\
    \ (cons (first s)\n                (select_words (rest s)\n                  \
    \           (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length\
    \ s) n) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length s)\
    \ n) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n\
    \    [(equal? (length s) n) (list s)]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? n (length\
    \ s)) s]\n    [else (cons (first s)\n                (select_words (rest s) n))]\n\
    \  )\n)\n", "  (cond\n    [(empty? s) (list)]\n    [(= 0 (string-length s)) (list)]\n\
    \    [(= n (string-length s)) (list)]\n    [else (cons (substring s 0 (- (string-length\
    \ s) n)) (select_words (substring s (+ 0 (string-length s) n) n))]))) \n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else\
    \ (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ (cons s (select_words (rest s) n))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) n) s]\n    [else (cons (first s)\n                (select_words\
    \ (rest s)\n                             (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) (list)]\n    [(= (length s) n) (list)]\n    [(= (length s) 0) (list)]\n \
    \   [else (cons (first s) (select_words (rest s) n))]\n  )\n)\n", "  (cond\n \
    \   [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [else\
    \ (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n", " \
    \ (cond\n    [(empty? s) (list '())]\n    [(equal? (length s) n) (list s)]\n \
    \   [else (cons (first s)\n                (select_words (rest s) n))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list)]\n    [(equal? (length\
    \ s) n) (list s)]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) n))]\n    ))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s)\n\
    \                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ (cons s s)]\n    [else (cons (substring s 0 (- n 1)) (select_words (substring\
    \ s (+ n 1) (length s))))]\n  ))\n", "  (cond\n    [(empty? s) '()]\n    [(= n\
    \ 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons\
    \ (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s)\
    \ '()]\n    [(= n 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) (list\
    \ '())]\n    [(equal? (length s) n) (list s)]\n    [(equal? (length s) 0) (list\
    \ '())]\n    [else (cons (first s) (select_words (rest s) n))]\n  )\n)\n", " \
    \ (cond\n    [(empty? s) (list)]\n    [(= n 0) (list)]\n    [else (cons (first\
    \ s)\n                (select_words (rest s)\n                             (sub1\
    \ n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length\
    \ s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s)\
    \ n) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) n)\
    \ (cons s (select_words (rest s) n))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s) (select_words (rest s)\
    \ (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) n) '()]\n\
    \    [(= (length s) 0) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) n))]\n  ))\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length s)\
    \ n) (list)]\n    [(= (length s) 0) (list)]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s) (list)]\n    [(= (length\
    \ s) n) (list)]\n    [else (cons (first s) (select_words (rest s) n))]))\n", " \
    \ (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) '()]\n    [else (cons (first s)\n                (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first\
    \ s)\n                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= (length s) 0) '()]\n    [(= n 0) '()]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(equal? (length s) 0) '()]\n    [(equal? (length s) n) '()]\n    [else (cons\
    \ (first s) (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty? s)\
    \ (list)]\n    [(= (length s) n) (list)]\n    [else (cons (first s)\n        \
    \        (select_words (rest s) n))]))\n", "  (cond\n    [(empty? s) '()]\n  \
    \  [(= n 0) '()]\n    [(= n 1) (cons (car s) (select_words (cdr s) 0))]\n    [else\
    \ (cons (car s)\n                (select_words (cdr s)\n                     \
    \       (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s) n)\
    \ '()]\n    [(= (length s) 0) '()]\n    [else (cons (first s) (select_words (rest\
    \ s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length\
    \ s) 0) '()]\n    [(= (length s) n) (cons (first s) (select_words (rest s) n))]\n\
    \    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n\
    \    [(empty? s) (list)]\n    [(= 0 (string-length s)) empty]\n    [(= n 0) (list)]\n\
    \    [else (cons (substring s 0 (string-length s) (- n 1)) \n                (select_words\
    \ (substring s (+ 0 (string-length s) (- n 1)) n))]))) \n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(equal? (length s) 0) '()]\n    [(equal? (length s) n) '()]\n\
    \    [else (cons (first s)\n                (select_words (rest s) n))]\n  ))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= (length s) 0) (list)]\n    [(= n 0) (list)]\n\
    \    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n\
    \    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n    [(=\
    \ (length s) n) (cons (first s) (select_words (rest s) n))]\n    [else (cons (first\
    \ s) (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n\
    \    [(= n 0) '()]\n    [(= n 1) (list s)]\n    [else (cons (first s)\n      \
    \          (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s)\
    \ (list)]\n    [(= (length s) n) (list)]\n    [(= (length s) 0) (list)]\n    [else\
    \ (cons (first s) (select_words (rest s) n))]\n  )\n)\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(equal? (length s) n) s]\n    [else (cons (first s) (select_words\
    \ (rest s) n))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= (length s)\
    \ n) '()]\n    [(= (length s) 0) '()]\n    [(= (length s) 1) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) n))]))\n", " \
    \ (cond\n    [(empty? s) (list)]\n    [(= 0 (length s)) (list)]\n    [(= n (length\
    \ s)) (list)]\n    [else (cons (first s)\n                (select_words (rest\
    \ s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n   \
    \ [(= (length s) 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= n 0) (list)]\n    [(= n 1) (list s)]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) (list)]\n    [(= (length s) 0) (list)]\n    [(= n 0) (list)]\n\
    \    [else (cons (first s)\n                (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [else (cons (substring s 0 (- (length s) n)) (select_words (substring s n)\
    \ (- n 1))) ]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(=\
    \ (length s) 0) '()]\n    [(= (length s) n) '()]\n    [else (cons (first s)\n\
    \                (select_words (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty?\
    \ s) '()]\n    [(= (length s) n) '()]\n    [(= n 0) '()]\n    [(= (length s) 1)\
    \ (cons (first s) (select_words (rest s) 0))]\n    [else (cons (first s) (select_words\
    \ (rest s) (sub1 n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n\
    \    [(= (length s) 0) '()]\n    [(= (length s) n) (cons (first s) (select_words\
    \ (rest s) n))]\n    [else (cons (first s) (select_words (rest s) (sub1 n)))]))\n",
  "  (cond\n    [(empty? s) '()]\n    [(= n 0) '()]\n    [(= (length s) 0) '()]\n\
    \    [(= (length s) n) s]\n    [else (cons (first s) (select_words (rest s) (sub1\
    \ n)))]))\n", "  (cond\n    [(empty? s) '()]\n    [(equal? (length s) n) '()]\n\
    \    [(equal? (length s) 0) '()]\n    [else (cons (first s) (select_words (rest\
    \ s) n))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

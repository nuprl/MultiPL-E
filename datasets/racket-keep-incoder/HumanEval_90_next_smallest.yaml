name: HumanEval_90_next_smallest
language: racket
prompt: "#lang racket\n\n;; You are given a list of integers.\n;; Write a function\
  \ next_smallest() that returns the 2nd smallest element of the list.\n;; Return\
  \ None if there is no such element.\n;; next_smallest([1, 2, 3, 4, 5]) == 2\n;;\
  \ next_smallest([5, 1, 4, 3, 2]) == 2\n;; next_smallest([]) == None\n;; next_smallest([1,\
  \ 1]) == None\n(define (next_smallest lst)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate next_smallest))\n\
  \    (check-equal? (candidate (list 1 2 3 4 5)) 2)\n    (check-equal? (candidate\
  \ (list 5 1 4 3 2)) 2)\n    (check-equal? (candidate (list )) #f)\n    (check-equal?\
  \ (candidate (list 1 1)) #f)\n    (check-equal? (candidate (list 1 1 1 1 0)) 1)\n\
  \    (check-equal? (candidate (list 1 1)) #f)\n    (check-equal? (candidate (list\
  \ -35 34 12 -45)) -35)\n))\n\n(test-humaneval)"
completions: ["  (cond [(empty? lst) None]\n        [(< (first lst) (first lst)) (first\
    \ lst)]\n        [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond [(empty? lst) None]\n        [(< (first lst) (second lst)) (second lst)]\n\
    \        [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst))\
    \ (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n", "  (cond [(empty?\
    \ lst) None]\n        [(< (first lst) (first lst)) (first lst)]\n        [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst)) (cadr lst)]\n   \
    \     [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (second lst)) (second lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst))\
    \ (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (second lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< 1 (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(null? (rest lst)) (first\
    \ lst)]\n    [else (if (< (first lst) (second lst))\n              (second lst)\n\
    \              (first lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst)) (cadr lst)]\n   \
    \     [else (next_smallest (cdr lst))]))\n", "  (cond [(null? lst) None]\n   \
    \     [(< (car lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest (cdr\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (second lst)) (second lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond [(null? lst)\
    \ None]\n        [(< (car lst) (car (cdr lst)))\n         (car lst)]\n       \
    \ [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n \
    \   [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< lst (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond [(empty? lst) None]\n        [(< (first lst) (first lst)) (first lst)]\n\
    \        [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond [(null? lst)\
    \ None]\n        [(< (car lst) (car (cdr lst)))\n         (car lst)]\n       \
    \ [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n \
    \   [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (second lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< 1 (car lst)) (next_smallest (cdr lst))]\n\
    \    [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< 1 (car lst)) (next_smallest (cdr lst))]\n   \
    \ [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n \
    \   [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< 1 (car lst)) (car lst)]\n    [else (next_smallest\
    \ (cdr lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond [(null?\
    \ lst) None]\n        [(< (car lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest\
    \ (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< 1 (car lst)) (next_smallest\
    \ (cdr lst))]\n    [else (car lst)]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< 1 (car lst)) (next_smallest (cdr lst))]\n    [else (car lst)]))\n", " \
    \ (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< 1 (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< 1 (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond [(empty? lst) None]\n        [(< (first lst) (first lst))\
    \ (first lst)]\n        [else (next_smallest (rest lst))]))\n", "  (cond\n   \
    \ [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond [(null? lst) None]\n   \
    \     [(< (car lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest (cdr\
    \ lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst))\
    \ (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(null?\
    \ (rest lst)) (first lst)]\n    [else (if (< (first lst) (next_smallest (rest\
    \ lst)))\n              (first lst)\n              (next_smallest (rest lst)))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond [(null? lst) None]\n   \
    \     [(< (car lst) (car (cdr lst)))\n         (car lst)]\n        [else (next_smallest\
    \ (cdr lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (second lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(null? (rest lst))\
    \ (first lst)]\n    [else (if (< (first lst) (second lst))\n              (first\
    \ lst)\n              (second lst))]))\n", "  (cond\n    [(empty? lst) empty]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< 1 (first lst)) (first\
    \ lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< 1 (car lst)) (next_smallest (cdr lst))]\n   \
    \ [else (next_smallest (cdr lst))]\n  )\n)\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< lst (first lst)) (first\
    \ lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst)\
    \ None]\n    [(< 1 (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n\
    \    [(< (first lst) (rest lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(null? (rest lst)) (first\
    \ lst)]\n    [else (if (< (first lst) (next_smallest (rest lst)))\n          \
    \    (first lst)\n              (next_smallest (rest lst)))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond [(null? lst) None]\n   \
    \     [(< (car lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest (cdr\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond [(empty? lst) None]\n        [(< (first lst) (first lst))\
    \ (first lst)]\n        [else (next_smallest (rest lst))]))\n", "  (cond\n   \
    \ [(empty? lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< lst (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond [(null?\
    \ lst) None]\n        [(< (car lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest\
    \ (cdr lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(null? (rest lst))\
    \ (first lst)]\n    [else (if (< (first lst) (second lst))\n              (second\
    \ lst)\n              (first lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car lst) (cadr\
    \ lst)) (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) empty]\n    [(null? (rest lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ 1 (car lst)) (car lst)]\n    [else (next_smallest (cdr lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (second lst)) (second lst)]\n  \
    \  [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car lst) (cadr lst))\
    \ (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) empty]\n    [(< 1 (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car\
    \ lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond [(null? lst) None]\n        [(< (car\
    \ lst) (cadr lst)) (cadr lst)]\n        [else (next_smallest (cdr lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second\
    \ lst)) (second lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n\
    \    [(> (first lst) (second lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) empty]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (second lst)) (second lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) empty]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond [(empty? lst) None]\n        [(< (first lst) (second\
    \ lst)) (second lst)]\n        [else (next_smallest (rest lst))]))\n", "  (cond\n\
    \    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(<\
    \ (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n",
  "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n\
    \    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n\
    \    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest (rest\
    \ lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first lst))\
    \ (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n    [(empty?\
    \ lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else (next_smallest\
    \ (rest lst))]))\n", "  (cond\n    [(empty? lst) None]\n    [(< (first lst) (first\
    \ lst)) (first lst)]\n    [else (next_smallest (rest lst))]))\n", "  (cond\n \
    \   [(empty? lst) None]\n    [(< (first lst) (first lst)) (first lst)]\n    [else\
    \ (next_smallest (rest lst))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

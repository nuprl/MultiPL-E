name: HumanEval_72_will_it_fly
language: racket
prompt: "#lang racket\n\n;; Write a function that returns True if the object q will\
  \ fly, and False otherwise.\n;; The object q will fly if it's balanced (it is a\
  \ palindromic list) and the sum of its elements is less than or equal the maximum\
  \ possible weight w.\n;; Example:\n;; will_it_fly([1, 2], 5) \u279E False \n;; #\
  \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n;; will_it_fly([3,\
  \ 2, 3], 1) \u279E False\n;; # it's balanced, but 3+2+3 is more than the maximum\
  \ possible weight.\n;; will_it_fly([3, 2, 3], 9) \u279E True\n;; # 3+2+3 is less\
  \ than the maximum possible weight, and it's balanced.\n;; will_it_fly([3], 5) \u279E\
  \ True\n;; # 3 is less than the maximum possible weight, and it's balanced.\n(define\
  \ (will_it_fly q w)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate will_it_fly))\n\
  \    (check-equal? (candidate (list 3 2 3) 9) #t)\n    (check-equal? (candidate\
  \ (list 1 2) 5) #f)\n    (check-equal? (candidate (list 3) 5) #t)\n    (check-equal?\
  \ (candidate (list 3 2 3) 1) #f)\n    (check-equal? (candidate (list 1 2 3) 6) #f)\n\
  \    (check-equal? (candidate (list 5) 5) #t)\n))\n\n(test-humaneval)"
completions: ["  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n\
    \        ))\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [(< (sum (rest q)) w) false]\n    [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (< (+ (first q) (second q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(equal? (first q) (reverse (first q))) true]\n       \
    \ [else (< (+ (first q) (first q)) w) false]\n  )\n)\n", "  (cond [(empty? q)\
    \ true]\n        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum\
    \ (rest q)) w) false]\n        [else (true)]\n  )\n)\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (reverse (first q))))\n         (< (+ (first q) (first q))\
    \ w)]\n        [else true]))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n        ))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (and (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else true]))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (map weight\
    \ q)) w) false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (< (+ (first q) (second q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) false]\n\
    \    [(< (sum (rest q)) w) false]\n    [else (true)]\n  )\n)\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(null? q) false]\n\
    \        [(equal? (car q) (cadr q)) (< (sum (reverse q)) w)]\n        [else (will_it_fly\
    \ (cdr q) (+ w 1))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]))\n",
  "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q)) (< (car q) w)]\n\
    \        [else (< (cadr q) w) (will_it_fly (cdr q) w)]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty? q) true]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (true)]\n))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (+ (first q)\
    \ (second q)) w) false]\n  )\n)\n", "  (and (list? q)\n       (palindrome? q)\n\
    \       (<= (sum-weight-of q) w)))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [(equal? (first q) (reverse (reverse\
    \ (first q))))\n         (< (+ (first q) (first q)) w) false]\n        [else false]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (sum\
    \ (rest q)) w) false]))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [(equal? (first q) (reverse (reverse\
    \ (first q))))\n         (< (+ (first q) (first q)) w)]\n        [else false]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (map weight q)) w) false]))\n", "  (cond\n    [(empty? q) true]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (+ (first q) (second q)) w) false]\n  )\n)\n", "  (cond\n    [(empty?\
    \ q) true]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (rest q)) w) false]\n  ))\n", "  (cond\n    [(empty? q) true]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (sum\
    \ (rest q)) w) false]\n        ))\n", "  (cond [(empty? q) true]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n\
    \        [else (will_it_fly (rest q) w)]))\n", "  (cond [(empty? q) false]\n \
    \       [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (+ (first q) (first q)) w) will_it_fly\
    \ (drop 1 q) w]))\n", "  (and (list? q)\n       (palindromic? q)\n       (<= (sum\
    \ (reverse q)) w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else\
    \ (will_it_fly (rest q) w)]\n        ))\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (<= (sum (reverse q)) w)))\n", "  (cond [(empty? q) false]\n    \
    \    [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest q))\
    \ w) false]\n        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w (will_it_fly\
    \ (rest q) w))]\n  )\n)\n", "  (cond [(empty? q) true]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n     \
    \   [else (true)]\n        ))\n", "  (cond [(empty? q) true]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else (true)]\n))\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w) false]\n\
    \  )\n)\n", "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q)) (<\
    \ (car q) w)]\n        [else (will_it_fly (cdr q) (+ w 1))]))\n", "  (cond\n \
    \   [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n  \
    \  [else (< (+ (first q) (second q)) w) false]\n  ))\n", "  (cond [(empty? q)\
    \ true]\n        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum\
    \ (rest q)) w) false]\n        [else (true)]\n        ))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (length (first q)) w) false]\n        [else (< (sum (first q)) w) true]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond ((null?\
    \ q) false)\n        ((palindrome q) true)\n        ((< (sum (reverse q)) w) false)\n\
    \        (else (will_it_fly (reverse q) w))))\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (reverse (first q))))\n         (< (sum (rest q)) w)]\n        [else\
    \ (or (will_it_fly (rest q) w) (will_it_fly (reverse (rest q)) w))]))\n", "  (cond\
    \ [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]\n\
    \        ))\n", "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q))\
    \ (< (car q) w)]\n        [else (will_it_fly (cdr q) (+ w car q))]))\n", "  (cond\
    \ [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) false]\n        ))\n", "  (cond [(empty? q) false]\n      \
    \  [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n\
    \        ))\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first q) (reverse\
    \ (first q))) false]\n    [else (< (sum (map weight q)) w) false]\n  )\n)\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (map weight q)) w) false]\n  )\n)\n", "  (and (list? q)\n \
    \      (palindrome? q)\n       (< (length q) (- w (sum (reverse q))))))\n", " \
    \ (cond [(null? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) true]\n        [(equal? (first q) (reverse (reverse (first q))))\n\
    \         (< (+ (first q) (second q)) w)]\n        [else false]))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else true]))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [else (< (sum (map weight q)) w) will_it_fly\
    \ (tail q) w]))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (< (+ (first q) (second q)) w) will_it_fly (tail q)])\n)\n", " \
    \ (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  ))\n", "  (cond\n    [(empty? q) true]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) false]\n  )\n)\n", "  (cond [(empty? q) true]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [(equal? (first q) (reverse (first q)))\
    \ false]\n        [else (< (+ (first q) (first q)) w) will_it_fly (drop q 1)]\n\
    ))\n", "  (and (list? q)\n       (palindrome? q)\n       (<= (sum (reverse q))\
    \ w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (reverse (first q))))\n         (< (+ (first\
    \ q) (second q)) w)]\n        [else (< (+ (first q) (second q)) w) (will_it_fly\
    \ (rest q) w)]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n",
  "  (and (list? q) (list? (reverse q))\n       (<= (length q) w)\n       (= (sum\
    \ (reverse q)) w)))\n", "  (cond [(null? q) false]\n        [(null? (cdr q)) true]\n\
    \        [(< (car q) w) false]\n        [(< (car q) (max w (car q)))\n       \
    \  (will_it_fly (cdr q) (max w (car q)))]\n        [else (will_it_fly (cdr q)\
    \ w)]\n        ))\n", "  (and (list? q)\n       (palindromic? q)\n       (<= (sum\
    \ (reverse q)) w)))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) false]\n    [(< (sum (first q)) w) false]\n    [else\
    \ (true)]\n  )\n)\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (and (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n",
  "  (cond [(null? q) false]\n        [(equal? (car q) (cadr q)) (< (car q) w)]\n\
    \        [else (< (car q) (+ (car q) (cadr q)))]))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (rest q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else true]))\n", "  (and (list? q)\n       (palindrome? q)\n       (<=\
    \ (sum-weight q) w)))\n", "  (cond [(empty? q) true]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first q)))\
    \ false]\n        [else (< (+ (first q) (first q)) w) false]\n        ))\n", " \
    \ (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) false]\n        ))\n", "  (cond\n    [(empty? q) false]\n \
    \   [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) false]))\n", "  (and (list? q)\n       (palindromic? q)\n       (<= (sum\
    \ (reverse q)) w)))\n", "  (cond [(empty? q) true]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else\
    \ (true)]\n        ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) false]\n    [(equal? (first q) (reverse (first q)))\
    \ true]\n    [else (< (+ (first q) (second q)) w) will_it_fly (tail q)]\n  )\n\
    )\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]\n        ))\n", "  (cond [(empty? q) true]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [(equal? (first q) (reverse (first q)))\
    \ false]\n        [else (< (sum (map weight q)) w) false]))\n", "  (cond\n   \
    \ [(empty? q) true]\n    [(equal? (first q) last) true]\n    [(equal? (first q)\
    \ (reverse last)) true]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else false]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q)\
    \ (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (second q)) w) false]\n        ))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) false]\n  ))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [(equal? (first q) (reverse (first q)))\
    \ true]\n        [else (< (+ (first q) (first q)) w) false]\n))\n", "  (cond [(empty?\
    \ q) false]\n        [(equal? (first q) (reverse (first q))) true]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n", "  (cond\
    \ [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) true]\n \
    \       [(equal? (first q) (reverse (reverse (first q))))\n         (< (+ (first\
    \ q) (first q)) w)]\n        [else false]))\n", "  (and (list? q)\n       (palindromic?\
    \ q)\n       (< (length q) w)\n       (< (apply + q) w)))\n", "  (cond\n    [(empty?\
    \ q) true]\n    [(equal? (first q) (reverse (first q))) false]\n    [(< (sum (rest\
    \ q)) w) false]\n    [else (true)]\n  )\n)\n", "  (cond\n    [(empty? q) true]\n\
    \    [(equal? (first q) (reverse (first q))) false]\n    [else (< (sum (map weight\
    \ q)) w) false]\n  ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n\
    )\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(equal? (first q) (reverse (reverse (first q))))\n   \
    \      (< (+ (first q) (first q)) w)]\n        [else (< (+ (first q) (first q))\
    \ w) (will_it_fly (rest q) w)]\n  )\n)\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest q))\
    \ w) false]\n        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (+ (first q) (second q))\
    \ w) false]\n  ))\n", "  (cond ((null? q) false)\n        ((palindrome q) true)\n\
    \        ((< (sum (reverse q)) w) false)\n        (else (will_it_fly (reverse\
    \ q) w))))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n",
  "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n        ))\n", " \
    \ (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (will_it_fly (rest q) w)]))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [(equal? (first q) (reverse (reverse (first q))))\n         (< (+ (first\
    \ q) (first q)) w)]\n        [else false]))\n", "  (cond [(empty? q) true]\n \
    \       [(equal? (first q) (reverse (first q))) true]\n        [(equal? (first\
    \ q) (reverse (reverse (first q))))\n         (< (+ (first q) (second q)) w)]\n\
    \        [else false]))\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first\
    \ q) (reverse (first q))) false]\n    [else (< (+ (first q) (second q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n \
    \       ))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (map weight q)) w) false]\n  )\n)\n", "  (and (list? q)\n \
    \      (palindromic? q)\n       (<= (length q) w)\n       (<= (apply + q) w)))\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond [(null?\
    \ q) false]\n        [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else\
    \ (will_it_fly (cdr q) (+ w car q))]))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first q)\
    \ (reverse (reverse (first q))))\n         (< (sum (rest q)) w)]\n        [else\
    \ true]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(equal? (first q) (reverse (first q))) true]\n\
    \        [else (< (sum (rest q)) w) false]\n        ))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (length (first q)) w) false]\n        [else (< (+ (first q) (first q)) w) true]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  ))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) (will_it_fly (rest q) w)]\n  )\n)\n", "  (cond [(null? q) false]\n      \
    \  [(equal? (car q) (cadr q)) (< (sum (reverse q)) w)]\n        [else (or (will_it_fly\
    \ (cdr q) w) (will_it_fly (car q) w))]))\n", "  (cond [(empty? q) true]\n    \
    \    [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest q))\
    \ w) false]\n        [else (true)]\n        ))\n", "  (cond\n    [(empty? q) true]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (map weight\
    \ q)) w) false]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [(equal? (first q) (reverse (reverse (first\
    \ q))))\n         (< (+ (first q) (first q)) w)]\n        [else false]))\n", " \
    \ (cond\n    [(empty? q) true]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (map weight q)) w) false]\n  )\n)\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (and\
    \ (equal? (first q) (reverse (first q))) (< (sum (rest q)) w))]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond\n  \
    \  [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n   \
    \ [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond [(null? q) false]\n \
    \       [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else (< (car q) (+\
    \ (car q) w))]))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [(< (sum (rest q)) w) false]\n        [else (will_it_fly\
    \ (rest q) w)]))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (sum (rest q)) w) false]\n  )\n)\n", "  (cond\n    [(empty? q) true]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (map weight\
    \ q)) w) (will_it_fly (rest q) w)]\n  )\n)\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (rest q))\
    \ w) false]\n  ))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n        [else\
    \ (will_it_fly (rest q) w)]))\n", "  (cond ((null? q) false)\n        ((palindrome\
    \ q) true)\n        ((< (sum (reverse q)) w) true)\n        (else false)))\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n\
    \    [else (< (+ (first q) (second q)) w) false]\n  ))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]\n\
    \        ))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse\
    \ (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n\
    \        ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (+ (first q) (second q)) w) false]\n  )\n)\n",
  "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (+ (first q)\
    \ (first q)) w) false]\n  ))\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w) false]\n\
    \  )\n)\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first q) (reverse (first\
    \ q))) true]\n    [else (< (sum (rest q)) w) false]))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(equal?\
    \ (first q) (first q)) true]\n        [else (< (+ (first q) (first q)) w) will_it_fly\
    \ (drop q 1)])))\n", "  (cond [(null? q) true]\n        [(equal? (car q) (cadr\
    \ q)) (< (car q) w)]\n        [else false]))\n", "  (cond\n    [(empty? q) true]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (map weight\
    \ q)) w) false]\n  )\n)\n", "  (cond [(null? q) true]\n        [(equal? (car q)\
    \ (cadr q)) (< (car q) w)]\n        [else false]))\n", "  (cond [(empty? q) true]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [else (< (+ (first q) (first q)) w) false]\n\
    \        ))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (+ (first q) (second q)) w) false]\n  )\n)\n",
  "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) will_it_fly (drop q 1)]\n        ))\n", "  (cond [(empty? q)\
    \ false]\n        [(equal? (first q) (reverse (first q))) false]\n        [(<\
    \ (sum (rest q)) w) false]\n        [else true]))\n", "  (cond\n    [(empty? q)\
    \ false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (rest q)) w) false]\n  )\n)\n", "  (cond\n    [(empty? q) false]\n    [(equal?\
    \ (first q) (reverse (first q))) true]\n    [else (< (sum (rest q)) w) false]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(equal? (first q) (reverse (reverse (first q))))\n   \
    \      (< (+ (first q) (first q)) w)]\n        [else (< (+ (first q) (first q))\
    \ w) (will_it_fly (rest q) w)]\n        ))\n", "  (cond ((null? q) false)\n  \
    \      ((palindrome q) true)\n        ((< (sum (reverse q)) w) false)\n      \
    \  (else (will_it_fly (reverse q) w))))\n", "  (cond\n    [(empty? q) false]\n\
    \    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum (map weight\
    \ q)) w) false]))\n", "  (and (list? q)\n       (palindrome? q)\n       (<= (sum\
    \ (reverse q)) w)))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [(equal? (first q) (reverse (reverse (first\
    \ q))))\n         (< (+ (first q) (second q)) w)]\n        [else (or (will_it_fly\
    \ (rest q) w) (will_it_fly (reverse (rest q)) w))]))\n", "  (cond\n    [(empty?\
    \ q) false]\n    [(equal? (first q) (reverse (first q))) false]\n    [else (<\
    \ (+ (first q) (second q)) w) true]\n  )\n)\n", "  (and (list? q)\n       (palindrome?\
    \ q)\n       (<= (length q) w)\n       (< (apply + q) w)))\n", "  (cond\n    [(empty?\
    \ q) true]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (map weight q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n\
    \        [else true]))\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w (will_it_fly\
    \ (rest q) w))]\n  ))\n", "  (cond [(empty? q) true]\n        [(equal? (first\
    \ q) (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n     \
    \   [else (true)]\n  )\n)\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first\
    \ q) (reverse (first q))) true]\n    [else (< (sum (map weight q)) w) false]))\n",
  "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else true]))\n", "  (cond\n  \
    \  [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n   \
    \ [else (< (sum (map weight q)) w) false]\n  )\n)\n", "  (cond\n    [(empty? q)\
    \ false]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (sum\
    \ (map weight q)) w) false]\n  )\n)\n", "  (cond [(empty? q) false]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(equal? (first q) (first q))\
    \ true]\n        [else (< (sum (rest q)) w) will_it_fly (rest q) w]))\n", "  (cond\
    \ [(empty? q) false]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(equal? (first q) (reverse (first q))) true]\n        [else (< (+ (first\
    \ q) (first q)) w) false]\n        ))\n", "  (cond [(empty? q) true]\n       \
    \ [(equal? (first q) (reverse (first q))) true]\n        [else (< (sum (map weight\
    \ q)) w) false]))\n", "  (cond [(empty? q) false]\n        [(equal? (first q)\
    \ (reverse (first q))) false]\n        [(< (sum (rest q)) w) false]\n        [else\
    \ true]))\n", "  (cond\n    [(empty? q) true]\n    [(equal? (first q) (reverse\
    \ (first q))) true]\n    [else (< (sum (rest q)) w) (will_it_fly (rest q) w)]\n\
    \  )\n)\n", "  (cond [(empty? q) false]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else true]))\n",
  "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first q))) false]\n\
    \        [(< (sum (rest q)) w) false]\n        [else (true)]\n))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (< (sum (map weight q)) w) false]\n  )\n)\n", "  (cond [(null? q) false]\n\
    \        [(equal? (car q) (cadr q)) (< (car q) w)]\n        [else (< (car q) (+\
    \ (car q) (cadr q)))]))\n", "  (cond [(empty? q) false]\n        [(equal? (first\
    \ q) (reverse (first q))) true]\n        [(< (sum (rest q)) w) false]\n      \
    \  [else (will_it_fly (rest q) w)]))\n", "  (cond [(empty? q) true]\n        [(equal?\
    \ (first q) (reverse (first q))) false]\n        [(equal? (first q) (reverse (first\
    \ q))) true]\n        [else (< (sum (rest q)) w) false]\n        ))\n", "  (cond\n\
    \    [(empty? q) false]\n    [(equal? (first q) (reverse (first q))) true]\n \
    \   [else (< (sum (map weight q)) w) false]))\n", "  (cond [(empty? q) true]\n\
    \        [(equal? (first q) (reverse (first q))) false]\n        [(< (sum (rest\
    \ q)) w) false]\n        [else (true)]\n        ))\n", "  (cond\n    [(empty?\
    \ q) true]\n    [(equal? (first q) (reverse (first q))) true]\n    [else (< (+\
    \ (first q) (first q)) w) false]\n  ))\n", "  (cond [(empty? q) false]\n     \
    \   [(equal? (first q) (reverse (first q))) false]\n        [(equal? (first q)\
    \ (reverse (first q))) true]\n        [else (< (sum (rest q)) w) false]\n    \
    \    ))\n", "  (cond [(empty? q) true]\n        [(equal? (first q) (reverse (first\
    \ q))) false]\n        [(< (sum (rest q)) w) false]\n        [else (true)]\n \
    \ )\n)\n", "  (cond\n    [(empty? q) false]\n    [(equal? (first q) (reverse (first\
    \ q))) true]\n    [else (< (sum (rest q)) w) (will_it_fly (rest q) w)]\n  )\n\
    )\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

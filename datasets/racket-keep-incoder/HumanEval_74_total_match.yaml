name: HumanEval_74_total_match
language: racket
prompt: "#lang racket\n\n;; Write a function that accepts two lists of strings and\
  \ returns the list that has \n;; total number of chars in the all strings of the\
  \ list less than the other list.\n;; if the two lists have the same number of chars,\
  \ return the first list.\n;; Examples\n;; total_match([], []) \u279E []\n;; total_match(['hi',\
  \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n;; total_match(['hi', 'admin'], ['hi',\
  \ 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n;; total_match(['hi', 'admin'],\
  \ ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n;; total_match(['4'], ['1', '2',\
  \ '3', '4', '5']) \u279E ['4']\n(define (total_match lst1 lst2)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate total_match))\n\
  \    (check-equal? (candidate (list ) (list )) (list ))\n    (check-equal? (candidate\
  \ (list \"hi\" \"admin\") (list \"hi\" \"hi\")) (list \"hi\" \"hi\"))\n    (check-equal?\
  \ (candidate (list \"hi\" \"admin\") (list \"hi\" \"hi\" \"admin\" \"project\"))\
  \ (list \"hi\" \"admin\"))\n    (check-equal? (candidate (list \"4\") (list \"1\"\
  \ \"2\" \"3\" \"4\" \"5\")) (list \"4\"))\n    (check-equal? (candidate (list \"\
  hi\" \"admin\") (list \"hI\" \"Hi\")) (list \"hI\" \"Hi\"))\n    (check-equal? (candidate\
  \ (list \"hi\" \"admin\") (list \"hI\" \"hi\" \"hi\")) (list \"hI\" \"hi\" \"hi\"\
  ))\n    (check-equal? (candidate (list \"hi\" \"admin\") (list \"hI\" \"hi\" \"\
  hii\")) (list \"hi\" \"admin\"))\n    (check-equal? (candidate (list ) (list \"\
  this\")) (list ))\n    (check-equal? (candidate (list \"this\") (list )) (list ))\n\
  ))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(>\
    \ (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (substring lst1\
    \ 0 (length lst1)) \n                (total_match (substring lst2 0 (length lst2))\
    \ lst1))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\
    \ lst1)]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match lst1 (rest lst2)) (total_match (rest lst1) lst2))]))\n",
  "  (cond [(empty? lst1) lst2]\n        [(empty? lst2) lst1]\n        [(< (length\
    \ lst1) (length lst2)) (cons lst1 lst2)]\n        [else (cons (car lst1) (total_match\
    \ (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length (first\
    \ lst1)) length (first lst2)) (cons (first lst1) (total_match (rest lst1) lst2))]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons lst1 (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\
    \ (total_match (rest lst2) lst1))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length lst1)\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [else (cons (length lst1)(total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length (first lst1)) length (first lst2)) (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length (first\
    \ lst1)) length (first lst2)) (cons (first lst1) lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length lst1)\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (car lst1)\n                (total_match\
    \ (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (total_match lst1 (rest lst2)) lst1)]))\n", "  (cond ((null? lst1) lst2)\n \
    \       ((null? lst2) lst1)\n        ((< (length lst1) (length lst2)) (cons lst1\
    \ lst2))\n        (else (cons (car lst1) (total_match (cdr lst1) lst2)))))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons lst1 (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [else (cons (length lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (substring\
    \ (lst1 0) (length lst1) lst2)\n                (total_match (substring (lst2\
    \ 0) (length lst2) lst1))]))) \n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty?\
    \ lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else\
    \ (cons (total_match lst1 (rest lst2)) lst2)]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match (rest lst1) lst2) (total_match (rest lst2) lst1))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\
    \ (total_match (rest lst2) lst1))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (substring\
    \ (lst1 0) (length lst1) (length lst2)) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match\
    \ lst1 (rest lst2)) lst2)]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty?\
    \ lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\
    \ lst1)]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match\
    \ (rest lst1) lst2) (total_match (rest lst2) lst1))]))\n", "  (cond\n    [(empty?\
    \ lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2))\
    \ (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2))\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n", "  (cond\n    [(empty?\
    \ lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2))\
    \ (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons lst1\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length (first lst1)) length (first lst2))\
    \ (cons (first lst1) lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) (total_match\
    \ (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (total_match lst1 (rest lst2)) (total_match (rest lst1) lst2))]))\n", "  (cond\
    \ [(empty? lst1) lst2]\n        [(empty? lst2) lst1]\n        [(> (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n        [else (cons (substring (lst1 0) (length\
    \ lst1) lst2)\n                    (total_match (substring (lst2 0) (length lst2)\
    \ lst1))]))) \n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond ((null? lst1) lst2)\n        ((null? lst2) lst1)\n  \
    \      (else (cons (length lst1) (total_match (rest lst1) lst2)))))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length (first lst1)) length (first lst2)) (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length (first\
    \ lst1)) length (first lst2)) (cons (first lst1) (total_match (rest lst1) lst2))]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match lst1 (rest lst2)) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match\
    \ lst1 (rest lst2)) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty?\
    \ lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2))\
    \ (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length (first lst1))\
    \ length (first lst2)) (cons (first lst1) lst2)]\n    [else (cons (first lst1)\
    \ (total_match (rest lst1) (rest lst2)))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons lst1\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond [(empty? lst1) lst2]\n\
    \        [(empty? lst2) lst1]\n        [(< (length (first lst1)) (length (first\
    \ lst2)))\n         (cons (first lst1) (total_match (rest lst1) lst2))]\n    \
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length lst1)\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match (rest lst1) lst2) lst1)]))\n", "  (cond\n    [(empty?\
    \ lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1) (length lst2))\
    \ (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\n        \
    \        (total_match (rest lst2) lst1))]))\n", "  (cond [(empty? lst1) lst2]\n\
    \        [(empty? lst2) lst1]\n        [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n        [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2) lst1)]))\n",
  "  (cond [(empty? lst1) lst2]\n        [(empty? lst2) lst1]\n        [(< (length\
    \ lst1) (length lst2)) (cons lst1 lst2)]\n        [else (cons (car lst1) (total_match\
    \ (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond [(empty? lst1) lst2]\n\
    \        [(empty? lst2) lst1]\n        [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n        [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2))\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (total_match lst1 (rest lst2)) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2)) lst2)]))\n",
  "  (cond [(empty? lst1) lst2]\n        [(empty? lst2) lst1]\n        [(< (length\
    \ lst1) (length lst2)) (cons lst1 lst2)]\n        [else (cons (car lst1) (total_match\
    \ (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons lst1 (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length (first lst1)) length (first lst2))\
    \ (cons (first lst1) (total_match (rest lst1) lst2))]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length (first lst1))\
    \ length (first lst2)) (cons (first lst1) (total_match (rest lst1) lst2))]\n \
    \   [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons lst1 lst2)]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty?\
    \ lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(> (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (substring (lst1 0) (length lst1)\
    \ lst2)\n                (total_match (substring (lst2 0) (length lst2) lst1))])))\
    \ \n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length\
    \ lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match\
    \ (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2)\
    \ lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons\
    \ (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1)\
    \ lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons\
    \ lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(> (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (car\
    \ lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons lst1 (total_match (rest lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr\
    \ lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(equal? (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\
    \ (total_match (rest lst2) lst1))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [else (cons (length lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(equal? (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match (rest lst1) lst2)\n\
    \                (total_match (rest lst2) lst1))]))\n", "  (cond\n    [(empty?\
    \ lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2))\
    \ (cons lst1 lst2)]\n    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n",
  "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1)\
    \ (length lst2)) (cons lst1 lst2)]\n    [else (cons (total_match lst1 (rest lst2))\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (first lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n\
    \    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [else (cons (length lst1)\
    \ (total_match lst1 (rest lst2)))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(equal? (length lst1) (length lst2)) (cons lst1\
    \ lst2)]\n    [else (cons (total_match (rest lst1) lst2) (total_match (rest lst2)\
    \ lst1))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length (first lst1)) length (first lst2))\
    \ (cons (first lst1) (total_match (rest lst1) lst2))]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n\
    \    [else (cons (car lst1) (total_match (cdr lst1) lst2))]))\n", "  (cond\n \
    \   [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n    [(< (length lst1) (length\
    \ lst2)) (cons lst1 lst2)]\n    [else (cons (first lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons lst1\
    \ (total_match (rest lst1) lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n\
    \    [(empty? lst2) lst1]\n    [else (cons (length lst1) (total_match (rest lst1)\
    \ lst2))]))\n", "  (cond\n    [(empty? lst1) lst2]\n    [(empty? lst2) lst1]\n\
    \    [(< (length lst1) (length lst2)) (cons lst1 lst2)]\n    [else (cons (first\
    \ lst1) (total_match (rest lst1) lst2))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

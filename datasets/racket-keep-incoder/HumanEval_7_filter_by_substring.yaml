name: HumanEval_7_filter_by_substring
language: racket
prompt: "#lang racket\n\n;; Filter an input list of strings only for ones that contain\
  \ given substring\n;; >>> filter_by_substring([], 'a')\n;; []\n;; >>> filter_by_substring(['abc',\
  \ 'bacd', 'cde', 'array'], 'a')\n;; ['abc', 'bacd', 'array']\n(define (filter_by_substring\
  \ strings substring)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate filter_by_substring))\n\
  \    (check-equal? (candidate (list ) \"john\") (list ))\n    (check-equal? (candidate\
  \ (list \"xxx\" \"asd\" \"xxy\" \"john doe\" \"xxxAAA\" \"xxx\") \"xxx\") (list\
  \ \"xxx\" \"xxxAAA\" \"xxx\"))\n    (check-equal? (candidate (list \"xxx\" \"asd\"\
  \ \"aaaxxy\" \"john doe\" \"xxxAAA\" \"xxx\") \"xx\") (list \"xxx\" \"aaaxxy\" \"\
  xxxAAA\" \"xxx\"))\n    (check-equal? (candidate (list \"grunt\" \"trumpet\" \"\
  prune\" \"gruesome\") \"run\") (list \"grunt\" \"prune\"))\n))\n\n(test-humaneval)"
completions: ["  (filter (lambda (s) (string-contains? s substring))\n          strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (string-contains? s substring))\n         strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]))\n", "  (cond\
    \ [(empty? strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (s) (string-contains s substring))\n \
    \         strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \         strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (string-contains? s substring))\n         strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings)\n                \
    \    (filter_by_substring (filter_by_substring (rest strings) substring) substring))]))\n",
  "  (filter (lambda (s) (string-contains? s substring))\n         strings))\n", " \
    \ (filter (lambda (str)\n            (string-contains? str substring))\n     \
    \     strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (x) (contains-substring x substring)) strings))\n", "  (filter (lambda (s) (contains\
    \ s substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter\
    \ (lambda (s) (string-contains s substring))\n          strings))\n", "  (filter\
    \ (lambda (str)\n            (string-contains str substring))\n          strings))\n",
  "  (cond\n    [(empty? strings) strings]\n    [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n    [else (cons (first strings)\n\
    \                (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings)\n                    (filter_by_substring (filter_by_substring\
    \ (rest strings) substring) substring))]))\n", "  (filter (lambda (x) (string-contains\
    \ x substring)) strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (x) (contains-substring x substring)) strings))\n", "  (cond\
    \ [(empty? strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (cond [(empty? strings) strings]\n    \
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (s) (string-contains s substring))\n          strings))\n", " \
    \ (filter (lambda (x) (string-contains x substring)) strings))\n", "  (filter\
    \ (lambda (str)\n            (string=? substring str))\n          strings))\n",
  "  (filter (lambda (s) (string-contains? s substring))\n         strings))\n", " \
    \ (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond\n    [(empty? strings)\
    \ strings]\n    [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n    [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (cond\n\
    \    [(empty? strings) strings]\n    [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n    [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (string-contains s\
    \ substring))\n          strings))\n", "  (cond [(empty? strings) strings]\n \
    \       [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (cond\n    [(empty? strings) strings]\n\
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \    [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond\n    [(empty? strings) strings]\n    [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n    [else (cons (first strings)\
    \ (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda (x)\
    \ (string=? x substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n         strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (x) (string=?\
    \ x substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (str)\n            (string=? substring str))\n          strings))\n", "  (cond\
    \ [(empty? strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter (lambda (x) (string-contains x substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings)\n                    (filter_by_substring (filter_by_substring\
    \ (rest strings) substring) substring))]))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (str)\n            (string-contains str substring))\n          strings))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (cond\n    [(empty? strings) strings]\n\
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \    [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (str)\n            (string-contains? str substring))\n      \
    \    strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings)\n                    (filter_by_substring (filter_by_substring\
    \ (rest strings) substring) substring))]))\n", "  (filter (lambda (s) (member\
    \ s substring)) strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \         strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (s)\
    \ (string-contains s substring))\n          strings))\n", "  (cond\n    [(empty?\
    \ strings) strings]\n    [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n    [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (cond [(empty? strings) strings]\n    \
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (x) (string=? x substring)) strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (string-contains? s\
    \ substring))\n          strings))\n", "  (cond [(empty? strings) strings]\n \
    \       [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (x) (equal? (string-ref\
    \ x 0) substring)) strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \          strings))\n", "  (filter (lambda (x) (string=? x substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (string-contains s substring))\n      \
    \    strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first\
    \ strings) substring) (filter_by_substring (rest strings) substring)]\n      \
    \  [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (string-contains\
    \ s substring))\n          strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (s) (string-contains? s substring))\n          strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (filter (lambda (s) (string-contains s substring))\n      \
    \    strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond\n    [(empty? strings) strings]\n    [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n    [else (cons (first strings)\
    \ (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda (s)\
    \ (member s substring)) strings))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n     \
    \    strings))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (filter (lambda (s) (string-contains s substring))\n          strings))\n", " \
    \ (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (string-contains s substring))\n          strings))\n", "  (filter\
    \ (lambda (x) (substring x 0))\n          strings))\n", "  (filter (lambda (s)\
    \ (member s substring)) strings))\n", "  (filter (lambda (s) (string-contains?\
    \ s substring))\n          strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (str)\n            (string=? substring\
    \ str))\n          strings))\n", "  (filter (lambda (s) (string-contains? s substring))\n\
    \         strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (filter (lambda (s) (contains s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]))\n", "  (cond\
    \ [(empty? strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (str)\n            (string=? substring\
    \ str))\n          strings))\n", "  (cond [(empty? strings) strings]\n       \
    \ [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (x) (string=?\
    \ x substring)) strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (s) (string-contains s substring))\n \
    \         strings))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (s) (string-contains s substring))\n          strings))\n", " \
    \ (filter (lambda (s) (member s substring)) strings))\n", "  (cond\n    [(empty?\
    \ strings) strings]\n    [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n    [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (filter (lambda (s) (member s substring))\
    \ strings))\n", "  (cond [(empty? strings) strings]\n        [(equal? (first strings)\
    \ substring) (filter_by_substring (rest strings) substring)]\n        [else (cons\
    \ (first strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter\
    \ (lambda (x) (member x substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (filter (lambda\
    \ (s) (string-contains? s substring))\n         strings))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (str)\n            (string-contains str\
    \ substring))\n          strings))\n", "  (filter (lambda (str)\n            (string-contains\
    \ str substring))\n          strings))\n", "  (cond\n    [(empty? strings) strings]\n\
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \    [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (filter (lambda (x)\
    \ (string=? x substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings) (filter_by_substring (rest strings) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (cond\n \
    \   [(empty? strings) strings]\n    [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n    [else (cons (first strings)\n              \
    \  (filter_by_substring (filter_by_substring (rest strings) substring) substring))]))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings)\n                    (filter_by_substring (filter_by_substring (rest\
    \ strings) substring) substring))]))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (contains s substring)) strings))\n", "  (cond\n    [(empty? strings)\
    \ strings]\n    [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n    [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (cond [(empty? strings) strings]\n        [(equal?\
    \ (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (filter\
    \ (lambda (s) (string-contains? s substring))\n          strings))\n", "  (cond\
    \ [(empty? strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (rest strings) substring))]))\n", "  (cond [(empty? strings) strings]\n    \
    \    [(equal? (first strings) substring) (filter_by_substring (rest strings) substring)]\n\
    \        [else (cons (first strings)\n                    (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings)\n          \
    \          (filter_by_substring (filter_by_substring (rest strings) substring)\
    \ substring))]))\n", "  (filter (lambda (s) (contains s substring)) strings))\n",
  "  (cond [(empty? strings) strings]\n        [(equal? (first strings) substring)\
    \ (filter_by_substring (rest strings) substring)]\n        [else (cons (first\
    \ strings) (filter_by_substring (rest strings) substring))]))\n", "  (filter (lambda\
    \ (str)\n            (string=? substring str))\n          strings))\n", "  (filter\
    \ (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings) strings]\n\
    \        [(equal? (first strings) substring) (filter_by_substring (rest strings)\
    \ substring)]\n        [else (cons (first strings) (filter_by_substring (rest\
    \ strings) substring))]))\n", "  (filter (lambda (x) (member x substring)) strings))\n",
  "  (filter (lambda (s) (contains s substring)) strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings)\n                \
    \    (filter_by_substring (filter_by_substring (rest strings) substring) substring))]))\n",
  "  (filter (lambda (s) (member s substring)) strings))\n", "  (cond [(empty? strings)\
    \ strings]\n        [(equal? (first strings) substring) (filter_by_substring (rest\
    \ strings) substring)]\n        [else (cons (first strings)\n                \
    \    (filter_by_substring (filter_by_substring (rest strings) substring) substring))]))\n",
  "  (filter (lambda (str)\n            (string=? (substring str) substring))\n  \
    \        strings))\n", "  (filter (lambda (s) (string-contains s substring))\n\
    \         strings))\n", "  (filter (lambda (s) (member s substring)) strings))\n",
  "  (filter (lambda (str) (string=? substring str)) strings))\n", "  (cond [(empty?\
    \ strings) strings]\n        [(equal? (first strings) substring) (filter_by_substring\
    \ (rest strings) substring)]\n        [else (cons (first strings) (filter_by_substring\
    \ (filter_by_substring (rest strings) substring) substring))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("
